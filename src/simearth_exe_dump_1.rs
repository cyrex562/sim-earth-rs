mod defs;
mod utils;

use crate::defs::{Address, Code};
use crate::utils::{CONCAT22, make_ptr_from_u16};

unsafe fn fun_1000_07e8(unaff_ds: u16,) {
    let pi_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u16;
    let u_var5: u16;
    let u_var4: u16;
    let i_var6: i16;
    let pu_var7: *mut u16;
    let i_var8: i16;
    // let unaff_ds: u16;
    let u_var9: u32;
    let pu_var10: *mut u16;
    let l_var11: i32;
    let u_var12: u16;
    let u_var13: u16;
    let u_var14: u32;
    let mut local_a: *mut Code;

    fun_3444_02c6(0x39d9);
    u_var3 = 0xc138;
    u_var2 = 0x5c8;
    i_var8 = 0x5ca;
    u_var3 = 0xc154;
    // local_a = CONCAT22(u_var3, 0x6b9);
    local_a.set_addr_from_u32(CONCAT22(u_var3, 0x6b9));
    0x6b9 = u_var2 + 1;
    0x6bb = i_var8 + (0xfffe < u_var2);
    i_var8 = 1;
    loop {
        i_var6 = i_var8 * 4;
        // pu_var7 = (i_var6 + 0x5c8);
        pu_var7 = make_ptr_from_u16(i_var6 + 0x5c8);
        u_var3 = 0xc138;
        if (i_var6 + 0x5ca) < 0 {
            (i_var6 + 0x5ca) = 0;
            *pu_var7 = 0;
        } else {
            u_var2 = *pu_var7;
            i_var6 = (i_var6 + 0x5ca);
            u_var5 = local_a;
            local_a = local_a + u_var2;
            pi_var1 = (local_a + 2);
            *pi_var1 = *pi_var1 + i_var6 + CARRY2(u_var5, u_var2);
            FUN_3444_40fa();
            fun_3444_4472(unaff_ds);
            local_a = FUN_3444_3444;
            pu_var10 = CONCAT22(0x875, *pu_var7);
            u_var9 = fun_3444_42c7(unaff_ds);
            *pu_var10 = u_var9 as u16;
            (pu_var10 + 2) = (u_var9 >> 0x10);
        }
        i_var8 = i_var8 + 1;
        if i_var8 < 6 {
            break;
        }
    }
    u_var3 = 0xc138;
    i_var8 = 0x5da;
    if (i_var8 < 1) && (i_var8 < 0 || (0x5d8 < 700)) {
        // local_a = 0x2bc;
        local_a.set_addr_from_u32(0x2bc);
        u_var14 = 0x28;
        i_var8 = CONCAT22(u_var3, 0x5d8) - 700;
        i_var6 = 0x5da - (CONCAT22(u_var3, 0x5d8) < 700);
        u_var9 = FUN_3444_23fe();
        u_var4 = FUN_3444_2364(0x3444, u_var9, i_var8, i_var6, u_var14);
        0x6b7 = u_var4;
    } else {
        0x6b7 = 0;
    }
    pi_var1 = 0x6b7;
    *pi_var1 = *pi_var1 + 0x5b8 * 0x19;
    u_var3 = (local_a + 2);
    u_var2 = local_a;
    local_a = CONCAT22(u_var3, u_var2);
    u_var9 = 100;
    u_var12 = 0xc138;
    u_var13 = 0x5ce;
    u_var12 = 0x5cc;
    pu_var10 = FUN_3444_23fe();
    l_var11 = FUN_3444_2364(0x3444, pu_var10, u_var12, u_var13, u_var9);
    i_var8 = l_var11;
    if (0x14 < l_var11) {
        i_var6 = i_var8 + -0x14;
        if (6 < i_var6) {
            i_var6 = 6;
        }
        fun_1000_09f3(0x3444, 1 << (i_var6 & 0x1f));
    }
    u_var12 = 0xc138;
    u_var9 = FUN_3444_23fe(0x3444, 0x5d0, 0x5d2, 0xff06, 0xffff,
                           local_a, (u_var2 + 2));
    i_var6 = FUN_3444_2364(0x3444, u_var9);
    u_var3 = 0xc158;
    0x6b5 = i_var6 + i_var8;
    if (i_var6 + i_var8 < 1) {
        0x6b5 = 1;
    }
    u_var9 = fun_1000_0a5f(0x3444, *pu_var10, (pu_var10 + 2));
    FUN_1d9a_0002(0x3444, 0xf, u_var9);
    u_var3 = 0xc138;
    u_var9 = fun_1000_0a5f(0x1d9a, 0x5cc, 0x5ce);
    FUN_1d9a_0002(0x1d9a, 0x10, u_var9);
    u_var3 = 0xc138;
    u_var9 = fun_1000_0a5f(0x1d9a, 0x5dc, 0x5de);
    FUN_1d9a_0002(0x1d9a, 0x11, u_var9);
    return;
}


unsafe fn fun_1000_09f3(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;

    u_var3 = 0x3444;
    fun_3444_02c6(0x39d9);

    // for (; 0 < param_1; param_1 = param_1 + -1) {
    while 0 < param_1 {
        i_var1 = FUN_168b_05f1(u_var3, 0x80);
        u_var3 = 0x168b;
        i_var2 = FUN_168b_05f1(0x168b, 0x40);
        if ((1 << ((((i_var2 + i_var1 * 0x40) * 2 + 0x6bd) >> 5) & 7) & 0xf4) != 0) {
            u_var3 = 0x10f0;
            fun_10f0_0008(0x168b, i_var1, i_var2, 5);
        }
    }
    return;
}


fn fun_1000_0a5f(param_1_00: u16, uparam_1: i16, param_2: i16)

{
    fun_3444_02c6(0x39d9);
    if ((param_2 < 0) || ((param_2 < 1 && (param_1 < 0x4e21)))) {
        if ((param_2 < 0) || ((param_2 < 1 && (param_1 < 0xfa1)))) {
            if ((param_2 < 0) || ((param_2 < 1 && (param_1 < 0x1f5)))) {
                FUN_3444_23fe(0x3444, param_1, param_2, 0x32, 0);
                return;
            }
            FUN_3444_40fa(0x3444);
            fun_3444_4472(0x3444);
        } else {
            FUN_3444_40fa(0x3444);
            fun_3444_4472(0x3444);
        }
    } else {
        FUN_3444_40fa(0x3444);
        fun_3444_4472(0x3444);
    }
    fun_3444_44ba(0x3444);
    fun_3444_42c7(0x3444);
    return;
}


// WARNING: Could not reconcile some variable overlaps

unsafe fn fun_1000_0afb()

{
    let u_var1: u16;
    let u_var2: u16;
    let unaff_ds: u16;
    let local_a: *mut u16;
    let pi_var3: *mut u16;

    u_var2 = 0x3444;
    fun_3444_02c6(0x39d9);
    if 1 < 0xabe {
        u_var1 = 0xc18e;
        local_a = CONCAT22(u_var1, 0x46c0);
        if (0x46c0 < 0x100) && (u_var1 = 0xc190, 0x46be < 1) {
            0x46be = 1;
            u_var2 = 0x39d9;
            pi_var3 = 0x34440b48;
            FUN_39d9_0cd4();
            if (2 < *pi_var3) && (0x46bd != '\0') {
                u_var2 = 0x1205;
                local_a = 0xb6646c0;
                fun_1205_0281(unaff_ds, 0);
            }
        }
        if (0x400 < *local_a) && (u_var1 = 0xc190, 0x46be < 0x8000) {
            0x46be = 0xffff;
            pi_var3 = CONCAT22(u_var2, 0xb89);
            FUN_39d9_0cd4();
            if (2 < *pi_var3) && (0x46bd != '\0') {
                local_a = CONCAT22(0xba7, local_a._0_2_);
                fun_1205_0281(0x39d9, 0xe);
            }
        }
        if ((0x200 < *local_a) && (*local_a < 0x300)) && (u_var2 = 0xc190, 0x46be != 0) {
            0x46be = 0;
            FUN_39d9_0cd4();
        }
        *local_a = 0;
    }
    return;
}



unsafe fn FUN_10bd_000e(param_1_00: u16, param_1: i16, param_2: i16) -> i16

{
let piVar1: * mut u16; let bVar2: u8; let uVar3: u16; let uVar4: u16; let bVar5: u8; let iVar6: i16; let iVar7: i16; let iVar8: i16; let unaff_DS: u16; let pbStackY20: * mut u8; let pbStackY16: * mut u8;

FUN_3444_02c6(0x39d9); iVar6 = param_2 >> 1; iVar7 = param_1 >> 1;
bVar2 = * (iVar7 * 0x20 + iVar6 + 0x56c2); iVar8 = (param_1 * 0x40 + param_2) * 2; uVar3 = 0xc196; pbStackY16 = CONCAT22(uVar3, iVar8 + 0x6bd);
if ( * (iVar8 + 0x6be) & 0x80) != 0 {
if 0x36 < * (iVar7 * 0x20 + iVar6 + 0x4ec2) {
return 0;
}
if 0x36 < bVar2 {
return 0;
}
piVar1 = 0x46c0; *piVar1 = *piVar1 + 1; return 1;
}
uVar4 = 0xc19c; pbStackY20 = CONCAT22(uVar4,0xac6); piVar1 = 0xac6; * piVar1 = * piVar1 + 1; if (bVar2 < 0xf0) {
iVar6 = * (iVar7 * 0x20 + iVar6 + 0x46c2) + 0x6b7; if bVar2 < 0xa1 {
if bVar2 < 0x38 {
iVar7 = 0;
}
else {
iVar7 = 3;
}
}
else {
iVar7 = 6;
}
if ((iVar7 != 0) & & (0xace + 0xc < ( * pbStackY16 & 0x1f))) {
iVar7 = iVar7 + - 3;
}
if (0x1e < iVar6) {
iVar7 = iVar7 + 1;
}
if (0x5a < iVar6) {
iVar7 = iVar7 + 1;
}
iVar6 = (iVar7 * 2 + 0x9c);
}
else {
iVar6 = 3;
}
if (( * (iVar8 + 0x6be) & 0x3f) == 0x21) {
return iVar6;
}
if (( * pbStackY20 & 0x3f) == 0) & & (0x46bd != '\0') {
return iVar6;
}
bVar2 = * 0xac6; bVar5 = bVar2 & 3; if (bVar2 & 3) == 0 {
if ( * (((param_1 - 1) & 0x7f) * 0x80 + param_2 * 2 + 0x6bd) & 0xe0) >> 5 == iVar6 {
return iVar6;
}
// LAB_10bd_0199:
if ( * (((param_2 - 1) & 0x3f) * 2 + param_1 * 0x80 + 0x6bd) & 0xe0) >> 5 == iVar6 {
return iVar6;
}
// LAB_10bd_01c0:
if ( * (((param_1 + 1) & 0x7f) * 0x80 + param_2 * 2 + 0x6bd) & 0xe0) >> 5 == iVar6 {
return iVar6;
}
}
else {
if bVar5 == 1 {
    // goto
    // LAB_10bd_0199;
} if bVar5 == 2 {
        // goto
        // LAB_10bd_01c0;
    } if bVar5 != 3 {
        // goto
        // LAB_10bd_015d;
    }
}
if ( * (((param_2 + 1) & 0x3f) * 2 + param_1 * 0x80 + 0x6bd) & 0xe0) >> 5 == iVar6 {
return iVar6;
}
// LAB_10bd_015d:
if (0x46bd == '\0') & & (iVar6 = FUN_168b_05f1(0x3444, 2), iVar6 == 0) {
return 0;
}
return ( *pbStackY16 & 0xe0) >> 5;
}



unsafe fn fun_10bd_023b(param_1_00: u16, param_1: i16, param_2: i16) -> u16

{
    let pi_var1: *mut u16;
    let b_var2: u8;
    let u_var3: u16;
    let u_var4: u16;
    let i_var5: i16;
    let i_var6: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    u_var3 = ((param_1 * 0x40 + param_2) * 2 + 0x6bd);
    if ((u_var3 & 0x8000) == 0) {
        i_var5 = (param_1 >> 1) * 0x20 + (param_2 >> 1);
        b_var2 = *(i_var5 + 0x56c2);
        if (b_var2 < 0xf0) {
            i_var5 = *(i_var5 + 0x46c2) + 0x6b7;
            if (b_var2 < 0xa1) {
                if (b_var2 < 0x38) {
                    i_var6 = 0;
                } else {
                    i_var6 = 3;
                }
            } else {
                i_var6 = 6;
            }
            if ((i_var6 != 0) && (0xace + 0xc < (u_var3 & 0x1f))) {
                i_var6 = i_var6 + -3;
            }
            if (0x1e < i_var5) {
                i_var6 = i_var6 + 1;
            }
            if (0x5a < i_var5) {
                i_var6 = i_var6 + 1;
            }
            u_var4 = (i_var6 * 2 + 0x9c);
        } else {
            u_var4 = 3;
        }
    } else {
        i_var5 = (param_1 >> 1) * 0x20 + (param_2 >> 1);
        if ((*(i_var5 + 0x4ec2) < 0x14) && (*(i_var5 + 0x56c2) < 0x1e)) {
            pi_var1 = 0x46c0;
            *pi_var1 = *pi_var1 + 1;
            u_var4 = 1;
        } else {
            u_var4 = 0;
        }
    }
    return u_var4;
}


unsafe fn fun_10f0_0008(param_1_00: u16, uparam_1: i16, param_2: i16, param_3: i16)

{
    let u_var1: u16;
    let pb_var2: *mut u8;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    pb_var2 = ((param_1 & 0xfffe) * 0x10 + (param_2 >> 1) + -0x48fa);
    u_var1 = 0xc1d6;
    if (*pb_var2 & 0xf) == 0 {
        *pb_var2 = param_3 * '\x10' + 4;
        FUN_10f0_008f(0x3444, param_1, param_2, param_3);
        if 0xd20 != '\0' {
            fun_154b_1041(0x3444, param_1, param_2);
            if 0xd26 != '\0' {
                fun_268d_0047(0x154b, (param_3 * 2 + 0x1ea), (param_3 * 2 + 0x20a));
            }
        }
    }
    return;
}


/*
Unable to decompile 'FUN_10f0_008f'
Cause: Exception while decompiling 10f0:008f: Decompiler process died

*/


unsafe fn fun_10f0_06fa(param_1: u16, param_2: i16, param_3: i16, param_4: i16)

{
    let i_var1: i16;
    let u_var2: u16;
    let pb_var3: *mut u8;
    let i_var4: i16;
    let u_var5: u16;
    let u_var6: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var4 = 1;
    u_var5 = 0x3444;
    loop {
    u_var6 = u_var5;
    if (param_4 == 0) {
// LAB_10f0_0720:
        uVar2 = (i_var4 * 2 + 0x22a) + param_2 / 2;
        i_var1 = param_3 / 2 + (i_var4 * 2 + 0x23c);
        if (i_var1 < 0x20) {
            if (i_var1 < 0) {
                i_var1 = 0;
                // goto
                // LAB_10f0_075e;
            }
        } else {
            i_var1 = 0x1f;
// LAB_10f0_075e:
            uVar2 = u_var2 + 0x20;
        }
        pb_var3 = ((u_var2 & 0x3f) * 0x20 + i_var1 + -0x48fa);
        u_var5 = 0xc1d6;
        if ((*pb_var3 & 0xf) == 0) && ((*(((u_var2 & 0x3f) * 0x40 + i_var1) * 4 + 0x6be) & 0x80) != 0) {
            CONCAT22(u_var5, pb_var3) = i_var4 + -0x20;
        }
    } else {
        u_var6 = 0x168b;
        i_var1 = FUN_168b_05f1(unaff_ds, u_var5);
        if i_var1 != 0 {
            // goto
            // LAB_10f0_0720;
        }
    }
    i_var4 = i_var4 + 1;
    u_var5 = u_var6;
    if 8 < i_var4 {
        return;
    }
}
}


unsafe fn fun_10f0_07b2(param_1_00: u16, uparam_1: i16, param_2: i16, param_3: i16)

{
    let u_var1: u16;
    let bVar2: bool;
    let b_var3: u8;
    let i_var4: i16;
    let u_var5: u16;
    let pb_var6: *mut u8;
    let i_var7: i16;
    let i_var8: i16;
    let u_var9: u16;
    let unaff_ds: u16;
    let b_var10: bool;
    let i_var11: i16;

    fun_3444_02c6(0x39d9);
    pb_var6 = ((param_1 & 0xfffe) * 0x10 + (param_2 >> 1) + -0x48fa);
    u_var1 = 0xc1d6;
    if (*pb_var6 & 0xf) == 0 {
        *pb_var6 = 100;
        if (*((param_1 * 0x40 + param_2) * 2 + 0x6be) & 0x80) != 0 {
            fun_10f0_06fa(0x3444, param_1, param_2, 2);
        }
        u_var1 = 0xc1e8;
        i_var4 = FUN_3444_2364(0x3444, 0xcfc, 0xcfe, 0x4b0, 0);
        i_var4 = (0xff / (long)(i_var4 + 0xbf06 + 1));
        if 0xf < i_var4 {
            i_var4 = 0xf;
        }
        u_var5 = i_var4 * 0x10 + param_3;
        i_var4 = 0;
        loop {
            i_var11 = 0;
            loop {
                if ((i_var4 * 0xb + i_var11) * 2 + 0x25e) < 6 {
                    i_var8 = i_var4 + param_1 / 2;
                    u_var9 = i_var8 - 5;
                    i_var7 = i_var11 + param_2 / 2 + -5;
                    b_var10 = i_var7 < 0;
                    if (b_var10) {
                        i_var7 = -1 - i_var7;
                        u_var9 = i_var8 + 0x1b;
                    }
                    bVar2 = 0x1f < i_var7;
                    if (bVar2) {
                        i_var7 = 0x3f - i_var7;
                        u_var9 = u_var9 + 0x20;
                    }
                    b_var3 = u_var5;
                    if (bVar2 || b_var10) {
                        b_var3 = (b_var3 & 0xf0) + ((u_var5 & 7) * 2 + 0x24e);
                    }
                    *((u_var9 & 0x3f) * 0x20 + i_var7 + 0x6ee1) = b_var3;
                }
                i_var11 = i_var11 + 1;
                if i_var11 < 0xb {
                    break;}
            }

            i_var4 = i_var4 + 1;
            if i_var4 < 0xb {
                break;
            }
        }
        0x6ecd = 1;
        if ((0xd20 != '\0') && (fun_154b_1041(0x3444, param_1 / 2, param_2 / 2), 0xd26 != '\0')) {
            fun_268d_0047(0x154b, 0x1f6, 5000);
        }
    }
    return;
}



fn FUN_10f0_094e(param_1_00: u16,uparam_1: i16,uparam_2: i16) -> i16

{
let bVar1: u8;
    let cVar2: u8;
    let iVar3: i16;
    let uVar4: u16;
    let unaff_DS: u16;

FUN_3444_02c6(0x39d9);
    bVar1 = * ((param_1 & 0xfffe) * 0x10 + (param_2 >> 1) + - 0x48fa);
    uVar4 = (bVar1 >> 4) as u16;
    if 0xd21 != '\0' {
if uVar4 == 0xd {
return 0x66;
}
if uVar4 != 0xe {
if uVar4 != 0xf {
return (uVar4 + 0x66) as i16;
}
return 0x71;
}
return 0x67;
}
if uVar4 == 0xf {
return (bVar1 & 3) * 4 + (param_2 & 1) * 2 + (param_1 & 1) + 0x140;
}
if uVar4 < 0x10 {
cVar2 = uVar4; if cVar2 != '\x01' {
if cVar2 == '\r' {
iVar3 = (bVar1 & 3) << 2; 
    uVar4 = (param_2 & 1) << 1; 
    // goto LAB_10f0_09e3;
}
if cVar2 != '\x0e' {
    // goto
    // LAB_10f0_09c8;
}
}
iVar3 = (( - 0xac0 - 1) & 3) * 4 + (param_2 & 1) * 2 + (param_1 & 1) + 0xa0;
}
else {
// LAB_10f0_09c8:
iVar3 = ((bVar1 - 1) & 3) * 4 + (param_2 & 1) * 2; uVar4 = bVar1 & 0xf0;
// LAB_10f0_09e3:
iVar3 = iVar3 + uVar4 + (param_1 & 1) + 0x90;
}
return iVar3;
}


// WARNING: Instruction at (ram,0x0001d88c) overlaps instruction at (ram,0x0001d88b)
//
// WARNING: Unable to track spacebase fully for stack
// WARNING: Removing unreachable block (ram,0x0001f5c4)
// WARNING: Removing unreachable block (ram,0x0001f639)
// WARNING: Could not reconcile some variable overlaps
// WARNING: Restarted to delay deadcode elimination for space: stack

unsafe fn  FUN_10f0_0a4f(param_1: u16, param_2: &String, param_3: u32, uparam_4: i16, uparam_5: i16,
                         param_6: u16, param_7: u32) -> u16
{
    let pbVar1: *mut u8;
    let puVar2: *mut u16;
    let puVar3: *mut u16;
    let pcVar4: String;
    let piVar5: *mut u16;
    let uVar6: u16;
    let bVar7: bool;
    let ppcVar8 = Code {};
    let puVar9: *mut u16;
    let cVar10: u8;
    let uVar11: u16;
    let uVar12: u16;
    let bVar13: u8;
    let uVar14: u16;
    let in_CX: i16;
    let bVar15: u8;
    let extraout_DX: i16;
    let extraout_DX_00: u16;
    let extraout_DX_01: i16;
    let cVar16: u8;
    let iVar17: i16;
    let iVar18: i16;
    let uVar19: u16;
    let puVar20: *mut u16;
    let puVar21: *mut u16;
    let iVar22: i16;
    let puVar23: *mut u16;
    let puVar24: *mut u16;
    let piVar25: *mut u16;
    let piVar26: *mut u16;
    let iVar27: i16;
    undefined * puVar28;
    undefined * puVar29;
    undefined * puVar30;
    undefined * puVar31;
    undefined * puVar32;
    let unaff_BP: u16;
    let unaff_SI: u16;
    let iVar33: i16;
    let unaff_DI: u16;
    let uVar34: u16;
    let uVar35: u16;
    let uVar36: u16;
    let unaff_SS: u16;
    let unaff_DS: u16;
    let uVar37: u16;
    let in_AF: u8;
    let lVar38: i32;
    let uVar39: u32;
    let uVar40: u32;
    let uStackY598: u16;
    let uStackY594: u16;
    let uStackY592: u16;
    let iStackY586: i16;
    let iStackY580: i16;
    let uStackY576: u16;
    let iStackY574: i16;
    let iStackY572: i16;
    let iStackY570: i16;
    let iStackY568: i16;
    let uStackY566: u16;
    let uStackY564: u16;
    let auStackY562: [u8; 306];
    let auStackY256: [u8; 148];
    let uStackY108: u16;
    let uStackY106: u16;
    let iStackY104: i16;
    let iStackY102: i16;
    let uStackY100: u16;
    let uStackY98: u16;
    let iStackY96: i16;
    let iStackY94: i16;
    let uStackY92: u32;
    let iStackY88: i16;
    let iStackY86: i16;
    let uStackY84: u16;
    let uStackY82: u16;
    let uStackY80: u16;
    let uStackY78: u16;
    let uStackY76: u16;
    let uStackY74: u16;
    let uStackY72: u16;
    let uStackY70: u16;
    let iStackY68: i16;
    let iStackY66: i16;
    let uStackY64: u16;
    let uStackY62: u16;
    let iStackY60: i16;
    let uStackY58: u16;
    let iStackY56: i16;
    let uStackY54: u32;
    let iStackY50: i16;
    let uStackY48: u16;
    let iStackY46: i16;
    let iStackY44: i16;
    let iStackY42: i16;
    let iStackY40: i16;
    let uStackY38: u32;
    let uStackY34: u16;
    let uStackY32: u16;
    let uStackY30: u16;
    let uStackY28: u32;
    let uStackY24: u16;
    let uStackY22: u32;
    let uStackY18: u32;
    let in_stack_0000fff2: *mut u16;
    let uStackY12: u16;
    let in_stack_0000fff6: u8;
    let uVar41: u8;
    let uVar42: u8;
    let uStack8: u16;
    let uStack6: u16;

uVar11 = in_stack_0000fff6; uStack6._0_1_ = 0x5a; uStack6._1_1_ = 0x19; FUN_3444_02c6(0x39d9);
iVar33 = 0; 
    loop {
(iVar33 * 2 + - 0x491a) = 0; iVar33 = iVar33 + 1;
        if !(iVar33 < 0x10) {
            break;
        }
} 
    iVar33 = 0;
// LAB_10f0_10fc: if (0x3f < iVar33) {
uVar36 = 0xc1f8; piVar5 = 0x0; * piVar5 = * piVar5 + 0xb6ee + 0xb6f4; uVar36 = 0xc1f8; piVar5 = 0x2; * piVar5 = *piVar5 + 0xb6fc + 0xb704; uVar36 = 0xc1f8;
uVar11 = 0xb6fe + 0xb6f6 + 0xb6f8; piVar5 = 0x4; * piVar5 = * piVar5 + uVar11;
return uVar11;
}
uVar34 = 0;
// LAB_10f0_10bf: if (0x1f < uVar34) goto LAB_10f0_10fb; bVar15 = (in_CX >> 8); in_CX = CONCAT11(bVar15, 5); bVar13 = * (iVar33 * 0x20 + uVar34 + - 0x48fa); unaff_DI = unaff_DI & 0xff00 | bVar13; if (bVar13 != 0) {
uVar19 = bVar13 >> 3 & 0x1e; uVar36 = 0xc1f8; piVar5 = (uVar19 + 0xb6e6); * piVar5 = * piVar5 + 1; uVar14 = CONCAT11(bVar15, 4); bVar13 = bVar13 >> 4; if (bVar13 < 0x10) {
uStackY28._0_2_ = bVar13 * 2; uVar35 = 0x1000; cVar10 = (extraout_DX_01 >> 8); bVar15 = uVar19; iVar18 = param_3; iVar17 = extraout_DX_01; uStack8 = unaff_SS; uStack6 = unaff_SI; switch(bVar13) {
case 0: 0x3e83 = 0; pcVar4 = (char * )(iVar33 + 0xd); *pcVar4 = * pcVar4 + cVar10; 0x46be = 0; uVar42 = 0xd1; uVar41 = 0xb; uVar11 = FUN_39d9_0cd4(); CONCAT13(0x10, (uint3)CONCAT11(uVar41, uVar42)) = 0; return uVar11; case 1: goto switchD_1000_1f7f_caseD_1; case 2: pbVar1 = & stack0x0073 + uVar34; * pbVar1 = * pbVar1 | 0xc1; uVar40 = (iVar18 >> 3 & 0xff | param_3 << 8) & 0xffff07ff; param_3._0_1_ = uVar40; cVar10 = '\0'; loop {
cVar16 = cVar10; iVar33 = 0x67e0; iVar18 = param_5 - iVar33; bVar7 = iVar33 < = param_5; param_5 = iVar18; cVar10 = cVar16 + '\x01';
} while (bVar7); param_5 = CONCAT11(iVar18 + 0x67e0, cVar16); _param_5 = _param_5 & 0xffff0000 | param_5; param_3._0_1_ = (param_4 >> 3) - param_3; uStack6 = param_3; param_3._1_1_ = (uVar40 >> 8); if (param_3 == 0) {
bVar13 = * (param_3._1_1_ + 6) & * ((param_4 & 7) + 0xe); * 0x67e6 = bVar13; if (0x9c65 != '\x03') {
out(unaff_SI, CONCAT11(bVar13, 8));
}
uStack6._0_1_ = 0x21; uStack6._1_1_ = 0xfb; uVar39 = FUN_1f51_01f7(); uVar36 = (undefined2)(uVar39 >> 0x10);
uVar11 = uVar39; if (0x9c65 != '\x03') {
out(uVar36, 5); uVar11 = 0xff08; out(uVar36, 0xff08);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
uStack6._0_1_ = 0x5e; uStack6._1_1_ = 0xfb; uVar11 = FUN_2692_01e8();
}
}
else {
if (0x853e != '\0') {
uStack6._0_1_ = 0x4f; uStack6._1_1_ = 0xfb; uVar11 = FUN_2692_0562();
}
}
}
pcVar4 = (char * )0x7fcc; * pcVar4 = * pcVar4 + - 1; return uVar11;
}
if (param_3._1_1_ != 0) {
uVar42 = * (undefined * )(param_3._1_1_ + 6); * (undefined * )0x67e6 = uVar42; if (0x9c65 != '\x03') {
out(unaff_SI, CONCAT11(uVar42, 8));
}
uStack6 = param_3; uVar39 = FUN_1f51_01f7();
unaff_SI = (uVar39 >> 0x10); uStack6 = uStack6 - 1; if (uStack6 == 0) goto LAB_1f51_06cc;
}
* (undefined * )0x67e6 = 0xff; if (0x9c65 != '\x03') {
out(unaff_SI, 0xff08);
}
loop {
uVar39 = FUN_1f51_01f7(); uStack6 = uStack6 - 1;
if !(uStack6 != 0) {
break;
}
}
// LAB_1f51_06cc: if ((param_4 & 7) != 0) {
uVar42 = * (undefined * )((param_4 & 7) + 0xe); * (undefined * )0x67e6 = uVar42; if (0x9c65 != '\x03') {
out((uVar39 >> 0x10), CONCAT11(uVar42, 8));
}
uStack6._0_1_ = 0x13; uStack6._1_1_ = 0xfc; uVar39 = FUN_1f51_01f7();
}
uVar36 = (undefined2)(uVar39 >> 0x10); uVar11 = uVar39; if (0x9c65 != '\x03') {
out(uVar36, 0xff08); uVar11 = 5; out(uVar36, 5);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
uStack6._0_1_ = 0x50; uStack6._1_1_ = 0xfc; uVar11 = FUN_2692_01e8();
}
}
else {
if (0x853e != '\0') {
uStack6._0_1_ = 0x41; uStack6._1_1_ = 0xfc; uVar11 = FUN_2692_0562();
}
}
}
pcVar4 = (char * )0x7fcc; * pcVar4 = * pcVar4 + - 1; return uVar11;
case 3: uVar39 = * ff0x3e80; uVar36 = (undefined2)(uVar39 >> 0x10); puVar28 = (undefined * )uVar39; pcVar4 = (char * )(uVar34 + 0x6a); * pcVar4 = * pcVar4 + cVar10; uStack6 = unaff_SI; loop {
(puVar28 + - 2) = uVar35; puVar29 = puVar28 + - 4; (puVar28 + -4) = 0xd898; FUN_1d85_00ef(); uVar11 = 0xaca; uVar37 = 0xc5a0; uVar42 = (uVar37 >> 8); iVar33 = 0xd02; if ((uVar11 >> 0xf < iVar33) || ((uVar11 >> 0xf < = iVar33 & & (uVar11 < 0xd00)))) {
puVar3 = CONCAT13(uVar42, CONCAT12(uVar37,0xd00)); iVar33 = 0xd02; uVar6 = 0xc5a2; piVar5 = 0xd06; iVar18 = * piVar5; if ((iVar33 < = iVar18) && (( * piVar5 != iVar33 & & iVar33 < = iVar18 || ( * puVar3 < = 0xd04)))) {
uVar11 = uVar11 + 1; puVar3 = 0xd00;
uVar34 = * puVar3; * puVar3 = * puVar3 - uVar11; piVar5 = 0xd02; * piVar5 = ( * piVar5 - (uVar11 >> 0xf)) - (uVar34 < uVar11);
}
}
else {
puVar9 = CONCAT13(uVar42, CONCAT12(uVar37,0xd00)); 0xd02 = 0; * puVar9 = 0;
}
(puVar29 + - 2) = uVar35; uVar35 = 0x154b; puVar28 = puVar29 + - 4;
(puVar29 + - 4) = 0xd8fe; FUN_154b_012d(); loop {
puVar32 = puVar28; if (0xd23 == '\0') {
puVar32 = puVar28 + - 2; (puVar28 + - 2) = uVar35; uVar35 = 0x10f0;
(puVar28 + - 4) = 0xd90f; FUN_10f0_0a4f();
}
loop {
(puVar32 + - 2) = uVar35; puVar30 = puVar32 + - 4; (puVar32 + -4) = 0xd914; FUN_148d_03d4(); (puVar30 + - 2) = (0xd32 * 2 + 0x1c72); (puVar30 + - 4) = unaff_SS; * (undefined2 * * )(puVar30 + - 6) = & uStack6; (puVar30 + - 8) = 0x148d; uVar35 = 0x2a60; puVar31 = puVar30 + - 10; (puVar30 + - 10) = 0xd92d; iVar33 = FUN_2a60_0913(); puVar32 = puVar31 + 6;
} while (iVar33 == 0); (puVar31 + 4) = 0x2a60; uVar35 = 0x2692; puVar28 = puVar31 + 2; (puVar31 + 2) = 0xd876; uVar11 = FUN_2692_05ab(); uStack6 = uVar11;
} while ((0xabe == 0) || (0xd23 != '\0'));
} while ( true ); case 4: bVar13 = * ((uVar34 & 0xfffe) * 0x10 + (iVar33 >> 1) + 0x6ee1);
if ((bVar13 & 0xf0) == 0) {
uVar11 = 0;
}
else {
uVar11 = (bVar13 & 0xf) + 0x28;
}
if (uVar11 != 0) goto LAB_154b_0b06; if (DAT_616d_0cd0 != 0) {
uVar11 = ((uVar34 * 0x40 + iVar33) * 2 + 0x6bd); uVar19 = uVar11 >> 8; uStack6 = uVar19 & 0x3f; if (uStack6 != 0) {
if ((uVar19 & 0x20) != 0) {
uVar11 = (uVar19 & 7) + 0x72;
goto LAB_154b_0b06;
}
if ((uVar19 & 3) == 0) {
if ((uVar11 & 0x8000) != 0) {
uVar11 = ((uVar19 & 0x1c) >> 2) + 0x5f; goto LAB_154b_0b06;
}
uVar11 = DAT_4b2d_ec49; if (uStack6 < 5) goto LAB_154b_0b06;
}
uVar11 = uStack6 + 0x40; goto LAB_154b_0b06;
}
}
if (DAT_616d_0cd2 != 0) {
iVar18 = uVar34 * 0x40 + iVar33; bVar13 = * (iVar18 + - 0x40f8); uStack6 = bVar13; if (bVar13 != 0) {
if ((DAT_616d_0cce == 0) || (( * (iVar18 * 2 + 0x6bd) & 0xe0) != 0x20)) {
uVar11 = bVar13 + 0x160;
}
else {
uVar11 = 0x31;
}
goto LAB_154b_0b06;
}
}
if ((DAT_616d_0cce == 0) || (iVar18 = ( * ((uVar34 * 0x40 + iVar33) * 2 + 0x6bd) & 0xe0) >> 5, iVar18 == 0
)) {
if ((DAT_616d_0ccc == 0) || (uVar11 = ((uVar34 * 0x40 + iVar33) * 2 + 0x6bd), (uVar11 & 0x8000) == 0)) {
uVar11 = ((uVar34 * 0x40 + iVar33) * 2 + 0x6bd) & 0x1f;
}
else {
iVar33 = DAT_616d_0a8e - (uVar11 & 0x1f);
if (iVar33 < 3) {
uVar11 = 0x42;
}
else {
if (iVar33 < 6) {
uVar11 = 0x41;
}
else {
uVar11 = 0x40;
}
}
}
}
else {
if (DAT_616d_0a7e == 5) {
uVar11 = iVar18 + 0x78;
}
else {
uVar11 = iVar18 + 0x30;
}
}
// LAB_154b_0b06:
puVar20 = ((param_2._2_2_ * 0x28 + param_2) * 2 + 0xc57); if (* puVar20 == uVar11) {
uVar34 = 0x6169;
}
else {
uStackY18 = CONCAT22(0x6013, puVar20); uVar34 = FUN_168b_04c4(); * uStackY18 = uVar11;
}
return uVar34; case 5: iStackY572 = (bVar15 % 0x7f) + 1; iStackY570 = 0x7fd6 * iStackY56 + iStackY574 + 0xf; uVar36 = 0xc888;
if (0x9c6e < iStackY570) {
uStackY54._2_2_ = iStackY570 - 0x9c6e; iStackY570 = - (uStackY54._2_2_ - iStackY570); iStackY574 = iStackY574 - uStackY54._2_2_;
}
iVar33 = 0x7fd4 + 5; if (iStackY572 < iVar33) {
iStackY572 = iVar33;
}
iStackY568 = 0x7fd4 * unaff_SI + iStackY572 + 5;
iVar33 = 0x9c70; if (iVar33 + - 5 < iStackY568) {
uStackY54._2_2_ = (iStackY568 - iVar33) + 5; iStackY572 = iStackY572 - uStackY54._2_2_;
iStackY568 = iStackY568 - uStackY54._2_2_;
}
uStackY38 = FUN_27ac_078d(); iStackY46 = iStackY574;
iStackY44 = iStackY572; iStackY42 = iStackY570; iStackY40 = iStackY568; uStackY48 = iStackY574 + 0x7fd6; iStackY572 = iStackY572 + 3; FUN_1ba9_0e19(); uStackY18 = CONCAT22(0xd2c5, uStackY18); FUN_27ac_074d(); FUN_1ba9_0e19(); uStackY18 = CONCAT22(0xd2df, uStackY18); FUN_27ac_074d(); FUN_1ba9_0e19(); if (iStackY586 == 0) {
uStackY12 = 0xa3e3;
}
else {
uStackY12 = 0xa3dc;
}
uStackY18 = CONCAT22( & uStackY34, 0x27ac);
uVar34 = 0x3444; uStackY22 = CONCAT22(0xd31c,uStackY22); iStackY50 = iStackY572; uVar11 = unaff_DS; FUN_3444_1aca(); _iStackY580 = ffCONCAT22(unaff_SS, auStackY562); for (uStackY54._2_2_ = 0; uStackY54._2_2_ < uStack6; uStackY54._2_2_ = uStackY54._2_2_ + 1) {
uVar39 = * ff(uStackY54._2_2_ * 4 + iVar18); uStack8 = (_iStackY580 >> 0x10); uStackY12 = uVar34;
if ((uVar39 + 1) == '-') {
uStack6 = iStackY580 + 1; FUN_3444_1f84();
* (undefined * )(iStackY580 + iStackY56) = 0; * (undefined * )(iStackY580 + iStackY56 + - 1) = 0x20; *_iStackY580 = * (undefined * )(iStackY580 + - 1 + iStackY56);
}
else {
if (iStackY586 == 0) {
switchD_1000_1f7f_caseD_e: uStackY12 = _iStackY580; uStackY18 = CONCAT22(0xd399, uStackY18); FUN_3444_1aca();
}
else {
uStack6 = auStackY256 | 0xde; FUN_3444_1aca();
}
}
uStack6 = uStackY48; uVar34 = 0x27ac; uVar11 = 0xd3af; FUN_27ac_0508(); * ff(_iStackY580 + iStackY56) = 0; puVar21 = (_iStackY580 + iStackY56 + 1); _iStackY580 = (undefined * )(_iStackY580 & 0xffff0000 | ZEXT24(puVar21)); if ( & uStackY62 < puVar21) {
uStack6._0_1_ = 0xd9; uStack6._1_1_ = 0xd3;
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
iStackY50 = iStackY50 + 0x7fd4;
}
FUN_1ba9_0e42(); iVar33 = FUN_1ba9_10aa();
if (iVar33 == 0) {
uStackY54._0_2_ = iVar33;
}
uStackY54._2_2_ = 0xffff; break; case 6: uVar39 = * ff0x6c7;
uVar37 = (undefined2)(uVar39 >> 0x10); iVar27 = uVar39; in_AF = 9 < (bVar15 & 0xf) | in_AF; (iVar27 + - 2) = 0x1000; puVar23 = (iVar27 + - 4); (iVar27 + -4) = 0x695c; ppcVar8 = (code ** )0xcfc0; ( * * ppcVar8)(); puVar23[3] = 9; puVar23[2] = 0x3b6; puVar23[1] = 0x1000; * puVar23 = 0x696c; FUN_3074_01d4(); puVar23[1] = 9; *puVar23 = 0x3b7; puVar23[ - 1] = 0x3074; puVar24 = puVar23 + - 2; puVar23[ - 2] = 0x697b; uVar39 = FUN_3074_00d3(); uVar35 = (undefined2)(uVar39 >> 0x10); uVar36 = 0xc4d0; 0x15cd = uVar39; 0x15cf = uVar35; puVar24[1] = uVar35; * puVar24 = uVar39; puVar24[ - 1] = 0x3074; piVar25 = puVar24 + - 2; puVar24[ - 2] = 0x6991; uVar11 = FUN_3143_1656(); piVar25[1] = uVar11 >> 7; * piVar25 = ((CONCAT11(in_AF, bVar15 + in_AF * '\x06') & 0xff0f) >> 2) + 0x1132; puVar9 = * ff0x15cd; piVar25[ - 1] = (puVar9 + 2); piVar25[ - 2] = * puVar9; piVar25[ - 3] = 0x3143; piVar26 = piVar25 + - 4; piVar25[- 4] = 0x69b7; ppcVar8 = (code * * )0xcfc0; ( * * ppcVar8)(); piVar26[3] = 9;
piVar26[2] = 0x3b7; piVar26[1] = 0x3143; * piVar26 = 0x69c7; uVar11 = FUN_3074_01d4(); return uVar11; case 7: goto switchD_1000_1f7f_caseD_7; case 8: FUN_3444_02c6(0x1000); 0x1442 = unaff_BP & 3; iVar18 = (unaff_BP & 3) * 3; uStackY18 = 0x34448762; FUN_2b26_0402(); for (iVar33 = 0; iVar33 < 0xc; iVar33 = iVar33 + 1) {
if ((iVar33 < iVar18) || (iVar18 + 3 < = iVar33)) {
uStackY18 = 0xffff; uStackY22 = CONCAT22(iVar33 + 0x105, 0x2b26); uStackY24 = 0x87ee; FUN_2b26_0edc(); if (iVar33 % 3 == 0) {
uStackY18 = 0xffff; uStackY22 = CONCAT22(iVar33 / 3 + 0x111, 0x2b26); uStackY24 = 0x881a; FUN_2b26_0edc();
}
}
else {
uStackY18 = 0x1ffff; uStackY22 = CONCAT22(iVar33 + 0x105, 0x2b26); uStackY24 = 0x87a6; FUN_2b26_0edc(); if (iVar33 % 3 == 0) {
uStackY18 = 0x1ffff; uStackY22 = CONCAT22(iVar33 / 3 + 0x111, 0x2b26); uStackY24 = 0x87d2; FUN_2b26_0edc();
}
}
}
uStackY18 = 0x2b268829; FUN_2b26_0363(); uStackY18 = 0x0; uStackY22 = 0x11b2b26; uStackY24 = 0x883f;
uVar11 = FUN_2b26_0e73(); if (( *0x821 & 1) != 0) {
uStackY18 = 0x2b26885a; FUN_294b_02f2(); uStackY18 = CONCAT22(0x8860, uStackY18); FUN_1862_2440(); uStackY18 = 0x11862; uStackY22 = CONCAT22(0x886d, uStackY22); uVar36 = FUN_2b26_0008();
uStackY18 = CONCAT22(uVar36, 0x2b26); uStackY22 = CONCAT22(0x8876, uStackY22); FUN_2c63_058f(); uStackY18 = CONCAT22(0x887d, uStackY18); FUN_1862_2381(); uStackY18 = CONCAT22(0x8882, uStackY18); uVar11 = FUN_294b_03be();
}
return uVar11; case 9: piVar5 = 0x1ca1;
* piVar5 = * piVar5 << 6; FUN_3444_24d0(); uStackY18 = 0x3444028c; iVar18 = extraout_DX; FUN_3444_23fe(); uVar11 = 0x696; uVar36 = 0xc126; uStackY18 = (uVar11 >> 0xf); iVar33 = 0x614; uVar34 = iVar33 * 2; uStackY22 = CONCAT22((0x616 << 1 | (iVar33 < 0)) + (uVar11 >> 0xf) + CARRY2(uVar34,uVar11) + 0x60a + CARRY2(uVar34 + uVar11, 0x608), extraout_DX_00); uStackY24 = 0x3444; uStackY28._2_2_ = 0x2d4; uVar39 = FUN_3444_23fe(); uVar11 = uVar39 + uStackY24; uVar34 = uVar11 + uStackY18._2_2_; uVar36 = 0xc126; puVar3 = 0x610; uStackY28._2_2_ = uVar34 + * puVar3; uStackY24 = (uVar39 >> 0x10) + uStackY22 + CARRY2(uVar39, uStackY24) + iVar18 + CARRY2(uVar11, uStackY18._2_2_) + 0x612 + CARRY2(uVar34, *puVar3); uVar36 = 0xc128; 0x5fc = uStackY28._2_2_; 0x5fe = uStackY24; uStackY28._0_2_ = 10; uStackY30 = 0x3444; uStackY32 = 0x306; FUN_1d9a_0002(); uVar36 = 0xc12a; uStackY24 = 0x5fa; uStackY28._2_2_ = 0x5f8; uStackY28._0_2_ = 6; uStackY30 = 0x1d9a; uStackY32 = 800; FUN_1d9a_0002(); uVar36 = 0xc12c; uStackY24 = 0x5f6; uStackY28._2_2_ = 0x5f4; uStackY28._0_2_ = 4; uStackY30 = 0x1d9a; uStackY32 = 0x33a; FUN_1d9a_0002(); uVar36 = 0xc12e; uStackY24 = 0x5f2; uStackY28._2_2_ = 0x5f0; uStackY28._0_2_ = 7; uStackY30 = 0x1d9a; uStackY32 = 0x354; FUN_1d9a_0002(); uVar36 = 0xc130; uStackY24 = 0x5ee; uStackY28._2_2_ = 0x5ec; uStackY28._0_2_ = 0xc; uStackY30 = 0x1d9a; uStackY32 = 0x36e; FUN_1d9a_0002(); uVar36 = 0xc132; uStackY24 = 0x5ea; uStackY28._2_2_ = 0x5e8; uStackY28._0_2_ = 0xd; uStackY30 = 0x1d9a; uStackY32 = 0x388; FUN_1d9a_0002(); uVar36 = 0xc134; uStackY24 = 0x5e6; uStackY28._2_2_ = 0x5e4; uStackY28._0_2_ = 9; uStackY30 = 0x1d9a; uStackY32 = 0x3a2; FUN_1d9a_0002(); uVar36 = 0xc136; uStackY24 = 0x5e2; uStackY28._2_2_ = 0x5e0; uStackY28._0_2_ = 0xe; uStackY30 = 0x1d9a; uVar35 = 0x1d9a; uStackY32 = 0x3bc; FUN_1d9a_0002(); uVar36 = 0xc138; iVar33 = 0x5dc; iVar18 = 0x5de; uVar11 = iVar18 << 1 | (iVar33 < 0); iVar17 = 0x5ce; if ((iVar17 < uVar11) || ((uVar39 = CONCAT22(iVar18, iVar33), iVar17 < = uVar11 & & (uVar39 = CONCAT22(iVar18, iVar33), 0x5cc <= (iVar33 << 1))))) {
uStackY24 = 0; uStackY28._2_2_ = 2;
uStackY28._0_2_ = 0x5ce; uStackY30 = 0x5cc;
uStackY32 = 0x1d9a; uVar35 = 0x3444; uStackY34 = 0x401; uVar39 = FUN_3444_2364();
}
uStack8 = (uVar39 >> 0x10); uVar12 = uVar39; uStackY24 = 0; uStackY28._2_2_ = 100; uVar36 = 0xc142; uStackY28._0_2_ = 0x5b6; uStackY30 = 0x5b4; uStackY34 = 0x420; uStackY32 = uVar35; uVar39 = FUN_3444_23fe(); uVar36 = 0xc138; puVar3 = 0x5c8; uVar11 = * puVar3; * puVar3 = * puVar3 + uVar39; piVar5 = 0x5ca; * piVar5 = *piVar5 + (uVar39 >> 0x10) + CARRY2(uVar11, uVar39); uStackY32 = 0;
uStackY34 = 0xfa; uVar36 = 0xc142; uStackY38._2_2_ = 0x5b2; uStackY38._0_2_ = 0x5b0;
iStackY40 = 0x3444; iStackY42 = 0x447; uVar40 = FUN_3444_23fe(); uStackY24 = uVar40; iStackY40 = 0; iStackY42 = 0x10; uVar36 = 0xc128;
iStackY44 = 0x5fe; iStackY46 = 0x5fc; iStackY50 = 0x5a6; uStackY48 = iStackY50 >> 0xf; uStackY22 = (uStackY22 & 0xffff0000 | uVar40 >> 0x10); uStackY54._2_2_ = 0x3444; uStackY54._0_2_ = 0x476; uStackY54 = FUN_3444_23fe();
uStackY22 = (uStackY22 & 0xffff | uStackY54 << 0x10); uStackY18 = (uStackY18 & 0xffff0000 | uStackY54 >> 0x10); iStackY56 = 0x3444;
uStackY58 = 0x483; lVar38 = FUN_3444_2364();
lVar38 = lVar38 + CONCAT22(((uStackY22 - uStack8) - (uStackY24 < uVar12)) * 2 | ((uStackY24 - uVar12) < 0), (uStackY24 - uVar12) * 2); uVar19 = lVar38; uVar36 = 0xc124; puVar3 = 0x620; uVar11 = * puVar3; uVar14 = uVar19 - * puVar3; iVar33 = 0x622; uVar36 = 0xc138; puVar3 = 0x5cc; uVar34 = *puVar3; * puVar3 = * puVar3 + uVar14;
piVar5 = 0x5ce; * piVar5 = * piVar5 + (((lVar38 >> 0x10) - iVar33) - (uVar19 < uVar11)) + CARRY2(uVar34, uVar14); iStackY56 = 0x3444;
uStackY58 = 0x4bc; FUN_3444_40e7(); uStackY58 = 0x3444; iStackY60 = 0x4c5; FUN_3444_4472();
uStackY58 = 0x3444; iStackY60 = 0x4ca; uVar39 = FUN_3444_42c7(); uVar36 = 0xc138; 0x5d0 = uVar39; 0x5d2 = (uVar39 >> 0x10); puVar3 = 0x5d4; uVar11 = * puVar3;
* puVar3 = * puVar3 + uVar12 * 2;
piVar5 = 0x5d6; * piVar5 = * piVar5 + (uStack8 << 1 | (uVar12 < 0)) + CARRY2(uVar11, uVar12 * 2); uStackY58 = 0; iStackY60 = 2;
uStackY62 = 0; uStackY64 = 500; uVar36 = 0xc142; uVar11 = 0x5bc; puVar3 = 0x5b0;
iStackY68 = uVar11 - * puVar3; iStackY66 = (0x5be - 0x5b2) - (uVar11 < * puVar3); uStackY70 = 0x3444; uStackY72 = 0x515;
lVar38 = FUN_3444_23fe(); uVar35 = (undefined2)(lVar38 >> 0x10); uStackY70 = 0; uStackY72 = 0x18; uStackY74 = uStackY18;
uStackY76 = uStackY22._2_2_; uStackY18 = (uStackY18 & 0xffff | lVar38 << 0x10); uStackY78 = 0x3444; uStackY80 = 0x52d; uStackY28 = FUN_3444_2364(); uStackY78 = 0; uStackY80 = 8; uVar36 = 0xc146; uStackY82 = 0x5a4; uStackY84 = 0x5a2; iStackY88 = 0x5a0; iStackY86 = iStackY88 >> 0xf; uStackY92._2_2_ = 0x3444;
uStackY92._0_2_ = 0x55c; uStackY92 = FUN_3444_23fe(); iStackY94 = 0x3444; iStackY96 = 0x563;
lVar38 = FUN_3444_2364(); lVar38 = (lVar38 - uStackY28) + CONCAT22(uVar35, uStackY18._2_2_); uVar11 = lVar38; uVar36 = 0xc124; puVar3 = 0x620; uVar34 = uVar11 + *puVar3; uVar35 = 0xc14a; puVar2 = 0x43a;
iStackY96 = uVar34 + * puVar2; iStackY94 = (lVar38 >> 0x10) + 0x622 + CARRY2(uVar11, * puVar3) + 0x43c + CARRY2(uVar34, * puVar2); uStackY98 = 0x3444;
uStackY100 = 0x592; uVar39 = FUN_3444_2364();
uVar36 = 0xc138; puVar3 = 0x5d8; uVar11 = uVar39 + * puVar3; uStack6 = uVar11 + uVar12; iVar33 = (uVar39 >> 0x10) + 0x5da + CARRY2(uVar39, * puVar3) +
uStack8 + CARRY2(uVar11, uVar12); if (iVar33 < 0) {
iVar33 = 0; uStack6 = 0;
}
uStackY98 = 0; uStackY100 = 2; uVar11 = 0x5d8; iStackY104 = uVar11 + uStack6; iStackY102 = 0x5da + iVar33 + CARRY2(uVar11, uStack6); uStackY106 = 0x3444; uStackY108 = 0x5d4; uVar39 = FUN_3444_2364(); uVar36 = 0xc138; 0x5d8 = uVar39; 0x5da = (uVar39 >> 0x10); uVar34 = 0x694 / 5; uVar36 = 0xc138; puVar3 = 0x5dc; uVar11 = * puVar3; * puVar3 = * puVar3 + (uVar34 - uVar12); piVar5 = 0x5de; * piVar5 = * piVar5 + (((uVar34 >> 0xf) - uStack8) - (uVar34 < uVar12)) + CARRY2(uVar11, uVar34 - uVar12); uStackY106 = 0x3444; uStackY108 = 0x608; FUN_1000_07e8(); uStackY106 = 0x3444; uStackY108 = 0x60c; FUN_1000_0afb(); 0x30 = 0; uStackY12 = 0; iVar33 = 1; loop {
uVar36 = 0xc126; uVar11 = (iVar33 * 4 + 0x600); iVar18 = (iVar33 * 4 + 0x602); if ((uStackY12._1_1_ >> 7 < = iVar18) & & ((uStackY12._1_1_ >> 7 < iVar18 || (uStackY12 < uVar11)))) {
0x30 = iVar33; uStackY12 = uVar11;
}
iVar33 = iVar33 + 1;
} while (iVar33 < 8); iVar33 = 0; loop {
uVar34 = 3; uVar36 = 0xc14e; loop {
iVar18 = (iVar33 * 5 + uVar34) * 4; uVar35 = (iVar18 + 0x502);
(iVar18 + 0x504) = (iVar18 + 0x500); (iVar18 + 0x506) = uVar35;
switchD_1000_e974_caseD_6: uVar34 = uVar34 - 1;
} while ( - 1 < uVar34); uVar36 = 0xc126; uStackY28._0_2_ = iVar33 * 4;
uStackY18 = (uStackY18 & 0xffff | (uStackY28 + 0x602) << 0x10); uStack6 = (uStackY28 + 0x600); switchD_1000_1f7f_caseD_d: FUN_3444_23fe(); uVar39 = FUN_3444_2364(); uVar11 = (uVar39 >> 0x10); uStackY22 = (uStackY22 & 0xffff0000 | uVar11); uVar36 = 0xc14e;
(iVar33 * 0x14 + 0x500) = uVar39;
(iVar33 * 0x14 + 0x502) = uVar11;
uVar36 = 0xc126; (uStackY28 + 0x602) = 0; (uStackY28 + 0x600) = 0;
uVar36 = 0xc142; (uStackY28 + 0x5aa) = 0; (uStackY28 + 0x5a8) = 0;
iVar33 = iVar33 + 1;
} while (iVar33 < 8); uVar36 = 0xc104; uVar11 = 0x6b2; uVar34 = 0x696; uVar19 = 0x694; uVar14 = uVar11 + uVar34 + uVar19; uVar36 = 0xc124; puVar3 = 0x620; uStack6 = uVar14 + * puVar3; iVar33 = (uVar11 >> 0xf) + (uVar34 >> 0xf) + CARRY2(uVar11, uVar34) + (uVar19 >> 0xf) + CARRY2(uVar11 + uVar34, uVar19) + 0x622 + CARRY2(uVar14, * puVar3); if ((iVar33 < 1) & & ((iVar33 < 0 || (uStack6 < 200)))) {
uStack6 = 200;
}
iVar33 = 0; loop {
iVar18 = 3; uVar36 = 0xc150; loop {
iVar17 = (iVar33 * 5 + iVar18) * 2; (iVar17 + 0x462) = (iVar17 + 0x460); iVar18 = iVar18 + - 1;
} while ( - 1 < iVar18); uStackY28._0_2_ = iVar33 * 2; uStackY18 = 0x34440797;
uVar40 = FUN_3444_2364(); uStackY22 = (uStackY22 & 0xffff0000 | uVar40 >> 0x10); (iVar33 * 10 + 0x460) = uVar40; (uStackY28 + 0x440) = (uStackY28 + 0x624); (uStackY28 + 0x694) = 0; (uStackY28 + 0x624) = 0; iVar33 = iVar33 + 1;
} while (iVar33 < 0x10); return 0;
case 10: goto switchD_1000_1f7f_caseD_a; case 0xb: goto switchD_1000_e974_caseD_6; case 0xc: FUN_13d4_000c(); uStack6._0_1_ = 0x2d; uStack6._1_1_ = 0x4b; FUN_3444_172e(); uStack6 = 1; uStackY18 = 0xffff0003; uStackY22 = 0xd7fff; uStackY24 = 0x3444; uStackY28._2_2_ = 0xc221; FUN_39d9_0e14(); iVar33 = 0; loop {
uStack6._0_1_ = 0xd9; uStack6._1_1_ = 0x39; FUN_168b_05f1(); uStack6 = 0x14;
iVar18 = FUN_168b_05f1(); uStack6 = iVar18 + 0x66; FUN_39d9_0d1a(); iVar33 = iVar33 + 1;
} while (iVar33 < 0x14); uVar36 = 0xc58a; 0xec7b = 5; 0xec7d = 0; 0xabe = 3; uStack6._0_1_ = 0x77; uStack6._1_1_ = 0xc2; FUN_154b_1039(); uStack6._0_1_ = 0x4b; uStack6._1_1_ = 0x15; FUN_154b_1041(); 0xd2c = 0; uStack6._0_1_ = 0x4b; uStack6._1_1_ = 0x15; FUN_1d9a_0002(); uStack6._0_1_ = 0x9a; uStack6._1_1_ = 0x1d; FUN_154b_000c(); uStack6._0_1_ = 0x4b; uStack6._1_1_ = 0x15; FUN_13d4_0056(); FUN_1862_0e93(); if (CONCAT13(uStack6._1_1_, CONCAT12(uStack6, 0xc5ae)) < 5) {
uStack6._0_1_ = 199; uStack6._1_1_ = 0xc5; FUN_2b26_0754();
}
if (( * 0x804 & 1) == 0) {
FUN_154b_0225();
}
if (( * 0x821 & 1) == 0) {
FUN_1862_0949();
}
else {
uStack6._0_1_ = 0xf5; uStack6._1_1_ = 0xc5; FUN_2b26_09bf();
}
if (4 < CONCAT13(uStack6._1_1_,CONCAT12(uStack6, 0xc5ae))) {
uStack6._0_1_ = 0xb; uStack6._1_1_ = 0xc6; FUN_236f_0691();
}
FUN_2239_0193(); FUN_1d9a_0234(); FUN_20d3_0bed(); uStack6._0_1_ = 0x23; uStack6._1_1_ = 0xc6; uVar11 = FUN_27ac_0287();
return uVar11; case 0xd: goto switchD_1000_1f7f_caseD_d; case 0xe: goto switchD_1000_1f7f_caseD_e; case 0xf: LOCK(); iVar18 = * uStackY22; FUN_294b_0b7c(); FUN_294b_02f2(); uStackY18 = CONCAT22(iVar33 + uVar14 + iVar18, 0x294b); uStackY22 = CONCAT22(0xdebe, uStackY22); ppcVar8 = (code * * )0xcf74; ( * * ppcVar8)(); FUN_294b_0c76(); ppcVar8 = (code * * )0xcf70; uVar11 = (* * ppcVar8)(); return uVar11;
}
loop {
while ( true ) {
if (uStackY54 != 0) {
iVar33 = FUN_1ba9_10aa(); if (iVar33 == 0) goto LAB_1ba9_1cbc;
}
iVar33 = FUN_1ba9_10aa(); if ((iVar33 != 0) & & (uStackY54 == 0)) {
uStackY54._0_2_ = 1;
}
iVar33 = FUN_2692_03c2(); if (iVar33 != 0) {
uStack6 = 0xd49d; FUN_2692_03c6(); if ((uStackY12._1_1_ == - 2) & & ((uStackY12 & 0xff) != 0xa3da)) {
uStack6 = uVar11; FUN_2692_03a7(); goto LAB_1ba9_1cbc;
}
}
if (uStackY54 != 0) break; iVar33 = FUN_2a25_003c(); if (iVar33 != 0) {
uStackY592 = FUN_2a25_00b4(); if (((uStackY592 & 0x800) == 0) & & (( * (uStackY592 + 0xb8f1) & 2) != 0)) {
uStackY592 = uStackY592 - 0x20;
}
uStackY54._2_2_ = uStackY58;
// LAB_1ba9_1afd: if ((uStackY592 == 10) || (uStackY592 == 0xd)) goto LAB_1ba9_1cbc; if (uStackY592 == 0x1b) {
// LAB_1ba9_1b5b:
uStackY58 = 0xffff;
// LAB_1ba9_1cbc:
iVar33 = FUN_1ba9_10aa();
if ((iVar33 == 0) & & (0xa3da != - 1)) {
if (uStackY58 != 0xffff) {
uStack6 = (0xa3da + - 0x30) * 0x10 + uStackY58; FUN_2692_03a7();
}
uStackY576 = 1;
}
if (uStackY58 != 0xffff) {
* param_2 = uStackY58 + '\x01';
}
FUN_1ba9_0e5d(); FUN_2692_0a79(); uStack6 = auStackY256 | 0xd2; FUN_27ac_0824(); 0x9c7a = uStackY566; 0x9c7c = uStackY564; return uStackY576;
}
if (uStackY592 == 0x20) goto LAB_1ba9_1cbc; if (uStackY592 == 0x2b) goto LAB_1ba9_1b63; if ((uStackY592 == 0x2d) || (uStackY592 == 0x848)) {
uVar34 = uStack6; if (0 < uStackY54._2_2_) {
uVar34 = uStackY54._2_2_;
}
uStackY54._2_2_ = uVar34 - 1; goto LAB_1ba9_1b82;
}
if (uStackY592 == 0x850) goto LAB_1ba9_1b63; if ((0 < (uStackY592 - 0x851)) & & (uStackY592 == 0x853 || (uStackY592 - 0x852) < 1)) goto LAB_1ba9_1cbc;
if ((uStackY592 & 0x800) != 0) {
FUN_2a25_00a3(); FUN_2a25_00a3(); goto LAB_1ba9_1b5b;
}
uStackY594 = uStackY58; if (( * (uStackY592 + 0xb8f1) & 3) == 0) goto LAB_1ba9_1bc6; while (uStackY594 = uStackY594 + 1, uStack6 < = uStackY594) {
uStackY594 = 0xffff;
// LAB_1ba9_1c74: if (uStackY594 == uStackY58) goto LAB_1ba9_1bc6;
}
uVar39 = * ff(uStackY594 * 4 + iVar18); uStackY598 = SEXT12((uVar39 + 1)); if (( *(uStackY598 + 0xb8f1) & 2) != 0) {
uStackY598 = uStackY598 - 0x20;
}
uVar34 = uStackY594; if (uStackY598 != uStackY592) goto LAB_1ba9_1c74;
// LAB_1ba9_1b99:
uStackY54._2_2_ = uVar34; uStack6 = 0xd654; FUN_2692_09f6();
}
// LAB_1ba9_1bc6: if (uStackY54._2_2_ != uStackY58) {
if (uStackY58 != 0xffff) {
FUN_1ba9_0e19(); uStack6 = uStackY48; uVar11 = 0xd690; FUN_27ac_0508(); uStackY58 = 0xffff;
}
if (uStackY54._2_2_ != 0xffff) {
uStackY58 = uStackY54._2_2_; FUN_1ba9_0e19();
uStack6 = uStackY48; uVar11 = 0xd6d2; FUN_27ac_0508();
}
}
}
uStack6 = 0xd4dc; FUN_1ba9_1038(); uVar11 = 0x2692; uStackY12 = 0xd4f2; iVar33 = FUN_3444_1eca();
} while (iVar33 == 0); uStack6 = auStackY256 | 0xc2; uVar11 = 0xd519; iVar33 = FUN_1ba9_104d(); if ((((iVar33 == 0) || (uStackY54._2_2_ = (iStackY60 - iStackY572) / 0x7fd4,
uStackY54._2_2_ < 0)) || (uStack6 < = uStackY54._2_2_)) || (uVar39 = * ff(uStackY54._2_2_ * 4 + iVar18), (uVar39 + 1) == '-')
) {
uStackY54._2_2_ = 0xffff;
}
goto LAB_1ba9_1bc6;
}
pcVar4 = (char * )(iVar33 * 0x20 + uVar34 + - 0x48fa); * pcVar4 = * pcVar4 + - 1; uVar36 = 0xc1d6;
in_CX = bVar15 << 8; iVar18 = iVar33 * 0x20 + uVar34; if (( * (iVar18 + - 0x48fa) & 0xf) == 0) {
* (undefined * )(iVar18 + - 0x48fa) = 0;
}
}
uVar34 = uVar34 + 1; goto LAB_10f0_10bf;
// LAB_10f0_10fb:
iVar33 = iVar33 + 1; goto LAB_10f0_10fc; switchD_1000_1f7f_caseD_a:
FUN_168b_03d1(); uVar36 = 0x294b; uStack6._0_1_ = 0x8d; uStack6._1_1_ = 0xc6;
FUN_294b_03be();
// LAB_1ba9_0bfd:
loop {
if (( * 0xad9 & 1) == 0) break; uStack6 = auStackY256 | 0xe6; uVar36 = 0x2d56; iVar33 = FUN_2d56_0ead(); if (iVar33 != 0) break; uVar36 = 0x2a25; uStack6._0_1_ = 0xae; uStack6._1_1_ = 0xc6; iVar33 = FUN_2a25_003c(); if (iVar33 != 0) {
uVar36 = 0x2a25; uStack6._0_1_ = 0xb7;
uStack6._1_1_ = 0xc6; uVar11 = FUN_2a25_00b4(); if (uVar11 != 0x73) {
if (0x73 < uVar11) goto LAB_1ba9_0bfd; cVar10 = uVar11; if ((cVar10 != '\n') & & (cVar10 != '\r')) {
if ((cVar10 == '\x1b') || (cVar10 == 'C')) {
// LAB_1ba9_0c83:
uStack6._0_1_ = 0x25; uStack6._1_1_ = 0x2a; uVar11 = FUN_2b26_0754(); return uVar11;
}
if (cVar10 != 'D') {
if (cVar10 == 'S') {goto LAB_1ba9_0c50;} if (cVar10 == 'c') {goto LAB_1ba9_0c83;} if (cVar10 != 'd') {goto LAB_1ba9_0bfd;
}}
uStack6._0_1_ = 0x25; uStack6._1_1_ = 0x2a; FUN_2b26_0754();
// goto LAB_1ba9_0c98;
}
}
// LAB_1ba9_0c50:
uStack6._0_1_ = 0x25; uStack6._1_1_ = 0x2a; FUN_2b26_0754();
// goto LAB_1ba9_0c5a;
}
} 
uStack6._0_1_ = uVar36; 
uStack6._1_1_ = (uVar36 >> 8); 
FUN_2b26_0754(); 
if (in_stack_0000fff2 != 0x1902) {
if (in_stack_0000fff2 + 0xe6fdU != 0) {
return in_stack_0000fff2 + 0xe6fdU;
}
// LAB_1ba9_0c98:
uStack6._0_1_ = 0x42; 
uStack6._1_1_ = 0x1c; 
uVar11 = FUN_141a_0355(); 
return uVar11;
}
// LAB_1ba9_0c5a:
uStack6._0_1_ = 0x26; 
uStack6._1_1_ = 0x2b; 
iVar33 = FUN_39d9_0e32(); 
if (iVar33 != 0) {
// goto LAB_1ba9_0c98; 
}
uStack6._0_1_ = 0xd9; 
uStack6._1_1_ = 0x39; 
FUN_2b26_05ce(); 
uStack6._0_1_ = 0x26; 
uStack6._1_1_ = 0x2b; 
FUN_294b_02f2(); 
uStack6 = auStackY256 | 0xf6; 
FUN_2b26_0e3b(); 
uStack6 = auStackY256 | 0xf6; 
FUN_294b_077b(); 
uStack6 = 0xff3d; 
// goto switchD_1000_1f7f_caseD_a;
// LAB_1ba9_1b63:
uStackY54._2_2_ = (uStackY54._2_2_ + 1) % uStack6;
// LAB_1ba9_1b82:
uVar39 = * ff(uStackY54._2_2_ * 4 + iVar18); uVar34 = uStackY54._2_2_; if ((uVar39 + 1) != '-') {
// goto LAB_1ba9_1b99;
} 
// goto LAB_1ba9_1afd; 
// switchD_1000_1f7f_caseD_1: 
while (bVar13 = (uVar14 >> 8) + 1, uVar11 = uVar14 & 0xff,
uVar14 = uVar11 | bVar13 << 8, bVar13 < uVar11) {
ppcVar8 = (code * * )0x67ed; uVar19 = ( * * ppcVar8)();
}
return uVar19; 
// switchD_1000_1f7f_caseD_7: 
loop {
uVar34 = (iVar17 + 0x82) & 0x1f;
if (param_2 < uVar34) {
uVar36 = (undefined2)
(CONCAT13(param_4._1_1_, CONCAT12(param_4, param_3._2_2_)) >> 0x10); iVar33 = param_3._2_2_;
}
else {
uVar34 = (uVar34 - param_2) + 0x1f;
uVar36 = (undefined2)(_param_5 >> 0x10); iVar33 = _param_5;
}
uVar34 = (iVar33 + uVar34 * 2);
bVar13 = * uStackY18; uVar14 = uStack6 & 0xff; uVar19 = bVar13 << 8; uVar12 = uVar14 | uVar19; uStack6 = auStackY256 | 0xfe;
bVar15 = uVar14; if ((((((uVar19 & 0x8000) != 0) || (unaff_DI != * in_stack_0000fff2)) || (uStack6 != in_stack_0000fff2[1])) ||
((uStack8 != in_stack_0000fff2[0x80] || (uVar34 != in_stack_0000fff2[0x81])))) || ((bVar13 & 0xf) != bVar15)) {
* in_stack_0000fff2 = unaff_DI; in_stack_0000fff2[1] = uStack6; in_stack_0000fff2[0x80] = uStack8; in_stack_0000fff2[0x81] = uVar34; uVar12 = uVar19 & 0xf000 | (bVar15 | bVar13 & 0xf0) | 0x80; * uStackY18 = uVar12;
}
iVar33 = uStackY18._2_2_ + 0x80; if ((((uVar11 & 0xff) + 1 & 0x3f) == 0) & & (iVar33 = uStackY18._2_2_ + - 0x1f7e, (uStackY12 + 1 & 0x1f) == 0)) break;
uStackY18._2_2_ = iVar33; uStack6 = 8;
uVar11 = 0x1234; uStackY12._0_1_ = '4';
in_stack_0000fff2 = 0x1234; uStackY18 = CONCAT22(uStackY18._2_2_, 0x1234); uStackY22 = 0x12341000; uStackY24 = 0xf576; ( * param_2._2_2_)(); iVar18 = uStackY18._2_2_ * 2;
iVar17 = iVar18 + 0x6bd; uVar34 = (iVar18 + 0x73d) & 0x1f; iVar33 = _param_5;
uVar36 = (undefined2)(_param_5 >> 0x10); if (param_2 < uVar34) {
iVar22 = param_3._2_2_; uVar35 = (CONCAT13(param_4._1_1_, CONCAT12(param_4, param_3._2_2_)) >> 0x10);
}
else {
uVar34 = (uVar34 - param_2) + 0x1f;
iVar22 = iVar33; uVar35 = uVar36;
}
uStack6 = (iVar22 + uVar34 * 2);
if (uVar11 == 0x1234) {
uVar34 = (iVar18 + 0x6bf) & 0x1f;
if (param_2 < uVar34) {
uVar36 = (undefined2)
(CONCAT13(param_4._1_1_, CONCAT12(param_4, param_3._2_2_)) >> 0x10); iVar33 = param_3._2_2_;
}
else {
uVar34 = (uVar34 - param_2) + 0x1f;
}
uStack8 = (iVar33 + uVar34 * 2);
}
else {
uStack8 = (param_7 + uVar11 * 2);
}
uVar36 = 0x4b2d;
}
return uVar12;
}


// WARNING: Instruction at (ram,0x000110ff) overlaps instruction at (ram,0x000110fe)
//
// WARNING: Removing unreachable block (ram,0x00017aaf)
// WARNING: Type propagation algorithm not settling
// WARNING: Could not reconcile some variable overlaps

uint FUN_1205_0002(param_1_00: u16,uparam_2: i16,param_3: i16,uparam_4: i16)

{
let puVar1: * mut u16; let puVar2: * mut u16; let pcVar3: String; char cVar4; code * * ppcVar5; let bVar6: u8; let bVar7: u8; let uVar8: u16; let uVar9: u16; let uVar10: u16; let in_CX: i16; let extraout_DX: u16; let iVar11: i16; let iVar12: i16; let uVar13: u16; let uVar14: u16; let iVar15: i16; let unaff_DI: String; let uVar16: u16; let unaff_SS: i16; let unaff_DS: u16; bool bVar17;
bool bVar18; bool bVar19; let lVar20: i32; let uVar21: u32; let lVar22: i32; let lVar23: i32; ulong uVar24; let piVar25: * mut u16; undefined4 * puVar26;
let local_6c: i16; let local_6a: u16;
let iStack104: i16; let uStack102: u32;
let local_62: u16; let local_60: u16;
let local_5e: i16; let local_5c: i16;
let uStack90: u32; let iStack86: i16;
let iStack84: i16; let uStack82: u16;
let uStack80: u16; let uStack78: u16;
let uStack76: u16; let uStack74: u32;
let local_46: i16; let local_44: i16;
let iStack66: i16; let local_40: i16;
let local_3e: i16; let local_3c: i16;
let local_3a: i16; let local_38: u16;
let local_36: i16; let local_34: u32;
int local_30 [4]; let uStack40: u16; let uStack38: u16; let uStack36: u16; let uStack34: u16; let local_20: u16; let uStack30: u16; let uStack28: u32; let uStack24: u32; let local_e: u8; undefined uStack13; undefined local_c; char cStack11;
let iVar27: i16; let piVar28: * mut u16; let uVar29: u16; let pbVar30: * mut u8;

FUN_3444_02c6(0x39d9); FUN_1205_02c1(); iVar15 = 0xc204; pbVar30 = CONCAT22(iVar15, 0xe708); piVar25 = 0xe708;
* piVar25 = * piVar25 + 1; uVar14 = 0; iVar27 = 0xabe; if (iVar27 == 1) {
return 0;
}
if ((iVar27 != 2) & & (iVar27 < 5)) {
uVar13 = 0xe708; uVar9 = * pbVar30 & 0xf; if (uVar9 < 10) {
switch(uVar9) {
case 0: goto switchD_1000_2149_caseD_0; default: iVar27 = param_2 * 0x40 + ((8 - in_CX) & 0x3f); uVar14 = (iVar27 * 2 + 0x6bd); if (((uVar14 & 0x3f00) == 0) & & (((iVar15 = (uVar14 & 0xe0) >> 5, iVar15 != 0 || ((uVar14 & 0x8000) != 0)) & & (bVar7 = * (((param_4 & 0xfff1) >> 1) + iVar15 + 0x814), bVar7 != 0)))) {
if ((uVar14 & 0x8000) == 0) {
if (bVar7 < (DAT_616d_0a84 & 7)) {
return 0;
}
}
else {
if (bVar7 < = - ((uVar14 & 0x1f) - DAT_616d_0a8e)) {
return 0;
}
}
bVar7 = * ((param_4 >> 2) + 0x7d4); pbVar30 = (( * (iVar27 + - 0x40f8) >> 2) + 0x7d4); if ( * pbVar30 < bVar7 || * pbVar30 == bVar7) {
* (undefined * )(iVar27 + - 0x40f8) = param_4; return 1;
}
}
return 0; case 3: iVar27 = 0x1cfb;
uVar29 = 0x5b2d; for (iVar15 = 0; iVar15 < 0xb; iVar15 = iVar15 + 1) {
uVar16 = 0xc522; (iVar15 * 4 + 0x1e87) = iVar27; (iVar15 * 4 + 0x1e89) = uVar29; piVar25 = FUN_3074_00d3();
iVar27 = * piVar25 + 3; FUN_3444_1f26(); uVar29 = 2; FUN_3074_01d4(); uVar13 = 0x3074; iVar27 = iVar27 + 0x3074;
}
if (0x9c65 == '\x06') {
puVar26 = ffFUN_3074_00d3();
for (iVar27 = 0; iVar27 < 0x300; iVar27 = iVar27 + 1) {
pcVar3 = (char * )( * puVar26 + iVar27); * pcVar3 = * pcVar3 >> 2;
}
local_20 = 0x1012; uStack30 = 0; uStack28._0_2_ = 0x100; uStack28._2_2_ = puVar26;
uStack40 = (puVar26 + 2); uStack24._2_2_ = 0x8f4c; FUN_3444_1be4(); uVar13 = FUN_3074_01d4();
}
* (undefined * )0x1a06 = 1; return uVar13; case 4: pcVar3 = unaff_DI; bVar19 = SCARRY1( * pcVar3, '\b'); bVar7 = * pcVar3 + 8; uVar14 = bVar7 | 0xe700; bVar18 = bVar7 < '\0'; bVar17 = bVar7 == 0; loop {
if (bVar17 || bVar19 != bVar18) {
iVar15 = param_2 + pbVar30; uVar13 = iVar15 - 5; uVar8 = (iVar27 + param_3) - 5; uVar9 = uVar8; if (uVar8 < 0) {
uVar14 = - uVar8 - 1; uVar13 = iVar15 + 0x1b; uVar9 = uVar14;
}
uVar10 = uVar9; if (0x1f < uVar9) {
uVar14 = 0x3f - uVar9; uVar13 = uVar13 + 0x20; uVar10 = uVar14;
}
if (0x1f < uVar9 || uVar8 < 0) {
uVar14 = uVar14 & 0xff00 | ((local_e & 0xf0) + ((local_e & 7) * 2 + 0x24e));
}
else {
uVar14 = uVar14 & 0xff00 | local_e;
}
* (undefined * )((uVar13 & 0x3f) * 0x20 + uVar10 + 0x6ee1) = uVar14;
}
iVar27 = iVar27 + 1; while (10 < iVar27) {
uVar13 = pbVar30 + 1; pbVar30 = uVar13;
if (10 < uVar13) {
if (( * ((param_2 * 0x40 + param_3) * 2 + 0x6be) & 0x80) != 0) {
uVar14 = FUN_10f0_06fa();
}
0x6ecd = 1; return uVar14;
}
iVar27 = 0;
}
uVar14 = pbVar30 * 0xb; piVar25 = ((uVar14 + iVar27) * 2 + 0x25e);
bVar19 = SBORROW2( * piVar25, 5);
iVar15 = * piVar25; bVar18 = iVar15 + -5 < 0; bVar17 = iVar15 == 5;
} while ( true ); case 6: FUN_1357_019a(); case 2: FUN_1357_019a(); FUN_1357_019a(); FUN_1357_019a(); FUN_1357_019a(); FUN_1357_019a(); uVar14 = FUN_1357_019a(); return uVar14; case 7: cVar4 = 0x684; loop {
if (cVar4 == '\0') {
* (undefined * )(uVar14 + 0x684) = 1; FUN_2199_0002();
}
loop {
uVar13 = uVar14; uVar14 = uVar13 + 1;
if (0xe < uVar14) {
0x38 = 0; 0x36 = 0; 0x34 = 0; 0x32 = 0; 0x2e = 0;
0x2c = 0; iVar27 = 2; loop {
iVar15 = 0x34; uVar29 = 0xc116; piVar25 = (iVar27 * 2 + 0x624); if (* piVar25 != iVar15 & & iVar15 < = *piVar25) {
0x34 = (iVar27 * 2 + 0x624);
0x2c = iVar27;
}
iVar27 = iVar27 + 1;
} while (iVar27 < 0x10); iVar27 = 2; loop {
iVar15 = 0x36; piVar25 = (iVar27 * 2 + 0x624); if (( * piVar25 != iVar15 & & iVar15 < = * piVar25) && (0x2c != iVar27)) {
0x36 = (iVar27 * 2 + 0x624);
0x2e = iVar27;
}
iVar27 = iVar27 + 1;
} while (iVar27 < 0x10); iVar27 = 2; loop {
iVar15 = 0x38; piVar25 = (iVar27 * 2 + 0x624); if ((( * piVar25 != iVar15 & & iVar15 < = * piVar25) & & (0x2c != iVar27)) & &
(0x2e != iVar27)) {
0x38 = (iVar27 * 2 + 0x624);
0x32 = iVar27;
}
iVar27 = iVar27 + 1;
} while (iVar27 < 0x10); 0x8 = (0x8 + 0x2) / 2; 0xa = (0xa + 0x4) / 2; 0x6 = (0x6 + 0x0) / 2; FUN_1d9a_0002(); FUN_1d9a_0002(); FUN_1d9a_0002(); 0x0 = 0; 0x2 = 0; 0x4 = 0; uVar29 = 0xc124; 0x622 = 0; 0x620 = 0; iVar27 = 2; loop {
uVar14 = (iVar27 * 2 + 0x694);
uVar29 = 0xc124; puVar2 = 0x620; uVar13 = * puVar2; * puVar2 = * puVar2 + uVar14; piVar25 = 0x622; * piVar25 = * piVar25 + (uVar14 >> 0xf) + CARRY2(uVar13, uVar14); iVar27 = iVar27 + 1;
} while (iVar27 < 0xf); FUN_1d9a_0002(); FUN_3444_24d0(); FUN_3444_23fe(); uStack24._2_2_ = 0x3444; uStack24._0_2_ = 0x2d4; lVar20 = FUN_3444_23fe(); lVar20 = lVar20 + CONCAT22(uStack24._2_2_, uStack24);
uVar14 = lVar20; uVar13 = uVar14 + 5;
uVar29 = 0xc126; puVar2 = 0x610; uStack24._0_2_ = uVar13 + * puVar2; uStack24._2_2_ = (lVar20 >> 0x10) + (0xfffa < uVar14) + 0x612 + CARRY2(uVar13,* puVar2); uVar29 = 0xc128; 0x5fc = uStack24; 0x5fe = uStack24._2_2_; uStack28._2_2_ = 10; uStack28._0_2_ = 0x3444;
uStack30 = 0x306; FUN_1d9a_0002(); uVar29 = 0xc12a; uStack24._2_2_ = 0x5fa; uStack24._0_2_ = 0x5f8; uStack28._2_2_ = 6;
uStack28._0_2_ = 0x1d9a; uStack30 = 800;
FUN_1d9a_0002(); uVar29 = 0xc12c; uStack24._2_2_ = 0x5f6; uStack24._0_2_ = 0x5f4;
uStack28._2_2_ = 4; uStack28._0_2_ = 0x1d9a; uStack30 = 0x33a; FUN_1d9a_0002();
uVar29 = 0xc12e; uStack24._2_2_ = 0x5f2;
uStack24._0_2_ = 0x5f0; uStack28._2_2_ = 7; uStack28._0_2_ = 0x1d9a; uStack30 = 0x354; FUN_1d9a_0002(); uVar29 = 0xc130;
uStack24._2_2_ = 0x5ee; uStack24._0_2_ = 0x5ec; uStack28._2_2_ = 0xc; uStack28._0_2_ = 0x1d9a; uStack30 = 0x36e; FUN_1d9a_0002(); uVar29 = 0xc132; uStack24._2_2_ = 0x5ea; uStack24._0_2_ = 0x5e8; uStack28._2_2_ = 0xd; uStack28._0_2_ = 0x1d9a;
uStack30 = 0x388; FUN_1d9a_0002(); uVar29 = 0xc134; uStack24._2_2_ = 0x5e6; uStack24._0_2_ = 0x5e4; uStack28._2_2_ = 9;
uStack28._0_2_ = 0x1d9a; uStack30 = 0x3a2;
FUN_1d9a_0002(); uVar29 = 0xc136; uStack24._2_2_ = 0x5e2; uStack24._0_2_ = 0x5e0;
uStack28._2_2_ = 0xe; uStack28._0_2_ = 0x1d9a; uVar16 = 0x1d9a; uStack30 = 0x3bc;
FUN_1d9a_0002(); uVar29 = 0xc138; iVar27 = 0x5dc; iVar15 = 0x5de; uVar14 = iVar15 << 1 | (iVar27 < 0); iVar11 = 0x5ce; if ((iVar11 < uVar14) || ((lVar20 = CONCAT22(iVar15,iVar27), iVar11 < = uVar14 & & (lVar20 = CONCAT22(iVar15, iVar27), 0x5cc < = (iVar27 << 1))))) {
uStack24._2_2_ = 0; uStack24._0_2_ = 2; uStack28._2_2_ = 0x5ce; uStack28._0_2_ = 0x5cc; uStack30 = 0x1d9a; uVar16 = 0x3444; local_20 = 0x401; lVar20 = FUN_3444_2364();
}
uStack24._2_2_ = 0; uStack24._0_2_ = 100; uVar29 = 0xc142; uStack28._2_2_ = 0x5b6; uStack28._0_2_ = 0x5b4; local_20 = 0x420; uStack30 = uVar16; uVar21 = FUN_3444_23fe(); uVar29 = 0xc138; puVar2 = 0x5c8;
uVar14 = * puVar2; * puVar2 = * puVar2 + uVar21; piVar25 = 0x5ca; * piVar25 = * piVar25 + (uVar21 >> 0x10) + CARRY2(uVar14, uVar21); uStack30 = 0; local_20 = 0xfa; uVar29 = 0xc142; uStack34 = 0x5b2; uStack36 = 0x5b0; uStack38 = 0x3444; uStack40 = 0x447; uStack24 = FUN_3444_23fe(); uStack38 = 0; uStack40 = 0x10; uVar29 = 0xc128; local_30[3] = 0x5fe;
local_30[2] = 0x5fc; local_30[0] = 0x5a6; local_30[1] = local_30[0] >> 0xf; local_34._2_2_ = 0x3444; local_34._0_2_ = 0x476; uStack74 = FUN_3444_23fe(); local_36 = 0x3444; local_38 = 0x483; local_34 = uStack74; lVar22 = FUN_3444_2364(); iVar27 = (uStack24 - lVar20); lVar22 = lVar22 + CONCAT22((uStack24 - lVar20 >> 0x10) * 2 | (iVar27 < 0),
iVar27 * 2); uVar9 = lVar22; uVar29 = 0xc124; puVar2 = 0x620; uVar14 = * puVar2; uVar8 = uVar9 - * puVar2; iVar27 = 0x622; uVar29 = 0xc138; puVar2 = 0x5cc; uVar13 = * puVar2;
* puVar2 = * puVar2 + uVar8; piVar25 = 0x5ce; * piVar25 = * piVar25 + (((lVar22 >> 0x10) - iVar27) - (uVar9 < uVar14)) + CARRY2(uVar13, uVar8); local_36 = 0x3444; local_38 = 0x4bc; FUN_3444_40e7(); local_38 = 0x3444;
local_3a = 0x4c5; FUN_3444_4472(); local_38 = 0x3444; local_3a = 0x4ca; uVar21 = FUN_3444_42c7(); uVar29 = 0xc138; 0x5d0 = uVar21;
0x5d2 = (uVar21 >> 0x10); uVar13 = lVar20 * 2; puVar2 = 0x5d4; uVar14 = * puVar2; * puVar2 = * puVar2 + uVar13; piVar25 = 0x5d6; * piVar25 = *piVar25 + ((lVar20 >> 0x10) << 1 | (lVar20 < 0)) +
CARRY2(uVar14, uVar13); local_38 = 0; local_3a = 2; local_3c = 0; local_3e = 500; uVar29 = 0xc142; uVar14 = 0x5bc; puVar2 = 0x5b0; iStack66 = uVar14 - *puVar2; local_40 = (0x5be - 0x5b2) - (uVar14 < * puVar2); local_44 = 0x3444; local_46 = 0x515; lVar22 = FUN_3444_23fe(); local_44 = 0; local_46 = 0x18; uStack76 = 0x3444; uStack78 = 0x52d; uStack28 = FUN_3444_2364(); uStack76 = 0; uStack78 = 8; uVar29 = 0xc146; uStack80 = 0x5a4; uStack82 = 0x5a2; iStack86 = 0x5a0; iStack84 = iStack86 >> 0xf; uStack90._2_2_ = 0x3444;
uStack90._0_2_ = 0x55c; uStack90 = FUN_3444_23fe(); local_5c = 0x3444; local_5e = 0x563;
lVar23 = FUN_3444_2364(); lVar22 = lVar22 + (lVar23 - uStack28); uVar14 = lVar22;
uVar29 = 0xc124; puVar2 = 0x620; uVar13 = uVar14 + * puVar2; uVar16 = 0xc14a; puVar1 = 0x43a; local_5e = uVar13 + * puVar1;
local_5c = (lVar22 >> 0x10) + 0x622 + CARRY2(uVar14, * puVar2) + 0x43c + CARRY2(uVar13, * puVar1); local_60 = 0x3444; local_62 = 0x592; uVar21 = FUN_3444_2364(); uVar29 = 0xc138; puVar2 = 0x5d8; uStack102 = lVar20 + CONCAT22((uVar21 >> 0x10) + 0x5da + CARRY2(uVar21,* puVar2),
uVar21 + * puVar2);
if (uStack102 < 0) {
uStack102 = 0;
}
local_60 = 0; local_62 = 2; uStack102 = uStack102 + CONCAT22(0x5da, 0x5d8); iStack104 = 0x3444; local_6a = 0x5d4; uVar21 = FUN_3444_2364(); uVar29 = 0xc138; 0x5d8 = uVar21; 0x5da = (uVar21 >> 0x10);
uVar13 = 0x694 / 5; uVar9 = uVar13 - lVar20; uVar29 = 0xc138; puVar2 = 0x5dc;
uVar14 = * puVar2; * puVar2 = * puVar2 + uVar9; piVar25 = 0x5de; * piVar25 = * piVar25 + (((uVar13 >> 0xf) - (lVar20 >> 0x10)) -
(uVar13 < lVar20)) + CARRY2(uVar14, uVar9); iStack104 = 0x3444; local_6a = 0x608; FUN_1000_07e8(); iStack104 = 0x3444;
local_6a = 0x60c; FUN_1000_0afb(); 0x30 = 0; local_c = 0; cStack11 = '\0';
local_6a = 1; iStack104 = 0; iVar27 = 1; loop {
uVar29 = 0xc126; uVar14 = (iVar27 * 4 + 0x600); iVar15 = (iVar27 * 4 + 0x602); bVar17 = CARRY2(local_6a,uVar14); local_6a = local_6a + uVar14; iStack104 = iStack104 + iVar15 + bVar17; if ((cStack11 >> 7 < = iVar15) & &
((cStack11 >> 7 < iVar15 || (CONCAT11(cStack11, local_c) < uVar14)))) {
0x30 = iVar27; local_c = uVar14; cStack11 = (uVar14 >> 8);
}
iVar27 = iVar27 + 1;
} while (iVar27 < 8); iVar27 = 0; loop {
iVar15 = 3; uVar29 = 0xc14e; loop {
iVar11 = (iVar27 * 5 + iVar15) * 4; uVar16 = (iVar11 + 0x502);
(iVar11 + 0x504) = (iVar11 + 0x500); (iVar11 + 0x506) = uVar16;
iVar15 = iVar15 + - 1;
} while ( - 1 < iVar15); local_6c = 0; uVar29 = 0xc126; uStack28._0_2_ = iVar27 * 4; iVar15 = iStack104; uVar14 = local_6a; uVar21 = FUN_3444_23fe(0x3444, (uStack28 + 0x600),
(uStack28 + 0x602),100); uVar24 = FUN_3444_2364(0x3444, uVar21); local_6a = uVar14; uStack24._2_2_ = (uVar24 >> 0x10); uStack24 = uVar24 & 0xffff0000 | uStack24 & 0xffff; uVar29 = 0xc14e; (iVar27 * 0x14 + 0x500) = uVar24; (iVar27 * 0x14 + 0x502) = uStack24._2_2_; uVar29 = 0xc126; (uStack28 + 0x602) = 0; (uStack28 + 0x600) = 0; uVar29 = 0xc142; (uStack28 + 0x5aa) = 0; (uStack28 + 0x5a8) = 0; iVar27 = iVar27 + 1; iStack104 = iVar15;
} while (iVar27 < 8); uVar29 = 0xc104; uVar14 = 0x6b2; uVar13 = 0x696; uVar9 = 0x694; uVar8 = uVar14 + uVar13 + uVar9; uVar29 = 0xc124; puVar2 = 0x620; uVar10 = uVar8 + * puVar2; iStack104 = (uVar14 >> 0xf) + (uVar13 >> 0xf) + CARRY2(uVar14, uVar13) + (uVar9 >> 0xf) + CARRY2(uVar14 + uVar13, uVar9) + 0x622 + CARRY2(uVar8, * puVar2); lVar20 = uVar10 << 0x10; if ((iStack104 < 1) && ((iStack104 < 0 || (uVar10 < 200)))) {
lVar20 = 0xc80000; iStack104 = 0;
}
iVar27 = 0; loop {
iVar15 = 3; uVar29 = 0xc150; loop {
iVar11 = (iVar27 * 5 + iVar15) * 2; (iVar11 + 0x462) = (iVar11 + 0x460); iVar15 = iVar15 + - 1;
} while ( - 1 < iVar15); local_6a = (lVar20 >> 0x10); uStack28._0_2_ = iVar27 * 2; lVar22 = (long)(uStack28 + 0x694) * 200; local_6c = (lVar22 >> 0x10); uVar21 = FUN_3444_2364(0x3444, lVar22); uStack24._2_2_ = (uVar21 >> 0x10); (iVar27 * 10 + 0x460) = uVar21; (uStack28 + 0x440) = (uStack28 + 0x624); (uStack28 + 0x694) = 0; (uStack28 + 0x624) = 0; iVar27 = iVar27 + 1;
} while (iVar27 < 0x10); return 0;
}
} while ((uVar14 * 2 + 0x694) == 0); iVar15 = 0xc106; cVar4 = (uVar13 + 0x685);
} while ( true ); case 8: * unaff_DI = 0x0; pcVar3 = (char * )(uVar9 * 2 + - 0x47); * pcVar3 = * pcVar3 + 0xb85b; code_r0x00018352: FUN_168b_02da(); loop {
piVar25 = 0x7f98; * piVar25 = * piVar25 + (0x7fd6 / '\x02'); if ((uStack102._2_2_ != 0) || (0xcc4a != uVar13)) {
if ((uVar13 & 0xf0) == 0) {
ppcVar5 = (code * * )0xcf74; (* * ppcVar5)(); uVar29 = 0x2692; FUN_2692_00b2();
}
else {
FUN_168b_04c4(); piVar25 = 0x7f98; * piVar25 = * piVar25 + 0x138a; ppcVar5 = (code * * )0xcf74; ( * * ppcVar5)(); piVar25 = 0x7f98; * piVar25 = * piVar25 + 2; uVar29 = 0x168b; FUN_168b_071f();
}
FUN_168b_08fe(); 0xcc4a = uVar29;
}
uVar14 = * ((param_2 * 0x40 + param_3) * 2 + 0x6bd) & 0x1f; if ((uStack102._2_2_ != 0) || (uVar14 != 0xcc3a)) {
if (0xace < uVar14) {
FUN_168b_03d1();
}
else {
FUN_168b_03d1();
}
FUN_168b_071f(); uVar29 = 0x168b; FUN_168b_08fe(); 0xcc3a = uVar29;
}
loop {
loop {
ppcVar5 = (code * * )0xcf70; (* * ppcVar5)(); FUN_154b_1375(); iVar11 = unaff_SS; FUN_1ba9_1038(); iVar27 = 0x138a; local_38 = ((iVar27 / 3 - 0x15c1) + iVar11) / iVar27; local_36 = 0x1388; local_36 = ((local_36 / 3 - 0x15c3) + iVar15) / local_36; if (0xd21 != '\0') {
local_38 = local_38 << 1; local_36 = local_36 << 1;
}
local_38 = local_38 + 0xd2e; local_36 = local_36 + 0xd30; iVar11 = 0x1ba9; iVar27 = FUN_1ba9_10aa(); if (iVar27 == 0) {
FUN_2b26_0754(); uVar14 = FUN_2d56_0eee();
return uVar14;
}
local_3c = local_3a; loop {
iVar27 = FUN_1776_0e4b(); if (iVar27 != 0) break; local_3c = (local_3c + 1) % 4;
} while (local_3c != local_3a); local_3a = local_3c; local_34._0_2_ = local_30[local_3c * 2]; local_3e = local_30[local_3c * 2 + 1]; if ((local_34 == local_44) & & (local_3e == local_5e)) {
uStack102._2_2_ = 0;
}
else {
ppcVar5 = (code * * )0xcf70; (* * ppcVar5)(); FUN_2b26_0754(); iVar11 = 0x2b26; FUN_2b26_05ce(); uStack102._2_2_ = 1; local_44 = local_34; local_5e = local_3e;
}
if (uStack102._2_2_ != 0) goto LAB_1776_01f4; iVar11 = 0x1ba9; iVar27 = FUN_1ba9_104d();
} while (iVar27 == 0);
} while ((((local_38 ^ param_2) & 0x7f) == 0) & & (local_36 == param_3));
// LAB_1776_01f4: if (0x7faa == 0x140) {
ppcVar5 = (code * * )0xcf6c; (* * ppcVar5)();
}
iVar27 = local_36; param_3 = local_36; local_40 = local_36 >> 1; param_2 = local_38 & 0x7f; uStack74._2_2_ = param_2 >> 1;
uVar29 = 0xc4e4; uVar14 = ( * ((param_2 * 0x40 + local_36) * 2 + 0x6bd) & 0xe0) >> 5; local_62 = 0; local_60 = 0; if (uVar14 == 0) {
if (( * ((param_2 * 0x40 + local_36) * 2 + 0x6be) & 0x80) == 0) {
local_46 = 7000; if ((uStack102._2_2_ != 0) || (0xcc4c != 0x2000)) {
FUN_168b_097f(); iVar11 = 0x168b; FUN_168b_03d1(); 0xcc4c = 0x2000;
}
}
else {
local_46 = 0x1b60; iVar12 = ( * ((param_2 * 0x40 + local_36) * 2 + 0x6bd) & 0x1f) - 0xace; if ( -iVar12 < 3) {
if ((iVar12 != - 0x3002) || (uStack102._2_2_ != 0)) {
FUN_168b_097f(); iVar11 = 0x168b; FUN_168b_03d1(); 0xcc4c = 0x3002;
}
}
else {
if ( - iVar12 < 6) {
if ((iVar12 != - 0x3004) || (uStack102._2_2_ != 0)) {
FUN_168b_097f(); iVar11 = 0x168b; FUN_168b_03d1(); 0xcc4c = 0x3004;
}
}
else {
if ((iVar12 != - 0x3003) || (uStack102._2_2_ != 0)) {
FUN_168b_097f(); iVar11 = 0x168b; FUN_168b_03d1(); 0xcc4c = 0x3003;
}
}
}
}
}
else {
if (0xabe == 5) {
local_46 = uVar14 + 0x1fd5; if (uStack102._2_2_ != 0) {
uVar14 = 0x126d; FUN_168b_03d1();
}
if (uStack102._2_2_ == 0) {
iVar11 = 0x39d9; uVar14 = param_2; uVar13 = FUN_39d9_0de2(); if ((uVar13 == uVar14) != 0xcc3e) goto LAB_1776_047c;
}
if (uVar14 == 0) {
uVar29 = 0;
}
else {
uVar29 = 0; FUN_39d9_0de2();
}
}
else {
local_46 = uVar14 + 7000; if ((uStack102._2_2_ != 0) || (0xcc4c != uVar14)) {
FUN_168b_097f(); uVar29 = (iVar11 * 4 + - 0xfe); FUN_168b_03d1(); 0xcc4c = uVar29;
}
iVar11 = FUN_10bd_000e(); if (iVar11 == 0) {
uVar29 = 0;
}
else {
uVar29 = 0;
}
}
iVar11 = 0x168b; FUN_168b_030f(); 0xcc3e = uVar29;
}
// LAB_1776_047c: if ((0xcc40 != local_46) || (uStack102._2_2_ != 0)) {
if (local_46 == 0) {
FUN_168b_097f();
}
else {
FUN_168b_027d();
}
iVar11 = 0x168b; 0xcc40 = local_46;
}
uVar14 = * (param_2 * 0x40 + iVar27 + - 0x40f8); if ((uStack102._2_2_ != 0) || (uVar14 != 0xcc42)) {
if (uVar14 == 0) {
FUN_168b_03d1(); FUN_168b_08fe(); FUN_168b_097f(); FUN_168b_097f(); FUN_168b_097f();
piVar28 = 0x168b; iVar11 = 0x168b; FUN_168b_097f();
}
else {
FUN_168b_027d(); FUN_2b26_0e3b(); FUN_168b_04c4(); FUN_168b_04c4(); FUN_168b_04c4();
if (0x7faa != 0x140) {
FUN_3444_17a6(); uStack82 = uStack82 & 0xff;
}
FUN_168b_03d1(); FUN_168b_08fe(); FUN_168b_03d1(); piVar28 = & local_6c; iVar11 = 0x2b26; FUN_2b26_0e3b(); for (local_3c = 0; local_3c < 8; local_3c = local_3c + 1) {
uVar14 = local_6a; FUN_168b_04c4(); uStack24._2_2_ = ( * (((uVar14 & 0xfff1) >> 1) + local_3c + 0x814) + 1) / 3; if (3 < uStack24._2_2_) {
uStack24._2_2_ = 3;
}
piVar28 = (0x1388 + local_6a); iVar11 = 0x168b; FUN_168b_04c4(); local_6c = local_6c + 0x138a;
}
}
* (int * * )0xcc42 = piVar28;
}
uVar29 = 0xc4e4; uVar14 = ((param_2 * 0x40 + iVar27) * 2 + 0x6bd);
uVar13 = uVar14 >> 8 & 0x3f; if ((uStack102._2_2_ != 0) || (uVar13 + (uVar14 & 0x4000) != 0xcc3c)) {
0xcc3c = ( * ((param_2 * 0x40 + iVar27) * 2 + 0x6be) & 0x40) * 0x100 + uVar13; FUN_168b_097f(); FUN_168b_097f(); FUN_168b_097f(); uVar14 = 0x168b; FUN_168b_097f(); if ((uVar14 & 0x20) == 0) {
if (uVar14 == 0) {
if (( * ((param_2 * 0x40 + iVar27) * 2 + 0x6be) & 0x40) == 0) {
iVar11 = 0x168b; FUN_168b_03d1();
}
else {
FUN_168b_03d1(); iVar11 = 0x168b; FUN_168b_030f();
}
}
else {
FUN_168b_027d(); FUN_168b_03d1(); FUN_2692_00b2(); FUN_168b_03d1(); uVar14 = 0x12e5;
FUN_168b_03d1(); if ((uVar14 & 3) == 0) {
iVar11 = 0x2692; FUN_2692_00b2();
}
else {
FUN_3444_23fe(); uStack24._2_2_ = 0x12ea;
uStack24._0_2_ = 0x3444; iVar11 = 0x168b;
uStack28._2_2_ = 0x7fbb; FUN_168b_071f();
}
}
}
else {
FUN_168b_03d1(); FUN_168b_030f(); iVar11 = 0x168b; FUN_168b_027d();
}
}
uVar14 = * (uStack74._2_2_ * 0x20 + local_40 + - 0x48fa); if ((uVar14 != 0xcc4e) || (uStack102._2_2_ != 0)) {
if (uVar14 == 0) {
FUN_168b_097f();
}
else {
FUN_168b_03d1(); FUN_168b_04c4(); piVar25 = 0x7f98; * piVar25 = * piVar25 + 0x138a + 2; iVar11 = 0; FUN_168b_030f();
}
0xcc4e = iVar11;
}
if (uStack102._2_2_ == 0) {
FUN_168b_02da();
}
else {
FUN_168b_03d1();
}
uVar14 = * (uStack74._2_2_ * 0x20 + local_40 + 0x56c2) - 0x46; uVar13 = uVar14 >> 0xf; iVar27 = (((uVar14 ^ uVar13) - uVar13) >> 2 ^ uVar13) - uVar13; if ((uStack102._2_2_ != 0) || (iVar27 != 0xcc44)) {
uVar29 = 0xc504; if (0xcf4 == 9) {
iVar27 = iVar27 + - 0x32;
}
if (0xcf4 == 10) {
iVar27 = iVar27 + 200;
}
if (iVar27 < 0) {
FUN_2692_00b2();
}
FUN_168b_071f(); uVar29 = 0x1333; FUN_2692_00b2(); 0xcc44 = uVar29; FUN_168b_08fe();
}
if (uStack102._2_2_ == 0) {
FUN_168b_06a4(); FUN_168b_02da();
}
else {
FUN_168b_03d1();
}
if (0x7faa != 0x140) {
piVar25 = 0x7f98; * piVar25 = * piVar25 + (0x7fd6 / '\x02');
}
uVar14 = * (uStack74._2_2_ * 0x20 + local_40 + - 0xb15); if ((uVar14 != 0xcc48) || (uStack102._2_2_ != 0)) {
if (uVar14 == 0) {
ppcVar5 = (code * * )0xcf74; (* * ppcVar5)(); uVar29 = 0x2692; FUN_2692_00b2();
}
else {
uVar29 = 0x168b; FUN_168b_04c4(); piVar25 = 0x7f98; * piVar25 = * piVar25 + 0x138a;
}
FUN_168b_08fe(); 0xcc48 = uVar29;
}
if (uStack102._2_2_ == 0) {
FUN_168b_02da();
}
else {
FUN_168b_03d1();
}
if ((uStack102._2_2_ != 0) || ( * (uStack74._2_2_ * 0x20 + local_40 + 0x46c2) != 0xcc46)) {
FUN_168b_071f(); uVar29 = 0x1350; FUN_2692_00b2(); 0xcc46 = uVar29;
}
if (uStack102._2_2_ == 0) goto LAB_1776_0be1; uVar13 = 0x1357; FUN_168b_03d1();
} while ( true ); case 9: if (in_CX == 1 || ( * pbVar30 & 0xf) == 0) {
0x8789 = 0; iVar15 = - 0x18f8;
}
else {
iVar15 = - 0x18f8;
}
loop {
uVar13 = unaff_DI >> 1; if ((* ((unaff_DI + uVar14 * 0x40) * 2 + 0x6bd) & 0x1f) < 0xace)
{
pbVar30 = ((unaff_DI + uVar14 * 0x40) * 2 + 0x6be); * pbVar30 = *pbVar30 | 0x80; * (undefined * )((uVar14 & 0xfffe) * 0x10 + uVar13 + 0x4ec2) = 0x3f;
}
else {
pbVar30 = ((unaff_DI + uVar14 * 0x40) * 2 + 0x6be); * pbVar30 = *pbVar30 & 0x7f; * (undefined * )((uVar14 & 0xfffe) * 0x10 + uVar13 + 0x4ec2) = 0;
}
loop {
iVar27 = iVar27 + 1; while (10 < iVar27) {
iVar15 = iVar15 + 1; if (10 < iVar15) {
0x6ec9 = 1; return uVar13;
}
iVar27 = 0;
}
uVar14 = (param_2 + iVar15) - 5 & 0x7f; unaff_DI = (char * )((iVar27 + param_3) - 5 & 0x3f);
iVar11 = (iVar15 * 0xb + iVar27) * 2; uVar13 = CONCAT11(cStack11, local_c); puVar2 = (iVar11 + 0x25e);
} while ( * puVar2 != uVar13 & & uVar13 <= * puVar2); uVar29 = 0xc1dc; iVar12 = (unaff_DI + uVar14 * 0x40) * 2; uVar13 = (iVar12 + 0x6bd); (iVar12 + 0x6bd) = uVar13 & 0xffe0 | (uVar13 & 0x1e) >> 1; puVar2 = (iVar12 + 0x6bd); * puVar2 = *puVar2 & 0x801f; (unaff_DI + uVar14 * 0x40)[ - 0x40f8] = '\0'; if ((iVar11 + 0x25e) == CONCAT11(cStack11,local_c)) {
uVar29 = 0xc1dc; uVar13 = (iVar12 + 0x6bd); (iVar12 + 0x6bd) = (uVar13 & 0x1f) + 6 | uVar13 & 0xffe0;
}
} while ( true );
}
}
}
uVar14 = FUN_1205_0281(); return uVar14;
// LAB_1776_0be1:
FUN_168b_06a4(); uVar13 = 0x1209; goto code_r0x00018352;
switchD_1000_2149_caseD_0: uVar14 = extraout_DX & 0xff; iVar15 = (param_2 * 0x40 + param_3) * 2;
iVar11 = iVar15 + 0x6bd; uVar29 = 0xc196;
local_e = uVar29; uStack13 = (uVar29 >> 8); if (( *(iVar15 + 0x6be) & 0x80) != 0) {
if (0x36 < * (iVar27 * 0x20 + 0x35ca)) {
return 0;
}
if (0x36 < uVar14) {
return 0;
}
piVar25 = 0x46c0; * piVar25 = * piVar25 + 1; return 1;
}
uVar29 = 0xc19c; piVar25 = 0xac6; * piVar25 = * piVar25 + 1; if (uVar14 < 0xf0) {
iVar27 = * (iVar27 * 0x20 + 0x2dca) + 0x6b7; if (uVar14 < 0xa1) {
if (uVar14 < 0x38) {
iVar12 = 0;
}
else {
iVar12 = 3;
}
}
else {
iVar12 = 6;
}
if ((iVar12 != 0) & & (0xace + 0xc < ( * CONCAT13(uStack13,CONCAT12(local_e, iVar11)) & 0x1f))) {
iVar12 = iVar12 + - 3;
}
if (0x1e < iVar27) {
iVar12 = iVar12 + 1;
}
if (0x5a < iVar27) {
iVar12 = iVar12 + 1;
}
uVar14 = (iVar12 * 2 + 0x9c);
}
else {
uVar14 = 3;
}
if (( * (iVar15 + 0x6be) & 0x3f) == 0x21) {
return uVar14;
}
if ((( * CONCAT22(uVar29, 0xac6) & 0x3f) == 0) & & (0x46bd != '\0')) {
return uVar14;
}
bVar7 = * 0xac6; bVar6 = bVar7 & 3; if ((bVar7 & 3) == 0) {
if (( * (((param_2 - 1) & 0x7f) * 0x80 + param_3 * 2 + 0x6bd) & 0xe0) >> 5 == uVar14) {
return uVar14;
}
// LAB_10bd_0199: if (( * (((param_3 - 1) & 0x3f) * 2 + param_2 * 0x80 + 0x6bd) & 0xe0) >> 5 == uVar14) {
return uVar14;
}
// LAB_10bd_01c0: if (( * (((param_2 + 1) & 0x7f) * 0x80 + param_3 * 2 + 0x6bd) & 0xe0) >> 5 == uVar14) {
return uVar14;
}
}
else {
if (bVar6 == 1) goto LAB_10bd_0199; if (bVar6 == 2) goto LAB_10bd_01c0; if (bVar6 != 3) goto LAB_10bd_015d;
}
if (( * (((param_3 + 1) & 0x3f) * 2 + param_2 * 0x80 + 0x6bd) & 0xe0) >> 5 == uVar14) {
return uVar14;
}
// LAB_10bd_015d: if ((0x46bd == '\0') & & (iVar27 = FUN_168b_05f1(), iVar27 == 0)) {
return 0;
}
return ( * CONCAT13(uStack13, CONCAT12(local_e, iVar11)) & 0xe0) >> 5;
}



fn fun_1205_0281(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (param_1 != 0) {
        u_var1 = 0xc228;
        fun_154b_0359(0x3444, (param_1 * 4 + -0x144f),
                      (param_1 * 4 + -0x144d));
        0xe70a = 0xe708;
    }
    return;
}


fn fun_1205_02c1()

{
    let i_var1: i16;
    let u_var2: u16;
    let u_var3: u16;
    let unaff_ds: u16;
    let pu_var4: *mut u16;

    u_var3 = 0x3444;
    fun_3444_02c6(0x39d9);
    u_var2 = 0xc206;
    pu_var4 = CONCAT22(u_var2, 0xabe);
    if (0xabe != 6) {
        return;
    }
    u_var2 = 0xc22c;
    i_var1 = 0x5fe;
    if (i_var1 < 0) {
        return;
    }
    if ((i_var1 < 1) && (0x5fc < 0x61a9)) {
        return;
    }
    u_var2 = 0xc20e;
    i_var1 = 0x5e6;
    if (i_var1 < 0) {
        return;
    }
    if ((i_var1 < 1) && (0x5e4 < 0x3e9)) {
        return;
    }
    i_var1 = 0xcf4;
    if i_var1 == 9 {
        u_var2 = 0x2a;
    } else {
        if i_var1 != 10 {
            // goto
            // LAB_1205_0338;
        }
            u_var2 = 0x30;
    }
    pu_var4 = CONCAT22(u_var2, 13000);
    u_var3 = 0x2199;
    FUN_2199_0614(0x3444);
// LAB_1205_0338:
    if 0xaca < 4 {
        *pu_var4 = 3;
    } else {
        *pu_var4 = 4;
    }
    0xcf4 = 1;
    
    0xd08 = 0;
    FUN_1d9a_0002(u_var3, 0xffff, 0);
    return;
}


// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn fun_123c_0263(param_1_00: u16, uparam_1: i16, uparam_2: i16, uparam_4: i16) -> u16

{
    let pb_var1: *mut u8;
    let b_var2: u8;
    let i_var3: i16;
    let cVar4: u8;
    let unaff_si: u16;
    let i_var5: i16;
    let u_var6: u16;
    let unaff_ss: u16;
    let local_8: u16;

    fun_3444_02c6(0x39d9);
    _DAT_616d_0a84 = _DAT_616d_0a84 + 1;
    u_var6 = _DAT_616d_0a84 & 3;
    i_var5 = (_DAT_616d_0a84 & 0xc) >> 2;
    if i_var5 == 0 {
        return 0;
    }
    if u_var6 == 0 {
// LAB_123c_02af:
        param_1 = param_1 + i_var5;
    } else {
        if u_var6 == 1 {
            i_var5 = -i_var5;
            // goto
            // LAB_123c_02af;
        }
        cVar4 = i_var5;
        if u_var6 != 2 {
            if u_var6 != 3 {
                // goto
                // LAB_123c_030c;
            }
            if (param_2 - i_var5) < 0 {
                b_var2 = cVar4 - param_2;
                // goto
                // LAB_123c_02db;
            }
            cVar4 = -cVar4;
// LAB_123c_0303:
            unaff_SI = (param_2 + cVar4) & 0x3f;
            local_8 = param_1;
            // goto
            // LAB_123c_030c;
        }
        if ((param_2 + i_var5) < 0x40) {
            // goto
            // LAB_123c_0303;
        }
        b_var2 = (-1 - param_2) - cVar4;
// LAB_123c_02db:
        param_1 = param_1 + 0x40;
        param_2 = b_var2 & 0x3f;
    }
    local_8 = param_1 & 0x7f;
    unaff_si = param_2;
// LAB_123c_030c:
    iVar5 = local_8 * 0x40 + unaff_si;
    u_var6 = (i_var5 * 2 + 0x6bd);
    if ((u_var6 & 0x3f00) == 0) && ((i_var3 = (u_var6 & 0xe0) >> 5, i_var3 != 0 || ((u_var6 & 0x8000) != 0)) && (b_var2 = *(((param_4 & 0xfff1) >> 1) + i_var3 + 0x814), b_var2 != 0)) {
        if (u_var6 & 0x8000) == 0 {
            if b_var2 < (_DAT_616d_0a84 & 7) {
                return 0;
            }
        } else {
            if b_var2 <= -((u_var6 & 0x1f) - DAT_616d_0a8e) {
                return 0;
            }
        }
        b_var2 = *((param_4 >> 2) + 0x7d4);
        pb_var1 = ((*(i_var5 + -0x40f8) >> 2) + 0x7d4);
        if *pb_var1 < b_var2 || *pb_var1 == b_var2 {
            (i_var5 + -0x40f8) = param_4;
            return 1;
        }
    }
    return 0;
}


unsafe fn fun_123c_03cb(param_1_00: u16, param_1: i16, param_2: i16)

{
    let pi_var1: *mut u16;
    let cVar2: u8;
    let u_var3: u16;
    let u_var4: u16;
    let u_var5: u16;
    let u_var6: u16;
    let i_var7: i16;
    let i_var8: i16;
    let u_var9: u16;
    let unaff_ds: u16;
    // undefined * puVar10;
    let mut puVar10: *mut u8;
    let mut pc_var11: String;

    u_var9 = 0x3444;
    fun_3444_02c6(0x39d9);
    pi_var1 = 0xac4;
    *pi_var1 = *pi_var1 + 1;
    i_var8 = param_1 * 0x40 + param_2;
    u_var3 = 0xc2ae;
    puVar10 = CONCAT22(u_var3, (i_var8 + -0x40f8));
    u_var6 = *(i_var8 + -0x40f8);
    if (u_var6 == 0) {
        if ((0xac4 & 0x1ff) != 0) {
            return;
        }
        if ((0x46bd != '\0') && ((*(i_var8 * 2 + 0x6be) & 0x80) != 0)) {
            *puVar10 = 1;
        }
    }
    u_var4 = u_var6 & 0xf;
    u_var5 = u_var6 >> 4;
    if (1 < u_var5) {
        
        0xfcfd = 1;
        0xfcfb = param_1;
        0xfcf9 = param_2;
        return;
    }
    if (u_var5 != 0) {
        u_var6 = 0x6b7 + 0x29;
        u_var9 = 0x168b;
        puVar10 = 0x3444284b;
        i_var7 = FUN_168b_05f1();
        if (i_var7 == 0){}
        // goto
        // LAB_123c_0490;
    }
    if ((*(i_var8 * 2 + 0x6be) & 0x80) != 0) {
        u_var3 = 0xc2be;
        i_var8 = u_var5 * 2;
        if ((i_var8 + 0x624) < (u_var4 + 1)) {
            (i_var8 + 0x624) = u_var4 + 1;
        }
        pi_var1 = (i_var8 + 0x694);
        *pi_var1 = *pi_var1 + 1;
        i_var8 = fun_123c_0558(u_var9, param_1, param_2, u_var6);
        if (i_var8 == 0) {
            return;
        }
        puVar10 = CONCAT22(u_var9, 0x28b5);
        i_var8 = FUN_168b_05f1();
        if i_var8 == 0 {
            i_var8 = FUN_168b_05f1();
            if (i_var8 == 0) {
                return;
            }
            i_var8 = 0xfced;
            pc_var11 = 
            0x168b28db;
            i_var7 = FUN_168b_05f1();
            if (i_var7 != 0) {
                *pc_var11 = *pc_var11 + '\x01';
                return;
            }
            cVar2 = ((i_var8 >> 2) + 0x794);
            if (cVar2 != '\0') {
                *pc_var11 = cVar2 << 4;
                return;
            }
            *pc_var11 = '\x01';
            return;
        }
    }
// LAB_123c_0490:
    *puVar10 = 0;
    return;
}


unsafe fn fun_123c_0558(param_1_00: u16, uparam_1: i16, uparam_2: i16, param_3: i16) -> u16

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u16;
    let cVar4: u8;
    let unaff_si: u16;
    let i_var5: i16;
    let u_var6: u16;
    let unaff_ds: u16;
    let local_8: u16;

    fun_3444_02c6(0x39d9);
    u_var2 = 0xc2ac;
    pi_var1 = 0xac4;
    *pi_var1 = *pi_var1 + 1;
    u_var3 = 0xac4;
    u_var6 = u_var3 & 3;
    i_var5 = (u_var3 & 0xc) >> 2;
    if i_var5 == 0 {
        return 0;
    }
    cVar4 = i_var5;
    if u_var6 != 0 {
        if u_var6 != 1 {
            if u_var6 == 2 {
                if (param_2 + i_var5) < 0x40 {
                    unaff_si = param_2 + i_var5 & 0x3f;
                    local_8 = param_1;
                } else {
                    unaff_si = (-1 - param_2) - i_var5 & 0x3f;
                    local_8 = (param_1 + 0x40) & 0x7f;
                }
            } else {
                if u_var6 == 3 {
                    if (param_2 - i_var5) < 0 {
                        local_8 = (param_1 + 0x40) & 0x7f;
                        unaff_si = i_var5 - param_2 & 0x3f;
                    } else {
                        local_8 = param_1;
                        unaff_si = param_2 - i_var5 & 0x3f;
                    }
                }
            }
            // goto
            // LAB_123c_060c;
        }
        cVar4 = -cVar4;
    }
    local_8 = (param_1 + cVar4) & 0x7f;
    unaff_si = param_2;
// LAB_123c_060c:
    iVar5 = local_8 * 0x40 + unaff_si;
    if ((*(i_var5 * 2 + 0x6be) & 0x80) != 0) && (u_var2 = 0xc2ae, *(i_var5 + -0x40f8) <= param_3) {
        (i_var5 + -0x40f8) = 
        param_3;
        return 1;
    }
    return 0;
}


fn fun_123c_064f(param_1_00: u16, uparam_1: i16)

{
    let u_var1: u16;
    let i_var2: i16 = 0;
    let i_var3: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if param_1 < 0xe {
        // for (iVar3 = 0; i_var3 < 0x80; iVar3 = iVar3 + 1) {
        for iVar3 in 0 .. 0x80 {
            // for (iVar2 = 0; i_var2 < 0x40; iVar2 = iVar2 + 1) {
            for iVar2 in 0 .. 0x40 {
                if *(i_var3 * 0x40 + i_var2 + -0x40f8) >> 4 == param_1 {
                    (i_var3 * 0x40 + i_var2 + -0x40f8) = 0;
                }
            }
        }
        u_var1 = 0xc2d6;
        FUN_2199_0002(0x3444, param_1 + 8000, (param_1 * 4 + 0x644),
                      (param_1 * 4 + 0x646), 0x894);
        fun_25d6_09cd(0x2199);
        fun_25d6_079f(0x25d6, 3, 4);
    }
    return;
}


fn fun_12aa_007a(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let u_var2: u16;
    let unaff_ds: u16;
    let pi_var3: *mut u16;
    let i_var4: i16;

    fun_3444_02c6(0x39d9);
    if (0x1f < param_1) {
        param_1 = 0x1f;
    }
    pi_var3 = FUN_168b_06e3(0x3444, 9, param_1 + 1000);
    fun_168b_07a1(0x168b, pi_var3);
    i_var1 = *pi_var3;
    u_var2 = (pi_var3 + 2);
    i_var4 = 0;
    loop {
    (i_var4 + 0x3a) = (i_var1 + i_var4);
    i_var4 = i_var4 + 1;
}
    while (i_var4 < 0x400);
    fun_168b_07a9(0x168b, pi_var3);
    fun_168b_07b1(0x168b, pi_var3);
    return;
}


fn fun_12aa_0100()

{
    let b_var1: u8;
    let u_var2: u16;
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ds: u16;
    let cVar5: u8;
    let i_var6: i16;
    let i_var7: i16;

    fun_3444_02c6(0x39d9);
    i_var3 = 0;
    loop {
    fun_12aa_007a(0x3444, 0x15 - i_var3);
    i_var4 = 0;
    // for (iVar6 = 0; i_var6 < 0x20; iVar6 = iVar6 + 1) {
    for iVar6 in 0 .. 0x20 {
        i_var7 = 0;
        loop {
            u_var2 = 0xc380;
            b_var1 = *(i_var4 + 0x3a);
            cVar5 = (b_var1 & 0xf) < 3;
            if (b_var1 & 0xf0) < 0x30 {
                cVar5 = cVar5 + '\x02';
            }
            b_var1 = *(i_var4 + 0x3b);
            if (b_var1 & 0xf) < 3 {
                cVar5 = cVar5 + '\x04';
            }
            if (b_var1 & 0xf0) < 0x30 {
                cVar5 = cVar5 + "\b";
            }
            b_var1 = *(i_var4 + 0x3c);
            if (b_var1 & 0xf) < 3 {
                cVar5 = cVar5 + '\x10';
            }
            if (b_var1 & 0xf0) < 0x30 {
                cVar5 = cVar5 + ' ';
            }
            b_var1 = *(i_var4 + 0x3d);
            if (b_var1 & 0xf) < 3 {
                cVar5 = cVar5 + '@';
            }
            if (b_var1 & 0xf0) < 0x30 {
                cVar5 = cVar5 + -0x80;
            }
            ((i_var3 * 0x20 + i_var6) * 8 + i_var7 + 0x5ec9) = cVar5;
            i_var4 = i_var4 + 4;
            i_var7 = i_var7 + 1;
            if i_var7 < 8 {
                break;
            }
        }
    }
    i_var3 = i_var3 + 1;
        if i_var3 < 0x10 {
            break;}
}
    return;
}


fn fun_12aa_01fa()

{
    let u_var1: u16;
    let u_var2: u16;
    let u_var3: u16;
    let i_var4: i16;
    let i_var5: i16;
    let i_var6: i16;
    let local_c: i16;

    fun_3444_02c6(0x39d9);
    local_c = 0;
    // for (iVar6 = 0; i_var6 < 0x20; iVar6 = iVar6 + 1) {
    for iVar6 in 0 .. 0x20 {
        // for (iVar5 = 0; i_var5 < 0x3f; iVar5 = iVar5 + 2) {
        for iVar5 in 0 .. 0x3f {
            u_var3 = *(local_c + 0x3a);
            u_var1 = u_var3 >> 3;
            i_var4 = (i_var5 * 0x40 + i_var6) * 4;
            u_var2 = *(i_var4 + 0x6bd) & 0x1f;
            u_var3 = (u_var3 & 0xf) * 2;
            if u_var2 != u_var3 {
                if u_var3 - u_var2 == 0 || u_var3 < u_var2 {
                    u_var2 = u_var2 - 1;
                } else {
                    u_var2 = u_var2 + 1;
                }
                (i_var4 + 0x6bd) = (i_var4 + 0x6bd) & 0xffe0 | u_var2;
                (i_var4 + 0x73d) = (i_var4 + 0x73d) & 0xffe0 | u_var2;
                (i_var4 + 0x6bf) = (i_var4 + 0x6bf) & 0xffe0 | u_var2;
                (i_var4 + 0x73f) = (i_var4 + 0x73f) & 0xffe0 | u_var2;
            }
            u_var2 = *(i_var4 + 0x7bd) & 0x1f;
            if u_var2 != u_var1 {
                if u_var2 < u_var1 {
                    u_var2 = u_var2 + 1;
                } else {
                    u_var2 = u_var2 - 1;
                }
                (i_var4 + 0x7bd) = (i_var4 + 0x7bd) & 0xffe0 | u_var2;
                (i_var4 + 0x83d) = (i_var4 + 0x83d) & 0xffe0 | u_var2;
                (i_var4 + 0x7bf) = (i_var4 + 0x7bf) & 0xffe0 | u_var2;
                (i_var4 + 0x83f) = (i_var4 + 0x83f) & 0xffe0 | u_var2;
            }
            local_c = local_c + 1;
        }
    }
    FUN_39d9_0cd4(0x3444);
    return;
}


fn fun_12aa_031d()

{
    let u_var1: u16;
    let u_var2: u16;
    let i_var3: i16;
    let i_var4: i16;
    let i_var5: i16;
    let i_var6: i16;

    fun_3444_02c6(0x39d9);
    i_var6 = 0;
    // for (iVar5 = 0; i_var5 < 0x20; iVar5 = iVar5 + 1) {
    for iVar5 in 0 .. 0x20 {
        // for (iVar4 = 0; i_var4 < 0x3f; iVar4 = iVar4 + 2) {
        for iVar4 in 0 .. 0x3f {
            u_var2 = *(i_var6 + 0x3a);
            u_var1 = (u_var2 & 0xf) << 1;
            i_var3 = (i_var4 * 0x40 + i_var5) * 4;
            (i_var3 + 0x6bd) = u_var1 | (i_var3 + 0x6bd) & 0xffe0;
            (i_var3 + 0x73d) = (i_var3 + 0x73d) & 0xffe0 | u_var1;
            (i_var3 + 0x6bf) = (i_var3 + 0x6bf) & 0xffe0 | u_var1;
            (i_var3 + 0x73f) = (i_var3 + 0x73f) & 0xffe0 | u_var1;
            u_var2 = u_var2 >> 3;
            (i_var3 + 0x7bd) = (i_var3 + 0x7bd) & 0xffe0 | u_var2;
            (i_var3 + 0x83d) = u_var2 | (i_var3 + 0x83d) & 0xffe0;
            (i_var3 + 0x7bf) = u_var2 | (i_var3 + 0x7bf) & 0xffe0;
            (i_var3 + 0x83f) = u_var2 | (i_var3 + 0x83f) & 0xffe0;
            i_var6 = i_var6 + 1;
        }
    }
    return;
}


fn fun_12aa_03f0(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let u_var2: u16;
    let unaff_ds: u16;
    let bVar3: bool;
    let bVar4: bool;
    let bVar5: bool;
    let bVar6: bool;
    let bVar7: bool;

    u_var2 = 0x3444;
    fun_3444_02c6(0x39d9);
    bVar3 = (DAT_4b2d_fd08 * 2 + 0xa56) == param_1;
    if bVar3 {
        DAT_4b2d_fd08 = DAT_4b2d_fd08 + 1;
    }
    bVar4 = (DAT_4b2d_fd0a * 2 + 0xa5e) == param_1;
    if bVar4 {
        DAT_4b2d_fd0a = DAT_4b2d_fd0a + 1;
    }
    bVar5 = (DAT_4b2d_fd0c * 2 + 0xa66) == param_1;
    if bVar5 {
        DAT_4b2d_fd0c = DAT_4b2d_fd0c + 1;
    }
    bVar6 = (DAT_4b2d_fd0e * 2 + 0xa6e) == param_1;
    if bVar6 {
        DAT_4b2d_fd0e = DAT_4b2d_fd0e + 1;
    }
    bVar7 = (DAT_4b2d_fd10 * 2 + 0xa76) == param_1;
    if bVar7 {
        DAT_4b2d_fd10 = DAT_4b2d_fd10 + 1;
    }
    if !bVar7 && (!bVar6 && (!bVar5 && (!bVar4 && !bVar3))) {
        fun_12aa_0533(0x3444);
    }
    i_var1 = 0;
    loop {
    if (i_var1 * 2 + -0x2f8) == 4 {
        if i_var1 == 0 {
            fun_12aa_0554(u_var2);
// LAB_12aa_0512:
            FUN_268d_004f(uVar2, 0x3eb);
            u_var2 = 0x268d;
        } else {
            if i_var1 == 1 {
                fun_12aa_064b(u_var2);
                // goto LAB_12aa_0512;
            }
            if i_var1 == 2 {
                fun_12aa_06a2(u_var2);
                // goto
                // LAB_12aa_0512;
            }
            if i_var1 == 3 {
                FUN_2199_02f8(u_var2, 0x9e0);
                u_var2 = 0x25d6;
                fun_25d6_079f(0x2199, 2, 4);
            } else {
                if i_var1 == 4 {
                    FUN_2199_02f8(u_var2, 0xa1e);
                    u_var2 = 0x2199;
                    FUN_2199_02f8(0x2199, 0xa54);
                    // goto
                    // LAB_12aa_0512;
                }
            }
        }
        fun_12aa_0533(u_var2);
        fun_1357_0253(u_var2);
        u_var2 = 0x1357;
    }
    i_var1 = i_var1 + 1;
    if 4 < i_var1 {
        return;
    }
}

}


fn fun_12aa_0533(u_var2: u16)

{
    let u_var1: u16;
    let i_var2: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var2 = 0;
    u_var1 = 0xc384;
    loop {
    (i_var2 * 2 + -0x2f8) = 0;
    i_var2 = i_var2 + 1;
}
    while (i_var2 < 6);
    return;
}


fn fun_12aa_0554(u_var2: u16)

{
    let i_var1: i16;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ds: u16;
    let local_8: i16;
    let i_var5: i16;

    fun_3444_02c6(0x39d9);
    i_var2 = 0;
    loop {
    i_var5 = 0;
    loop {
        local_8 = 0;
        // for (iVar3 = 0; i_var3 < 4; iVar3 = iVar3 + 1) {
        for i_var3 in 0 .. 4 {
            i_var4 = (i_var3 * 2 + 0xa8e) + i_var5;
            i_var1 = (i_var3 * 2 + 0xa7e) + i_var2;
            if i_var1 < 0 {
                i_var1 = 0x7f;
            }
            if i_var4 < 0 {
                i_var4 = 0x3f;
            }
            if 0x7f < i_var1 {
                i_var1 = 0;
            }
            if 0x3f < i_var4 {
                i_var4 = 0;
            }
            local_8 = local_8 + (*((i_var1 * 0x40 + i_var4) * 2 + 0x6bd) & 0x1f);
        }
        i_var3 = (i_var2 * 0x40 + i_var5) * 2;
        (i_var3 + 0x76e1) = ((*(i_var3 + 0x6bd) & 0x1f) + (local_8 >> 2)) >> 1;
        i_var5 = i_var5 + 1;
        if !(i_var5 < 0x40) {
            break;
        }
        if !(i_var5 < 0x40) {
            break;
        }
    }

    i_var2 = i_var2 + 1;
        if !(i_var2 < 0x80) {
            break;
        }
}

    i_var2 = 0;
    loop {
    // for (iVar5 = 0; i_var5 < 0x40; iVar5 = iVar5 + 1) {
    for i_var5 in 0 .. 0x40 {
        i_var3 = (i_var2 * 0x40 + i_var5) * 2;
        (i_var3 + 0x6bd) = (i_var3 + 0x6bd) & 0xffe0 | (i_var3 + 0x76e1);
    }
    i_var2 = i_var2 + 1;
        if !(i_var2 < 0x80) {
            break;
        }
}
    // while (i_var2 < 0x80);
    return;
}


fn fun_12aa_064b(u_var2: u16)

{
    let u_var1: u16;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    let u_var5: u16;
    let unaff_ds: u16;
    let i_var6: i16;

    u_var4 = 0x3444;
    fun_3444_02c6(0x39d9);
    i_var6 = 0;
    loop {
    i_var3 = 0;
    u_var5 = u_var4;
    loop {
        u_var4 = 0x168b;
        u_var1 = FUN_168b_05f1(u_var5, 0x1f);
        u_var5 = 0xc386;
        i_var2 = (i_var6 * 0x40 + i_var3) * 2;
        (i_var2 + 0x6bd) = (i_var2 + 0x6bd) & 0xffe0 | u_var1;
        i_var3 = i_var3 + 1;
        u_var5 = u_var4;
    }
    while (i_var3 < 0x40);
    i_var6 = i_var6 + 1;
}
    while (i_var6 < 0x80);
    fun_12aa_0554(0x168b);
    return;
}


fn fun_12aa_06a2(u_var2: u16)

{
    let pu_var1: *mut u16;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var4 = 0;
    loop {
    // for (iVar3 = 0; i_var3 < 0x40; iVar3 = iVar3 + 1) {
    for iVar3 in 0 .. 0x40 {
        i_var2 = i_var4 * 0x40 + i_var3;
        pu_var1 = (i_var2 * 2 + 0x6bd);
        *pu_var1 = *pu_var1 & 0x801f;
        (i_var2 + -0x40f8) = 0;
    }
    i_var4 = i_var4 + 1;
    if i_var4 < 0x80 {
        break;
    }
}
    // while (i_var4 < 0x80);
    return;
}



fn FUN_12aa_06eb(param_1_00: u16,param_1: i16) -> i16

{
let iVar1: i16; let iVar2: i16;

FUN_3444_02c6(0x39d9); if (param_1 == 0) {
// WARNING: Subroutine does not return
FUN_2a60_08cb(0x3444, 0xaa9);
}
iVar1 = FUN_168b_05f1(0x3444, param_1); iVar2 = FUN_168b_05f1(0x168b, param_1); if (iVar2 < iVar1) {
iVar2 = iVar1;
}
return iVar2;
}



fn FUN_12aa_072b(param_1_00: u16,param_1: u16) -> i16

{
let iVar1: i16; let iVar2: i16;

FUN_3444_02c6(0x39d9); iVar1 = FUN_168b_05f1(0x3444, param_1); iVar2 = FUN_168b_05f1(0x168b,param_1); if (iVar1 < iVar2) {
iVar2 = iVar1;
}
return iVar2;
}



fn FUN_12aa_0756(param_1_00: u16,param_1: u16) -> i16

{
let iVar1: i16; let iVar2: i16;

FUN_3444_02c6(0x39d9); iVar1 = FUN_168b_05f1(0x3444, param_1); iVar2 = FUN_168b_05f1(0x168b,param_1); if (iVar1 < iVar2) {
iVar2 = iVar1;
}
iVar1 = FUN_168b_05f1(0x168b, 2); if (iVar1 != 0) {
iVar2 = - iVar2;
}
return iVar2;
}



fn fun_1323_000a()

{
    let i_var1: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var1 = 0;
    loop {
    (i_var1 * 2 + -0x2ec) = (i_var1 * 2 + 0xab4);
    i_var1 = i_var1 + 1;
}
    while (i_var1 < 5);
    return;
}


fn fun_1323_0032(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    let unaff_ds: u16;

    u_var4 = 0x3444;
    fun_3444_02c6(0x39d9);
    fun_1323_000a(0x3444);
    i_var3 = 0;
    loop {
    // for (iVar2 = 0; i_var2 < 0x40; iVar2 = iVar2 + 0x10) {
        for i_var2 in 0 .. 0x40 {
        i_var1 = FUN_168b_05f1(u_var4, 2);
        if i_var1 == 0 {
            i_var1 = FUN_168b_05f1(0x168b, 4);
            i_var1 = -(i_var1 - param_1);
        } else {
            i_var1 = FUN_168b_05f1(0x168b, 4);
            i_var1 = i_var1 + 1;
        }
        u_var4 = 0x168b;
        ((i_var3 * 0x40 + i_var2) * 2 + 0x6bd) = i_var1;
    }
    i_var3 = i_var3 + 0x10;
        if !(i_var3 < 0x80) {
            break;
        }
}
    // while (i_var3 < 0x80);
    fun_1323_00f5(u_var4, 8, 0xf);
    fun_1323_00f5(u_var4, 4, 7);
    fun_1323_00f5(u_var4, 2, 3);
    fun_1323_00f5(u_var4, 1, 1);
    FUN_39d9_0d06(u_var4);
    0xacc = 0xace - 0xb6e4;
    FUN_39d9_0cd4(0x39d9);
    return;
}


fn fun_1323_00f5(param_1_00: u16, param_1: i16, uparam_3: i16)

{
    let i_var1: i16;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    let i_var5: i16;
    let u_var6: u16;
    let u_var7: u16;
    let unaff_ds: u16;
    let i_var8: i16;
    let u_var9: u16;
    let u_var10: u16;

    u_var7 = 0x3444;
    fun_3444_02c6(0x39d9);
    u_var9 = 0;
    loop {
    if (0x7f < u_var9) {
        return;
    }
    u_var6 = 0;
    loop {
        u_var4 = ((param_3 & u_var6) == 0);
        u_var10 = ((u_var9 & param_3) == 0);
        if ((u_var10 == 0) || (u_var4 == 0)) {
            FUN_168b_05f1(u_var7, param_3);
            if (u_var4 == 0) {
                if (u_var10 != 0) {
                    FUN_1323_0253(0x168b, u_var7, u_var6 - param_1);
                    u_var4 = u_var6 + param_1;
                    i_var1 = FUN_1323_0253(0x168b);
                    i_var1 = i_var1 + 0x33d0;
                    u_var9 = u_var7;
                    // goto
                    // LAB_1323_016f;
                }
                i_var5 = u_var7 + param_1;
                i_var1 = i_var5;
                i_var8 = FUN_1323_0253(0x168b, i_var5, u_var6 - param_1);
                u_var9 = i_var1 - param_1;
                i_var2 = FUN_1323_0253(0x168b, u_var9, u_var6 - param_1);
                i_var1 = u_var6 + param_1;
                i_var5 = FUN_1323_0253(0x168b, i_var5, i_var1);
                i_var3 = FUN_1323_0253(0x168b);
                i_var1 = (i_var3 + i_var5 + i_var2 + i_var8 >> 2) + i_var1;
            } else {
                i_var1 = u_var7 + param_1;
                FUN_1323_0253(0x168b, i_var1, u_var6);
                u_var9 = i_var1 - param_1;
                i_var8 = 0x168b;
                u_var4 = u_var6;
                i_var1 = FUN_1323_0253();
                i_var1 = i_var1 + i_var8;
// LAB_1323_016f:
                iVar1 = (i_var1 >> 1) + u_var4;
            }
            if (i_var1 < 1) {
                i_var1 = 1;
            }
            if (0x1f < i_var1) {
                i_var1 = 0x1f;
            }
            ((u_var9 * 0x40 + u_var6) * 2 + 0x6bd) = i_var1;
            u_var7 = 0x168b;
        }
        u_var6 = u_var6 + param_1;
    }
    while (u_var6 < 0x40);
    u_var9 = u_var9 + param_1;
}
    while (true);
}



byte FUN_1323_0253(param_1_00: u16,param_1: i16,param_2: i16)

{
let unaff_DS: u16;

FUN_3444_02c6(0x39d9);
if (param_2 < 0) {
param_2 = 0; param_1 = param_1 + 0x40;
}
if (0x3f < param_2) {
param_2 = 0x3f; param_1 = param_1 + 0x40;
}
if (param_1 < 0) {
param_1 = 0x80 - param_1;
}
if (0x7f < param_1) {
param_1 = param_1 + - 0x80;
}
return * ((param_1 * 0x40 + param_2) * 2 + 0x6bd) & 0x1f;
}



fn fun_1323_02ad(param_1_00: u16, param_1: i16, param_2: i16, param_3: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (param_1 < 0) {
        param_1 = 0x80 - param_1;
    }
    if (0x7f < param_1) {
        param_1 = param_1 + -0x80;
    }
    if (param_2 < 0) {
        param_2 = 0x40 - param_2;
    }
    if (0x3f < param_2) {
        param_2 = param_2 + -0x40;
    }
    ((param_1 * 0x40 + param_2) * 2 + 0x6bd) = param_3;
    return;
}



fn FUN_1323_0300(param_1_00: u16,param_1: i16) -> i16

{
FUN_3444_02c6(0x39d9); if (param_1 < 0) {
param_1 = 0x80 - param_1;
}
if (0x7f < param_1) {
param_1 = param_1 + - 0x80;
}
return param_1;
}



fn FUN_1323_0327(param_1_00: u16,param_1: i16) -> i16

{
FUN_3444_02c6(0x39d9); if (param_1 < 0) {
param_1 = 0x40 - param_1;
}
if (0x3f < param_1) {
param_1 = param_1 + - 0x40;
}
return param_1;
}



fn fun_1357_000e()

{
    fun_3444_02c6(0x39d9);
    fun_1357_002e(0x3444);
    fun_1357_0036(0x3444);
    fun_1357_0223(0x3444);
    fun_1357_0253(0x3444);
    fun_1357_007d(0x3444);
    fun_1357_00d4(0x3444);
    return;
}


fn fun_1357_002e()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1357_0036()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    0xabe = 0;
    fun_1357_0066(0x3444);
    FUN_39d9_0e14(0x3444, 0, 0, 0, 0x1e, 0, 0, 0, 0, 0, 0, 0, 0);
    return;
}


fn fun_1357_0066()

{
    let u_var1: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    u_var1 = FUN_2692_05ab(0x3444);
    0xab6 = u_var1 | 1;
    return;
}


fn fun_1357_007d()

{
    let u_var1: u16;
    let i_var2: i16;
    let i_var3: i16;
    let unaff_ds: u16;
    let i_var4: i16;

    fun_3444_02c6(0x39d9);
    i_var3 = 0;
    loop {
    // for (iVar4 = 0; i_var4 < 8; iVar4 = iVar4 + 1) {
    for iVar4 in 0 .. 8 {
        i_var2 = 0;
        u_var1 = 0xc400;
        loop {
            ((i_var3 * 0x20 + i_var2) * 8 + i_var4 + 0x5ec9) = 0;
            i_var2 = i_var2 + 1;
            if i_var2 < 0x20 {
                break;
            }
        }
        // while (i_var2 < 0x20);
    }
    i_var3 = i_var3 + 1;
        if i_var3 < 0x10 {
            break;
        }
}
    // while (i_var3 < 0x10);
    0xfd24 = 0;
    return;
}


fn fun_1357_00d4()

{
    fun_3444_02c6(0x39d9);
    fun_1357_019a(0x3444, 0xff02, 0x4b2d, 1000);
    fun_1357_019a(0x3444, 0xfec2, 0x4b2d, 0x3e9);
    fun_1357_019a(0x3444, 0x644, 0x4b2d, 0x3ea);
    fun_1357_019a(0x3444, 0xfe82, 0x4b2d, 0x3eb);
    fun_1357_019a(0x3444, 0xfe5e, 0x4b2d, 0x3ec);
    fun_1357_019a(0x3444, 0xfe3e, 0x4b2d, 0x3ed);
    fun_1357_019a(0x3444, 0xfe1a, 0x4b2d, 0x3ee);
    fun_1357_019a(0x3444, 0xfdfe, 0x4b2d, 0x3ef);
    fun_1357_019a(0x3444, 0xebb1, 0x4b2d, 0x3f0);
    fun_1357_019a(0x3444, 0xfd26, 0x4b2d, 0x3f1);
    return;
}


fn fun_1357_019a(param_1_00: u16, param_1: &Vec<String>, param_2: u16)

{
    let uVar1: u32;
    char * *ppcVar2;
    let pc_var3: String;
    let i_var4: i16;
    let i_var5: i16;
    let u_var6: u16;
    let u_var7: u16;
    let puVar8: *mut u32;
    let i_var9: i16;

    fun_3444_02c6(0x39d9);
    puVar8 = (undefined4 *)
    FUN_3074_00d3(0x3444, param_2, 4);
    u_var6 = (undefined2)(*puVar8 >> 0x10);
    i_var4 = *puVar8;
    pc_var3 = (i_var4 + 1);
    u_var7 = 0x3074;
    i_var4 = (i_var4 + 1);
    while (true) {
        ppcVar2 = param_1;
        pc_var3 = pc_var3 + 1;
        i_var9 = i_var4 + -1;
        if (i_var4 == 0)
        break;
        i_var4 = *pc_var3;
        FUN_3444_1e00(u_var7, pc_var3, u_var6, pc_var3, u_var6, i_var4);
        pc_var3[i_var4] = '\0';
        uVar1 = param_1 >> 0x10;
        i_var5 = param_1;
        param_1 = (char * *)(param_1 & 0xffff0000 | (i_var5 + 4));
        *ppcVar2 = pc_var3;
        (i_var5 + 2) = u_var6;
        pc_var3 = pc_var3 + i_var4;
        u_var7 = 0x3444;
        i_var4 = i_var9;
    }
    return;
}


fn fun_1357_0223()

{
    fun_3444_02c6(0x39d9);
    fun_1357_022f(0x3444);
    return;
}


fn fun_1357_022f()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    0xff24 = 0xffff;
    0xff22 = 0;
    fun_24bf_0004(0x3444, 0);
    return;
}


fn fun_1357_0253(u_var2: u16)

{
    let u_var1: u16;
    let i_var2: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var2 = 0;
    u_var1 = 0xc408;
    loop {
    (i_var2 * 2 + 0x6ec9) = 1;
    i_var2 = i_var2 + 1;
}
    while (i_var2 < 0xc);
    return;
}


// WARNING: Removing unreachable block (ram,0x00013995)

fn fun_1357_0274(param_1_00: u16, param_1: i16, param_2: u32)

{
    let b_var1: u8;
    let b_var2: u8;
    let pc_var3: String;
    let pc_var4: String;
    let i_var5: i16;
    let unaff_ds: u16;
    let l_var6: i32;
    let u_var7: u32;
    let u_var8: u16;

    fun_3444_02c6(0x39d9);
    i_var5 = 1;
    loop {
    if (param_1 <= i_var5) {
        l_var6 = FUN_3444_1986(0x3444, 0xea7);
        if (l_var6 != 0) {
            u_var8 = 0xeab;
            u_var7 = FUN_3444_1986(0x3444, 0xeb3);
            i_var5 = FUN_3444_1d8c(0x3444, u_var7, u_var8);
            if (i_var5 == 0) {
                
                0x8538 = 1;
            }
        }
        l_var6 = FUN_3143_1690(0x3444);
        u_var8 = 0xc418;
        0xff93 = l_var6;
        0xff95 = (l_var6 >> 0x10);
        if ((0xf4f == '\0') && (l_var6 < 110000)) {
            fun_3444_07d2(0x3143, 0xeb7);
            fun_3444_01db(0x3444, 1);
        }
        FUN_3440_0043(7);
        FUN_3440_0042();
        u_var7 = fun_3444_2108(0x3444, 0, 0, 0);
        u_var8 = 0xc41a;
        0xff8f = u_var7;
        0xff91 = (u_var7 >> 0x10);
        pc_var3 = *(char * *)
        0xff8f;
        0xff8d = *pc_var3;
        i_var5 = FUN_3444_178e(0x3444, pc_var3, (pc_var3 >> 0x10));
        i_var5 = i_var5 + -1;
        u_var7 = 
        0xff8f;
        u_var8 = (undefined2)(u_var7 >> 0x10);
        pc_var4 = (u_var7 + i_var5);
        if (*pc_var4 == '\\') {
            *pc_var4 = '\0';
        }
        fun_3074_000c(0x3444, 0xf39);
        FUN_27ac_0008(0x3074, 0xf40);
        fun_3444_2278(0x27ac, 0x80f, 0x2a60, i_var5);
        fun_27ac_0b38(0x3444, 4);
        fun_1ba9_0ca8(0x27ac);
        fun_1ba9_0ce0(0x1ba9, 0);
        fun_1ba9_0000(0x1ba9);
        fun_27ac_0bdf(0x1ba9, 5);
        fun_337d_0000(0x27ac);
        fun_168b_0028(0x337d);
        fun_3444_172e(0x168b, 0xff3d, 0x4b2d, 0xf43);
        fun_3444_172e(0x3444, 0xff65, 0x4b2d, 0xf49);
        fun_1357_000e(0x3444);
        fun_148d_0254(0x1357);
        fun_1ba9_0000(0x148d);
        fun_1357_053a(0x1ba9);
        return;
    }
    pc_var3 = *(char * *)(i_var5 * 4 + param_2);
    u_var8 = (undefined2)(pc_var3 >> 0x10);
    if (*pc_var3 == '/') {
        b_var1 = *(pc_var3 + 2);
        b_var2 = *(pc_var3 + 1);
        if (b_var2 == 0x73) {
            if (b_var1 < '\0') {
// LAB_1357_02fc:
                FUN_3444_07d2(0x3444, 0xe70);
                fun_3444_01db(0x3444, 4);
            } else {
                if (b_var1 == 0x74) {
// LAB_1357_03c3:
                    0x8 = 3;
                } else {
                    if ((0x74 < b_var1) || (b_var1 < 0x41)) {}
                    // goto
                    // LAB_1357_02fc;
                    if (b_var1 == 0x41 || b_var1 == 0x42) {
// LAB_1357_038b:
                        0x8 = 1;
                    } else {
                        if (b_var1 != 0x43) {
                            if (b_var1 == 0x49) {
// LAB_1357_03a7:
                                0x8 = 0;
                                // goto
                                // LAB_1357_0312;
                            }
                            if (b_var1 == 0x4e) {
// LAB_1357_03b5:
                                0x8 = 0xffff;
                                // goto
                                // LAB_1357_0312;
                            }
                            if (b_var1 == 0x54) {
                                // goto
                                // LAB_1357_03c3;
                            }
                            if (0xc < (b_var1 + 0xac)) {
                                if (b_var1 == 0x61 || b_var1 == 0x62) {
                                    // goto
                                    // LAB_1357_038b;
                                }
                                if (b_var1 == 99) {
                                    // goto
                                    // LAB_1357_0399;
                                }
                                if (b_var1 == 0x69) {
                                    // goto
                                    // LAB_1357_03a7;
                                }
                                if b_var1 == 0x6e {}
                                // goto
                                // LAB_1357_03b5;
                            }
                            // goto
                            // LAB_1357_02fc;
                        }
// LAB_1357_0399:
                        0x8 = 2;
                    }
                }
            }
        } else {
            if (b_var2 < 0x74) {
                if (b_var2 == 0x21) {
                    
                    0xf4f = 1;
                } else {
                    if (b_var2 == 0x62) {
                        
                        0x8538 = 1;
                    } else {
                        if (b_var2 == 100) {
                            if (b_var1 < '\0')
                            goto
                            LAB_1357_02fc;
                            if (b_var1 == 0x6d) {
                                
                                0x9c65 = 7;
                            } else {
                                if (0x6d < b_var1)
                                goto
                                LAB_1357_02fc;
                                if (b_var1 == 0x32) {
                                    
                                    0x9c65 = 6;
                                } else {
                                    if (b_var1 == 0x45) {
                                        
                                        0x9c65 = 0;
                                    } else {
                                        if (b_var1 == 0x48) {
                                            
                                            0x9c65 = 3;
                                        } else {
                                            if (b_var1 == 0x4d) {
                                                
                                                0x9c65 = 5;
                                            } else {
                                                if (b_var1 == 0x54) {
                                                    
                                                    0x9c65 = 2;
                                                } else {
                                                    if (b_var1 == 0x56) {
                                                        
                                                        0x9c65 = 8;
                                                    } else {
                                                        if (b_var1 != 0x65)
                                                        goto
                                                        LAB_1357_02fc;
                                                        
                                                        0x9c65 = 4;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
// LAB_1357_0312:
    iVar5 = i_var5 + 1;
}
    while (true);
}


fn fun_1357_053a()

{
    let i_var1: i16;
    let u_var2: u16;
    let unaff_ds: u16;
    undefined
    local_12[8];
    let u_stack_y10: u16;
    let u_stack_y8: u16;
    undefined * puStackY6;

    puStackY6 = ff
    0x3ab5;
    fun_3444_02c6(0x39d9);
    puStackY6 = ff
    0x3444;
    u_stack_y8 = 0x3abe;
    fun_337d_0068();
    puStackY6 = ff
    0x337d;
    u_stack_y8 = 0x3ac8;
    fun_2b26_05ce();
    puStackY6 = ff
    0x2b26;
    u_var2 = 0x168b;
    u_stack_y8 = 0x3ad2;
    fun_168b_0c25();
    while ((*0x8cf & 1) != 0) {
        u_var2 = 0x2d56;
        puStackY6 = ff
        0x3ada;
        i_var1 = FUN_2d56_0d89();
        if (i_var1 != 0)
        break;
        u_var2 = 0x168b;
        puStackY6 = ff
        0x3ae3;
        i_var1 = FUN_168b_0c4a();
        if (i_var1 != 0)
        break;
        if ((*0x804 & 1) != 0) {
            puStackY6 = ff
            0x168b;
            u_stack_y8 = 0x3af9;
            fun_294b_02f2();
            puStackY6 = ff
            0x294b;
            u_stack_y8 = 0x3b02;
            fun_154b_037e();
            u_var2 = 0x294b;
            puStackY6 = ff
            0x3b08;
            fun_294b_03be();
        }
    }
    puStackY6 = local_12;
    u_stack_y10 = 0x3b1e;
    u_stack_y8 = u_var2;
    fun_2d56_0eee();
    puStackY6 = ff
    0x2d56;
    u_stack_y8 = 0x3b29;
    fun_2b26_0754();
    puStackY6 = ff
    0x3b2f;
    fun_32c9_0385();
    return;
}


fn fun_1357_05c3(param_1_00: u16, param_1: u16, undefined *param_2, param_3: u16)

{
    let i_var1: i16;
    undefined * puVar2;
    let unaff_di: u16;

    fun_3444_02c6(0x39d9);
    loop {
    i_var1 = FUN_3444_124c(0x3444, param_1, &stack0xfffd);
    if (i_var1 == 0)
    break;
    i_var1 = FUN_3444_1fe5(0x3444, (unaff_di >> 8));
}
    while (i_var1 != 0);
    loop {
    puVar2 = param_2 + 1;
    *param_2 = (unaff_di >> 8);
    i_var1 = FUN_3444_124c(0x3444, param_1, &stack0xfffd);
    if (i_var1 == 0)
    break;
    i_var1 = FUN_3444_1fe5(0x3444, (unaff_di >> 8));
    param_2 = puVar2;
}
    while (i_var1 == 0);
    *puVar2 = 0;
    return;
}


fn fun_1357_0639(param_1_00: u16, param_1: u16, param_2: i16)

{
    undefined
    local_20[20];
    let u_stack_y12: u16;
    let u_stack_y10: u16;
    let u_stack_y8: u16;
    undefined * puStackY6;

    puStackY6 = ff
    0x3bb4;
    fun_3444_02c6(0x39d9);
    while (param_2 != 0) {
        puStackY6 = local_20;
        u_stack_y8 = param_1;
        u_stack_y10 = 0x3444;
        u_stack_y12 = 0x3bc2;
        fun_1357_05c3();
        param_2 = param_2 + -1;
    }
    return;
}


fn fun_1357_0663()

{
    let i_var1: i16;
    let u_var2: u16;
    let unaff_si: u16;
    let unaff_ds: u16;
    let b_var3: u8;

    fun_3444_02c6(0x39d9);
    i_var1 = FUN_3444_109a(0x3444, 0xf50);
    if (i_var1 < 1) {
        u_var2 = 0xf5d;
        goto
        LAB_1357_077e;
    }
    fun_1357_0639(0x3444, i_var1, 2);
    FUN_3444_124c(0x3444, i_var1, &stack0xfffd);
    fun_1357_0639(0x3444, i_var1, 2);
    FUN_3444_124c(0x3444, i_var1, &stack0xfffc);
    fun_1357_0639(0x3444, i_var1, 2);
    FUN_3444_124c(0x3444, i_var1, &stack0xfffb);
    b_var3 = (unaff_si >> 8);
    if (b_var3 == 0x6d) {
        
        0x9c65 = 7;
    } else {
        if (0x6d < b_var3) {
// LAB_1357_0709:
            uVar2 = 0xf81;
            goto
            LAB_1357_077e;
        }
        if (b_var3 == 0x32) {
            
            0x9c65 = 6;
        } else {
            if (b_var3 == 0x45) {
                
                0x9c65 = 0;
            } else {
                if (b_var3 == 0x48) {
                    
                    0x9c65 = 3;
                } else {
                    if (b_var3 == 0x4d) {
                        
                        0x9c65 = 5;
                    } else {
                        if (b_var3 == 0x54) {
                            
                            0x9c65 = 2;
                        } else {
                            if (b_var3 == 0x56) {
                                
                                0x9c65 = 8;
                            } else {
                                if (b_var3 != 0x65)
                                goto
                                LAB_1357_0709;
                                
                                0x9c65 = 4;
                            }
                        }
                    }
                }
            }
        }
    }
    b_var3 = unaff_si;
    if (b_var3 != 0x74) {
        if ((b_var3 < 0x75) && ('@' < b_var3)) {
            if (b_var3 == 0x42 || (b_var3 + 0xbf) < '\x01') {
// LAB_1357_0798:
                0x8 = 1;
                return;
            }
            if (b_var3 == 0x43) {
// LAB_1357_07a5:
                0x8 = 2;
                return;
            }
            if (b_var3 == 0x49) {
// LAB_1357_07b2:
                0x8 = 0;
                return;
            }
            if (b_var3 == 0x4e) {
// LAB_1357_07bf:
                0x8 = 0xffff;
                return;
            }
            if (b_var3 == 0x54)
            goto
            LAB_1357_07cc;
            if ('\f' < (b_var3 + 0xac)) {
                if (b_var3 == 0x62 || (b_var3 + 0x9f) < '\x01')
                goto
                LAB_1357_0798;
                if (b_var3 == 99)
                goto
                LAB_1357_07a5;
                if (b_var3 == 0x69)
                goto
                LAB_1357_07b2;
                if (b_var3 == 0x6e)
                goto
                LAB_1357_07bf;
            }
        }
        u_var2 = 0xfaa;
// LAB_1357_077e:
        FUN_3444_1a40(0x3444, u_var2);
        fun_3444_01db(0x3444, 1);
        return;
    }
// LAB_1357_07cc:
    0x8 = 3;
    return;
}



void FUN_13d4_000c(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16)

{
let uVar1: u16; let unaff_DS: u16;

FUN_3444_02c6(0x39d9); uVar1 = 0xc40a; 0xcfc = param_1; 0xcfe = param_2; uVar1 = 0xc40c; 0xcf8 = param_3; 0xcfa = param_4; 0xff26 = 0; 0xff3b = 0xffff; return;
}


/*
Unable to decompile 'FUN_13d4_0056'
Cause: Exception while decompiling 13d4:0056: process: timeout

*/


fn fun_141a_0355(param_1_00: u16, param_1: u16, param_2: u16)

{
    fun_3444_02c6(0x39d9);
    FUN_3440_0041(param_1, param_2);
    fun_337d_0038(0x3444);
    fun_3074_037f(0x337d);
    fun_1ba9_0e0e(0x3074);
    fun_27ac_0212(0x1ba9);
    fun_3444_1a40(0x27ac, param_1, param_2);
    fun_3444_01db(0x3444, 0);
    return;
}


fn fun_1454_00ae(param_1_00: u16, char param_1)

{
    let pu_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u32;
    let pu_var4: *mut u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (-1 < 0x8) {
        fun_32c9_0385(0x3444);
        u_var3 = 
        0xffe7;
        pu_var1 = *(undefined2 * *)
        u_var3;
        u_var2 = (u_var3 + 2);
        *pu_var1 = 0;
        (pu_var1 + 1) = (param_1 + '\x01') * '\x04';
        (pu_var1 + 3) = 0xcf;
        pu_var1[2] = 0xa00;
        (pu_var1 + 3) = 0;
        (pu_var1 + 7) = 0xcf;
        pu_var1[4] = 0xa00;
        (pu_var1 + 5) = 0xfe;
        pu_var4 = 
        0xffe7;
        fun_32c9_0af0(0x32c9, *pu_var4, (pu_var4 + 2), 5);
    }
    return;
}


fn fun_1454_0141(param_1: u16, char param_2, param_3: i16)

{
    let pu_var1: *mut u16;
    let u_var2: u32;
    let pu_var3: *mut u16;
    let u_var4: u16;
    let unaff_ds: u16;
    let u_var5: u16;

    fun_3444_02c6(0x39d9);
    if (-1 < 0x8) {
        fun_32c9_0385(0x3444);
        u_var2 = 
        0xffe7;
        pu_var1 = *(undefined2 * *)
        u_var2;
        u_var5 = (u_var2 + 2);
        *pu_var1 = 0;
        (pu_var1 + 1) = (param_2 + '\x01') * '\x04';
        (pu_var1 + 3) = 0x1f;
        u_var4 = FUN_3444_2364(0x32c9, ((long)param_3 * 0xa00),
        (((long)
        param_3 * 0xa00) >> 0x10), 0x12, 0);
        pu_var1[2] = u_var4;
        (pu_var1 + 3) = 0;
        (pu_var1 + 7) = 0;
        pu_var1[4] = u_var4;
        (pu_var1 + 5) = 0xfe;
        pu_var3 = 
        0xffe7;
        fun_32c9_0af0(0x3444, *pu_var3, (pu_var3 + 2), param_3);
    }
    return;
}


/*
Unable to decompile 'FUN_1454_01e7'
Cause: Exception while decompiling 1454:01e7: process: timeout

*/


fn fun_148d_000c(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let i_var2: i16;
    let unaff_si: i16;
    u16
    uVar3;
    u16
    unaff_DS;
    let local_a: i16;
    let local_8: *mut u16;

    uVar3 = 0x3444;
    fun_3444_02c6(0x39d9);
    i_var2 = 0;
    loop {
    i_var1 = (i_var2 * 2 + -0x66d4);
    if (i_var1 == -0x8000) {
// LAB_148d_0069:
        iVar2 = 0x992c;
        if (((i_var2 == 0) && (0xd1a == 0x30)) || (i_var2 == 0x12)) {
            0x8541 = 1;
            local_8 = 0x8543;
            local_a = 0x17;
            fun_2b26_0e3b(uVar3);
        } else {
            0x8541 = 0;
        }
        return;
    }
    if (i_var1 == 9) {
        if (param_1 <= i_var2) {
            local_8 = &local_a;
            local_a = 0x903;
            fun_2b26_0e3b(0x3444);
            local_a = (unaff_si - local_8) - local_a;
            uVar3 = 0x1e08;
            local_8 = local_a;
            FUN_1e08_030e(0x2b26, local_a);
        }
        goto
        LAB_148d_0069;
    }
    i_var2 = i_var2 + 1;
}
    while (true);
}


fn fun_148d_00ae()

{
    let u_var1: u16;
    let unaff_ds: u16;
    let local_56: *mut u16;
    undefined
    local_52[68];
    let u_stack_y14: u16;
    let u_stack_y12: u16;
    undefined * puStackY10;

    u_stack_y12 = 0x3444;
    fun_3444_02c6(0x39d9);
    u_var1 = 0xc468;
    local_56 = CONCAT22(u_var1, 0x992c);
    if (0x992c == 0x14) {
        u_stack_y12 = 0x236f;
        fun_236f_0335();
    }
    if (*local_56 == 0x1a) {
        u_stack_y12 = 0x236f;
        fun_236f_0562();
    }
    fun_148d_000c();
    if (*local_56 == 0) {
        puStackY10 = local_52;
        u_stack_y14 = 0x49d2;
        fun_3444_172e();
        puStackY10 = ff
        0x49df;
        fun_200c_078e();
        puStackY10 = ff
        0x49eb;
        fun_200c_078e();
    }
    return;
}


/*
Unable to decompile 'FUN_148d_0121'
Cause: Exception while decompiling 148d:0121: Decompiler process died

*/


fn fun_148d_0254()

{
    fun_3444_02c6(0x39d9);
    fun_2f42_03a9(0x3444, 0xe00, 0xcc, 0x20d3);
    fun_2f42_03a9(0x2f42, 0xf00, 0x708, 0x20d3);
    fun_2f42_03a9(0x2f42, 0x1000, 0x8a0, 0x20d3);
    fun_2f42_03a9(0x2f42, 0x1100, 0xab0, 0x20d3);
    fun_2f42_03a9(0x2f42, 0xd00, 0x982, 0x24bf);
    fun_2f42_03a9(0x2f42, 0x100, 0xe67, 0x1862);
    fun_2f42_03a9(0x2f42, 0x900, 0xeeb, 0x1862);
    fun_2f42_03a9(0x2f42, 0, 0x30e, 0x154b);
    fun_2f42_03a9(0x2f42, 0x1500, 0x18, 0x2239);
    fun_2f42_03a9(0x2f42, 0x1300, 0x19c, 0x1d9a);
    fun_2f42_03ee(0x2f42, 0x121, 0x148d);
    fun_2f42_0419(0x2f42, 0xae, 0x148d);
    fun_2f42_0444(0x2f42, 0xc, 0x148d);
    fun_2f42_046f(0x2f42, 0x21c, 0x148d);
    FUN_13d4_000c(0x2f42, 0, 0, 0, 0);
    fun_154b_0225(0x13d4);
    FUN_1862_0949(0x154b);
    fun_236f_0691(0x1862, 0x3e9);
    return;
}


fn fun_148d_0381(param_1_00: u16, param_1: u16)

{
    let i_var1: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var1 = FUN_2a60_0913(0x3444, 0xcaba);
    if ((i_var1 != 0) && (0x1396 == '\0')) {
        0xffeb = param_1;
        0x139c = 1;
        fun_148d_03d4(0x2a60);
        0x139c = 0;
    }
    return;
}


// WARNING: Removing unreachable block (ram,0x00014da2)
// WARNING: Removing unreachable block (ram,0x00014d92)
// WARNING: Removing unreachable block (ram,0x00014d82)
// WARNING: Removing unreachable block (ram,0x00014d72)
// WARNING: Removing unreachable block (ram,0x00014ead)
// WARNING: Removing unreachable block (ram,0x00014d7a)
// WARNING: Removing unreachable block (ram,0x00014d8a)
// WARNING: Removing unreachable block (ram,0x00014d9a)
// WARNING: Removing unreachable block (ram,0x00014d1d)
// WARNING: Removing unreachable block (ram,0x00014d65)
// WARNING: Removing unreachable block (ram,0x00014d27)

fn fun_148d_03d4()

{
    let cVar1: u8;
    let u_var2: u16;
    let i_var3: i16;
    let unaff_ds: u16;
    let local_1c: i16;
    let local_1a: i16;
    let local_18: i16;
    let local_16: i16;
    let local_12: u8;
    let local_d: u8;

    fun_3444_02c6(0x39d9);
    if 0x10d4 != 0 {
        return;
    }
    0x10d4 = 1;
    u_var2 = 0xc472;
    if 0x1396 != '\0' {
        cVar1 = 0x1396;
        if cVar1 == '\x01' {
            i_var3 = FUN_39d9_0e3c();
            if i_var3 != 0 {
                fun_1862_0e93();
            }
        } else {
            if ((cVar1 == '\x02') || (cVar1 == '\x03')) {
                FUN_39d9_0e32();
            } else {
                if (cVar1 == '\a') {
                    fun_1ba9_0b99();
                }
            }
        }
        
        0x1396 = 0;
    }
    i_var3 = FUN_2d56_0d89();
    if ((i_var3 != 0) && (((fun_2d56_0ead(), (local_12 & 3) != 0 || ((local_d & 8) != 0)) && ((local_d & 10) != 0)))) {
        fun_236f_06a9();
    }
// LAB_148d_04eb:
    loop {
    i_var3 = FUN_2692_0a3d();
    if (i_var3 != 0) {
        local_1c = 0;
        local_1a = 0;
        i_var3 = FUN_2692_0a3d();
        if (i_var3 != 0) {
            local_1a = -1;
            local_1c = -1;
        }
        i_var3 = FUN_2692_0a3d();
        if (i_var3 != 0) {
            local_1a = local_1a + 1;
            local_1c = local_1c + -1;
        }
        i_var3 = FUN_2692_0a3d();
        if (i_var3 != 0) {
            local_1a = local_1a + -1;
            local_1c = local_1c + 1;
        }
        i_var3 = FUN_2692_0a3d();
        if (i_var3 != 0) {
            local_1a = local_1a + 1;
            local_1c = local_1c + 1;
        }
        i_var3 = FUN_2692_0a3d();
        if (i_var3 != 0) {
            local_1a = local_1a + 1;
        }
        i_var3 = FUN_2692_0a3d();
        if (i_var3 != 0) {
            local_1a = local_1a + -1;
        }
        i_var3 = FUN_2692_0a3d();
        if (i_var3 != 0) {
            local_1c = local_1c + -1;
        }
        i_var3 = FUN_2692_0a3d();
        if (i_var3 != 0) {
            local_1c = local_1c + 1;
        }
        if (((local_1a != 0) || (local_1c != 0)) && (i_var3 = fun_154b_0589(), i_var3 != 0))
        goto
        LAB_148d_04eb;
    }
    local_18 = 0;
    local_16 = 0;
    i_var3 = FUN_2692_0ebd();
    if (i_var3 != 0) {
// LAB_148d_06a2:
        iVar3 = FUN_2a25_003c();
        if (i_var3 != 0) {
            fun_148d_099f();
        }
        if (((0xd1e != '\0') || (0x992c == 0)) && ((0x138f != '\0' || (i_var3 = FUN_2a60_0913(), i_var3 != 0)))) {
            fun_154b_0395();
        }
        if (((0xd1e != '\0') || (0x992c == 1)) && (i_var3 = FUN_2a60_0913(), i_var3 != 0)) {
            fun_1862_1975();
        }
        u_var2 = 0xc468;
        if ((((0xd < 0x992c) && (0x992c < 0x12)) || (0xd1e != '\0')) && (i_var3 = FUN_2a60_0913(), i_var3 != 0)) {
            fun_20d3_0bed();
        }
        if (((0xd1e != '\0') || (0x992c == 0x15)) && (i_var3 = FUN_2a60_0913(), i_var3 != 0)) {
            fun_2239_0147();
        }
        if (((0x992c == 0x13) || (0xd1e != '\0')) && (i_var3 = FUN_2a60_0913(), i_var3 != 0)) {
            fun_1d9a_0245();
        }
        if ((0x992c == 9) && (i_var3 = FUN_2a60_0913(), i_var3 != 0)) {
            fun_1e08_1428();
        }
        if (((0x992c == 0x1c) || (0xd1e != '\0')) && (i_var3 = FUN_2a60_0913(), i_var3 != 0)) {
            fun_25d6_0038();
        }
        if (((*0xa48 & 1) == 0) && (u_var2 = 0xc47c, (0x72ee | 0x72ec) != 0)) {
            fun_3143_0c84();
            u_var2 = 0xc47c;
            0x72ee = 0;
            0x72ec = 0;
        }
        if (((*0xaf6 & 1) == 0) && (u_var2 = 0xc47e, (0x72f4 | 0x72f2) != 0)) {
            fun_3143_0c84();
            u_var2 = 0xc47e;
            0x72f4 = 0;
            0x72f2 = 0;
        }
        if ((0x1397 == '\0') && (i_var3 = FUN_2a60_0913(), i_var3 != 0)) {
            fun_154b_0359();
        }
        fun_1862_247e();
        if ((0x139c == 0) && (u_var2 = 0xc482, 0x139a != 0)) {
            i_var3 = 0x139a;
            if (i_var3 == 2) {
                if (0xabe == 1) {
                    FUN_39d9_0d9c();
                }
            } else {
                if (i_var3 == 3) {
                    if (0xabe == 2) {
                        FUN_39d9_0dba();
                    }
                } else {
                    if ((i_var3 == 4) && (0xabe == 3)) {
                        FUN_39d9_0d4c();
                    }
                }
            }
            0x139a = 0;
        }
        0x10d4 = 0;
        return;
    }
    if (0xcf62 < 2) {
        local_16 = -1;
    } else {
        if (0x7faa + -4 <= 0xcf62) {
            local_16 = 1;
        }
    }
    if (0xcf64 < 1) {
        local_18 = -1;
    } else {
        if (0x7fac + -4 <= 0xcf64) {
            local_18 = 1;
        }
    }
    if (((local_16 == 0) && (local_18 == 0)) || (i_var3 = fun_154b_0589(), i_var3 == 0))
    goto
    LAB_148d_06a2;
}
    while (true);
}


fn fun_148d_099f()

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u16;
    let i_var4: i16;
    let u_var5: u16;
    let u_var6: u16;
    let u_var7: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    u_var3 = FUN_2a25_00b4(0x3444);
    i_var4 = FUN_2692_0a3d(0x2a25, 0x1d);
    if (i_var4 != 0) {
        if (u_var3 == 0x817) {
            fun_148d_0ba9(0x2692);
            return;
        }
        if (u_var3 == 0x81f) {
            return;
        }
        if (u_var3 == 0x822) {
            fun_1862_0a23(0x2692);
            u_var6 = 0x2d56;
            fun_2d56_0eee(0x1862);
            while (true) {
                i_var4 = FUN_2d56_0d89(u_var6);
                if (i_var4 != 0) {
                    return;
                }
                i_var4 = FUN_2a25_003c(0x2d56);
                if (i_var4 != 0) {
                    return;
                }
                if ((*0x909 & 1) == 0) {
                    return;
                }
                if (0x992c != 9)
                break;
                u_var6 = 0xc48a;
                pi_var1 = 0xd2e;
                *pi_var1 = *pi_var1 + -2;
                if (*pi_var1 < 0) {
                    pi_var1 = 0xd2e;
                    *pi_var1 = *pi_var1 + 0x80;
                }
                u_var6 = 0x1e08;
                FUN_1e08_0884(0x2a25);
            }
            return;
        }
        if (u_var3 == 0x82f) {
            u_var6 = 0xc48c;
            fun_2a60_0221(0x2692, 0x66, 0x68);
            return;
        }
    }
    i_var4 = 0;
    while (u_var2 = (i_var4 * 4 + 0x1052), u_var2 != 0) {
        if (u_var2 == u_var3) {
            fun_2692_03a7(0x2692, (i_var4 * 4 + 0x1054), 0, 0, 0);
            break;
        }
        i_var4 = i_var4 + 1;
    }
    u_var6 = 0x2692;
    if ((i_var4 * 4 + 0x1052) != 0) {
        return;
    }
    if ((*0x9c65 & 1) == 0) {
        if ((u_var3 & 0x800) == 0) {
            u_var6 = 0x3444;
            i_var4 = FUN_3444_1970(0x2692, u_var3);
            if ((0x10f8 + 0x10f2) != i_var4)
            goto
            LAB_148d_0ab8;
            pi_var1 = 0x10f8;
            *pi_var1 = *pi_var1 + 1;
        } else {
// LAB_148d_0ab8:
            0x10f8 = 0;
        }
        if ((0x10f8 + 0x10f2) == '\0') {
            if (0x9c65 == '\0') {
                u_var7 = 0x4653;
// LAB_148d_0aec:
                uVar5 = 0x1c01;
            } else {
                if (0x9c65 != '\b') {
                    u_var7 = 0x4652;
                    goto
                    LAB_148d_0aec;
                }
                u_var7 = 0x4652;
                u_var5 = 0x1d01;
            }
            fun_2b26_0e73(u_var6, u_var5, 0, 0, u_var7);
            
            0x1398 = 1;
            if (0x9c65 == '\b') {
                if ((*0xb4d & 1) != 0) {
                    u_var6 = 0x1d00;
// LAB_148d_0b2e:
                    FUN_2b26_0754(0x2b26, u_var6);
                }
            } else {
                if ((*0xb30 & 1) != 0) {
                    u_var6 = 0x1c00;
                    goto
                    LAB_148d_0b2e;
                }
            }
            0x10f8 = 0;
            u_var6 = 0x25d6;
            fun_25d6_0004(0x2b26);
        }
    }
    u_var7 = u_var6;
    if ((u_var3 & 0x800) == 0) {
        u_var7 = 0x3444;
        i_var4 = FUN_3444_1970(u_var6, u_var3);
        if ((0x1102 + 0x10fa) == i_var4) {
            pi_var1 = 0x1102;
            *pi_var1 = *pi_var1 + 1;
            goto
            LAB_148d_0b68;
        }
    }
    0x1102 = 0;
// LAB_148d_0b68:
    if ((0x1102 + 0x10fa) == '\0') {
        0x1102 = 0;
        loop {
            FUN_39d9_0cf2(u_var7);
            u_var7 = 0x1862;
            fun_1862_1975(0x39d9);
            pi_var1 = 0x1102;
            *pi_var1 = *pi_var1 + 1;
        }
        while (0x1102 < 10);
        fun_154b_0395(0x1862);
        FUN_1e08_0884(0x154b);
        fun_1862_247e(0x1e08);
        0x1102 = 0;
    }
    return;
}


fn fun_148d_0ba9()

{
    undefined
    local_2a[24];
    let u_stack_y18: u16;
    let u_stack_y16: u16;
    undefined * puStackY14;

    fun_3444_02c6(0x39d9);
    puStackY14 = local_2a;
    u_stack_y16 = 0x3444;
    u_stack_y18 = 0x54a1;
    fun_3444_1aca();
    fun_2a60_0221();
    return;
}


fn fun_154b_000c(param_1_00: u16, param_1: u16, param_2: u16)

{
    let i_var1: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((*0x804 & 1) != 0) {
        i_var1 = FUN_3444_1764(0x3444, 0xcb98);
        if (i_var1 != 0) {
            fun_154b_0048(0x3444, param_1, param_2);
        }
    }
    return;
}


fn fun_154b_0048()

{
    code * *ppcVar1;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_3444_172e(0x3444);
    fun_2b26_0e3b();
    fun_294b_0b7c();
    fun_294b_02f2();
    fun_294b_077b();
    fun_168b_0685();
    if (0x7faa == 0x140) {
        ppcVar1 = (code * *)
        0xcf6c;
        (**ppcVar1)();
    }
    fun_168b_034f();
    fun_294b_0c76();
    if (0x7faa == 0x140) {
        ppcVar1 = (code * *)
        0xcf70;
        (**ppcVar1)();
    }
    return;
}


fn fun_154b_00d4()

{
    code * *ppcVar1;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_2b26_0e3b();
    fun_168b_04c4();
    ppcVar1 = (code * *)
    0xcf6c;
    (**ppcVar1)();
    fun_168b_0752(0x168b);
    ppcVar1 = (code * *)
    0xcf70;
    (**ppcVar1)();
    return;
}


fn fun_154b_012d()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((*0x804 & 1) != 0) {
        fun_294b_02f2(0x3444, 0);
        fun_154b_0153(0x294b);
        fun_294b_03be(0x294b);
    }
    return;
}


fn fun_154b_0153()

{
    let u_var1: u16;
    let i_var2: i16;
    code * *ppcVar3;
    let i_var4: i16;
    let u_var5: u16;
    let unaff_ds: u16;
    let u_var6: u32;

    u_var5 = 0x3444;
    fun_3444_02c6(0x39d9);
    ppcVar3 = (code * *)
    0xcf6c;
    (**ppcVar3)(0x3444);
    if (0xcf6 == 0) {
        i_var4 = 0x97;
    } else {
        u_var5 = 0xc49a;
        u_var1 = 0xd04;
        i_var4 = 0xd06;
        u_var5 = 0xc49c;
        i_var2 = 0xd02;
        if ((i_var4 <= i_var2) && ((i_var4 < i_var2 || (u_var1 < 0xd00)))) {
            CONCAT22(u_var5, 0xd00) = u_var1;
            0xd02 = i_var4;
        }
        i_var4 = 0x96;
        u_var5 = 0x168b;
        fun_168b_0752(0x3444, 0x1a, 0x112b);
    }
    if (0x1130 != i_var4) {
        fun_294b_0b7c(u_var5);
        fun_294b_02f2();
        fun_168b_097f();
        u_var6 = fun_168b_0008();
        (u_var6 + 0x26) = i_var4;
        0x1130 = i_var4;
        fun_168b_027d(0x168b, 0x1c, i_var4);
        u_var5 = 0x294b;
        fun_294b_0c76(0x168b);
    }
    ppcVar3 = (code * *)
    0xcf70;
    (**ppcVar3)(u_var5);
    return;
}


fn fun_154b_0225()

{
    fun_3444_02c6(0x39d9);
    fun_2b26_05ce(0x3444, 0);
    fun_294b_02f2(0x2b26, 0);
    fun_154b_02e4(0x294b);
    fun_154b_0048(0x294b, 0xcb98);
    fun_200c_0153(0x294b, 0x15b7, 0x5b2d);
    fun_154b_03ef(0x200c);
    fun_294b_03be(0x200c);
    return;
}


fn fun_154b_0266()

{
    let u_var1: u16;
    let i_var2: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_2b26_0e3b(0x3444, 0x17, 0x15c1, 0x5b2d);
    u_var1 = 0xc49e;
    i_var2 = (0x15c5 - 0x15c1) + 1;
    0xff30 = i_var2 / 0x138a;
    0xff32 = ((0x15c7 - 0x15c3) + 1) / 0x1388 + 1;
    0xcbde = i_var2 / 0x7fd6;
    fun_2b26_0e3b(0x2b26, 0x19, 0xcabe);
    return;
}


fn fun_154b_02e4()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    FUN_3444_1f84(0x3444, 0xc57, 0x5b2d, 0xffff, 0x960);
    
    0x138f = 1;
    return;
}


fn fun_154b_0359(param_1_00: u16, param_1: u16, param_2: u16)

{
    fun_3444_02c6(0x39d9);
    fun_294b_0b7c(0x3444);
    fun_200c_0995(0x294b, param_1, param_2);
    fun_294b_0c76(0x200c);
    return;
}


fn fun_154b_037e()

{
    fun_3444_02c6(0x39d9);
    fun_294b_0b7c(0x3444);
    FUN_200c_0280(0x294b);
    fun_294b_0c76(0x200c);
    return;
}


fn fun_154b_0395()

{
    let unaff_ds: u16;
    let local_a: u16;
    let u_stack_y8: u16;
    let pu_stack_y6: *mut u16;

    pu_stack_y6 = 0x5850;
    fun_3444_02c6(0x39d9);
    pu_stack_y6 = &local_a;
    u_stack_y8 = 0;
    local_a = 0x3444;
    fun_2b26_0e3b();
    if ((*0x804 & 1) != 0) {
        if (0x992c == 0) {
            pu_stack_y6 = &local_a;
            u_stack_y8 = 0x2b26;
            local_a = 0x5882;
            fun_294b_0cfc();
        } else {
            pu_stack_y6 = 0x2b26;
            u_stack_y8 = 0x588d;
            fun_294b_02f2();
        }
        pu_stack_y6 = 0x5892;
        fun_154b_03ef();
        pu_stack_y6 = 0x5896;
        fun_154b_0153();
        pu_stack_y6 = 0x589b;
        fun_294b_03be();
    }
    return;
}


unsafe fn fun_154b_03ef()

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ds: u16;
    let local_c: u16;
    let pu_stack10: *mut u16;

    fun_3444_02c6(0x39d9);
    if (*0x804 & 1) != 0 {
        pu_stack10 = 0x58bf;
        fun_154b_0266();
        if 0xd21 == '\0' {
            // for (iVar4 = 0; piVar1 = 0xff30, *piVar1 != iVar4 &&i_var4 < = * piVar1;
            //     iVar4 = iVar4 + 1) {
            loop {
                // for (iVar3 = 0; iVar2 = 0xff32, i_var3 < iVar2; iVar3 = iVar3 + 1) {
                loop {
                    if ((0xff30 - i_var4 != 1) || (i_var2 - i_var3 != 1)) && (0x1118 == 0 || ((i_var3 != 0 || (pi_var1 = 0xfff5, *pi_var1 != i_var4 && i_var4 <= *pi_var1)) || (0xfff7 < i_var4))) {
                        local_c = 0x3444;
                        pu_stack10 = i_var4;
                        FUN_154b_0b72();
                    }
                }
            }
        } else {
            // for (iVar4 = 0; piVar1 = 0xff30, *piVar1 != iVar4 &&i_var4 < = * piVar1;
            //     iVar4 = iVar4 + 1) {
            loop {
                // for (iVar3 = 0; iVar2 = 0xff32, i_var3 < iVar2; iVar3 = iVar3 + 1) {
                loop {
                    if ((0xff30 - i_var4 != 1) || (i_var2 - i_var3 != 1)) && ((0x1118 == 0 || (i_var3 != 0 || (pi_var1 = 0xfff5, *pi_var1 != i_var4 && i_var4 <= *pi_var1))) || (0xfff7 < i_var4)) {
                        local_c = 0x3444;
                        pu_stack10 = i_var4;
                        FUN_154b_07f7();
                    }
                }
            }
        }
        if (0x1118 != 0) && (0x7faa != 0x140) {
            pu_stack10 = 0x59af;
            fun_294b_0b7c();
            pu_stack10 = &local_c;
            local_c = 0x5b2d;
            FUN_200c_00a0(0x294b, 0x15b7);
            pu_stack10 = &local_c;
            local_c = 0x200c;
            fun_294b_08c8();
            if 0xd21 == '\0' {
                // for (iVar4 = 0xfff5; i_var4 < = 0xfff7; iVar4 = iVar4 + 1) {
                for i_var4 in 0xfff5 .. 0xfff7 {
                    local_c = 0x294b;
                    pu_stack10 = i_var4;
                    FUN_154b_0b72();
                }
            } else {
                // for (iVar4 = 0xfff5; i_var4 < = 0xfff7; iVar4 = iVar4 + 1) {
                for i_var4 in 0xfff5 .. 0xfff7 {
                    local_c = 0x294b;
                    pu_stack10 = i_var4;
                    FUN_154b_07f7();
                }
            }
            pu_stack10 = 0x5a29;
            fun_294b_0c76();
        }
    }
    
    0x138f = 0;
    return;
}


fn fun_154b_0589(param_1_00: u16, param_1: i16, param_2: i16) -> u16

{
    let u_var1: u16;
    let i_var2: i16;
    let i_var3: i16;
    let unaff_ds: u16;
    let local_12: *mut u16;
    let local_e: *mut u16;
    let local_8: i16;
    let i_var4: i16;

    fun_3444_02c6(0x39d9);
    fun_154b_0266(0x3444);
    if (param_1 < 1) {
        i_var4 = -(param_1 != 0);
    } else {
        i_var4 = 1;
    }
    if (param_2 < 1) {
        i_var3 = -(param_2 != 0);
    } else {
        i_var3 = 1;
    }
    u_var1 = 0xc4b2;
    local_e = CONCAT22(u_var1, 0xd2e);
    i_var2 = 0xd2e;
    u_var1 = 0xc4b4;
    local_12 = CONCAT22(u_var1, 0xd30);
    local_8 = 0xd30;
    if ((*0x804 & 1) != 0) {
        while ((param_1 != 0 || (param_2 != 0))) {
            if (param_1 != 0) {
                *local_e = *local_e + i_var4;
                param_1 = param_1 - i_var4;
            }
            if (param_2 != 0) {
                *local_12 = *local_12 + i_var3;
                param_2 = param_2 - i_var3;
            }
            fun_154b_064d(0x3444);
            i_var3 = 0x3444;
            local_8 = 0x5add;
            fun_154b_0395();
        }
        if ((*local_e != i_var2) || (*local_12 != local_8)) {
            return 1;
        }
    }
    return 0;
}


fn fun_154b_064d() -> u16

{
    let u_var1: u16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    let local_a: *mut u16;
    let pi_var4: *mut u16;
    let u_var5: u16;

    fun_3444_02c6(0x39d9);
    u_var3 = 0;
    u_var5 = 0xc4b2;
    pi_var4 = CONCAT22(u_var5, 0xd2e);
    if (0xd2e < 0) {
        pi_var4 = 0xd2e;
        *pi_var4 = *pi_var4 + 0x80;
// LAB_154b_0683:
        uVar3 = 1;
    } else {
        if (0x7f < *pi_var4) {
            *pi_var4 = *pi_var4 + -0x80;
            goto
            LAB_154b_0683;
        }
    }
    u_var1 = 0xc4b4;
    local_a = CONCAT22(u_var1, 0xd30);
    if (0xd30 < 0) {
        0xd30 = 0;
    } else {
        i_var2 = 0xff32 << (1 - (0xd21 == '\0') & 0x1f);
        if (i_var2 + *local_a < 0x41)
        goto
        LAB_154b_06d2;
        *local_a = 0x40 - i_var2;
    }
    u_var3 = 1;
// LAB_154b_06d2:
    FUN_294b_0c6d(0x3444, u_var5);
    fun_294b_02f2();
    fun_1862_2340(0x294b, u_var5);
    FUN_1862_2140(0x1862, u_var5);
    fun_294b_0c76(0x1862, u_var5);
    return u_var3;
}


fn fun_154b_06f7(param_1_00: u16, param_1: i16, param_2: i16)

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u16;
    let i_var4: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_294b_02f2(0x3444, 0);
    if (0xd2e < param_1) {
        i_var4 = 0;
    } else {
        i_var4 = 0x80;
    }
    u_var3 = (-(0xd21 == '\0') & 1) - 2;
    param_1 = (i_var4 - (u_var3 & 0xd2e)) + param_1;
    u_var2 = 0xc4b4;
    if (0xd30 < param_2) {
        i_var4 = 0;
    } else {
        i_var4 = 0x40;
    }
    param_2 = (i_var4 - (u_var3 & 0xd30)) + param_2;
    if (0xd21 != '\0') {
        param_1 = param_1 >> 1;
        param_2 = param_2 >> 1;
    }
    i_var4 = 0xff32;
    if (((((i_var4 - param_2 != 1) || (0xff30 - param_1 != 1)) && (-1 < param_1)) && ((param_1 <= 0xff30 + -1 && (-1 < param_2)))) && (param_2 <= i_var4 + -1)) {
        if (((0x1118 == 0) || (param_2 != 0)) || ((pi_var1 = 0xfff5, *pi_var1 != param_1 && param_1 <= *pi_var1 || (0xfff7 < param_1)))) {
            if (0xd21 == '\0') {
                FUN_154b_0b72(0x294b, param_1, param_2);
            } else {
                FUN_154b_07f7(0x294b, param_1, param_2);
            }
        }
        fun_294b_03be(0x294b);
    }
    return;
}


// WARNING: Instruction at (ram,0x0001ec61) overlaps instruction at (ram,0x0001ec60)
//
// WARNING: Control flow encountered bad instruction data
// WARNING: Stack frame is not setup normally: Input value of stackpointer is not used
// WARNING: Removing unreachable block (ram,0x0001f82d)
// WARNING: Removing unreachable block (ram,0x0001f805)
// WARNING: Removing unreachable block (ram,0x0001f765)
// WARNING: Removing unreachable block (ram,0x00013995)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined2 * FUN_154b_07f7()

{
int * * ppiVar1; let pcVar2: String;
let piVar3: * mut u16; code * *ppcVar4; let puVar5: * mut u16; let puVar6: * mut u16; char cVar7; let puVar8: * mut u16; let uVar9: u16; let uVar10: u16; let uVar11: u16; let puVar12: * mut u16; let iVar13: i16; let iVar14: i16; let bVar15: u8; let extraout_DX: i16; let extraout_DX_00: i16; let extraout_DX_01: i16; let pcVar16: String; let in_BX: * mut u16;
let iVar17: i16; let puVar18: * mut u16; let iVar19: i16; let iVar20: i16; let puVar21: * mut u16; let puVar22: * mut u16; let iVar23: i16; let puVar24: * mut u16; let puVar25: * mut u16; let puVar26: * mut u16; let puVar27: * mut u16; let puVar28: * mut u16; undefined * puVar29;
undefined * puVar30; let puVar31: * mut u16; let puVar32: * mut u16; let puVar33: * mut u16; let puVar34: * mut u16; let puVar35: * mut u16; let puVar36: * mut u16; let puVar37: *mut u16; let puVar38: * mut u16;
let puVar39: * mut u16; let puVar40: * mut u16; let puVar41: * mut u16; let puVar42: * mut u16; undefined *puVar43; let puVar44: * mut u16; let puVar45: * mut u16; undefined * puVar46;
undefined * puVar47; undefined * puVar48; let puVar49: * mut u16; undefined * puVar50; let iVar51: i16; let puVar52: * mut u16; let puVar53: * mut u16; let iVar54: i16; let puVar55: * mut u16;
let puVar56: * mut u16; let puVar57: * mut u16; let puVar58: * mut u16; let puVar59: * mut u16; let puVar60: * mut u16; let iVar61: i16;
let puVar62: * mut u16; let puVar63: * mut u16; let puVar64: * mut u16; let puVar65: * mut u16; let puVar66: * mut u16; let puVar67: * mut u16; undefined * puVar68; int * * ppiVar69; undefined * puVar70; let puVar71: * mut u16; let puVar72: * mut u16; undefined * puVar73; let piVar74: * mut u16;
let piVar75: * mut u16; let iVar76: i16; let iVar77: i16; let iVar78: i16; let iVar80: i16; undefined * puVar82; let iVar83: i16; undefined * puVar84;
undefined * puVar85; undefined * puVar86; undefined *puVar87; undefined * puVar88; undefined * puVar89;
undefined * puVar90; undefined * puVar91; undefined *puVar92; undefined * puVar93; undefined * puVar94;
let iVar95: i16; let piVar96: * mut u16; undefined * puVar97; let puVar98: *mut u16; let piVar99: * mut u16;
let piVar100: * mut u16; undefined * puVar101; let puVar102: * mut u16; let puVar103: * mut u16; undefined * puVar104; let puVar105: * mut u16; let puVar106: *mut u16; undefined * puVar107; undefined * puVar108; undefined * puVar109; undefined * puVar110; undefined * puVar111; let puVar112: * mut u16;
let puVar113: * mut u16; let puVar114: * mut u16; undefined * puVar115; undefined *puVar116; let puVar117: * mut u16; let puVar118: * mut u16; let puVar119: *mut u16; let puVar120: * mut u16;
undefined * puVar121; let puVar122: * mut u16; let piVar123: * mut u16; let piVar124: * mut u16; let piVar125: * mut u16; undefined * puVar126; let piVar127: *mut u16; let piVar128: * mut u16;
let puVar129: * mut u16; let puVar130: * mut u16; undefined * puVar131; undefined *puVar132; undefined * puVar133; let piVar134: *mut u16; let piVar135: * mut u16;
let iVar136: i16; undefined * puVar137; let iVar138: i16; let iVar139: i16; let puVar140: * mut u16; let in_ESP: u32; let uVar142: u16; ulong uVar141; let    unaff_BP: u16; let pbVar143: * mut u8; let unaff_SI: u16; let piVar144: *mut u16; let unaff_DI: u16; let uVar145: u16; let pbVar146: * mut u8;
let pbVar147: * mut u8; let pbVar148: * mut u8; let uVar149: u16; let    unaff_SS: u16; let unaff_DS: u16; bool bVar150; bool bVar151; let lVar152: i32;
let uVar153: u32; undefined * puVar79; undefined * puVar81;

iVar51 = in_ESP; pbVar147 = (iVar51 + - 2); pbVar143 = (iVar51 + - 2); uVar9 = (undefined2)(in_ESP >> 0x10); (iVar51 + - 2) = unaff_BP; (iVar51 + -4) = 0x39d9; uVar149 = 0x3444; puVar52 = (iVar51 + - 6); (iVar51 + - 6) = 0x5cb2; FUN_3444_02c6( *(u16 * )(iVar51 + - 4)); puVar52[1] = unaff_DI; puVar140 = CONCAT22(uVar9, puVar52); * puVar52 = unaff_SI; uVar145 = 0xd2e / 2 + (iVar51 + 4) & 0x3f; pbVar146 = (uVar145 * 2); puVar8 = (0xd30 / 2); piVar144 = ((puVar8 + (iVar51 + 6)) * 2); if (piVar144 < 0) {
return puVar8;
}
if (0x3f < piVar144) {
return puVar8;
}
if ((0xd14 == 0) || (in_BX = (uVar145 * 0x20 + (piVar144 >> 1)),
(in_BX + - 0x247d) == '\0')) {
uVar9 = 0x6169; uVar10 = DAT_616d_0cd6 - 1;
if (uVar10 < 6) {
bVar150 = uVar10 < 0; puVar8 = (uVar10 * 2); bVar151 = bVar150 != puVar8 < 0; uVar149 = 0x1000; switch(uVar10) {
case 0: uVar141 = ZEXT24(puVar52 + 1); loop {
if (bVar150) goto LAB_1d85_007c; loop {
puVar5 = * ff(iVar51 + - 0xc); (puVar5 + 2) = 0; * puVar5 = 0; while ( true ) {
iVar77 = uVar141; (iVar77 + - 2) = uVar149; uVar149 = 0x154b; uVar141 = (iVar77 - 4); (iVar77 + - 4) = 0xd8fe; FUN_154b_012d(); loop {
if (0xd23 == '\0') {
iVar78 = uVar141; (iVar78 + - 2) = uVar149; uVar149 = 0x10f0; puVar79 = (undefined * )(iVar78 + - 4);
(iVar78 + - 4) = 0xd90f; FUN_10f0_0a4f(); uVar141 = (puVar79 + 2);
}
loop {
iVar80 = uVar141; (iVar80 + - 2) = uVar149; puVar81 = (undefined * )(iVar80 + - 4); (iVar80 + -4) = 0xd914; FUN_148d_03d4(); (puVar81 + - 2) = (0xd32 * 2 + 0x1c72); (puVar81 + - 4) = unaff_SS; (puVar81 + - 6) = iVar51 + - 6; (puVar81 + - 8) = 0x148d; uVar149 = 0x2a60; puVar82 = puVar81 + - 10; (puVar81 + - 10) = 0xd92d; iVar17 = FUN_2a60_0913();
uVar141 = (puVar82 + 6);
} while (iVar17 == 0); (puVar82 + 4) = 0x2a60; uVar149 = 0x2692; uVar141 = (puVar82 + 2); (puVar82 + 2) = 0xd876; uVar153 = FUN_2692_05ab(); (iVar51 + - 6) = uVar153;
(iVar51 + - 4) = (uVar153 >> 0x10);
} while ((0xabe == 0) || (0xd23 != '\0')); iVar76 = uVar141;
(iVar76 + - 2) = 0x2692; uVar141 = (iVar76 - 4); (iVar76 + - 4) = 0xd898; FUN_1d85_00ef();
uVar145 = 0xaca; (iVar51 + - 8) = uVar145; uVar9 = 0xc5a0; (iVar51 + - 0xc) = 0xd00; (iVar51 + -10) = uVar9; iVar17 = 0xd02; if (iVar17 < = uVar145 >> 0xf) break;
// LAB_1d85_007c:
puVar6 = * (uint * * )(iVar51 + - 0xc); puVar18 = puVar6;
uVar145 = puVar18[1]; uVar9 = 0xc5a2; puVar140 = 0xd06; uVar10 = * puVar140;
if ((uVar145 < = uVar10) & &
(( * puVar140 != uVar145 & & uVar145 <= uVar10 || ( * puVar6 < = 0xd04)))) {
uVar10 = (iVar51 + - 8) + 1; uVar9 = (iVar51 + - 10);
puVar140 = puVar18; uVar145 = * puVar140; *puVar140 = * puVar140 - uVar10; puVar140 = puVar18 + 1; * puVar140 = ( * puVar140 - (uVar10 >> 0xf)) - (uVar145 < uVar10);
}
}
} while (iVar17 < uVar145 >> 0xf);
bVar150 = uVar145 < 0xd00;
} while ( true ); case 1:
// LAB_1862_0829:
(iVar51 + - 8) = 0x1cfb; (iVar51 + - 6) = 0x5b2d; (iVar51 + -4) = 0; while (puVar70 = (undefined * )puVar140, (iVar51 + - 4) < 0xb) {
uVar9 = (iVar51 + - 6); uVar142 = 0xc522; iVar17 = (iVar51 + - 4) * 4; (iVar17 + 0x1e87) = (iVar51 + - 8); (iVar17 + 0x1e89) = uVar9; (puVar70 + - 2) = 2; (puVar70 + - 4) = (iVar51 + - 10); (puVar70 + - 6) = uVar149; puVar71 = (puVar70 + - 8); (puVar70 + -8) = 0x8e8e; uVar153 = FUN_3074_00d3(); (iVar51 + - 0xe) = uVar153;
(iVar51 + - 0xc) = (uVar153 >> 0x10); puVar71[1] = (iVar51 + - 0x10); piVar3 = * (int * * )(iVar51 + - 0xe); iVar17 = * piVar3; * puVar71 = (piVar3 + 2); puVar71[ - 1] = iVar17 + 3; puVar71[ - 2] = (iVar51 + - 6); puVar71[- 3] = (iVar51 + - 8); puVar71[ - 4] = 0x3074; puVar72 = puVar71 + - 5; puVar71[ - 5] = 0x8eb3; FUN_3444_1f26(); (puVar72 + 8) = 2; (puVar72 + 6) = (iVar51 + - 10); piVar3 = (iVar51 + - 10); * piVar3 = * piVar3 + 1; (puVar72 + 4) = 0x3444; uVar149 = 0x3074; puVar73 = (undefined * )(puVar72 + 2);
(puVar72 + 2) = 0x8ec5; FUN_3074_01d4(); puVar140 = ZEXT24(puVar73 + 4); in_BX = * (undefined2 * * )(iVar51 + - 0x10); piVar3 = (iVar51 + - 8); * piVar3 = * piVar3 + in_BX; piVar3 = (iVar51 + - 4); * piVar3 = * piVar3 + 1;
}
// LAB_1862_08b0: if (0x9c65 == '\x06') {
(puVar70 + - 2) = 9; (puVar70 + - 4) = 10000; (puVar70 + - 6) = uVar149; piVar74 = (puVar70 + - 8); (puVar70 + -8) = 0x8ee7; uVar153 = FUN_3074_00d3(); (iVar51 + - 0xe) = uVar153;
(iVar51 + - 0xc) = (uVar153 >> 0x10); (iVar51 + - 4) = 0; while ((iVar51 + - 4) < 0x300) {
uVar153 = * ff * ff(iVar51 + - 0xe); pcVar2 = (char * )(uVar153 + (iVar51 + - 4)); * pcVar2 = *pcVar2 >> 2; piVar3 = (iVar51 + - 4); * piVar3 = * piVar3 + 1;
}
(iVar51 + - 0x20) = 0x1012; (iVar51 + - 0x1e) = 0; (iVar51 + - 0x1c) = 0x100; (iVar51 + - 0x1a) = * ff(iVar51 + - 0xe); uVar153 = * ff(iVar51 + - 0xe);
(iVar51 + - 0x28) = (uVar153 + 2); piVar74[1] = unaff_SS;
* piVar74 = iVar51 + - 0x28; piVar74[- 1] = unaff_SS; piVar74[ - 2] = iVar51 + - 0x20; piVar74[ -3] = unaff_SS; piVar74[ - 4] = iVar51 + - 0x20; piVar74[ - 5] = 0x10; piVar74[ - 6] = 0x3074; piVar75 = piVar74 + - 7; piVar74[ - 7] = 0x8f4c; FUN_3444_1be4(); (piVar75 + 0xc) = 9; (piVar75 + 10) = 10000; (piVar75 + 8) = 0x3444; (piVar75 + 6) = 0x8f5c; in_BX = FUN_3074_01d4();
}
* (undefined * )0x1a06 = 1; return in_BX; case 2: uVar153 = * ff(puVar8 + uVar145); uVar9 = (undefined2)(uVar153 >> 0x10);
pcVar16 = (char * )uVar153; loop {
if ( * pcVar16 == '/') {
iVar17 = pcVar16[2]; (iVar51 + - 6) = iVar17; bVar15 = pcVar16[1]; if (bVar15 == 0x73) {
uVar145 = (iVar51 + - 6); if (iVar17 < 0) {
// LAB_1357_02fc:
iVar20 = puVar140; (iVar20 + - 2) = unaff_DS; (iVar20 + - 4) = 0xe70; (iVar20 + - 6) = uVar149; puVar21 = (iVar20 + - 8);
(iVar20 + - 8) = 0x3876; FUN_3444_07d2(); puVar21[1] = 4;
* puVar21 = 0x3444; uVar149 = 0x3444; puVar22 = puVar21 + - 1; puVar21[ - 1] = 0x3881; FUN_3444_01db(); puVar140 = ZEXT24((undefined * )(puVar22 + 2));
}
else {
if (uVar145 == 0x74) {
// LAB_1357_03c3:
0x8 = 3;
}
else {
if ((0x74 < uVar145) || (bVar15 = uVar145, bVar15 < 0x41))
goto LAB_1357_02fc; if (bVar15 == 0x41 || bVar15 == 0x42) {
// LAB_1357_038b:
0x8 = 1;
}
else {
if (bVar15 != 0x43) {
if (bVar15 == 0x49) {
// LAB_1357_03a7:
0x8 = 0; goto LAB_1357_0284;
}
if (bVar15 == 0x4e) {
// LAB_1357_03b5:
0x8 = 0xffff; goto LAB_1357_0284;
}
if (bVar15 == 0x54) goto LAB_1357_03c3; if (0xc < (bVar15 + 0xac)) {
if (bVar15 == 0x61 || bVar15 == 0x62) goto LAB_1357_038b; if (bVar15 == 99) goto LAB_1357_0399; if (bVar15 == 0x69) goto LAB_1357_03a7; if (bVar15 == 0x6e) goto LAB_1357_03b5;
}
goto LAB_1357_02fc;
}
// LAB_1357_0399:
0x8 = 2;
}
}
}
}
else {
if (bVar15 < 0x74) {
if (bVar15 == 0x21) {
* (undefined * )0xf4f = 1;
}
else {
if (bVar15 == 0x62) {
* (undefined * )0x8538 = 1;
}
else {
if (bVar15 == 100) {
uVar145 = (iVar51 + - 6); if (iVar17 < 0) goto LAB_1357_02fc; if (uVar145 == 0x6d) {
* (undefined * )0x9c65 = 7;
}
else {
if (0x6d < uVar145) goto LAB_1357_02fc; cVar7 = uVar145; if (cVar7 == '2') {
* (undefined * )0x9c65 = 6;
}
else {
if (cVar7 == 'E') {
* (undefined * )0x9c65 = 0;
}
else {
if (cVar7 == 'H') {
* (undefined * )0x9c65 = 3;
}
else {
if (cVar7 == 'M') {
* (undefined * )0x9c65 = 5;
}
else {
if (cVar7 == 'T') {
* (undefined * )0x9c65 = 2;
}
else {
if (cVar7 == 'V') {
* (undefined * )0x9c65 = 8;
}
else {
if (cVar7 != 'e') goto LAB_1357_02fc; *(undefined * )0x9c65 = 4;
}
}
}
}
}
}
}
}
}
}
}
}
}
// LAB_1357_0284:
piVar144 = (piVar144 + 1); ppiVar1 = (int * * )(iVar51 + 4); if ( * ppiVar1 == piVar144 || *ppiVar1 < piVar144) {
iVar23 = puVar140; (iVar23 + - 2) = unaff_DS; (iVar23 + - 4) = 0xea7; (iVar23 + - 6) = uVar149; puVar24 = (iVar23 + - 8);
(iVar23 + - 8) = 0x394b; lVar152 = FUN_3444_1986(); puVar8 = puVar24 + 2; if (lVar152 != 0) {
puVar24[1] = unaff_DS; * puVar24 = 0xeab; puVar24[ - 1] = unaff_DS;
puVar24[ - 2] = 0xeb3; puVar24[- 3] = 0x3444; puVar25 = puVar24 + - 4; puVar24[ - 4] = 0x3960; uVar153 = FUN_3444_1986(); puVar25[1] = (uVar153 >> 0x10); *puVar25 = uVar153; puVar25[ - 1] = 0x3444; puVar26 = puVar25 + - 2; puVar25[ - 2] = 0x3969; iVar17 = FUN_3444_1d8c(); puVar8 = (puVar26 + 8); if (iVar17 == 0) {
* (undefined * )0x8538 = 1; puVar8 = (puVar26 + 8);
}
}
(puVar8 + - 2) = 0x3444; uVar149 = 0x3143; puVar29 = (undefined * )(puVar8 + - 4); (puVar8 + -4) = 0x397a; lVar152 = FUN_3143_1690(); uVar9 = 0xc418; 0xff93 = lVar152; 0xff95 = (lVar152 >> 0x10); if ((0xf4f == '\0') & & (lVar152 < 110000)) {
(puVar29 + - 2) = unaff_DS; (puVar29 + - 4) = 0xeb7; (puVar29 + - 6) = 0x3143; puVar27 = (puVar29 + - 8); (puVar29 + -8) = 0x39a4; FUN_3444_07d2(); puVar27[1] = 1; * puVar27 = 0x3444; uVar149 = 0x3444; puVar28 = puVar27 + -1; puVar27[ - 1] = 0x39af;
FUN_3444_01db(); puVar29 = (undefined * )(puVar28 + 2);
}
(puVar29 + - 2) = 7; (puVar29 + - 4) = uVar149; puVar30 = puVar29 + - 6; (puVar29 + - 6) = 0x39b9; FUN_3440_0043(); (puVar30 + 4) = 0x3444; puVar31 = (puVar30 + 2); (puVar30 + 2) = 0x39bf; FUN_3440_0042(); puVar31[1] = 0; * puVar31 = 0; puVar31[- 1] = 0; puVar31[ - 2] = 0x3444; puVar32 = puVar31 + - 3; puVar31[ - 3] = 0x39c9; uVar153 = FUN_3444_2108(); uVar9 = 0xc41a; 0xff8f = uVar153; 0xff91 = (uVar153 >> 0x10); pcVar2 = * (char * * )0xff8f; 0xff8d = * pcVar2; puVar32[2] = (pcVar2 >> 0x10); puVar32[1] = pcVar2; * puVar32 = 0x3444; puVar33 = puVar32 + - 1; puVar32[- 1] = 0x39f3; iVar17 = FUN_3444_178e(); (iVar51 + - 6) = iVar17 + - 1; uVar153 = * (undefined4 *)0xff8f; uVar9 = (undefined2)(uVar153 >> 0x10); pcVar16 = (uVar153 + iVar17 + - 1);
if ( * pcVar16 == '\\') {
* pcVar16 = '\0';
}
puVar33[1] = unaff_DS; * puVar33 = 0xf39; puVar33[ - 1] = 0x3444;
puVar34 = puVar33 + - 2; puVar33[ -2] = 0x3a19; FUN_3074_000c(); puVar34[1] = unaff_DS; * puVar34 = 0xf40; puVar34[ - 1] = 0x3074; puVar35 = puVar34 + - 2; puVar34[ - 2] = 0x3a25; FUN_27ac_0008(); puVar35[1] = 0x2a60; * puVar35 = 0x80f;
puVar35[ - 1] = 0x27ac; puVar36 = puVar35 + - 2; puVar35[ - 2] = 0x3a34; FUN_3444_2278(); puVar36[1] = 4; * puVar36 = 0x3444; puVar37 = puVar36 + - 1; puVar36[ - 1] = 0x3a3f; FUN_27ac_0b38(); * puVar37 = 0x27ac; puVar38 = puVar37 + - 1;
puVar37[ - 1] = 0x3a45; FUN_1ba9_0ca8(); (puVar38 + - 2) = 0; (puVar38 + - 4) = 0x1ba9;
puVar39 = (puVar38 + - 6); (puVar38 + - 6) = 0x3a4d; FUN_1ba9_0ce0(); * puVar39 = 0x1ba9; puVar40 = puVar39 + - 1; puVar39[ - 1] = 0x3a53; FUN_1ba9_0000(); (puVar40 + -2) = 5; (puVar40 + - 4) = 0x1ba9; puVar41 = (puVar40 + -6); (puVar40 + - 6) = 0x3a5c; FUN_27ac_0bdf(); * puVar41 = 0x27ac; puVar42 = puVar41 + - 1; puVar41[- 1] = 0x3a62; FUN_337d_0000();
(puVar42 + - 2) = 0x337d; puVar43 = (undefined * )(puVar42 + - 4); (puVar42 + - 4) = 0x3a67; FUN_168b_0028(); (puVar43 + - 2) = unaff_DS; (puVar43 + - 4) = 0xf43; (puVar43 + - 6) = 0x4b2d; (puVar43 + - 8) = 0xff3d; (puVar43 + - 10) = 0x168b;
puVar44 = (puVar43 + - 0xc); (puVar43 + - 0xc) = 0x3a79; FUN_3444_172e(); puVar44[3] = unaff_DS; puVar44[2] = 0xf49; puVar44[1] = 0x4b2d; * puVar44 = 0xff65; puVar44[- 1] = 0x3444; puVar45 = puVar44 + - 2; puVar44[ - 2] = 0x3a8e; FUN_3444_172e(); (puVar45 + 6) = 0x3444; puVar46 = (undefined * )(puVar45 + 4); (puVar45 + 4) = 0x3a96; FUN_1357_000e(); (puVar46 + - 2) = 0x1357; puVar47 = puVar46 + - 4; (puVar46 + - 4) = 0x3a9b; FUN_148d_0254(); (puVar47 + -2) = 0x148d; puVar48 = puVar47 + -4; (puVar47 + - 4) = 0x3aa0; FUN_1ba9_0000(); (puVar48 + - 2) = 0x1ba9; (puVar48 + - 4) = 0x3aa4; puVar8 = FUN_1357_053a(); return puVar8;
}
uVar153 = * ff(iVar51 + 6); uVar153 = * ff(piVar144 * 4 + uVar153); uVar9 = (undefined2)(uVar153 >> 0x10);
pcVar16 = (char * )uVar153;
} while ( true ); case 3: code_r0x000189c1:
iVar61 = puVar140; uVar142 = (undefined2)(puVar140 >> 0x10); (iVar61 + -2) = unaff_DS; (iVar61 + - 4) = 0x177a; (iVar61 + - 6) = uVar149; puVar62 = (iVar61 + - 8); (iVar61 + - 8) = 0x89cb; FUN_3444_1f26(); puVar62[4] = 0x12; puVar62[3] = unaff_DS; puVar62[2] = 0x15a4; puVar62[1] = unaff_DS; * puVar62 = 0x179a; puVar62[- 1] = 0x3444; puVar63 = puVar62 + - 2; puVar62[ - 2] = 0x89e1; FUN_3444_1f26(); puVar63[4] = 0x10; puVar63[3] = unaff_DS; puVar63[2] = 0x15b6; puVar63[1] = unaff_DS; * puVar63 = 0x17ac; puVar63[- 1] = 0x3444; puVar64 = puVar63 + - 2; puVar63[ - 2] = 0x89f7; FUN_3444_1f26(); puVar64[4] = 0x10; puVar64[3] = unaff_DS; puVar64[2] = 0x15c6; iVar13 = 0x17bc;
puVar64[1] = unaff_DS; * puVar64 = 0x17bc; puVar64[ - 1] = 0x3444;
puVar65 = puVar64 + - 2; puVar64[ -2] = 0x8a0d; FUN_3444_1f26(); puVar65[4] = 0x10; puVar65[3] = unaff_DS; puVar65[2] = 0x15d6;
puVar65[1] = unaff_DS; * puVar65 = 0x17cc; puVar65[ - 1] = 0x3444;
puVar66 = puVar65 + - 2; puVar65[ -2] = 0x8a23; FUN_3444_1f26(); puVar66[4] = 4; puVar66[3] = unaff_DS; puVar66[2] = 0x15e6;
puVar66[1] = unaff_DS; * puVar66 = 0x17dc; puVar66[ - 1] = 0x3444;
puVar67 = puVar66 + - 2; puVar66[ -2] = 0x8a39; FUN_3444_1f26(); puVar140 = CONCAT22(uVar142, (undefined * )(puVar67 + 10)); iVar17 = extraout_DX;
puVar12 = puVar8; loop {
uVar149 = 0x3444; in_BX = 0x9c65; if (0x8 < in_BX) {
// LAB_1862_079a:
puVar70 = (undefined * )puVar140; if (((0x9c65 == '\x02') || (0x9c65 == '\x04')) || (0x9c65 == '\x06')) goto LAB_1862_08b0; if ((0x9c65 == '\a') || (0x9c65 == '\b')) {
(iVar51 + - 10) = 0x2724;
}
else {
(iVar51 + - 10) = 10000;
}
puVar8 = 0x9c65; if (puVar8 == 0x0) {
(iVar51 + - 0x10) = 0x1c; in_BX = puVar8;
}
else {
in_BX = (puVar8 + - 3); if ((in_BX == 0x0) || (in_BX = (puVar8 + - 5), in_BX == 0x0)) {
(iVar51 + - 0x10) = 10;
}
else {
in_BX = (puVar8 + - 7); if (in_BX == 0x0) {
(iVar51 + - 0x10) = 0xc;
}
else {
in_BX = puVar8 + - 4; if (in_BX == 0x0) {
(iVar51 + - 0x10) = 0x24;
}
}
}
}
goto LAB_1862_0829;
}
puVar8 = (in_BX * 2); uVar149 = 0x1000; ppiVar69 = (int * * )puVar140; uVar142 = (undefined2)(puVar140 >> 0x10); switch(in_BX) {
case 0x0: if (iVar13 == 0) {
puVar8 = 0xa000; if (0x9c65 != '\x03') {
if ((piVar144 & 0xff) != 0) {
bVar15 = * (iVar51 + - 2);
puVar8 = CONCAT11(0xa0, bVar15); if ((bVar15 & 0x80) != 0) {
ppiVar69[ - 1] = 0x0; ppiVar69[- 2] = 0xf75b; puVar8 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1; return puVar8;
}
pcVar2 = (char * )0x67e8; * pcVar2 = * pcVar2 + '\x01'; iVar13 = - 1; pbVar147 = (iVar51 + 0x3e);
}
if (0 < iVar13) {
uVar141 = ZEXT24(ppiVar69 + - 1);
ppiVar69[ - 1] = piVar144; loop {
bVar15 = * pbVar147; puVar8 = (puVar8 & 0xff00 | bVar15); if ((bVar15 & 0x80) != 0) {
iVar138 = uVar141; (iVar138 + - 2) = 0x1000; uVar141 = (iVar138 - 4); (iVar138 + - 4) = 0xf79f;
puVar8 = ( * _DAT_a000_67e9)(); *(undefined * )0x67f1 = 1;
}
pcVar2 = (char * )0x67e8; * pcVar2 = * pcVar2 + '\x01'; pbVar147 = pbVar147 + 0x40; iVar13 = iVar13 + - 1;
} while (iVar13 != 0); piVar144 = *(int * * )uVar141; ppiVar69 = (int * * )uVar141 + 1;
}
if (((piVar144 & 0xff00) != 0) & & (bVar15 = * pbVar147,
puVar8 = (puVar8 & 0xff00 | bVar15),
(bVar15 & 0x80) != 0)) {
(ppiVar69 + - 2) = iVar13; (ppiVar69 + - 4) = 0xf7d1; puVar8 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1;
}
return puVar8;
}
puVar8 = 0xb000; if ((piVar144 & 0xff) != 0) {
bVar15 = * (iVar51 + - 2);
puVar8 = (bVar15 | 0xb000); if ((bVar15 & 0x80) != 0) {
ppiVar69[ - 1] = 0x0; ppiVar69[- 2] = 0xf7fb; puVar8 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1; return puVar8;
}
pcVar2 = (char * )0x67e8; * pcVar2 = * pcVar2 + '\x01'; iVar13 = - 1; pbVar143 = (iVar51 + 0x3e); pbVar147 = pbVar146 + 0x4000; if (pbVar147 < 0) {
pbVar147 = pbVar146 + - 0x3fa6;
}
pbVar146 = pbVar147 + 0x2000; if (pbVar146 < 0) {
pbVar146 = pbVar147 + - 0x5fa6;
}
pbVar147 = pbVar146 + 0x2000; if (pbVar147 < 0) {
pbVar147 = pbVar146 + - 0x5fa6;
}
pbVar148 = pbVar147 + 0x2000; if (pbVar148 < 0) {
pbVar148 = pbVar147 + - 0x5fa6;
}
pbVar146 = pbVar148 + 0x2000; if (pbVar146 < 0) {
pbVar146 = pbVar148 + - 0x5fa6;
}
}
if (0 < iVar13) {
uVar141 = ZEXT24(ppiVar69 + - 1);
ppiVar69[ - 1] = piVar144; loop {
bVar15 = * pbVar143; puVar8 = (puVar8 & 0xff00 | bVar15); if ((bVar15 & 0x80) != 0) {
iVar139 = uVar141; (iVar139 + - 2) = 0x1000; uVar141 = (iVar139 - 4); (iVar139 + - 4) = 0xf876;
puVar8 = ( * _DAT_b000_67e9)(); *(undefined * )0x67f1 = 1;
}
pcVar2 = (char * )0x67e8; * pcVar2 = * pcVar2 + '\x01'; pbVar143 = pbVar143 + 0x40; pbVar147 = pbVar146 + 0x2000; if (pbVar147 < 0) {
pbVar147 = pbVar146 + - 0x5fa6;
}
pbVar146 = pbVar147 + 0x2000; if (pbVar146 < 0) {
pbVar146 = pbVar147 + - 0x5fa6;
}
pbVar147 = pbVar146 + 0x2000; if (pbVar147 < 0) {
pbVar147 = pbVar146 + - 0x5fa6;
}
pbVar146 = pbVar147 + 0x2000; if (pbVar146 < 0) {
pbVar146 = pbVar147 + - 0x5fa6;
}
pbVar147 = pbVar146 + 0x2000; if (pbVar147 < 0) {
pbVar147 = pbVar146 + - 0x5fa6;
}
pbVar146 = pbVar147 + 0x2000; if (pbVar146 < 0) {
pbVar146 = pbVar147 + - 0x5fa6;
}
iVar13 = iVar13 + - 1;
} while (iVar13 != 0); piVar144 = *(int * * )uVar141; ppiVar69 = (int * * )uVar141 + 1;
}
if (((piVar144 & 0xff00) != 0) & & (bVar15 = * pbVar143, puVar8 = (puVar8 & 0xff00 | bVar15),
(bVar15 & 0x80) != 0)) {
(ppiVar69 + - 2) = iVar13; (ppiVar69 + - 4) = 0xf8df; puVar8 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1;
}
return puVar8;
}
if (iVar13 == 0) {
while ( true ) {
puVar8 = in (iVar17); bVar15 = (* puVar140 >> 8) + 1; uVar145 = * puVar140 & 0xff; if (uVar145 <= bVar15) break; iVar136 = (puVar140 + 1); uVar9 = (undefined2)((puVar140 + 1) >> 0x10); (iVar136 + - 2) = uVar145 | bVar15 << 8; (iVar136 + - 4) = 0x1000; puVar137 = (undefined * )(iVar136 + - 6); (iVar136 + - 6) = 0xf6ff; ppcVar4 = (code * *)0x67ed; ( * * ppcVar4)(); puVar140 = CONCAT22(uVar9, puVar137 + 2); iVar17 = extraout_DX_01;
}
return puVar8;
}
if (iVar13 != 0) {
return puVar12;
}
loop {
piVar144[0x81] = iVar17; puVar12 = (puVar12 & 0xf000 | ((puVar12 & 0xf0ff) | ((puVar12 & 0xf0ff) >> 8)) | 0x80); * pbVar146 = puVar12; loop {
piVar135 = puVar140; iVar13 = * piVar135; piVar3 = (iVar13 + - 0xe); * piVar3 = * piVar3 + 0x80; piVar3 = (iVar13 + - 0xc); * piVar3 = * piVar3 + 4; piVar3 = (iVar13 + - 0x10); * piVar3 = * piVar3 + 1;
piVar3 = (iVar13 + - 8); *piVar3 = * piVar3 + 1; if (((iVar13 + - 8) & 0x3f) == 0) {
piVar3 = (iVar13 + - 0xe); *piVar3 = * piVar3 + - 0x1ffe; piVar3 = (iVar13 + - 0xc); * piVar3 = * piVar3 + 0x100; (iVar13 + - 8) = 0; piVar3 = (iVar13 + -10); * piVar3 = * piVar3 + 1; if (((iVar13 + - 10) & 0x1f) == 0) {
return puVar12;
}
}
* piVar135 = 8; piVar135[ - 1] = 0x1234; piVar135[ - 2] = 0x1234; piVar135[ - 3] = 0x1234; piVar135[ - 4] = 0x1234; piVar135[ -5] = (iVar13 + - 0xe);
piVar135[ - 6] = (iVar13 + -10); piVar135[ - 7] = (iVar13 + - 8); piVar135[ - 8] = 0x1000; piVar134 = piVar135 + - 9; piVar135[ - 9] = 0xf576; ppcVar4 = (code * * )(iVar13 + 8); ( * * ppcVar4)();
uVar153 = * ff(iVar13 + 0x14); uVar9 = (undefined2)(uVar153 >> 0x10); iVar14 = uVar153; iVar17 = (piVar134 + 4) * 2; if ((piVar134 + 6) == 0x1234) {
uVar145 = (iVar17 + 0x6bd) & 0x1f;
if ((iVar13 + 6) < uVar145) {
uVar153 = * ff(iVar13 + 0xc); uVar9 = (undefined2)(uVar153 >> 0x10); iVar14 = uVar153;
}
else {
uVar145 = (uVar145 - (iVar13 + 6)) + 0x1f; uVar153 = * (undefined4 *)(iVar13 + 0x10); uVar9 = (undefined2)(uVar153 >> 0x10); iVar14 = uVar153;
}
uVar149 = (iVar14 + uVar145 * 2);
uVar153 = * ff(iVar13 + 0x14); uVar9 = (undefined2)(uVar153 >> 0x10); iVar14 = uVar153;
}
else {
uVar149 = (iVar14 + (piVar134 + 6) * 2);
}
(iVar13 + - 2) = uVar149; if ((piVar134 + 8) == 0x1234) {
uVar145 = (iVar17 + 0x73d) & 0x1f;
if ((iVar13 + 6) < uVar145) {
uVar153 = * ff(iVar13 + 0xc); uVar9 = (undefined2)(uVar153 >> 0x10); iVar14 = uVar153;
}
else {
uVar145 = (uVar145 - (iVar13 + 6)) + 0x1f; uVar153 = * (undefined4 *)(iVar13 + 0x10); uVar9 = (undefined2)(uVar153 >> 0x10); iVar14 = uVar153;
}
uVar149 = (iVar14 + uVar145 * 2);
uVar153 = * ff(iVar13 + 0x14); uVar9 = (undefined2)(uVar153 >> 0x10); iVar14 = uVar153;
}
else {
uVar149 = (iVar14 + (piVar134 + 8) * 2);
}
(iVar13 + - 4) = uVar149; if ((piVar134 + 10) == 0x1234) {
uVar145 = (iVar17 + 0x6bf) & 0x1f;
if ((iVar13 + 6) < uVar145) {
uVar153 = * ff(iVar13 + 0xc); uVar9 = (undefined2)(uVar153 >> 0x10); iVar14 = uVar153;
}
else {
uVar145 = (uVar145 - (iVar13 + 6)) + 0x1f; uVar153 = * (undefined4 *)(iVar13 + 0x10); uVar9 = (undefined2)(uVar153 >> 0x10); iVar14 = uVar153;
}
uVar149 = (iVar14 + uVar145 * 2);
uVar153 = * ff(iVar13 + 0x14); uVar9 = (undefined2)(uVar153 >> 0x10); iVar14 = uVar153;
}
else {
uVar149 = (iVar14 + (piVar134 + 10) * 2);
}
(iVar13 + - 6) = uVar149; if ((piVar134 + 0xc) == 0x1234) {
uVar145 = (iVar17 + 0x73f) & 0x1f;
if ((iVar13 + 6) < uVar145) {
uVar153 = * ff(iVar13 + 0xc); uVar9 = (undefined2)(uVar153 >> 0x10); iVar17 = uVar153;
}
else {
uVar145 = (uVar145 - (iVar13 + 6)) + 0x1f; uVar153 = * (undefined4 *)(iVar13 + 0x10); uVar9 = (undefined2)(uVar153 >> 0x10); iVar17 = uVar153;
}
iVar17 = (iVar17 + uVar145 * 2);
}
else {
iVar17 = (iVar14 + (piVar134 + 0xc) * 2);
}
pbVar146 = * (byte * * )(iVar13 + - 0x10); piVar144 = * (int * * )(iVar13 + - 0xc);
bVar15 = * pbVar146; uVar145 = (piVar134 + 0xe) & 0xff; uVar10 = bVar15 << 8; puVar12 = (uVar145 | uVar10);
puVar140 = ZEXT24((undefined * )(piVar134 + 0xe)); (piVar134 + 0xe) = iVar13; iVar14 = (iVar13 + - 4); iVar19 = (iVar13 + - 6); iVar13 = (iVar13 + - 2);
} while ((((((uVar10 & 0x8000) == 0) & & (iVar13 == *piVar144)) & & (iVar14 == piVar144[1])) & & ((iVar19 == piVar144[0x80] & & (iVar17 == piVar144[0x81])))) & & ((bVar15 & 0xf) == uVar145));
* piVar144 = iVar13; piVar144[1] = iVar14; piVar144[0x80] = iVar19;
} while ( true ); case 0x1: return puVar12; case 0x2: 0x139a = 0; 0x10d4 = 0; return puVar12; case 0x3: goto switchD_1000_8da3_caseD_3; case 0x4: * (undefined2 * * )(iVar51 + - 0x46) = puVar8; (iVar51 + - 0x44) = uVar9; * puVar8 = 0x8001; if (0xd21 == '\0') {
iVar17 = 0xff32;
}
else {
iVar17 = 0xff32 << 1;
}
(iVar51 + - 0x12) = iVar17; iVar17 = 0xd30; (iVar51 + - 0x16) = iVar17; * (int * * )(iVar51 + - 0x20) = piVar144; for (; iVar83 = puVar140, iVar17 < 0xd30 + (iVar51 + - 0x12); iVar17 = iVar17 + 1) {
uVar9 = 0xc600; iVar19 = iVar17 * 2;
(iVar51 + - 0x4e) = iVar19; iVar13 = (iVar19 + 0x5c1e); iVar14 = (iVar19 + 0x5c20); (iVar51 + - 0x4c) = iVar14; (iVar51 + - 0x50) = iVar13; iVar14 = iVar14 - iVar13; if (0 < iVar14) {
(iVar51 + - 8) = (iVar51 + - 0x1e) << 5; (iVar83 + - 2) = 0; (iVar83 + -4) = 0x4000; (iVar83 + - 6) = (iVar51 + - 0x34); (iVar83 + - 8) = (iVar51 + -0x36); iVar13 = (iVar19 + 0x5ca2); (iVar83 + - 10) = iVar13 >> 0xf; (iVar83 + - 0xc) = iVar13; (iVar51 + - 0x54) = iVar13; (iVar51 + - 0x52) = iVar13 >> 0xf; (iVar83 + - 0xe) = uVar149; puVar84 = (undefined * )(iVar83 + - 0x10); (iVar83 + - 0x10) = 0xe701; uVar153 = FUN_3444_23fe();
(puVar84 + - 2) = (uVar153 >> 0x10); (puVar84 + - 4) = uVar153; (puVar84 + - 6) = 0x3444; puVar85 = puVar84 + - 8; (puVar84 + - 8) = 0xe708; iVar19 = FUN_3444_2364(); iVar13 = (iVar51 + -0x32); (puVar85 + - 2) = 0; (puVar85 + - 4) = 0x4000; (puVar85 + - 6) = (iVar51 + - 0x52); (puVar85 + - 8) = (iVar51 + - 0x54); (puVar85 + - 10) = 0; (puVar85 + - 0xc) = 0x4000; (puVar85 + - 0xe) = (iVar51 + - 0x2e); (puVar85 + - 0x10) = (iVar51 + - 0x30); uVar9 = * ff(iVar51 + - 0x2c); (puVar85 + - 0x12) = 0; (puVar85 + - 0x14) = uVar9; (iVar51 + - 0x56) = - (iVar19 - iVar13); (puVar85 + - 0x16) = 0x3444;
puVar86 = puVar85 + - 0x18; (puVar85 + - 0x18) = 0xe732; uVar153 = FUN_3444_23fe(); (puVar86 + - 2) = (uVar153 >> 0x10); (puVar86 + -4) = uVar153; (puVar86 + - 6) = 0x3444; puVar87 = puVar86 + - 8; (puVar86 + - 8) = 0xe739;
uVar153 = FUN_3444_2364(); (puVar87 + -2) = (uVar153 >> 0x10);
(puVar87 + - 4) = uVar153; (puVar87 + - 6) = 0x3444; puVar88 = puVar87 + - 8; (puVar87 + - 8) = 0xe740; uVar153 = FUN_3444_23fe();
(puVar88 + - 2) = (uVar153 >> 0x10); (puVar88 + - 4) = uVar153; (puVar88 + - 6) = 0x3444; puVar89 = puVar88 + - 8; (puVar88 + - 8) = 0xe747; iVar13 = FUN_3444_2364(); iVar13 = iVar13 + (iVar51 + - 0x56) + (iVar51 + - 0x28); (iVar51 + - 0x1e) = iVar13; iVar13 = ((iVar13 * 0x20 - (iVar51 + - 8)) / iVar14) / 2; (iVar51 + - 0xc) = iVar13; (iVar51 + - 10) = iVar13 >> 0xf; (puVar89 + - 2) = 0; (puVar89 + - 4) = 2; (puVar89 + - 6) = (iVar51 + - 10); (puVar89 + - 8) = (iVar51 + - 0xc); (puVar89 + - 10) = 0x3444; puVar90 = puVar89 + - 0xc; (puVar89 + - 0xc) = 0xe777; iVar13 = FUN_3444_2364();
piVar3 = (iVar51 + - 8); *piVar3 = * piVar3 + iVar13; (iVar51 + - 6) = (iVar51 + - 0x1c) << 5; (puVar90 + - 2) = 0; (puVar90 + - 4) = 0x4000; (puVar90 + - 6) = (iVar51 + - 0x52); (puVar90 + -8) = (iVar51 + - 0x54);
(puVar90 + - 10) = 0; (puVar90 + - 0xc) = 0x4000; (puVar90 + - 0xe) = (iVar51 + - 0x2e); (puVar90 + - 0x10) = (iVar51 + - 0x30); uVar9 = * ff(iVar51 + - 0x3a);
(puVar90 + - 0x12) = 0; (puVar90 + - 0x14) = uVar9; (puVar90 + - 0x16) = 0x3444; puVar91 = puVar90 + - 0x18; (puVar90 + - 0x18) = 0xe7a7; uVar153 = FUN_3444_23fe(); (puVar91 + - 2) = (uVar153 >> 0x10); (puVar91 + - 4) = uVar153; (puVar91 + - 6) = 0x3444; puVar92 = puVar91 + - 8; (puVar91 + - 8) = 0xe7ae; uVar153 = FUN_3444_2364(); (puVar92 + - 2) = (uVar153 >> 0x10); (puVar92 + - 4) = uVar153; (puVar92 + -6) = 0x3444; puVar93 = puVar92 + -8; (puVar92 + - 8) = 0xe7b5; uVar153 = FUN_3444_23fe(); (puVar93 + - 2) = (uVar153 >> 0x10); (puVar93 + - 4) = uVar153;
(puVar93 + - 6) = 0x3444; puVar94 = puVar93 + - 8; (puVar93 + -8) = 0xe7bc; iVar13 = FUN_3444_2364(); iVar13 = iVar13 + (iVar51 + - 0x56) + (iVar51 + - 0x28); (iVar51 + - 0x1c) = iVar13; iVar13 = ((iVar13 * 0x20 - (iVar51 + -6)) / iVar14) / 2; (iVar51 + - 0x10) = iVar13; (iVar51 + - 0xe) = iVar13 >> 0xf;
(puVar94 + - 2) = 0; (puVar94 + - 4) = 2; (puVar94 + - 6) = (iVar51 + - 0xe); (puVar94 + - 8) = (iVar51 + - 0x10); (puVar94 + -10) = 0x3444; uVar149 = 0x3444; puVar140 = (puVar94 - 0xc); (puVar94 + - 0xc) = 0xe7ec; iVar13 = FUN_3444_2364(); piVar3 = (iVar51 + - 6); * piVar3 = * piVar3 + iVar13; iVar13 = (iVar51 + - 0x4c) + (iVar51 + - 0x26); if ((iVar51 + - 0x22) + - 1 < = iVar13) {
iVar13 = iVar13 + - 1;
}
(iVar51 + - 4) = (iVar51 + - 0x50) + (iVar51 + - 0x26); (iVar51 + - 0x16) = iVar17;
if ((iVar51 + - 0x50) == 0x5c1e) {
piVar3 = (iVar51 + - 4); *piVar3 = * piVar3 + 1;
}
iVar17 = (iVar51 + - 4); piVar3 = * (int * * )(iVar51 + - 0x42); if ( * piVar3 != iVar17 & & iVar17 < = * piVar3) {
* piVar3 = iVar17;
}
0x5d2a = iVar13; (iVar51 + - 0x14) = iVar13; iVar17 = (iVar51 + - 8); for (uVar145 = (iVar51 + -4); puVar6 = (iVar51 + - 0x14),
* puVar6 != uVar145 & & uVar145 <= * puVar6; uVar145 = uVar145 + 1) {
iVar13 = iVar17 >> 5; (iVar51 + - 0x58) = iVar13; piVar3 = * (int * * )(iVar51 + - 0x3e); if ( * piVar3 != iVar13 & & iVar13 < = * piVar3) {
* piVar3 = iVar13;
}
iVar13 = (iVar51 + - 6) >> 5; (iVar51 + - 0x5a) = iVar13; piVar3 = * (int * * )(iVar51 + - 0x46); if ( * piVar3 < iVar13) {
* piVar3 = iVar13;
}
iVar95 = puVar140; if ((uVar145 < (0xd30 * 2 + 0x5c1e) + (iVar51 + - 0x26) + 2) || ((((0xd30 + (iVar51 + - 0x12)) * 2 + 0x5c1e) + (iVar51 + - 0x26)) - 2 < = uVar145)) {
(iVar95 + - 2) = uVar145 + 1; (iVar95 + - 4) = (iVar51 + - 0x5a); (iVar95 + - 6) = uVar145; piVar96 = (iVar95 + -8); (iVar95 + - 8) = (iVar51 + - 0x58);
}
else {
(iVar95 + - 2) = uVar145 + 1; (iVar95 + - 4) = (iVar51 + - 0x58) + 2; (iVar95 + - 6) = uVar145; (iVar95 + -8) = (iVar51 + - 0x58);
(iVar95 + - 10) = uVar149; uVar149 = 0x2c63; piVar96 = (iVar95 + - 0xc); (iVar95 + - 0xc) = 0xe8bb; FUN_2c63_028d(); piVar96[3] = uVar145 + 1; piVar96[2] = (iVar51 + - 0x5a); piVar96[1] = uVar145; * piVar96 = (iVar51 + -0x5a) + - 2;
}
(piVar96 + - 2) = uVar149; uVar149 = 0x2c63; puVar97 = (undefined * )(piVar96 + - 4); (piVar96 + -4) = 0xe8e5; FUN_2c63_028d(); puVar140 = ZEXT24(puVar97 + 8); iVar17 = iVar17 + (iVar51 + - 0xc); piVar3 = (iVar51 + - 6); * piVar3 = * piVar3 + (iVar51 + - 0x10);
}
iVar17 = (iVar51 + - 0x16);
}
}
(iVar83 + - 2) = uVar149; (iVar83 + - 4) = 0xe8fe; puVar8 = FUN_294b_03be(); return puVar8; case 0x5:
* (undefined2 * * )0xad0 = puVar12;
ppiVar69[ - 1] = 0x1000; puVar55 = ppiVar69 + - 2; ppiVar69[ - 2] = 0x64a2; FUN_1862_1975(); (puVar55 + - 2) = 0x1862; (puVar55 + -4) = 0x64d6; puVar8 = FUN_154b_0395(); return puVar8; case 0x6:
// WARNING: Bad instruction - Truncating control flow here
halt_baddata(); case 0x7: unaff_DS = * ppiVar69; uVar153 = * ff(iVar51 + -2 + piVar144); uVar9 = (undefined2)(uVar153 >> 0x10); iVar13 = uVar153; (ppiVar69 + 1) = 4; (ppiVar69 + - 1) = unaff_DS; (ppiVar69 + - 3) = 0x19d2; (ppiVar69 + - 5) = unaff_DS; (ppiVar69 + -7) = 0x17dc; (ppiVar69 + - 9) = 0x1000; puVar68 = (undefined * )(ppiVar69 + - 0xb); (ppiVar69 + - 0xb) = 0x8b4e; FUN_3444_1f26();
puVar140 = CONCAT22(uVar142, puVar68 + 10); iVar17 = extraout_DX_00; puVar12 = puVar8; break; case 0x8: ppiVar69[ - 1] = unaff_DS; uVar141 = * (ulong * )0x6c7; unaff_DS = (undefined2)(uVar141 >> 0x10); puVar140 = (uVar141 & 0xffff); if (iVar13 == 1 || puVar8 == 0x0) {
0x67e2 = 0xa0; in_BX = puVar12;
}
else {
in_BX = (puVar12 & 0xff00 | ((puVar12 + ';') - (puVar12 < 0x68e))); 0x67ed = 0; 0x67ef = 0x3d49;
0x67e0 = 4; 0x67e2 = 0xa0;
}
goto LAB_1862_079a;
}
} while ( true ); case 5: puVar52[- 1] = piVar144; if ( - 1 < 0x8) {
puVar52[ - 2] = 0x1000; puVar49 = puVar52 + - 3; puVar52[ - 3] = 0x46a1; FUN_32c9_0385(); uVar153 = *ff0xffe7; puVar8 = * (undefined2 * * )uVar153; uVar9 = (uVar153 + 2); (iVar51 + - 4) = uVar9; * puVar8 = 0; uVar9 = (iVar51 + - 4); (puVar8 + 1) = ((iVar51 + 4) + '\x01') * '\x04'; * (undefined * )(puVar8 + 3) = 0x1f; (puVar49 + - 2) = 0; (puVar49 + - 4) = 0x12; lVar152 = (long)(iVar51 + 6) * 0xa00; (puVar49 + - 6) = (lVar152 >> 0x10); (puVar49 + - 8) = lVar152; (puVar49 + - 10) = 0x32c9; puVar50 = (undefined * )(puVar49 + - 0xc); (puVar49 + - 0xc) = 0x46e9; uVar149 = FUN_3444_2364(); uVar9 = (iVar51 + - 4); puVar8[2] = uVar149; * (undefined * )(puVar8 + 3) = 0; * (undefined * )(puVar8 + 7) = 0; puVar8[4] = uVar149; * (undefined * )(puVar8 + 5) = 0xfe; (puVar50 + - 2) = (iVar51 + 6); puVar5 = * (undefined4 *)0xffe7; (puVar50 + - 4) = (puVar5 + 2); (puVar50 + -6) = * puVar5; (puVar50 + -8) = 0x3444; (puVar50 + - 10) = 0x471f; in_BX = FUN_32c9_0af0();
}
return in_BX;
}
if (puVar8 == 0x0 || bVar151 != puVar8 < 0) {
if ((bVar151 != puVar8 < 0) || ((iVar51 + - 0x32) + -2 < (iVar51 + - 4)))
{
(iVar51 + - 6) = (iVar51 + - 0x34) + - 3; (iVar51 + - 4) = (iVar51 + - 0x32) + - 2;
}
if (((iVar51 + - 0x3c) < 1) || ((iVar51 + - 0x3a) < 1)) {
(iVar51 + - 0x3c) = 0xffff;
}
if (0 < (iVar51 + - 0x34)) goto code_r0x0001ec63;
}
else {
pcVar2 = (char * )(iVar51 + 4); * pcVar2 = * pcVar2 + (puVar8 >> 8); code_r0x0001ec63: if (0 < (iVar51 + - 0x32)) goto LAB_1e08_0bee;
}
(iVar51 + - 0x34) = 0xffff;
// LAB_1e08_0bee: if (((iVar51 + - 6) < 1) || ((iVar51 + - 4) < 1)) {
(iVar51 + - 6) = 0xffff;
}
uVar9 = 0xc60a; if (((0xcf4 == 0) || (0xcf4 == 9)) || (0xcf4 == 10)) {
uVar9 = (iVar51 + - 0x38); uVar149 = (iVar51 + - 0x36); (iVar51 + - 0x3c) = uVar9; (iVar51 + - 0x3a) = uVar149; (iVar51 + -0x34) = uVar9; (iVar51 + - 0x32) = uVar149; (iVar51 + - 6) = uVar9; (iVar51 + - 4) = uVar149;
}
puVar52[ - 1] = (iVar51 + -6); puVar52[ - 2] = 1; puVar52[ - 3] = (iVar51 + - 0x34); puVar52[ - 4] = 1; puVar52[ - 5] = (iVar51 + - 0x3c); puVar52[ - 6] = 1; puVar52[ - 7] = (iVar51 + - 0x38); puVar52[ - 8] = 1; (iVar51 + - 0x2c) = 0x1f46; (iVar51 + - 0x2a) = 0x5b2d; puVar52[ - 9] = 0x5b2d;
puVar52[ - 10] = 0x1f46; puVar52[- 0xb] = 0xf4f; puVar52[ - 0xc] = (iVar51 + - 0x36); puVar52[ - 0xd] = 0; puVar52[ -0xe] = (iVar51 + - 8);
puVar52[ - 0xf] = (iVar51 + -10); puVar52[ - 0x10] = 0x1000; puVar98 = puVar52 + - 0x11; puVar52[- 0x11] = 0xece9; uVar153 = FUN_23e0_01d9(); uVar9 = (undefined2)(uVar153 >> 0x10); (iVar51 + - 0x30) = uVar153; (iVar51 + - 0x2e) = uVar9; puVar98[8] = uVar9; puVar98[7] = uVar153; puVar98[6] = 0xe3e; puVar98[5] = (iVar51 + - 0x3a); puVar98[4] = 0; puVar98[3] = (iVar51 + - 8); puVar98[2] = (iVar51 + - 10); puVar98[1] = 0x23e0; * puVar98 = 0xed09; uVar153 = FUN_23e0_01d9(); uVar9 = (undefined2)(uVar153 >> 0x10); (iVar51 + -0x28) = uVar153; (iVar51 + - 0x26) = uVar9; puVar98[8] = uVar9; puVar98[7] = uVar153; puVar98[6] = 0x424; puVar98[5] = (iVar51 + - 0x32); puVar98[4] = 0; puVar98[3] = (iVar51 + - 8); puVar98[2] = (iVar51 + - 10); puVar98[1] = 0x23e0; * puVar98 = 0xed29;
uVar153 = FUN_23e0_01d9(); uVar9 = (undefined2)(uVar153 >> 0x10); (iVar51 + - 0x40) = uVar153; (iVar51 + - 0x3e) = uVar9; puVar98[8] = uVar9; puVar98[7] = uVar153;
puVar98[6] = 0x858; puVar98[5] = (iVar51 + - 4); puVar98[4] = 0; puVar98[3] = (iVar51 + - 8); puVar98[2] = (iVar51 + - 10);
puVar98[1] = 0x23e0; * puVar98 = 0xed49; FUN_23e0_01d9(); puVar110 = (undefined * )(puVar98 + 0x12); puVar111 = (undefined * )(puVar98 + 0x12);
if (0x1436 == 1) {
for (iVar17 = 6; piVar3 = (iVar51 + - 0x38), puVar111 = puVar110,
*piVar3 != iVar17 & & iVar17 < = * piVar3; iVar17 = iVar17 + 10) {
(puVar110 + - 2) = 0; (puVar110 + - 4) = (iVar51 + -0x2a); (puVar110 + - 6) = (iVar51 + - 0x2c); (puVar110 + - 8) = 0xf4f; (puVar110 + -10) = (iVar51 + - 0x36);
(puVar110 + - 0xc) = iVar17; (puVar110 + - 0xe) = (iVar51 + -8); (puVar110 + - 0x10) = (iVar51 + - 10); (puVar110 + - 0x12) = 0x23e0; piVar99 = (puVar110 + - 0x14); (puVar110 + - 0x14) = 0xed7d; FUN_23e0_01d9(); piVar99[7] = 0; piVar99[6] = (iVar51 + - 0x2e); piVar99[5] = (iVar51 + - 0x30); piVar99[4] = 0xe3e; piVar99[3] = (iVar51 + - 0x3a); iVar13 = (iVar51 + - 0x38); piVar99[2] = iVar13 >> 0xf; piVar99[1] = iVar13; * piVar99 = iVar17 >> 0xf; piVar99[ - 1] = iVar17;
iVar14 = (iVar51 + - 0x3c); (iVar51 + - 0x50) = iVar17; (iVar51 + - 0x4e) = iVar17 >> 0xf;
piVar99[ - 2] = iVar14 >> 0xf; piVar99[ - 3] = iVar14; (iVar51 + - 0x4a) = iVar13; (iVar51 + - 0x48) = iVar13 >> 0xf;
piVar99[ - 4] = 0x23e0; piVar100 = piVar99 + - 5; piVar99[ - 5] = 0xedba; uVar153 = FUN_3444_23fe(); (piVar100 + - 2) = (uVar153 >> 0x10); (piVar100 + - 4) = uVar153; (piVar100 + - 6) = 0x3444; puVar101 = (undefined * )(piVar100 + - 8); (piVar100 + - 8) = 0xedc1; uVar9 = FUN_3444_2364(); (puVar101 + - 2) = uVar9; (puVar101 + - 4) = (iVar51 + - 8); (puVar101 + - 6) = (iVar51 + - 10); (puVar101 + -8) = 0x3444; puVar102 = (puVar101 + - 10); (puVar101 + - 10) = 0xedcd; FUN_23e0_01d9(); puVar102[7] = 0; puVar102[6] = (iVar51 + - 0x26); puVar102[5] = (iVar51 + - 0x28); puVar102[4] = 0x424; puVar102[3] = (iVar51 + - 0x32); puVar102[2] = (iVar51 + - 0x48); puVar102[1] = (iVar51 + - 0x4a); * puVar102 = (iVar51 + - 0x4e); puVar102[ - 1] = (iVar51 + - 0x50); iVar13 = (iVar51 + -0x34); puVar102[ - 2] = iVar13 >> 0xf; puVar102[ - 3] = iVar13; puVar102[ - 4] = 0x23e0;
puVar103 = puVar102 + - 5; puVar102[ -5] = 0xedf7; uVar153 = FUN_3444_23fe(); (puVar103 + - 2) = (uVar153 >> 0x10); (puVar103 + - 4) = uVar153; (puVar103 + - 6) = 0x3444; puVar104 = (undefined * )(puVar103 + - 8); (puVar103 + -8) = 0xedfe; uVar9 = FUN_3444_2364(); (puVar104 + - 2) = uVar9;
(puVar104 + - 4) = (iVar51 + - 8); (puVar104 + - 6) = (iVar51 + - 10); (puVar104 + - 8) = 0x3444; puVar105 = (puVar104 + - 10); (puVar104 + -10) = 0xee0a; FUN_23e0_01d9(); puVar105[7] = 0; puVar105[6] = (iVar51 + - 0x3e); puVar105[5] = (iVar51 + - 0x40);
puVar105[4] = 0x858; puVar105[3] = (iVar51 + - 4); puVar105[2] = (iVar51 + - 0x48); puVar105[1] = (iVar51 + -0x4a); * puVar105 = (iVar51 + -0x4e); puVar105[ - 1] = (iVar51 + - 0x50); iVar13 = (iVar51 + - 6); puVar105[ - 2] = iVar13 >> 0xf; puVar105[ - 3] = iVar13; puVar105[ - 4] = 0x23e0; puVar106 = puVar105 + - 5; puVar105[ - 5] = 0xee34; uVar153 = FUN_3444_23fe(); (puVar106 + - 2) = (uVar153 >> 0x10); (puVar106 + - 4) = uVar153; (puVar106 + -6) = 0x3444; puVar107 = ff(puVar106 + - 8); (puVar106 + - 8) = 0xee3b; uVar9 = FUN_3444_2364(); (puVar107 + - 2) = uVar9; (puVar107 + - 4) = (iVar51 + - 8); (puVar107 + -6) = (iVar51 + - 10);
(puVar107 + - 8) = 0x3444; puVar108 = puVar107 + - 10; (puVar107 + -10) = 60999; FUN_23e0_01d9(); (puVar108 + 0xe) = 0x818; (puVar108 + 0xc) = (iVar51 + - 0x36) + (iVar51 + - 8) + - 2;
(puVar108 + 10) = (iVar51 + -10); (puVar108 + 8) = ((iVar51 + - 8) - (iVar51 + - 0x36)) + 1; (puVar108 + 6) = (iVar51 + - 10);
(puVar108 + 4) = 0x23e0; puVar109 = puVar108 + 2; (puVar108 + 2) = 0xee69; FUN_1e08_0940(); puVar110 = puVar109 + 10;
}
}
(puVar111 + - 2) = 0xf4f; (puVar111 + - 4) = (iVar51 + -0x36) + (iVar51 + - 8) + - 2; (puVar111 + - 6) = (iVar51 + - 10); (puVar111 + - 8) = ((iVar51 + - 8) - (iVar51 + - 0x36)) + 1; (puVar111 + - 10) = (iVar51 + - 10); (puVar111 + -0xc) = 0x23e0; puVar112 = (puVar111 + - 0xe); (puVar111 + - 0xe) = 0xee96; FUN_1e08_0940(); puVar114 = puVar112 + 5; if (0 < (iVar51 + - 0x3c)) {
puVar112[4] = 0xe3e; puVar112[3] = (iVar51 + - 0x3a) + (iVar51 + - 8) + - 2; puVar112[2] = (iVar51 + - 10); puVar112[1] = ((iVar51 + - 8) - (iVar51 + - 0x3a)) + 1; * puVar112 = (iVar51 + - 10); puVar112[ - 1] = 0x23e0; puVar113 = puVar112 + - 2; puVar112[ - 2] = 0xeebe; FUN_1e08_0940(); puVar114 = (puVar113 + 10);
}
if (0 < (iVar51 + - 0x34)) {
(puVar114 + - 2) = 0x424; (puVar114 + - 4) = (iVar51 + -0x32) + (iVar51 + - 8) + - 2; (puVar114 + - 6) = (iVar51 + - 10); (puVar114 + - 8) = ((iVar51 + - 8) - (iVar51 + - 0x32)) + 1; (puVar114 + - 10) = (iVar51 + - 10); (puVar114 + -0xc) = 0x23e0; puVar115 = ff(puVar114 + - 0xe); (puVar114 + - 0xe) = 0xeee6; FUN_1e08_0940(); puVar114 = (puVar115 + 10);
}
if (0 < (iVar51 + - 6)) {
(puVar114 + - 2) = 0x858; (puVar114 + - 4) = (iVar51 + -4) + (iVar51 + - 8) + - 2; (puVar114 + - 6) = (iVar51 + - 10); (puVar114 + - 8) = ((iVar51 + - 8) - (iVar51 + - 4)) + 1; (puVar114 + - 10) = (iVar51 + - 10); (puVar114 + -0xc) = 0x23e0; puVar116 = ff(puVar114 + - 0xe); (puVar114 + - 0xe) = 0xef0e; FUN_1e08_0940(); puVar114 = (puVar116 + 10);
}
(puVar114 + - 2) = 0; (puVar114 + - 4) = (iVar51 + -0x2a); (puVar114 + - 6) = (iVar51 + - 0x2c); (puVar114 + - 8) = 0xf4f; (puVar114 + -10) = (iVar51 + - 0x36);
(puVar114 + - 0xc) = (iVar51 + - 0x38); (puVar114 + - 0xe) = (iVar51 + - 8); (puVar114 + - 0x10) = (iVar51 + - 10); (puVar114 + - 0x12) = 0x23e0; puVar117 = (puVar114 + - 0x14);
(puVar114 + - 0x14) = 0xef2f; FUN_23e0_01d9(); puVar117[7] = 0;
puVar117[6] = (iVar51 + - 0x2e); puVar117[5] = (iVar51 + - 0x30); puVar117[4] = 0xe3e; puVar117[3] = (iVar51 + -0x3a); puVar117[2] = (iVar51 + - 0x3c); puVar117[1] = (iVar51 + - 8); * puVar117 = (iVar51 + - 10); puVar117[ -1] = 0x23e0; puVar118 = puVar117 + -2; puVar117[ - 2] = 0xef50;
FUN_23e0_01d9(); puVar118[7] = 0; puVar118[6] = (iVar51 + -0x26); puVar118[5] = (iVar51 + - 0x28); puVar118[4] = 0x424; puVar118[3] = (iVar51 + - 0x32); puVar118[2] = (iVar51 + - 0x34); puVar118[1] = (iVar51 + - 8); * puVar118 = (iVar51 + - 10); puVar118[- 1] = 0x23e0; puVar119 = puVar118 + - 2; puVar118[ - 2] = 0xef71; FUN_23e0_01d9(); puVar119[7] = 0; puVar119[6] = (iVar51 + - 0x3e); puVar119[5] = (iVar51 + - 0x40); puVar119[4] = 0x858; puVar119[3] = (iVar51 + - 4); puVar119[2] = (iVar51 + - 6); puVar119[1] = (iVar51 + - 8); *puVar119 = (iVar51 + - 10); puVar119[ - 1] = 0x23e0; puVar120 = puVar119 + - 2; puVar119[ - 2] = 0xef92; FUN_23e0_01d9(); (puVar120 + 0xe) = 0x23e0; puVar121 = (undefined * )(puVar120 + 0xc); (puVar120 + 0xc) = 0xef99; ppcVar4 = (code * *)0xcf6c; ( * * ppcVar4)(); if (0x7faa == 0x140) {
(iVar51 + - 0x24) = 10;
}
else {
(iVar51 + - 0x24) = 0x19;
}
(puVar121 + - 2) = 0xf; (puVar121 + - 4) = 0; (puVar121 + - 6) = 0x23e0; puVar122 = (puVar121 + - 8); (puVar121 + -8) = 0xefb9; FUN_2c63_0100(); puVar122[1] = unaff_DS; * puVar122 = 0x1ef0; puVar122[ - 1] = - (0x7fd4 - (iVar51 + - 8)); iVar17 = (iVar51 + - 10) + (iVar51 + - 0x24); puVar122[ - 2] = iVar17; puVar122[ - 3] = 0x2c63; piVar123 = puVar122 + - 4; puVar122[- 4] = 0xefd8; FUN_2c63_01c1();
piVar125 = piVar123 + 4; if ((iVar51 + - 6) < (iVar51 + - 0x34)) {
piVar123[3] = unaff_DS; piVar123[2] = 0x1ef5; piVar123[1] = -(0x7fd4 * 3 - (iVar51 + - 8)); * piVar123 = iVar17; piVar123[- 1] = 0x2c63; piVar124 = piVar123 + - 2; piVar123[ - 2] = 0xeffe; FUN_2c63_01c1(); piVar125 = (piVar124 + 8);
}
if ((iVar51 + - 0x34) < (iVar51 + - 0x3c)) {
(piVar125 + - 2) = unaff_DS; (piVar125 + - 4) = 0x1efc; (piVar125 + - 6) = - (0x7fd4 * 5 - (iVar51 + - 8)); (piVar125 + - 8) = (iVar51 + -10) + (iVar51 + - 0x24);
(piVar125 + - 10) = 0x2c63; puVar126 = (undefined * )(piVar125 + - 0xc); (piVar125 + - 0xc) = 0xf026; FUN_2c63_01c1(); piVar125 = (puVar126 + 8);
}
(piVar125 + - 2) = unaff_DS; (piVar125 + - 4) = 0x1f01; (piVar125 + - 6) = - (0x7fd4 * 7 - (iVar51 + - 8)); iVar17 = (iVar51 + - 10) + (iVar51 + - 0x24); (piVar125 + - 8) = iVar17; (piVar125 + - 10) = 0x2c63; piVar127 = (piVar125 + - 0xc); (piVar125 + - 0xc) = 0xf048; FUN_2c63_01c1(); piVar127[3] = 0x242; piVar127[2] = - ((0x7fd4 / '\x02') - (iVar51 + - 8)); iVar17 = iVar17 + - 1;
piVar127[1] = iVar17; uVar145 = (iVar51 + - 4); uVar10 = uVar145 >> 0xf; * piVar127 = ((iVar51 + - 8) - ((((uVar145 ^ uVar10) - uVar10) >> 2 ^ uVar10) - uVar10)) + 1; piVar127[- 1] = (iVar51 + - 10); piVar127[ - 2] = 0x2c63; piVar128 = piVar127 + - 3; piVar127[ - 3] = 0xf089; ppcVar4 = (code * *)0xcfac; ( * * ppcVar4)(); puVar130 = piVar128 + 5; if ((iVar51 + - 6) < (iVar51 + -0x34)) {
piVar128[4] = 0x242; piVar128[3] = 0x7fd4 * - 2 - ((0x7fd4 / '\x02') - (iVar51 + - 8)); piVar128[2] = iVar17; piVar128[1] = ((iVar51 + - 8) - (((iVar51 + - 0x32) - (iVar51 + - 4)) / 2 + (iVar51 + - 4))) + 1; * piVar128 = (iVar51 + - 10); piVar128[ - 1] = 0x2c63;
puVar129 = piVar128 + - 2; piVar128[ -2] = 0xf0d0; ppcVar4 = (code ** )0xcfac; ( * * ppcVar4)(); puVar130 = (puVar129 + 10);
}
if ((iVar51 + - 0x34) < (iVar51 + - 0x3c)) {
(puVar130 + - 2) = 0x242; (puVar130 + - 4) = - (0x7fd4 / '\x02') - (0x7fd4 * 4 - (iVar51 + - 8)); (puVar130 + -6) = (iVar51 + - 10) + (iVar51 + - 0x24) + - 1;
(puVar130 + - 8) = ((iVar51 + - 8) - (((iVar51 + - 0x3a) - (iVar51 + - 0x32)) / 2 + (iVar51 + - 0x32))) + 1; (puVar130 + - 10) = (iVar51 + - 10); (puVar130 + - 0xc) = 0x2c63; puVar131 = (undefined * )(puVar130 + - 0xe); (puVar130 + - 0xe) = 0xf120;
ppcVar4 = (code * * )0xcfac; (* * ppcVar4)(); puVar130 = (puVar131 + 10);
}
(puVar130 + - 2) = 0x242; (puVar130 + - 4) = - (0x7fd4 / '\x02') - (0x7fd4 * 6 - (iVar51 + - 8)); (puVar130 + -6) = (iVar51 + - 10) + (iVar51 + - 0x24) + - 1;
(puVar130 + - 8) = ((iVar51 + - 8) - (((iVar51 + - 0x36) - (iVar51 + - 0x3a)) / 2 + (iVar51 + - 0x3a))) + 1; (puVar130 + - 10) = (iVar51 + - 10); (puVar130 + - 0xc) = 0x2c63; puVar132 = (undefined * )(puVar130 + - 0xe); (puVar130 + - 0xe) = 0xf166;
ppcVar4 = (code * * )0xcfac; (* * ppcVar4)(); (puVar132 + 8) = 0x2c63; puVar133 = puVar132 + 6; (puVar132 + 6) = 0xf16d; ppcVar4 = (code * * )0xcf70; ( ** ppcVar4)(); (puVar133 + -2) = 0x2c63; (puVar133 + - 4) = 0xf172; puVar8 = FUN_294b_03be();
0x1436 = 2; return puVar8;
}
(iVar51 + - 4) = 0;
}
else {
puVar52[ - 1] = piVar144; puVar52[- 2] = pbVar146; puVar52[ - 3] = 0x3444; uVar149 = 0x10f0; puVar53 = puVar52 + - 4; puVar52[ - 4] = 0x5d19; uVar9 = FUN_10f0_094e(); puVar140 = (puVar53 + 4); (iVar51 + - 4) = uVar9;
}
if ((iVar51 + - 4) == 0) {
if (DAT_616d_0cd0 != 0) {
uVar10 = ((piVar144 + uVar145 * 0x40) * 2 + 0x6bd); (iVar51 + -0xc) = uVar10; uVar10 = uVar10 >> 8; uVar11 = uVar10 & 0x3f; (iVar51 + - 6) = uVar11; if (uVar11 != 0) {
if (( * (iVar51 + - 6) & 0x20) != 0) {
uVar145 = (uVar10 & 7) + 0x72;
goto LAB_154b_0b06;
}
if (( * (iVar51 + - 6) & 3) == 0) {
if (((iVar51 + - 0xc) & 0x8000) != 0) {
uVar145 = (((iVar51 + - 6) & 0x1c) >> 2) + 0x5f;
goto LAB_154b_0b06;
}
uVar145 = DAT_4b2d_ec49; if ((iVar51 + -6) < 5) goto LAB_154b_0b06;
}
uVar145 = (iVar51 + - 6) + 0x40; goto LAB_154b_0b06;
}
}
if (DAT_616d_0cd2 != 0) {
uVar10 = * (piVar144 + uVar145 * 0x40 + - 0x207c); (iVar51 + - 6) = uVar10; if (uVar10 != 0) {
if ((DAT_616d_0cce == 0) || (( * ((piVar144 + uVar145 * 0x40) * 2 + 0x6bd) & 0xe0) != 0x20)) {
uVar145 = (iVar51 + - 6) + 0x160;
}
else {
uVar145 = 0x31;
}
goto LAB_154b_0b06;
}
}
* (int * * )(iVar51 + -8) = piVar144; if ((DAT_616d_0cce == 0) || (iVar17 = ( * ((piVar144 + uVar145 * 0x40) * 2 + 0x6bd) & 0xe0) >> 5,
iVar17 == 0)) {
if ((DAT_616d_0ccc == 0) || (uVar10 = ((uVar145 * 0x80 + (iVar51 + - 8)) * 2 + 0x6bd),
(iVar51 + - 0xc) = uVar10, (uVar10 & 0x8000) == 0)) {
uVar145 = ((uVar145 * 0x80 + (iVar51 + - 8)) * 2 + 0x6bd) & 0x1f;
}
else {
iVar17 = DAT_616d_0a8e - ( * (iVar51 + -0xc) & 0x1f); if (iVar17 < 3) {
uVar145 = 0x42;
}
else {
if (iVar17 < 6) {
uVar145 = 0x41;
}
else {
uVar145 = 0x40;
}
}
}
goto LAB_154b_0b06;
}
if (DAT_616d_0a7e == 5) {
iVar17 = iVar17 + 0x78;
}
else {
iVar17 = iVar17 + 0x30;
}
(iVar51 + - 4) = iVar17;
}
uVar145 = (iVar51 + - 4);
// LAB_154b_0b06:
puVar18 = (((iVar51 + 6) * 0x28 + (iVar51 + 4)) * 2 + 0xc57); * (uint * * )(iVar51 + - 0x12) = puVar18; (iVar51 + - 0x10) = 0x5b2d; if ( *puVar18 == uVar145) {
puVar8 = 0x6169;
}
else {
iVar54 = puVar140; (iVar54 + - 2) = uVar145; (iVar54 + - 4) = 0x1388 * (iVar51 + 6) + 0x15c3;
(iVar54 + - 6) = 0x138a * (iVar51 + 4) + 0x15c1; (iVar54 + - 8) = uVar149; (iVar54 + -10) = 0x6013; puVar8 = FUN_168b_04c4(); * * (uint * * )(iVar51 + - 0x12) = uVar145;
}
return puVar8; switchD_1000_8da3_caseD_3: ppiVar69[ - 1] = iVar13; ppiVar69[ - 2] = unaff_DS; ppiVar69[ - 3] = 0x16ba; ppiVar69[ - 4] = 0x1000; puVar56 = ppiVar69 + - 5; ppiVar69[ - 5] = 0x895d; FUN_3444_1f26(); puVar56[4] = 0x40; puVar56[3] = unaff_DS;
puVar56[2] = 0x1484; puVar56[1] = unaff_DS; * puVar56 = 0x162a; puVar56[ - 1] = 0x3444; puVar57 = puVar56 + - 2; puVar56[ - 2] = 0x8973; FUN_3444_1f26(); puVar57[4] = 0x50; puVar57[3] = unaff_DS;
puVar57[2] = 0x14c4; puVar57[1] = unaff_DS; * puVar57 = 0x166a; puVar57[ - 1] = 0x3444; puVar58 = puVar57 + - 2; puVar57[ - 2] = 0x8989; FUN_3444_1f26(); puVar58[4] = 0x40; puVar58[3] = unaff_DS;
puVar58[2] = 0x1504; puVar58[1] = unaff_DS; * puVar58 = 0x16fa; puVar58[ - 1] = 0x3444; puVar59 = puVar58 + - 2; puVar58[ - 2] = 0x899f; FUN_3444_1f26(); puVar59[4] = 0x40; puVar59[3] = unaff_DS;
puVar59[2] = 0x1544; puVar59[1] = unaff_DS; * puVar59 = 0x173a; puVar59[ - 1] = 0x3444; uVar149 = 0x3444; puVar60 = puVar59 + - 2; puVar59[- 2] = 0x89b5; FUN_3444_1f26();
(puVar60 + 8) = 0x20; (puVar60 + 6) = unaff_DS; puVar140 = CONCAT22(uVar142, (undefined * )(puVar60 + 4)); (puVar60 + 4) = 0x1584; goto code_r0x000189c1;
}


// WARNING: Instruction at (ram,0x0001d3f9) overlaps instruction at (ram,0x0001d3f8)
//
// WARNING: Control flow encountered bad instruction data
// WARNING: Stack frame is not setup normally: Input value of stackpointer is not used
// WARNING: Removing unreachable block (ram,0x0001f805)
// WARNING: Removing unreachable block (ram,0x0001f765)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined2 *  FUN_154b_0b72()

{
let puVar1: * mut u16; let piVar2: * mut u16; let puVar3: * mut u16; let puVar4: * mut u16; let pcVar5: String; undefined uVar6; code * * ppcVar7; let uVar8: u16; let uVar9: u16; let uVar10: u16; let uVar11: u16; let puVar12: * mut u16; let puVar13: * mut u16; let puVar14: * mut u16; let uVar15: u16; let in_CX: u16; let bVar16: u8; let iVar17: i16; let extraout_DX: u16; let extraout_DX_00: i16; let extraout_DX_01: i16; let extraout_DX_02: i16; let iVar18: i16; let in_BX: u16; let iVar19: i16; let puVar20: * mut u16; let iVar21: i16; let puVar22: * mut u16; undefined * puVar23;
undefined * puVar24; undefined * puVar25; let puVar26: * mut u16; let puVar27: * mut u16; undefined * puVar28; undefined * puVar29;
undefined * puVar30; undefined * puVar31; undefined *puVar32; undefined * puVar33; undefined * puVar34;
undefined * puVar35; undefined * puVar36; let puVar37: * mut u16; let iVar38: i16;
let puVar39: * mut u16; let puVar40: * mut u16; let puVar41: * mut u16; let puVar42: * mut u16; let puVar43: * mut u16; let puVar44: * mut u16; let puVar45: * mut u16; let puVar46: * mut u16; let puVar47: *mut u16; let puVar48: * mut u16;
let puVar49: * mut u16; let puVar50: * mut u16; let puVar51: * mut u16; let puVar52: * mut u16; let puVar53: * mut u16; let puVar54: * mut u16; let puVar55: * mut u16; let puVar56: * mut u16; int * * ppiVar57; undefined * puVar58; let puVar59: * mut u16; let puVar60: * mut u16; undefined * puVar61; let piVar62: * mut u16;
let piVar63: * mut u16; undefined * puVar64; undefined * puVar65; undefined * puVar66; let puVar67: * mut u16; undefined * puVar68;
let puVar69: * mut u16; let puVar70: * mut u16; undefined * puVar71; undefined *puVar72; let puVar73: * mut u16; let puVar74: * mut u16; undefined * puVar75;
let puVar76: * mut u16; let puVar77: * mut u16; let puVar78: * mut u16; let iVar79: i16; let puVar80: *mut u16; let puVar81: * mut u16;
undefined * puVar82; let iVar83: i16; let puVar84: * mut u16; let puVar85: *mut u16; let iVar86: i16; let puVar87: * mut u16; let puVar88: * mut u16; undefined * puVar89; undefined * puVar90;
undefined * puVar91; undefined * puVar92; let iVar93: i16; undefined * puVar94; undefined * puVar95; undefined * puVar96; undefined * puVar97; undefined * puVar98; undefined * puVar99; undefined * puVar100; undefined * puVar101; undefined * puVar102; undefined * puVar103; undefined * puVar104; let iVar105: i16; let piVar106: * mut u16; undefined * puVar107; let piVar108: * mut u16;
let piVar109: * mut u16; let iVar110: i16; undefined * puVar111; let iVar112: i16; let iVar113: i16; undefined * puVar114;
let puVar115: * mut u16; undefined * puVar116; let in_ESP: u32; let puVar117: *mut u16; ulong uVar118; let unaff_BP: u16; let pbVar119: * mut u8; let pbVar120: * mut u8; let unaff_SI: u16;
let uVar121: u16; let piVar122: * mut u16; let unaff_DI: u16; let piVar123: * mut u16; let piVar124: * mut u16; let uVar125: u16; let uVar126: u16; let unaff_SS: u16; let unaff_DS: u16; bool bVar127; let uVar128: u32; let lVar129: i32;

iVar38 = in_ESP; pbVar119 = (iVar38 + - 2); pbVar120 = (iVar38 + - 2); uVar10 = (undefined2)(in_ESP >> 0x10); (iVar38 + - 2) = unaff_BP; (iVar38 + - 4) = 0x39d9; uVar126 = 0x3444;
puVar40 = (iVar38 + - 6); (iVar38 + - 6) = 0x602d; FUN_3444_02c6(* (u16 * )(iVar38 + - 4)); puVar40[1] = unaff_DI;
* puVar40 = unaff_SI; uVar121 = 0xd2e + (iVar38 + 4); piVar123 = (0xd30 + (iVar38 + 6)); if ((piVar123 < 0) || (0x3f < piVar123)) {
piVar123 = (piVar123 & 0x3f); uVar121 = uVar121 + 0x40;
}
piVar122 = (uVar121 & 0x7f); if (0xd14 == 0) {
// LAB_154b_0bdc:
uVar125 = 0x6169; uVar121 = DAT_616d_0cd6 - 1;
if (uVar121 < 6) {
puVar12 = (uVar121 * 2); uVar126 = 0x1000; switch(uVar121) {
case 0: switchD_1000_609e_caseD_0: (puVar40 + - 2) = unaff_DS; (puVar40 + - 4) = in_CX; (puVar40 + - 6) = 0x1000; puVar53 = (puVar40 + - 8); (puVar40 + - 8) = 0x8b0c;
FUN_3444_1f26(); puVar53[4] = 0x10; puVar53[3] = unaff_DS; puVar53[2] = 0x19b2; iVar17 = 0x17bc; puVar53[1] = unaff_DS; * puVar53 = 0x17bc; puVar53[ - 1] = 0x3444; puVar54 = puVar53 + - 2; puVar53[ - 2] = 0x8b22; FUN_3444_1f26(); puVar54[4] = 0x10; puVar54[3] = unaff_DS; puVar54[2] = 0x19c2; puVar54[1] = unaff_DS; * puVar54 = 0x17cc; puVar54[ - 1] = 0x3444; puVar55 = puVar54 + - 2; puVar54[ - 2] = 0x8b38; FUN_3444_1f26(); puVar55[4] = 4; puVar55[3] = unaff_DS; puVar55[2] = 0x19d2; puVar55[1] = unaff_DS; * puVar55 = 0x17dc; puVar55[ - 1] = 0x3444; puVar56 = puVar55 + - 2; puVar55[ - 2] = 0x8b4e; FUN_3444_1f26(); puVar117 = CONCAT22(uVar10, (undefined * )(puVar56 + 10)); iVar19 = extraout_DX_01; puVar14 = puVar12; loop {
uVar126 = 0x3444; puVar13 = 0x9c65; if (0x8 < puVar13) {
// LAB_1862_079a:
puVar58 = (undefined * )puVar117; if (((0x9c65 != '\x02') & & (0x9c65 != '\x04')) & & (0x9c65 != '\x06')) {
if ((0x9c65 == '\a') || (0x9c65 == '\b')) {
(iVar38 + - 10) = 0x2724;
}
else {
(iVar38 + - 10) = 10000;
}
puVar12 = 0x9c65; if (puVar12 == 0x0) {
(iVar38 + - 0x10) = 0x1c; puVar13 = puVar12;
}
else {
puVar13 = (puVar12 + - 3); if ((puVar13 == 0x0) || (puVar13 = (puVar12 + - 5), puVar13 == 0x0)) {
(iVar38 + - 0x10) = 10;
}
else {
puVar13 = (puVar12 + - 7); if (puVar13 == 0x0) {
(iVar38 + - 0x10) = 0xc;
}
else {
puVar13 = puVar12 + - 4; if (puVar13 == 0x0) {
(iVar38 + - 0x10) = 0x24;
}
}
}
}
(iVar38 + - 8) = 0x1cfb; (iVar38 + - 6) = 0x5b2d; (iVar38 + - 4) = 0; while (puVar58 = (undefined * )puVar117, (iVar38 + - 4) < 0xb) {
uVar10 = (iVar38 + - 6); uVar125 = 0xc522; iVar19 = (iVar38 + - 4) * 4; (iVar19 + 0x1e87) = (iVar38 + - 8); (iVar19 + 0x1e89) = uVar10; (puVar58 + - 2) = 2; (puVar58 + - 4) = (iVar38 + - 10); (puVar58 + - 6) = uVar126; puVar59 = (puVar58 + - 8); (puVar58 + -8) = 0x8e8e; uVar128 = FUN_3074_00d3(); (iVar38 + - 0xe) = uVar128;
(iVar38 + - 0xc) = (uVar128 >> 0x10); puVar59[1] = (iVar38 + - 0x10); piVar2 = * (int * * )(iVar38 + - 0xe); iVar19 = * piVar2; * puVar59 = (piVar2 + 2); puVar59[ - 1] = iVar19 + 3; puVar59[ - 2] = (iVar38 + - 6); puVar59[- 3] = (iVar38 + - 8); puVar59[ - 4] = 0x3074; puVar60 = puVar59 + - 5; puVar59[ - 5] = 0x8eb3; FUN_3444_1f26(); (puVar60 + 8) = 2; (puVar60 + 6) = (iVar38 + - 10); piVar2 = (iVar38 + - 10); * piVar2 = * piVar2 + 1; (puVar60 + 4) = 0x3444; uVar126 = 0x3074; puVar61 = (undefined * )(puVar60 + 2);
(puVar60 + 2) = 0x8ec5; FUN_3074_01d4(); puVar117 = ZEXT24(puVar61 + 4); puVar13 = * (undefined2 * * )(iVar38 + - 0x10); piVar2 = (iVar38 + - 8); * piVar2 = * piVar2 + puVar13; piVar2 = (iVar38 + - 4); * piVar2 = * piVar2 + 1;
}
}
if (0x9c65 == '\x06') {
(puVar58 + - 2) = 9; (puVar58 + - 4) = 10000; (puVar58 + - 6) = uVar126; piVar62 = (puVar58 + - 8); (puVar58 + -8) = 0x8ee7; uVar128 = FUN_3074_00d3(); (iVar38 + - 0xe) = uVar128;
(iVar38 + - 0xc) = (uVar128 >> 0x10); (iVar38 + - 4) = 0; while ((iVar38 + - 4) < 0x300) {
uVar128 = * ff * ff(iVar38 + - 0xe); pcVar5 = (char * )(uVar128 + (iVar38 + - 4)); * pcVar5 = *pcVar5 >> 2; piVar2 = (iVar38 + - 4); * piVar2 = * piVar2 + 1;
}
(iVar38 + - 0x20) = 0x1012; (iVar38 + - 0x1e) = 0; (iVar38 + - 0x1c) = 0x100; (iVar38 + - 0x1a) = * ff(iVar38 + - 0xe); uVar128 = * ff(iVar38 + - 0xe);
(iVar38 + - 0x28) = (uVar128 + 2); piVar62[1] = unaff_SS;
* piVar62 = iVar38 + - 0x28; piVar62[- 1] = unaff_SS; piVar62[ - 2] = iVar38 + - 0x20; piVar62[ -3] = unaff_SS; piVar62[ - 4] = iVar38 + - 0x20; piVar62[ - 5] = 0x10; piVar62[ - 6] = 0x3074; piVar63 = piVar62 + - 7; piVar62[ - 7] = 0x8f4c; FUN_3444_1be4(); (piVar63 + 0xc) = 9; (piVar63 + 10) = 10000; (piVar63 + 8) = 0x3444; (piVar63 + 6) = 0x8f5c; puVar13 = FUN_3074_01d4();
}
* (undefined * )0x1a06 = 1; return puVar13;
}
puVar12 = (puVar13 * 2); uVar126 = 0x1000; ppiVar57 = (int * * )puVar117; uVar10 = (undefined2)(puVar117 >> 0x10); switch(puVar13) {
case 0x0: if (iVar17 == 0) {
puVar12 = 0xa000; if (0x9c65 == '\x03') {
puVar12 = 0xb000; if (piVar122 != 0x0) {
bVar16 = * (iVar38 + - 2);
puVar12 = (bVar16 | 0xb000); if ((bVar16 & 0x80) != 0) {
ppiVar57[ - 1] = 0x0; ppiVar57[- 2] = 0xf7fb; puVar12 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1; return puVar12;
}
pcVar5 = (char * )0x67e8; * pcVar5 = * pcVar5 + '\x01'; iVar17 = - 1; pbVar120 = (iVar38 + 0x3e); piVar124 = piVar123 + 0x1000; if (piVar124 < 0) {
piVar124 = piVar123 + - 0x2fd3;
}
piVar123 = piVar124 + 0x1000; if (piVar123 < 0) {
piVar123 = piVar124 + - 0x2fd3;
}
piVar124 = piVar123 + 0x1000; if (piVar124 < 0) {
piVar124 = piVar123 + - 0x2fd3;
}
piVar123 = piVar124 + 0x1000; if (piVar123 < 0) {
piVar123 = piVar124 + - 0x2fd3;
}
piVar124 = piVar123 + 0x1000; if (piVar124 < 0) {
piVar124 = piVar123 + - 0x2fd3;
}
piVar123 = piVar124 + 0x1000; if (piVar123 < 0) {
piVar123 = piVar124 + - 0x2fd3;
}
}
if (0 < iVar17) {
uVar118 = ZEXT24(ppiVar57 + - 1);
ppiVar57[ - 1] = piVar122; loop {
bVar16 = * pbVar120; puVar12 = (puVar12 & 0xff00 | bVar16); if ((bVar16 & 0x80) != 0) {
iVar113 = uVar118; (iVar113 + - 2) = 0x1000; uVar118 = (iVar113 - 4); (iVar113 + - 4) = 0xf876;
puVar12 = ( * _DAT_b000_67e9)(); *(undefined * )0x67f1 = 1;
}
pcVar5 = (char * )0x67e8; * pcVar5 = * pcVar5 + '\x01'; pbVar120 = pbVar120 + 0x40; piVar122 = piVar123 + 0x1000; if (piVar122 < 0) {
piVar122 = piVar123 + - 0x2fd3;
}
piVar123 = piVar122 + 0x1000; if (piVar123 < 0) {
piVar123 = piVar122 + - 0x2fd3;
}
piVar122 = piVar123 + 0x1000; if (piVar122 < 0) {
piVar122 = piVar123 + - 0x2fd3;
}
piVar123 = piVar122 + 0x1000; if (piVar123 < 0) {
piVar123 = piVar122 + - 0x2fd3;
}
piVar122 = piVar123 + 0x1000; if (piVar122 < 0) {
piVar122 = piVar123 + - 0x2fd3;
}
piVar123 = piVar122 + 0x1000; if (piVar123 < 0) {
piVar123 = piVar122 + - 0x2fd3;
}
iVar17 = iVar17 + - 1;
} while (iVar17 != 0); piVar122 = *(int * * )uVar118; ppiVar57 = (int * * )uVar118 + 1;
}
if (((piVar122 & 0xff00) != 0) & & (bVar16 = * pbVar120,
puVar12 = (puVar12 & 0xff00 | bVar16),
(bVar16 & 0x80) != 0)) {
(ppiVar57 + - 2) = iVar17; (ppiVar57 + - 4) = 0xf8df; puVar12 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1;
}
return puVar12;
}
if (piVar122 != 0x0) {
bVar16 = * (iVar38 + - 2);
puVar12 = CONCAT11(0xa0, bVar16); if ((bVar16 & 0x80) != 0) {
ppiVar57[ - 1] = 0x0; ppiVar57[- 2] = 0xf75b; puVar12 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1; return puVar12;
}
pcVar5 = (char * )0x67e8; * pcVar5 = * pcVar5 + '\x01'; iVar17 = - 1; pbVar119 = (iVar38 + 0x3e);
}
if (0 < iVar17) {
uVar118 = ZEXT24(ppiVar57 + - 1);
ppiVar57[ - 1] = piVar122; loop {
bVar16 = * pbVar119; puVar12 = (puVar12 & 0xff00 | bVar16); if ((bVar16 & 0x80) != 0) {
iVar112 = uVar118; (iVar112 + - 2) = 0x1000; uVar118 = (iVar112 - 4); (iVar112 + - 4) = 0xf79f;
puVar12 = ( * _DAT_a000_67e9)(); *(undefined * )0x67f1 = 1;
}
pcVar5 = (char * )0x67e8; * pcVar5 = * pcVar5 + '\x01'; pbVar119 = pbVar119 + 0x40; iVar17 = iVar17 + - 1;
} while (iVar17 != 0); piVar122 = *(int * * )uVar118; ppiVar57 = (int * * )uVar118 + 1;
}
if (((piVar122 & 0xff00) != 0) & & (bVar16 = * pbVar119,
puVar12 = (puVar12 & 0xff00 | bVar16),
(bVar16 & 0x80) != 0)) {
(ppiVar57 + - 2) = iVar17; (ppiVar57 + - 4) = 0xf7d1; puVar12 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1;
}
return puVar12;
}
if (iVar17 == 0) {
while ( true ) {
puVar12 = in (iVar19); bVar16 = (* puVar117 >> 8) + 1; uVar121 = * puVar117 & 0xff; if (uVar121 <= bVar16) break; iVar110 = (puVar117 + 1); uVar10 = (undefined2)((puVar117 + 1) >> 0x10); (iVar110 + - 2) = uVar121 | bVar16 << 8; (iVar110 + - 4) = 0x1000; puVar111 = (undefined * )(iVar110 + - 6); (iVar110 + - 6) = 0xf6ff; ppcVar7 = (code * *)0x67ed; ( * * ppcVar7)(); puVar117 = CONCAT22(uVar10, puVar111 + 2); iVar19 = extraout_DX_02;
}
return puVar12;
}
if (iVar17 == 0) {
loop {
piVar122[0x81] = iVar19; puVar14 = (puVar14 & 0xf000 | ((puVar14 & 0xf0ff) | ((puVar14 & 0xf0ff) >> 8)) | 0x80); * piVar123 = puVar14; loop {
piVar109 = puVar117; iVar17 = * piVar109; piVar2 = (iVar17 + - 0xe); * piVar2 = * piVar2 + 0x80; piVar2 = (iVar17 + - 0xc); * piVar2 = * piVar2 + 4; piVar2 = (iVar17 + - 0x10); * piVar2 = * piVar2 + 1;
piVar2 = (iVar17 + - 8); *piVar2 = * piVar2 + 1; if (((iVar17 + - 8) & 0x3f) == 0) {
piVar2 = (iVar17 + - 0xe); *piVar2 = * piVar2 + - 0x1ffe; piVar2 = (iVar17 + - 0xc); * piVar2 = * piVar2 + 0x100; (iVar17 + - 8) = 0; piVar2 = (iVar17 + -10); * piVar2 = * piVar2 + 1; if (((iVar17 + - 10) & 0x1f) == 0) {
return puVar14;
}
}
* piVar109 = 8; piVar109[ - 1] = 0x1234; piVar109[ - 2] = 0x1234; piVar109[ - 3] = 0x1234; piVar109[ - 4] = 0x1234; piVar109[ -5] = (iVar17 + - 0xe);
piVar109[ - 6] = (iVar17 + -10); piVar109[ - 7] = (iVar17 + - 8); piVar109[ - 8] = 0x1000; piVar108 = piVar109 + - 9; piVar109[ - 9] = 0xf576; ppcVar7 = (code * * )(iVar17 + 8); ( * * ppcVar7)();
uVar128 = * ff(iVar17 + 0x14); uVar10 = (undefined2)(uVar128 >> 0x10); iVar18 = uVar128; iVar19 = (piVar108 + 4) * 2; if ((piVar108 + 6) == 0x1234) {
uVar121 = (iVar19 + 0x6bd) & 0x1f;
if ((iVar17 + 6) < uVar121) {
uVar128 = * ff(iVar17 + 0xc); uVar10 = (undefined2)(uVar128 >> 0x10); iVar18 = uVar128;
}
else {
uVar121 = (uVar121 - (iVar17 + 6)) + 0x1f; uVar128 = * (undefined4 *)(iVar17 + 0x10); uVar10 = (undefined2)(uVar128 >> 0x10); iVar18 = uVar128;
}
uVar126 = (iVar18 + uVar121 * 2);
uVar128 = * ff(iVar17 + 0x14); uVar10 = (undefined2)(uVar128 >> 0x10); iVar18 = uVar128;
}
else {
uVar126 = (iVar18 + (piVar108 + 6) * 2);
}
(iVar17 + - 2) = uVar126; if ((piVar108 + 8) == 0x1234) {
uVar121 = (iVar19 + 0x73d) & 0x1f;
if ((iVar17 + 6) < uVar121) {
uVar128 = * ff(iVar17 + 0xc); uVar10 = (undefined2)(uVar128 >> 0x10); iVar18 = uVar128;
}
else {
uVar121 = (uVar121 - (iVar17 + 6)) + 0x1f; uVar128 = * (undefined4 *)(iVar17 + 0x10); uVar10 = (undefined2)(uVar128 >> 0x10); iVar18 = uVar128;
}
uVar126 = (iVar18 + uVar121 * 2);
uVar128 = * ff(iVar17 + 0x14); uVar10 = (undefined2)(uVar128 >> 0x10); iVar18 = uVar128;
}
else {
uVar126 = (iVar18 + (piVar108 + 8) * 2);
}
(iVar17 + - 4) = uVar126; if ((piVar108 + 10) == 0x1234) {
uVar121 = (iVar19 + 0x6bf) & 0x1f;
if ((iVar17 + 6) < uVar121) {
uVar128 = * ff(iVar17 + 0xc); uVar10 = (undefined2)(uVar128 >> 0x10); iVar18 = uVar128;
}
else {
uVar121 = (uVar121 - (iVar17 + 6)) + 0x1f; uVar128 = * (undefined4 *)(iVar17 + 0x10); uVar10 = (undefined2)(uVar128 >> 0x10); iVar18 = uVar128;
}
uVar126 = (iVar18 + uVar121 * 2);
uVar128 = * ff(iVar17 + 0x14); uVar10 = (undefined2)(uVar128 >> 0x10); iVar18 = uVar128;
}
else {
uVar126 = (iVar18 + (piVar108 + 10) * 2);
}
(iVar17 + - 6) = uVar126; if ((piVar108 + 0xc) == 0x1234) {
uVar121 = (iVar19 + 0x73f) & 0x1f;
if ((iVar17 + 6) < uVar121) {
uVar128 = * ff(iVar17 + 0xc); uVar10 = (undefined2)(uVar128 >> 0x10); iVar19 = uVar128;
}
else {
uVar121 = (uVar121 - (iVar17 + 6)) + 0x1f; uVar128 = * (undefined4 *)(iVar17 + 0x10); uVar10 = (undefined2)(uVar128 >> 0x10); iVar19 = uVar128;
}
iVar19 = (iVar19 + uVar121 * 2);
}
else {
iVar19 = (iVar18 + (piVar108 + 0xc) * 2);
}
piVar123 = * (int * * )(iVar17 + - 0x10); piVar122 = * (int * * )(iVar17 + - 0xc);
bVar16 = * piVar123; uVar121 = (piVar108 + 0xe) & 0xff; uVar11 = bVar16 << 8; puVar14 = (uVar121 | uVar11);
puVar117 = ZEXT24((undefined * )(piVar108 + 0xe)); (piVar108 + 0xe) = iVar17; iVar18 = (iVar17 + - 4); iVar21 = (iVar17 + - 6); iVar17 = (iVar17 + - 2);
} while ((((((uVar11 & 0x8000) == 0) & & (iVar17 == *piVar122)) & & (iVar18 == piVar122[1])) & & ((iVar21 == piVar122[0x80] & & (iVar19 == piVar122[0x81])))) & & ((bVar16 & 0xf) == uVar121));
* piVar122 = iVar17; piVar122[1] = iVar18; piVar122[0x80] = iVar21;
} while ( true );
}
return puVar14; case 0x1: return puVar14; case 0x2: 0x139a = 0; 0x10d4 = 0;
return puVar14; case 0x3: ppiVar57[ - 1] = iVar17; ppiVar57[ - 2] = unaff_DS; ppiVar57[ - 3] = 0x16ba;
ppiVar57[ - 4] = 0x1000; puVar42 = ppiVar57 + - 5; ppiVar57[ - 5] = 0x895d; FUN_3444_1f26(); puVar42[4] = 0x40; puVar42[3] = unaff_DS; puVar42[2] = 0x1484; puVar42[1] = unaff_DS; * puVar42 = 0x162a;
puVar42[ - 1] = 0x3444; puVar43 = puVar42 + - 2; puVar42[ - 2] = 0x8973; FUN_3444_1f26(); puVar43[4] = 0x50; puVar43[3] = unaff_DS; puVar43[2] = 0x14c4; puVar43[1] = unaff_DS; * puVar43 = 0x166a;
puVar43[ - 1] = 0x3444; puVar44 = puVar43 + - 2; puVar43[ - 2] = 0x8989; FUN_3444_1f26(); puVar44[4] = 0x40; puVar44[3] = unaff_DS; puVar44[2] = 0x1504; puVar44[1] = unaff_DS; * puVar44 = 0x16fa;
puVar44[ - 1] = 0x3444; puVar45 = puVar44 + - 2; puVar44[ - 2] = 0x899f; FUN_3444_1f26(); puVar45[4] = 0x40; puVar45[3] = unaff_DS; puVar45[2] = 0x1544; puVar45[1] = unaff_DS; * puVar45 = 0x173a;
puVar45[ - 1] = 0x3444; puVar46 = puVar45 + - 2; puVar45[ - 2] = 0x89b5; FUN_3444_1f26(); puVar46[4] = 0x20; puVar46[3] = unaff_DS; puVar46[2] = 0x1584; puVar46[1] = unaff_DS; * puVar46 = 0x177a;
puVar46[ - 1] = 0x3444; puVar47 = puVar46 + - 2; puVar46[ - 2] = 0x89cb; FUN_3444_1f26(); puVar47[4] = 0x12; puVar47[3] = unaff_DS; puVar47[2] = 0x15a4; puVar47[1] = unaff_DS; * puVar47 = 0x179a;
puVar47[ - 1] = 0x3444; puVar48 = puVar47 + - 2; puVar47[ - 2] = 0x89e1; FUN_3444_1f26(); puVar48[4] = 0x10; puVar48[3] = unaff_DS; puVar48[2] = 0x15b6; puVar48[1] = unaff_DS; * puVar48 = 0x17ac;
puVar48[ - 1] = 0x3444; puVar49 = puVar48 + - 2; puVar48[ - 2] = 0x89f7; FUN_3444_1f26(); puVar49[4] = 0x10; puVar49[3] = unaff_DS; puVar49[2] = 0x15c6; iVar17 = 0x17bc; puVar49[1] = unaff_DS; *puVar49 = 0x17bc; puVar49[ - 1] = 0x3444; puVar50 = puVar49 + - 2; puVar49[ - 2] = 0x8a0d; FUN_3444_1f26(); puVar50[4] = 0x10; puVar50[3] = unaff_DS; puVar50[2] = 0x15d6; puVar50[1] = unaff_DS; *puVar50 = 0x17cc; puVar50[ - 1] = 0x3444; puVar51 = puVar50 + - 2; puVar50[ - 2] = 0x8a23; FUN_3444_1f26(); puVar51[4] = 4; puVar51[3] = unaff_DS; puVar51[2] = 0x15e6; puVar51[1] = unaff_DS; *puVar51 = 0x17dc; puVar51[ - 1] = 0x3444; puVar52 = puVar51 + - 2; puVar51[ - 2] = 0x8a39; FUN_3444_1f26(); puVar117 = CONCAT22(uVar10, ff(puVar52 + 10)); iVar19 = extraout_DX_00; puVar14 = puVar12; break; case 0x4: * (undefined2 * * )(iVar38 + - 0x46) = puVar12; (iVar38 + -0x44) = uVar125; * puVar12 = 0x8001;
if (0xd21 == '\0') {
iVar19 = 0xff32;
}
else {
iVar19 = 0xff32 << 1;
}
(iVar38 + - 0x12) = iVar19; iVar19 = 0xd30; (iVar38 + - 0x16) = iVar19; * (int * * )(iVar38 + - 0x20) = piVar122; for (; iVar93 = puVar117, iVar19 < 0xd30 + (iVar38 + - 0x12); iVar19 = iVar19 + 1) {
uVar10 = 0xc600; iVar21 = iVar19 * 2;
(iVar38 + - 0x4e) = iVar21; iVar17 = (iVar21 + 0x5c1e); iVar18 = (iVar21 + 0x5c20); (iVar38 + - 0x4c) = iVar18; (iVar38 + - 0x50) = iVar17; iVar18 = iVar18 - iVar17; if (0 < iVar18) {
(iVar38 + - 8) = (iVar38 + - 0x1e) << 5; (iVar93 + - 2) = 0; (iVar93 + -4) = 0x4000; (iVar93 + - 6) = (iVar38 + - 0x34); (iVar93 + - 8) = (iVar38 + -0x36); iVar17 = (iVar21 + 0x5ca2); (iVar93 + - 10) = iVar17 >> 0xf; (iVar93 + - 0xc) = iVar17; (iVar38 + - 0x54) = iVar17; (iVar38 + - 0x52) = iVar17 >> 0xf; (iVar93 + - 0xe) = uVar126; puVar94 = (undefined * )(iVar93 + - 0x10); (iVar93 + - 0x10) = 0xe701; uVar128 = FUN_3444_23fe();
(puVar94 + - 2) = (uVar128 >> 0x10); (puVar94 + - 4) = uVar128; (puVar94 + - 6) = 0x3444; puVar95 = puVar94 + - 8; (puVar94 + - 8) = 0xe708; iVar21 = FUN_3444_2364(); iVar17 = (iVar38 + -0x32); (puVar95 + - 2) = 0; (puVar95 + - 4) = 0x4000; (puVar95 + - 6) = (iVar38 + - 0x52); (puVar95 + - 8) = (iVar38 + - 0x54); (puVar95 + - 10) = 0; (puVar95 + - 0xc) = 0x4000; (puVar95 + - 0xe) = (iVar38 + - 0x2e); (puVar95 + - 0x10) = (iVar38 + - 0x30); uVar10 = * ff(iVar38 + - 0x2c); (puVar95 + - 0x12) = 0; (puVar95 + - 0x14) = uVar10; (iVar38 + - 0x56) = - (iVar21 - iVar17); (puVar95 + - 0x16) = 0x3444;
puVar96 = puVar95 + - 0x18; (puVar95 + - 0x18) = 0xe732; uVar128 = FUN_3444_23fe(); (puVar96 + - 2) = (uVar128 >> 0x10); (puVar96 + -4) = uVar128; (puVar96 + - 6) = 0x3444; puVar97 = puVar96 + - 8; (puVar96 + - 8) = 0xe739;
uVar128 = FUN_3444_2364(); (puVar97 + -2) = (uVar128 >> 0x10);
(puVar97 + - 4) = uVar128; (puVar97 + - 6) = 0x3444; puVar98 = puVar97 + - 8; (puVar97 + - 8) = 0xe740; uVar128 = FUN_3444_23fe();
(puVar98 + - 2) = (uVar128 >> 0x10); (puVar98 + - 4) = uVar128; (puVar98 + - 6) = 0x3444; puVar99 = puVar98 + - 8; (puVar98 + - 8) = 0xe747; iVar17 = FUN_3444_2364(); iVar17 = iVar17 + (iVar38 + - 0x56) + (iVar38 + - 0x28); (iVar38 + - 0x1e) = iVar17; iVar17 = ((iVar17 * 0x20 - (iVar38 + - 8)) / iVar18) / 2; (iVar38 + - 0xc) = iVar17; (iVar38 + - 10) = iVar17 >> 0xf; (puVar99 + - 2) = 0; (puVar99 + - 4) = 2; (puVar99 + - 6) = (iVar38 + - 10); (puVar99 + - 8) = (iVar38 + - 0xc); (puVar99 + - 10) = 0x3444; puVar100 = puVar99 + - 0xc; (puVar99 + - 0xc) = 0xe777; iVar17 = FUN_3444_2364();
piVar2 = (iVar38 + - 8); *piVar2 = * piVar2 + iVar17; (iVar38 + - 6) = (iVar38 + - 0x1c) << 5; (puVar100 + - 2) = 0; (puVar100 + - 4) = 0x4000; (puVar100 + - 6) = (iVar38 + - 0x52); (puVar100 + -8) = (iVar38 + - 0x54);
(puVar100 + - 10) = 0; (puVar100 + - 0xc) = 0x4000; (puVar100 + - 0xe) = (iVar38 + - 0x2e); (puVar100 + - 0x10) = (iVar38 + - 0x30); uVar10 = * ff(iVar38 + - 0x3a);
(puVar100 + - 0x12) = 0; (puVar100 + - 0x14) = uVar10; (puVar100 + - 0x16) = 0x3444; puVar101 = puVar100 + - 0x18; (puVar100 + - 0x18) = 0xe7a7; uVar128 = FUN_3444_23fe(); (puVar101 + - 2) = (uVar128 >> 0x10); (puVar101 + - 4) = uVar128; (puVar101 + - 6) = 0x3444; puVar102 = puVar101 + - 8; (puVar101 + - 8) = 0xe7ae; uVar128 = FUN_3444_2364(); (puVar102 + - 2) = (uVar128 >> 0x10); (puVar102 + - 4) = uVar128; (puVar102 + -6) = 0x3444; puVar103 = puVar102 + -8; (puVar102 + - 8) = 0xe7b5; uVar128 = FUN_3444_23fe(); (puVar103 + - 2) = (uVar128 >> 0x10); (puVar103 + - 4) = uVar128;
(puVar103 + - 6) = 0x3444; puVar104 = puVar103 + - 8; (puVar103 + -8) = 0xe7bc; iVar17 = FUN_3444_2364(); iVar17 = iVar17 + (iVar38 + - 0x56) + (iVar38 + - 0x28); (iVar38 + - 0x1c) = iVar17; iVar17 = ((iVar17 * 0x20 - (iVar38 + -6)) / iVar18) / 2; (iVar38 + - 0x10) = iVar17; (iVar38 + - 0xe) = iVar17 >> 0xf;
(puVar104 + - 2) = 0; (puVar104 + - 4) = 2; (puVar104 + - 6) = (iVar38 + - 0xe); (puVar104 + - 8) = (iVar38 + - 0x10); (puVar104 + -10) = 0x3444; uVar126 = 0x3444; puVar117 = (puVar104 - 0xc); (puVar104 + - 0xc) = 0xe7ec; iVar17 = FUN_3444_2364(); piVar2 = (iVar38 + - 6); * piVar2 = * piVar2 + iVar17; iVar17 = (iVar38 + - 0x4c) + (iVar38 + - 0x26); if ((iVar38 + - 0x22) + - 1 < = iVar17) {
iVar17 = iVar17 + - 1;
}
(iVar38 + - 4) = (iVar38 + - 0x50) + (iVar38 + - 0x26); (iVar38 + - 0x16) = iVar19;
if ((iVar38 + - 0x50) == 0x5c1e) {
piVar2 = (iVar38 + - 4); *piVar2 = * piVar2 + 1;
}
iVar19 = (iVar38 + - 4); piVar2 = * (int * * )(iVar38 + - 0x42); if ( * piVar2 != iVar19 & & iVar19 < = * piVar2) {
* piVar2 = iVar19;
}
0x5d2a = iVar17; (iVar38 + - 0x14) = iVar17; iVar19 = (iVar38 + - 8); for (uVar121 = (iVar38 + -4); puVar1 = (iVar38 + - 0x14),
* puVar1 != uVar121 & & uVar121 <= * puVar1; uVar121 = uVar121 + 1) {
iVar17 = iVar19 >> 5; (iVar38 + - 0x58) = iVar17; piVar2 = * (int * * )(iVar38 + - 0x3e); if ( * piVar2 != iVar17 & & iVar17 < = * piVar2) {
* piVar2 = iVar17;
}
iVar17 = (iVar38 + - 6) >> 5; (iVar38 + - 0x5a) = iVar17; piVar2 = * (int * * )(iVar38 + - 0x46); if ( * piVar2 < iVar17) {
* piVar2 = iVar17;
}
iVar105 = puVar117; if ((uVar121 < (0xd30 * 2 + 0x5c1e) + (iVar38 + - 0x26) + 2) || ((((0xd30 + (iVar38 + - 0x12)) * 2 + 0x5c1e) + (iVar38 + - 0x26)) - 2 < = uVar121)) {
(iVar105 + - 2) = uVar121 + 1; (iVar105 + - 4) = (iVar38 + - 0x5a); (iVar105 + - 6) = uVar121; piVar106 = (iVar105 + -8); (iVar105 + - 8) = (iVar38 + - 0x58);
}
else {
(iVar105 + - 2) = uVar121 + 1; (iVar105 + - 4) = (iVar38 + - 0x58) + 2; (iVar105 + - 6) = uVar121; (iVar105 + -8) = (iVar38 + - 0x58);
(iVar105 + - 10) = uVar126; uVar126 = 0x2c63; piVar106 = (iVar105 + - 0xc); (iVar105 + - 0xc) = 0xe8bb; FUN_2c63_028d(); piVar106[3] = uVar121 + 1; piVar106[2] = (iVar38 + - 0x5a); piVar106[1] = uVar121; * piVar106 = (iVar38 + -0x5a) + - 2;
}
(piVar106 + - 2) = uVar126; uVar126 = 0x2c63; puVar107 = (undefined * )(piVar106 + - 4); (piVar106 + -4) = 0xe8e5; FUN_2c63_028d(); puVar117 = ZEXT24(puVar107 + 8); iVar19 = iVar19 + (iVar38 + - 0xc); piVar2 = (iVar38 + - 6); * piVar2 = * piVar2 + (iVar38 + - 0x10);
}
iVar19 = (iVar38 + - 0x16);
}
}
(iVar93 + - 2) = uVar126; (iVar93 + - 4) = 0xe8fe; puVar12 = FUN_294b_03be(); return puVar12; case 0x5:
* (undefined2 * * )0xad0 = puVar14;
ppiVar57[ - 1] = 0x1000; puVar41 = ppiVar57 + - 2; ppiVar57[ - 2] = 0x64a2; FUN_1862_1975(); (puVar41 + - 2) = 0x1862; (puVar41 + -4) = 0x64d6; puVar12 = FUN_154b_0395(); return puVar12; case 0x6:
// WARNING: Bad instruction - Truncating control flow here
halt_baddata(); case 0x7: goto switchD_1000_8da3_caseD_7; case 0x8:
ppiVar57[ - 1] = unaff_DS; uVar118 = * (ulong * )0x6c7; unaff_DS = (undefined2)(uVar118 >> 0x10); puVar117 = (uVar118 & 0xffff); if (iVar17 == 1 || puVar12 == 0x0) {
0x67e2 = 0xa0; puVar13 = puVar14;
}
else {
puVar13 = (puVar14 & 0xff00 | ((puVar14 + ';') - (puVar14 < 0x68e))); 0x67ed = 0; 0x67ef = 0x3d49;
0x67e0 = 4; 0x67e2 = 0xa0;
}
goto LAB_1862_079a;
}
} while ( true ); case 1: piVar2 = (puVar12 + piVar122); piVar2 = piVar2 + - 1; while (piVar122 = (piVar122 + 1), piVar122 < 8) {
// LAB_1000_0624:
uVar10 = 0xc126; uVar121 = (piVar122 * 4 + 0x600); iVar19 = (piVar122 * 4 + 0x602); puVar117 = (iVar38 + -6); uVar11 = * puVar117; * puVar117 = * puVar117 + uVar121; piVar2 = (iVar38 + - 4); * piVar2 = * piVar2 + iVar19 + CARRY2(uVar11, uVar121);
uVar11 = (iVar38 + - 0xc); iVar17 = uVar11 >> 0xf; if ((iVar17 < = iVar19) & & ((iVar17 < iVar19 || (uVar11 < uVar121)))) {
* (int * * )0x30 = piVar122;
(iVar38 + - 0xc) = uVar121;
}
}
iVar19 = 0; loop {
iVar17 = 3; uVar10 = 0xc14e; loop {
iVar18 = (iVar19 * 5 + iVar17) * 4; uVar125 = (iVar18 + 0x502);
(iVar18 + 0x504) = (iVar18 + 0x500); (iVar18 + 0x506) = uVar125;
iVar17 = iVar17 + - 1;
} while ( - 1 < iVar17); (puVar40 + - 2) = (iVar38 + - 4); (puVar40 + - 4) = (iVar38 + - 6); (puVar40 + -6) = 0; (puVar40 + - 8) = 100; uVar10 = 0xc126; iVar17 = iVar19 * 4; (puVar40 + - 10) = (iVar17 + 0x602); (puVar40 + - 0xc) = (iVar17 + 0x600);
(iVar38 + - 0x1c) = iVar17; (puVar40 + - 0xe) = uVar126; puVar36 = (undefined * )(puVar40 + - 0x10); (puVar40 + - 0x10) = 0x6b9;
uVar128 = FUN_3444_23fe(); (puVar36 + -2) = (uVar128 >> 0x10);
(puVar36 + - 4) = uVar128; (puVar36 + - 6) = 0x3444; uVar126 = 0x3444; puVar40 = (puVar36 + - 8); (puVar36 + - 8) = 0x6c0;
uVar128 = FUN_3444_2364(); (iVar38 + -0x16) = (uVar128 >> 0x10);
uVar10 = 0xc14e; uVar125 = (iVar38 + -0x16); (iVar19 * 0x14 + 0x500) = uVar128; (iVar19 * 0x14 + 0x502) = uVar125; uVar10 = 0xc126; iVar17 = (iVar38 + - 0x1c); (iVar17 + 0x602) = 0; (iVar17 + 0x600) = 0; uVar10 = 0xc142; (iVar17 + 0x5aa) = 0; (iVar17 + 0x5a8) = 0; iVar19 = iVar19 + 1;
} while (iVar19 < 8); uVar10 = 0xc104; uVar121 = 0x6b2; uVar11 = 0x696; uVar8 = 0x694; uVar9 = uVar121 + uVar11 + uVar8; uVar10 = 0xc124; puVar117 = 0x620; uVar15 = uVar9 + * puVar117; iVar19 = (uVar121 >> 0xf) + (uVar11 >> 0xf) + CARRY2(uVar121, uVar11) + (uVar8 >> 0xf) + CARRY2(uVar121 + uVar11, uVar8) + 0x622 + CARRY2(uVar9, * puVar117); (iVar38 + - 6) = uVar15; (iVar38 + - 4) = iVar19; if ((iVar19 < 1) & & ((iVar19 < 0 || (uVar15 < 200)))) {
(iVar38 + - 6) = 200; (iVar38 + - 4) = 0;
}
iVar19 = 0; loop {
iVar17 = 3; uVar10 = 0xc150; loop {
iVar18 = (iVar19 * 5 + iVar17) * 2; (iVar18 + 0x462) = (iVar18 + 0x460); iVar17 = iVar17 + - 1;
} while ( - 1 < iVar17); (puVar40 + - 2) = (iVar38 + - 4); (puVar40 + - 4) = (iVar38 + - 6); lVar129 = (long)(iVar19 * 2 + 0x694) * 200; (puVar40 + - 6) = (lVar129 >> 0x10); (puVar40 + - 8) = lVar129; (iVar38 + - 0x1c) = iVar19 * 2; (puVar40 + - 10) = 0x3444; puVar37 = (puVar40 + -0xc); puVar40 = (puVar40 + - 0xc); * puVar37 = 0x797; uVar128 = FUN_3444_2364(); (iVar38 + - 0x16) = (uVar128 >> 0x10); (iVar19 * 10 + 0x460) = uVar128; iVar17 = (iVar38 + - 0x1c); (iVar17 + 0x440) = (iVar17 + 0x624); (iVar17 + 0x694) = 0; (iVar17 + 0x624) = 0; iVar19 = iVar19 + 1;
} while (iVar19 < 0x10); return 0x0;
case 2: in (extraout_DX); while ( true ) {
puVar114 = (undefined * )(puVar40 + -2); (puVar40 + - 2) = 0xfbd5; uVar128 = FUN_1f51_01f7(); iVar19 = (puVar114 + 2); puVar115 = (puVar114 + 4); pcVar5 = (char * )(iVar38 + 4); * pcVar5 = *pcVar5 + '\x01'; iVar19 = iVar19 + - 1; if (iVar19 == 0) break; puVar40 = (puVar114 + 2); (puVar114 + 2) = iVar19;
}
bVar16 = * (iVar38 + 0xd); if (bVar16 != 0) {
uVar6 = * (undefined * )(bVar16 + 0xe); * (undefined * )0x67e6 = uVar6; if (0x9c65 != '\x03') {
out((uVar128 >> 0x10), CONCAT11(uVar6, 8));
}
puVar116 = puVar114 + 2; (puVar114 + 2) = 0xfc13; uVar128 = FUN_1f51_01f7();
puVar115 = (puVar116 + 2);
}
uVar10 = (undefined2)(uVar128 >> 0x10); puVar12 = uVar128; if (0x9c65 != '\x03') {
out(uVar10, 0xff08); puVar12 = 0x5; out(uVar10, 5);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
* puVar115 = 0x1000; puVar115[ - 1] = 0xfc50; puVar12 = FUN_2692_01e8();
}
}
else {
if (0x853e != '\0') {
* puVar115 = 0x1000; puVar115[ - 1] = 0xfc41; puVar12 = FUN_2692_0562();
}
}
}
pcVar5 = (char * )0x7fcc; * pcVar5 = * pcVar5 + - 1; return puVar12;
case 4: pcVar5 = (char * )0x7f80; * pcVar5 = ( * pcVar5 - (in_BX >> 8)) - (uVar121 < 0); piVar2 = piVar123; * piVar2 = *piVar2 + iVar38 + - 2; bVar127 = *piVar2 == 0; while ( true ) {
if (bVar127) {
(puVar40 + - 2) = (iVar38 + - 0x38) + - 2; (puVar40 + - 4) = 0x2d; iVar19 = (iVar38 + - 0x244); (puVar40 + - 6) = (iVar38 + - 0x242); (puVar40 + - 8) = iVar19 + 1;
(puVar40 + - 10) = uVar126; puVar68 = (undefined * )(puVar40 + - 0xc); (puVar40 + - 0xc) = 0xd41d; FUN_3444_1f84(); puVar65 = puVar68 + 8; uVar128 = * ff(iVar38 + - 0x244); uVar10 = (undefined2)(uVar128 >> 0x10); iVar17 = uVar128; iVar19 = (iVar38 + - 0x38);
* (undefined * )(iVar17 + iVar19) = 0; * (undefined * )(iVar17 + iVar19 + - 1) = 0x20; uVar128 = * ff(iVar38 + -0x244); uVar10 = (undefined2)(uVar128 >> 0x10); * (undefined * )(iVar38 + - 0x244) = * (undefined * )(uVar128 + - 1 + iVar19);
}
else {
if ((iVar38 + - 0x24a) == 0) {
uVar10 = (iVar38 + 10); (puVar40 + - 2) = piVar122[in_BX * 2 + 1]; (puVar40 + - 4) = piVar122[in_BX * 2]; if (* * (char * * )(iVar38 + 4) - (iVar38 + - 0x34) == 1) {
uVar10 = 0x10;
}
else {
uVar10 = 0x20;
}
(puVar40 + - 6) = uVar10; (puVar40 + - 8) = unaff_SS; (puVar40 + - 10) = iVar38 + - 0x22;
(puVar40 + - 0xc) = (iVar38 + - 0x242); (puVar40 + - 0xe) = (iVar38 + - 0x244); (puVar40 + - 0x10) = uVar126; puVar66 = (undefined * )(puVar40 + - 0x12);
(puVar40 + - 0x12) = 0xd399; FUN_3444_1aca(); puVar65 = puVar66 + 0xe;
}
else {
uVar10 = (iVar38 + 10); (puVar40 + - 2) = piVar122[in_BX * 2 + 1]; (puVar40 + - 4) = piVar122[in_BX * 2]; (puVar40 + - 6) = unaff_SS; (puVar40 + - 8) = iVar38 + - 0x22; (puVar40 + - 10) = (iVar38 + -0x242); (puVar40 + - 0xc) = (iVar38 + - 0x244); (puVar40 + - 0xe) = uVar126; puVar64 = (undefined * )(puVar40 + - 0x10); (puVar40 + - 0x10) = 0xd35c; FUN_3444_1aca(); puVar65 = puVar64 + 0xc;
}
}
(puVar65 + - 2) = (iVar38 + - 0x242); (puVar65 + - 4) = (iVar38 + - 0x244); (puVar65 + - 6) = (iVar38 + - 0x32); (puVar65 + - 8) = (iVar38 + - 0x30); (puVar65 + -10) = 0x3444; uVar126 = 0x27ac; puVar67 = (puVar65 + - 0xc); (puVar65 + - 0xc) = 0xd3af; FUN_27ac_0508(); puVar40 = puVar67 + 4; uVar128 = *ff(iVar38 + - 0x244); uVar10 = (undefined2)(uVar128 >> 0x10); iVar17 = uVar128; iVar19 = (iVar38 + - 0x38); * ff(iVar17 + iVar19) = 0; uVar121 = iVar17 + iVar19 + 1; (iVar38 + - 0x244) = uVar121; (iVar38 + -0x242) = uVar10; if (iVar38 - 0x3eU < uVar121) {
puVar67[3] = unaff_DS; puVar67[2] = 0xa3ed;
// WARNING: Subroutine does not return
puVar67[1] = 0x27ac; * puVar67 = 0xd3d9; FUN_2a60_08cb();
}
piVar2 = (iVar38 + - 0x34); *piVar2 = * piVar2 + 1; piVar2 = (iVar38 + - 0x32); * piVar2 = *piVar2 + 0x7fd4; in_BX = (iVar38 + -0x34); puVar117 = (iVar38 + - 6); if ( * puVar117 == in_BX || * puVar117 < in_BX) break; uVar128 = *ff(iVar38 + 8);
piVar122 = uVar128; uVar128 = * (undefined4 *)(piVar122 + in_BX * 2); bVar127 = (uVar128 + 1) == '-';
}
puVar67[3] = 0x27ac; puVar69 = puVar67 + 2; puVar67[2] = 0xd44a;
FUN_1ba9_0e42(); (puVar69 + - 2) = 0x27ac; uVar118 = ZEXT24(ff(puVar69 + - 4)); (puVar69 + - 4) = 0xd44e; iVar19 = FUN_1ba9_10aa(); if (iVar19 == 0) {
(iVar38 + - 0x36) = 0;
}
(iVar38 + - 0x34) = 0xffff;
// LAB_1ba9_19ca:
puVar75 = (undefined * )uVar118; if ((iVar38 + - 0x36) != 0) {
(puVar75 + - 2) = uVar126; puVar70 = (puVar75 + - 4); puVar75 = puVar75 + - 4; * puVar70 = 0xd464;
iVar19 = FUN_1ba9_10aa(); if (iVar19 == 0) goto LAB_1ba9_1cbc;
}
(iVar38 + - 0x24e) = 1; (iVar38 + - 0x24c) = 0; (puVar75 + - 2) = uVar126; puVar71 = puVar75 + - 4; (puVar75 + - 4) = 0xd47b; iVar19 = FUN_1ba9_10aa(); if ((iVar19 != 0) & & ((iVar38 + - 0x36) == 0)) {
(iVar38 + - 0x36) = 1;
}
(puVar71 + - 2) = uVar126; puVar72 = puVar71 + - 4; (puVar71 + -4) = 0xd48f; iVar19 = FUN_2692_03c2(); puVar12 = puVar72; if (iVar19 != 0) {
(puVar72 + - 2) = unaff_SS; (puVar72 + - 4) = iVar38 + - 0x18; (puVar72 + - 6) = 0x2692;
puVar73 = (puVar72 + - 8); (puVar72 + - 8) = 0xd49d; FUN_2692_03c6(); puVar12 = puVar73 + 2; if (((iVar38 + - 0xb) == - 2) & & (puVar12 = puVar73 + 2, * (iVar38 + - 0xc) != 0xa3da)) {
puVar73[1] = 0; * puVar73 = (iVar38 + - 0xe); puVar73[ -1] = (iVar38 + - 0x10);
puVar73[ - 2] = (iVar38 + -10); puVar73[ - 3] = (iVar38 + - 0xc); puVar73[ - 4] = 0x2692; uVar126 = 0x2692; puVar74 = puVar73 + - 5; puVar73[ - 5] = 0xd4c4; FUN_2692_03a7(); puVar75 = (undefined * )(puVar74 + 10);
// LAB_1ba9_1cbc:
(puVar75 + - 2) = uVar126; puVar90 = puVar75 + - 4; (puVar75 + - 4) = 0xd750; iVar19 = FUN_1ba9_10aa();
if ((iVar19 == 0) & & (0xa3da != - 1)) {
if ((iVar38 + - 0x3a) != -1) {
(puVar90 + - 2) = 0; (puVar90 + - 4) = 0; (puVar90 + - 6) = 0; (puVar90 + - 8) = (0xa3da + - 0x30) * 0x10 + (iVar38 + - 0x3a);
(puVar90 + - 10) = uVar126; uVar126 = 0x2692; puVar89 = puVar90 + - 0xc;
(puVar90 + - 0xc) = 0xd777; FUN_2692_03a7(); puVar90 = puVar89 + 8;
}
(iVar38 + - 0x240) = 1;
}
if ((iVar38 + - 0x3a) != -1) {
* * (char * * )(iVar38 + 4) = (iVar38 + - 0x3a) + '\x01';
}
(puVar90 + - 2) = uVar126; puVar91 = puVar90 + - 4; (puVar90 + -4) = 0xd795; FUN_1ba9_0e5d(); (puVar91 + - 2) = uVar126; puVar92 = puVar91 + - 4; (puVar91 + - 4) = 0xd79a; FUN_2692_0a79(); (puVar92 + - 2) = (iVar38 + - 0x24); (puVar92 + - 4) = (iVar38 + - 0x26); (puVar92 + -6) = unaff_SS; (puVar92 + - 8) = iVar38 + - 0x2e; (puVar92 + - 10) = 0x2692; (puVar92 + -0xc) = 0xd7aa; FUN_27ac_0824(); uVar10 = (iVar38 + - 0x234); 0x9c7a = (iVar38 + - 0x236); 0x9c7c = uVar10; return (iVar38 + - 0x240);
}
}
if ((iVar38 + - 0x36) != 0) goto LAB_1ba9_1a43; (puVar12 + - 2) = 0x2692; uVar126 = 0x2a25; uVar118 = ZEXT24((undefined * )(puVar12 + - 4)); (puVar12 + - 4) = 0xd562; iVar19 = FUN_2a25_003c(); if (iVar19 != 0) {
iVar79 = uVar118; (iVar79 + - 2) = 0x2a25; uVar126 = 0x2a25; uVar118 = (iVar79 - 4); (iVar79 + - 4) = 0xd56e; uVar121 = FUN_2a25_00b4();
puVar75 = (undefined * )uVar118; (iVar38 + - 0x250) = uVar121; if (((uVar121 & 0x800) == 0) & & (( * (uVar121 + 0xb8f1) & 2) != 0)) {
(iVar38 + - 0x250) = uVar121 - 0x20;
}
(iVar38 + - 0x34) = (iVar38 + - 0x3a); loop {
iVar19 = (iVar38 + - 0x250); if ((iVar19 == 10) || (iVar19 == 0xd)) goto LAB_1ba9_1cbc; if (iVar19 == 0x1b) {
// LAB_1ba9_1b5b:
uVar126 = 0x2a25; (iVar38 + - 0x3a) = 0xffff; goto LAB_1ba9_1cbc;
}
if (iVar19 == 0x20) goto LAB_1ba9_1cbc; if (iVar19 == 0x2b) {
// LAB_1ba9_1b63:
(iVar38 + - 0x34) = ((iVar38 + - 0x34) + 1) % (iVar38 + - 6);
}
else {
if ((iVar19 != 0x2d) & & (iVar19 != 0x848)) {
if (iVar19 == 0x850) goto LAB_1ba9_1b63; if ((0 < iVar19 + - 0x851) && (iVar19 == 0x853 || iVar19 + -0x852 < 1))
goto LAB_1ba9_1cbc; if (( * (iVar38 + - 0x24f) & 8) != 0) {
(puVar75 + - 2) = * (iVar38 + - 0x250); (puVar75 + - 4) = 0x2a25; puVar80 = (puVar75 + -6); (puVar75 + - 6) = 0xd5e1; FUN_2a25_00a3(); * puVar80 = 0; puVar80[ - 1] = 0x2a25; puVar81 = puVar80 + - 2; puVar80[ - 2] = 0xd5ea; FUN_2a25_00a3(); puVar75 = (undefined * )(puVar81 + 2);
goto LAB_1ba9_1b5b;
}
uVar10 = (iVar38 + - 0x3a); (iVar38 + - 0x254) = uVar10; (iVar38 + - 0x252) = uVar10; if ((* ((iVar38 + - 0x250) + -0x470f) & 3) != 0) goto LAB_1ba9_1c61; goto LAB_1ba9_1bc6;
}
if ((iVar38 + - 0x34) < 1) {
iVar19 = (iVar38 + - 6);
}
else {
iVar19 = (iVar38 + - 0x34);
}
(iVar38 + - 0x34) = iVar19 + -1;
}
uVar128 = * ff(iVar38 + 8); uVar128 = * ff((iVar38 + - 0x34) * 4 + uVar128);
} while ((uVar128 + 1) == '-');
// LAB_1ba9_1b99:
(puVar75 + - 2) = (0x7fd4 / '\x02') + 0x7fd4 * (iVar38 + -0x34) + (iVar38 + - 0x23c);
(puVar75 + - 4) = 0x7fd6 * 4 + (iVar38 + - 0x30); (puVar75 + - 6) = 0x2a25; uVar126 = 0x2692; puVar82 = puVar75 + - 8; (puVar75 + - 8) = 0xd654; FUN_2692_09f6(); uVar118 = ZEXT24(puVar82 + 4);
}
goto LAB_1ba9_1bc6; case 5: piVar2 = (puVar12 + piVar123) + - 0x3d9; * piVar2 = * piVar2 | in_CX; * (undefined2 * *)(iVar38 + - 8) = puVar12;
puVar40[ - 1] = 0; puVar40[- 2] = 100; uVar10 = 0xc142;
puVar40[ - 3] = 0x5b6; puVar40[- 4] = 0x5b4; puVar40[ - 5] = 0x1000; puVar22 = puVar40 + - 6; puVar40[ - 6] = 0x420; uVar128 = FUN_3444_23fe(); uVar10 = 0xc138; puVar117 = 0x5c8; uVar121 = * puVar117; * puVar117 = * puVar117 + uVar128; piVar2 = 0x5ca;
* piVar2 = * piVar2 + (uVar128 >> 0x10) + CARRY2(uVar121, uVar128);
(puVar22 + - 2) = 0; (puVar22 + - 4) = 0xfa; uVar10 = 0xc142; (puVar22 + - 6) = 0x5b2; (puVar22 + - 8) = 0x5b0;
(puVar22 + - 10) = 0x3444; puVar23 = (undefined * )(puVar22 + - 0xc); (puVar22 + - 0xc) = 0x447; uVar128 = FUN_3444_23fe(); (puVar23 + - 2) = 0; (puVar23 + -4) = 0x10; uVar10 = 0xc128; (puVar23 + - 6) = 0x5fe; (puVar23 + - 8) = 0x5fc; iVar19 = 0x5a6; (puVar23 + - 10) = iVar19 >> 0xf; (puVar23 + - 0xc) = iVar19; (iVar38 + - 0x18) = uVar128; (iVar38 + - 0x16) = (uVar128 >> 0x10); (puVar23 + - 0xe) = 0x3444; puVar24 = puVar23 + - 0x10; (puVar23 + - 0x10) = 0x476;
uVar128 = FUN_3444_23fe(); uVar10 = (undefined2)(uVar128 >> 0x10); (puVar24 + - 2) = uVar10; (puVar24 + - 4) = uVar128; (iVar38 + -0x14) = uVar128; (iVar38 + - 0x12) = uVar10; (puVar24 + - 6) = 0x3444; puVar25 = puVar24 + - 8;
(puVar24 + - 8) = 0x483; lVar129 = FUN_3444_2364(); uVar121 = (iVar38 + - 0x18); puVar117 = (iVar38 + -10); iVar19 = uVar121 - * puVar117;
lVar129 = lVar129 + CONCAT22((((iVar38 + - 0x16) - (iVar38 + - 8)) - (uVar121 < * puVar117)) * 2 | (iVar19 < 0),
iVar19 * 2); uVar8 = lVar129; uVar10 = 0xc124; puVar117 = 0x620; uVar121 = * puVar117; uVar9 = uVar8 - * puVar117; iVar19 = 0x622; uVar10 = 0xc138; puVar117 = 0x5cc;
uVar11 = * puVar117; * puVar117 = * puVar117 + uVar9; piVar2 = 0x5ce; * piVar2 = * piVar2 + (((lVar129 >> 0x10) - iVar19) - (uVar8 < uVar121)) + CARRY2(uVar11, uVar9); (puVar25 + - 2) = 0x3444; puVar26 = (puVar25 + - 4); (puVar25 + - 4) = 0x4bc; FUN_3444_40e7();
* puVar26 = 0x3444; puVar27 = puVar26 + -1; puVar26[ - 1] = 0x4c5;
FUN_3444_4472(); (puVar27 + - 2) = 0x3444; puVar28 = (undefined * )(puVar27 + - 4); (puVar27 + -4) = 0x4ca; uVar128 = FUN_3444_42c7(); uVar10 = 0xc138; 0x5d0 = uVar128; 0x5d2 = (uVar128 >> 0x10); iVar19 = (iVar38 + - 10); iVar17 = (iVar38 + - 8); uVar11 = iVar19 * 2; puVar117 = 0x5d4; uVar121 = * puVar117; * puVar117 = * puVar117 + uVar11; piVar2 = 0x5d6; * piVar2 = * piVar2 + (iVar17 << 1 | (iVar19 < 0)) + CARRY2(uVar121, uVar11); (puVar28 + - 2) = 0; (puVar28 + - 4) = 2; (puVar28 + - 6) = 0; (puVar28 + -8) = 500; uVar10 = 0xc142; uVar121 = 0x5bc; puVar117 = 0x5b0; uVar11 = *puVar117; (puVar28 + - 10) = (0x5be - 0x5b2) - (uVar121 < * puVar117); (puVar28 + - 0xc) = uVar121 - uVar11; (puVar28 + - 0xe) = 0x3444; puVar29 = puVar28 + - 0x10; (puVar28 + - 0x10) = 0x515; uVar128 = FUN_3444_23fe(); (puVar29 + - 2) = 0; (puVar29 + - 4) = 0x18; (puVar29 + - 6) = (iVar38 + - 0x12); (puVar29 + -8) = (iVar38 + - 0x14);
(iVar38 + - 0x10) = uVar128; (iVar38 + - 0xe) = (uVar128 >> 0x10); (puVar29 + - 10) = 0x3444; puVar30 = puVar29 + - 0xc; (puVar29 + - 0xc) = 0x52d; uVar128 = FUN_3444_2364(); (puVar30 + - 2) = 0; (puVar30 + - 4) = 8; uVar10 = 0xc146; (puVar30 + -6) = 0x5a4; (puVar30 + - 8) = 0x5a2; iVar19 = 0x5a0; (puVar30 + - 10) = iVar19 >> 0xf;
(puVar30 + - 0xc) = iVar19; (iVar38 + - 0x1c) = uVar128; (iVar38 + - 0x1a) = (uVar128 >> 0x10); (puVar30 + - 0xe) = 0x3444; puVar31 = puVar30 + - 0x10; (puVar30 + - 0x10) = 0x55c; uVar128 = FUN_3444_23fe(); (puVar31 + - 2) = (uVar128 >> 0x10); (puVar31 + - 4) = uVar128; (puVar31 + -6) = 0x3444; puVar32 = puVar31 + -8; (puVar31 + - 8) = 0x563; uVar128 = FUN_3444_2364(); puVar117 = (iVar38 + - 0x1c); uVar11 = uVar128 - * puVar117; puVar1 = (iVar38 + - 0x10); uVar8 = uVar11 + * puVar1; uVar10 = 0xc124; puVar3 = 0x620; uVar9 = uVar8 + * puVar3; uVar126 = 0xc14a; puVar4 = 0x43a; uVar121 = * puVar4; (puVar32 + - 2) = (((uVar128 >> 0x10) - (iVar38 + - 0x1a)) - (uVar128 < * puVar117)) + (iVar38 + - 0xe) + CARRY2(uVar11,* puVar1) + 0x622 + CARRY2(uVar8,* puVar3) + 0x43c + CARRY2(uVar9,* puVar4); (puVar32 + - 4) = uVar9 + uVar121; (puVar32 + - 6) = 0x3444; puVar33 = puVar32 + - 8; (puVar32 + - 8) = 0x592;
uVar128 = FUN_3444_2364(); uVar10 = 0xc138;
puVar1 = 0x5d8; uVar121 = uVar128 + * puVar1; puVar117 = (iVar38 + - 10);
iVar19 = (uVar128 >> 0x10) + 0x5da + CARRY2(uVar128, * puVar1) + (iVar38 + - 8) + CARRY2(uVar121,* puVar117); (iVar38 + - 6) = uVar121 + * puVar117; (iVar38 + -4) = iVar19; if (iVar19 < 0) {
(iVar38 + - 4) = 0; (iVar38 + - 6) = 0;
}
(puVar33 + - 2) = 0; (puVar33 + - 4) = 2; uVar121 = 0x5d8; puVar117 = (iVar38 + - 6); uVar11 = * puVar117; (puVar33 + -6) = 0x5da + (iVar38 + - 4) + CARRY2(uVar121, * puVar117);
(puVar33 + - 8) = uVar121 + uVar11; (puVar33 + - 10) = 0x3444;
uVar126 = 0x3444; puVar34 = puVar33 + - 0xc; (puVar33 + - 0xc) = 0x5d4;
uVar128 = FUN_3444_2364(); uVar10 = 0xc138;
0x5d8 = uVar128; 0x5da = (uVar128 >> 0x10); uVar8 = 0x694 / 5; puVar117 = (iVar38 + - 10); uVar121 = * puVar117; uVar9 = uVar8 - * puVar117;
iVar19 = (iVar38 + - 8); uVar10 = 0xc138; puVar117 = 0x5dc; uVar11 = *puVar117; * puVar117 = * puVar117 + uVar9;
piVar2 = 0x5de; * piVar2 = * piVar2 + (((uVar8 >> 0xf) - iVar19) - (uVar8 < uVar121)) + CARRY2(uVar11, uVar9); (puVar34 + -2) = 0x3444; puVar35 = puVar34 + -4; (puVar34 + - 4) = 0x608; FUN_1000_07e8(); (puVar35 + - 2) = 0x3444; puVar40 = (puVar35 + -4); (puVar35 + - 4) = 0x60c; FUN_1000_0afb(); 0x30 = 0;
(iVar38 + - 0xc) = 0; (iVar38 + - 6) = 1; (iVar38 + - 4) = 0; piVar122 = 0x1; goto LAB_1000_0624;
}
if ((in_BX | 0x7400) < 1) {
// WARNING: Bad instruction - Truncating control flow here
halt_baddata();
}
if ((in_BX | 0x7400) != 0) {
uVar121 = ((piVar122 + piVar123 * 0x20) * 2 + 0x6bd); (iVar38 + -0xc) = uVar121; uVar121 = uVar121 >> 8; uVar11 = uVar121 & 0x3f; (iVar38 + - 6) = uVar11; if (uVar11 != 0) {
if (( * (iVar38 + - 6) & 0x20) != 0) {
uVar121 = (uVar121 & 7) + 0x72;
goto LAB_154b_0b06;
}
if (( * (iVar38 + - 6) & 3) == 0) {
if (((iVar38 + - 0xc) & 0x8000) != 0) {
uVar121 = (((iVar38 + - 6) & 0x1c) >> 2) + 0x5f;
goto LAB_154b_0b06;
}
uVar121 = DAT_4b2d_ec49; if ((iVar38 + -6) < 5) goto LAB_154b_0b06;
}
uVar121 = (iVar38 + - 6) + 0x40; goto LAB_154b_0b06;
}
}
if (DAT_616d_0cd2 != 0) {
uVar121 = * (piVar122 + piVar123 * 0x20 + - 0x207c); (iVar38 + - 6) = uVar121; if (uVar121 != 0) {
if ((DAT_616d_0cce == 0) || (( * ((piVar122 + piVar123 * 0x20) * 2 + 0x6bd) & 0xe0) != 0x20)) {
uVar121 = (iVar38 + - 6) + 0x160;
}
else {
uVar121 = 0x31;
}
goto LAB_154b_0b06;
}
}
* (int * * )(iVar38 + -8) = piVar122; if ((DAT_616d_0cce == 0) || (iVar19 = ( * ((piVar122 + piVar123 * 0x20) * 2 + 0x6bd) & 0xe0) >> 5,
iVar19 == 0)) {
if ((DAT_616d_0ccc == 0) || (uVar121 = ((piVar123 * 0x40 + (iVar38 + - 8)) * 2 + 0x6bd),
(iVar38 + - 0xc) = uVar121, (uVar121 & 0x8000) == 0)) {
uVar121 = ((piVar123 * 0x40 + (iVar38 + - 8)) * 2 + 0x6bd) & 0x1f;
}
else {
iVar19 = DAT_616d_0a8e - ( * (iVar38 + -0xc) & 0x1f); if (iVar19 < 3) {
uVar121 = 0x42;
}
else {
if (iVar19 < 6) {
uVar121 = 0x41;
}
else {
uVar121 = 0x40;
}
}
}
}
else {
if (DAT_616d_0a7e == 5) {
iVar19 = iVar19 + 0x78;
}
else {
iVar19 = iVar19 + 0x30;
}
(iVar38 + - 4) = iVar19; uVar121 = (iVar38 + - 4);
}
// LAB_154b_0b06:
puVar20 = (((iVar38 + 6) * 0x28 + (iVar38 + 4)) * 2 + 0xc57); * (uint * * )(iVar38 + - 0x12) = puVar20; (iVar38 + - 0x10) = 0x5b2d; if (* puVar20 == uVar121) {
puVar12 = 0x6169;
}
else {
puVar40[ - 1] = uVar121; puVar40[- 2] = 0x1388 * (iVar38 + 6) + 0x15c3; puVar40[ - 3] = 0x138a * (iVar38 + 4) + 0x15c1;
puVar40[ - 4] = 0x1000; puVar40[- 5] = 0x6013; puVar12 = FUN_168b_04c4(); * * (uint * * )(iVar38 + - 0x12) = uVar121;
}
return puVar12;
}
(iVar38 + - 4) = 0;
}
else {
in_CX = CONCAT11((in_CX >> 8), 4); in_BX = (uVar121 & 0x7e) * 0x10 + (piVar123 >> 1); if ((in_BX + 0xb706) == '\0') goto LAB_154b_0bdc; puVar40[ - 1] = piVar123; puVar40[ - 2] = piVar122;
puVar40[ - 3] = 0x3444; uVar126 = 0x10f0; puVar39 = puVar40 + - 4; puVar40[ - 4] = 0x6085; uVar10 = FUN_10f0_094e(); puVar40 = (puVar39 + 4); (iVar38 + - 4) = uVar10;
}
if ((iVar38 + - 4) == 0) {
if (DAT_616d_0cd0 != 0) {
uVar121 = ((piVar123 + piVar122 * 0x20) * 2 + 0x6bd); (iVar38 + -0xc) = uVar121; uVar121 = uVar121 >> 8; uVar11 = uVar121 & 0x3f; (iVar38 + - 6) = uVar11; if (uVar11 != 0) {
if (( * (iVar38 + - 6) & 0x20) != 0) {
uVar121 = (uVar121 & 7) + 0x72;
goto LAB_154b_0ec3;
}
if (( * (iVar38 + - 6) & 3) == 0) {
if (((iVar38 + - 0xc) & 0x8000) != 0) {
uVar121 = (((iVar38 + - 6) & 0x1c) >> 2) + 0x5f;
goto LAB_154b_0ec3;
}
uVar121 = DAT_4b2d_ec49; if ((iVar38 + -6) < 5) goto LAB_154b_0ec3;
}
uVar121 = (iVar38 + - 6) + 0x40; goto LAB_154b_0ec3;
}
}
if (DAT_616d_0cd2 != 0) {
uVar121 = * (piVar123 + piVar122 * 0x20 + - 0x207c); (iVar38 + - 6) = uVar121; if (uVar121 != 0) {
if ((DAT_616d_0cce == 0) || (( * ((piVar123 + piVar122 * 0x20) * 2 + 0x6bd) & 0xe0) != 0x20)) {
uVar121 = (iVar38 + - 6) + 0x160;
}
else {
uVar121 = 0x31;
}
goto LAB_154b_0ec3;
}
}
if ((DAT_616d_0cce == 0) || (iVar19 = ( * ((piVar123 + piVar122 * 0x20) * 2 + 0x6bd) & 0xe0) >> 5,
iVar19 == 0)) {
if ((DAT_616d_0ccc == 0) || (uVar121 = ((piVar123 + piVar122 * 0x20) * 2 + 0x6bd),
(iVar38 + -0xc) = uVar121, (uVar121 & 0x8000) == 0)) {
uVar121 = ((piVar123 + piVar122 * 0x20) * 2 + 0x6bd) & 0x1f;
}
else {
iVar19 = DAT_616d_0a8e - ( * (iVar38 + -0xc) & 0x1f); if (iVar19 < 3) {
uVar121 = 0x42;
}
else {
if (iVar19 < 6) {
uVar121 = 0x41;
}
else {
uVar121 = 0x40;
}
}
}
goto LAB_154b_0ec3;
}
if (DAT_616d_0a7e == 5) {
iVar19 = iVar19 + 0x78;
}
else {
iVar19 = iVar19 + 0x30;
}
(iVar38 + - 4) = iVar19;
}
uVar121 = (iVar38 + - 4);
// LAB_154b_0ec3:
puVar20 = (((iVar38 + 6) * 0x28 + (iVar38 + 4)) * 2 + 0xc57); puVar12 = 0x5b2d; * (uint * * )(iVar38 + - 0x12) = puVar20; (iVar38 + - 0x10) = 0x5b2d; if ( * puVar20 != uVar121) {
(puVar40 + - 2) = uVar121; (puVar40 + - 4) = 0x1388 * (iVar38 + 6) + 0x15c3; (puVar40 + -6) = 0x138a * (iVar38 + 4) + 0x15c1; (puVar40 + - 8) = uVar126; (puVar40 + - 10) = 0x63d0; puVar12 = FUN_168b_04c4(); * * (uint * * )(iVar38 + - 0x12) = uVar121;
}
return puVar12;
// LAB_1ba9_1a43:
(puVar12 + - 2) = unaff_SS; (puVar12 + - 4) = iVar38 + - 0x3e; (puVar12 + - 6) = 0x2692; puVar76 = (puVar12 + - 8); (puVar12 + - 8) = 0xd4dc; FUN_1ba9_1038(); puVar76[1] = 4; * puVar76 = unaff_SS; puVar76[ -1] = iVar38 + - 0x248; puVar76[- 2] = unaff_SS; puVar76[ - 3] = iVar38 + - 0x3e; puVar76[ -4] = 0x2692; uVar126 = 0x3444; puVar77 = puVar76 + - 5; puVar76[ - 5] = 0xd4f2; iVar19 = FUN_3444_1eca();
uVar118 = ZEXT24(puVar77 + 5); if (iVar19 == 0) goto LAB_1ba9_19ca; uVar10 = (iVar38 + - 0x3c); (iVar38 + - 0x248) = (iVar38 + - 0x3e); (iVar38 + - 0x246) = uVar10;
puVar77[4] = unaff_SS; puVar77[3] = iVar38 + - 0x23e; puVar77[2] = unaff_SS; puVar77[1] = iVar38 + - 0x3e; * puVar77 = 0x3444; puVar78 = puVar77 + - 1; puVar77[ - 1] = 0xd519; iVar19 = FUN_1ba9_104d();
uVar118 = ZEXT24((undefined * )(puVar78 + 8)); (iVar38 + - 4) = iVar19; if (iVar19 != 0) {
iVar19 = ((iVar38 + - 0x3c) - (iVar38 + - 0x23c)) / 0x7fd4;
(iVar38 + - 0x34) = iVar19; if ((( - 1 < iVar19) & & (iVar19 < (iVar38 + - 6))) & & (uVar128 = * (undefined4 *)(iVar38 + 8), uVar128 = *ff(iVar19 * 4 + uVar128),
(uVar128 + 1) != '-')) goto LAB_1ba9_1bc6;
}
(iVar38 + - 0x34) = 0xffff;
// LAB_1ba9_1bc6:
iVar19 = (iVar38 + - 0x3a); if ((iVar38 + - 0x34) != iVar19) {
if (iVar19 != - 1) {
iVar83 = uVar118; (iVar83 + - 2) = 1; (iVar83 + - 4) = uVar126; puVar84 = (iVar83 + - 6); (iVar83 + - 6) = 0xd66c;
FUN_1ba9_0e19(); iVar19 = (iVar38 + -0x38); iVar17 = (iVar38 + - 0x3a); * puVar84 = unaff_SS; puVar84[ -1] = iVar38 + (iVar19 + 1) * iVar17 + - 0x232; puVar84[ - 2] = 0x7fd4 * (iVar38 + - 0x3a) + (iVar38 + - 0x23c); puVar84[- 3] = (iVar38 + - 0x30); puVar84[ - 4] = uVar126; uVar126 = 0x27ac; puVar85 = puVar84 + - 5;
puVar84[ - 5] = 0xd690; FUN_27ac_0508(); uVar118 = (puVar85 + 8);
(iVar38 + - 0x3a) = 0xffff;
}
if ((iVar38 + - 0x34) != -1) {
(iVar38 + - 0x3a) = (iVar38 + - 0x34); iVar86 = uVar118; (iVar86 + - 2) = 0; (iVar86 + - 4) = uVar126; puVar87 = (iVar86 + - 6); (iVar86 + - 6) = 0xd6ae; FUN_1ba9_0e19(); iVar19 = (iVar38 + - 0x38); iVar17 = (iVar38 + - 0x34); * puVar87 = unaff_SS; puVar87[ - 1] = iVar38 + (iVar19 + 1) * iVar17 + - 0x232;
puVar87[ - 2] = 0x7fd4 * (iVar38 + - 0x34) + (iVar38 + - 0x23c); puVar87[ - 3] = (iVar38 + - 0x30); puVar87[ - 4] = uVar126; uVar126 = 0x27ac; puVar88 = puVar87 + - 5; puVar87[ - 5] = 0xd6d2; FUN_27ac_0508(); uVar118 = (puVar88 + 8);
}
}
goto LAB_1ba9_19ca;
// LAB_1ba9_1c61:
loop {
iVar19 = (iVar38 + - 6); piVar2 = (iVar38 + - 0x252); * piVar2 = * piVar2 + 1; if ((iVar38 + - 0x252) < iVar19) {
uVar128 = * ff(iVar38 + 8); uVar128 = * ff((iVar38 + - 0x252) * 4 + uVar128); iVar19 = (uVar128 + 1); (iVar38 + - 0x256) = iVar19;
if (( * (iVar19 + - 0x470f) & 2) != 0) {
(iVar38 + - 0x256) = iVar19 + -0x20;
}
if ((iVar38 + - 0x256) == (iVar38 + - 0x250)) {
(iVar38 + - 0x34) = (iVar38 + - 0x252); goto LAB_1ba9_1b99;
}
}
else {
(iVar38 + - 0x252) = 0xffff;
}
} while ((iVar38 + - 0x252) != (iVar38 + - 0x254)); goto LAB_1ba9_1bc6;
switchD_1000_8da3_caseD_7: unaff_DS = * ppiVar57; puVar40 = (ppiVar57 + 3); uVar128 = * ff(iVar38 + - 2 + piVar122); uVar125 = (undefined2)(uVar128 >> 0x10); in_CX = (undefined2)uVar128;
goto switchD_1000_609e_caseD_0;
}


/*
Unable to decompile 'FUN_154b_0f2f'
Cause: Exception while decompiling 154b:0f2f: process: timeout

*/


fn fun_154b_1039()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_154b_1041(param_1_00: u16, param_1: i16, param_2: i16)

{
    let u_var1: u16;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ds: u16;
    let local_a: *mut u16;
    let pi_var5: *mut u16;

    fun_3444_02c6(0x39d9);
    if (0xd21 != '\0') {
        param_1 = param_1 / 2;
        param_2 = param_2 / 2;
    }
    fun_154b_0266();
    i_var2 = -(0xff30 / 2 - param_1);
    u_var1 = 0xc4b2;
    pi_var5 = CONCAT22(u_var1, 0xd2e);
    0xd2e = i_var2;
    if (i_var2 < 0x80) {
        if (*pi_var5 < 0) {
            *pi_var5 = 0;
        }
    } else {
        *pi_var5 = 0x7f;
    }
    i_var2 = 0xff32;
    i_var3 = i_var2 + -0x40;
    i_var4 = -i_var3;
    param_2 = i_var2 / 2 - param_2;
    i_var2 = -param_2;
    u_var1 = 0xc4b4;
    local_a = CONCAT22(u_var1, 0xd30);
    0xd30 = i_var2;
    if (i_var3 != param_2 && i_var4 <= i_var2) {
        *local_a = i_var4;
    }
    if (*local_a < 0) {
        *local_a = 0;
    }
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_154b_1100() -> u16

{
    let i_var1: i16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    undefined
    local_1a[12];
    let local_e: u16;
    let u_stack_y12: u16;
    let local_a: u16;
    let local_8: *mut u16;

    fun_3444_02c6(0x39d9);
    local_8 = &local_a;
    local_a = 4;
    u_stack_y12 = 0x3444;
    local_e = 0x65cf;
    fun_2b26_0e3b();
    local_8 = (local_8 + 1);
    local_a = 0x200;
    u_stack_y12 = 0x2b26;
    local_e = 0x65e3;
    fun_2b26_05ce();
    while (true) {
        u_var3 = 0x168b;
        local_8 = 0x65eb;
        i_var1 = fun_168b_0c93();
        if (i_var1 != 0)
        break;
        local_8 = local_1a;
        local_a = 0x168b;
        u_var3 = 0x2d56;
        u_stack_y12 = 0x65fb;
        i_var2 = fun_2d56_0ead();
        if (((i_var2 != 0) && (local_e._1_1_ == '\x02')) || ((*0x83e & 1) == 0))
        break;
    }
    if ((*0x83e & 1) != 0) {
        local_a = 0x6628;
        local_8 = u_var3;
        fun_2b26_0754();
        if (i_var1 == 0) {
            return local_e;
        }
    }
    return 0;
}


// WARNING: Could not reconcile some variable overlaps

fn FUN_154b_1189() -> i16

{
let iVar1: i16; let iVar2: i16;
let uVar3: u16; let unaff_DS: u16;
undefined local_1a [12]; let local_e: u16; let uStackY12: u16; let local_a: u16; let local_8: * mut u16;

FUN_3444_02c6(0x39d9); local_8 = & local_a; local_a = 6; uStackY12 = 0x3444; local_e = 0x6658;
FUN_2b26_0e3b(); local_8 = (local_8 + 1); local_a = 0x300; uStackY12 = 0x2b26;
local_e = 0x666c; FUN_2b26_05ce(); while ( true ) {
uVar3 = 0x168b; local_8 = 0x6674; iVar1 = FUN_168b_0c93(); if (iVar1 != 0) break; local_8 = local_1a; local_a = 0x168b;
uVar3 = 0x2d56; uStackY12 = 0x6684; iVar2 = FUN_2d56_0ead(); if (((iVar2 != 0) & & (local_e._1_1_ == '\x03')) || (( * 0x85b & 1) == 0)) break;
}
if (( * 0x85b & 1) != 0) {
if (local_e == 0x308) {
local_8 = 0x66b3; iVar2 = FUN_154b_122c();
0xfffb = iVar2; if (iVar2 == 0) {
local_e = iVar2;
}
}
local_a = 0x66cb; local_8 = uVar3; FUN_2b26_0754(); if (iVar1 == 0) {
return local_e;
}
}
return 0;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_154b_122c() -> u16

{
    let i_var1: i16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    undefined
    local_1a[12];
    let local_e: u16;
    let u_stack_y12: u16;
    let local_a: u16;
    let local_8: *mut u16;

    fun_3444_02c6(0x39d9);
    local_8 = &local_a;
    local_a = 0x308;
    u_stack_y12 = 0x3444;
    local_e = 0x66fb;
    fun_2b26_0e3b();
    local_8 = (local_8 + 1);
    local_a = 0x1b00;
    u_stack_y12 = 0x2b26;
    local_e = 0x670f;
    fun_2b26_05ce();
    local_8 = 0x6717;
    fun_2d56_0eee();
    loop {
    local_8 = 0x671c;
    i_var1 = FUN_1ba9_10aa();
}
    while (i_var1 != 0);
    while (true) {
        u_var3 = 0x168b;
        local_8 = 0x6725;
        i_var1 = fun_168b_0c93();
        if (i_var1 != 0)
        break;
        local_8 = local_1a;
        local_a = 0x168b;
        u_var3 = 0x2d56;
        u_stack_y12 = 0x6735;
        i_var2 = fun_2d56_0ead();
        if (((i_var2 != 0) && (local_e._1_1_ == '\x1b')) || ((*0xb13 & 1) == 0))
        break;
    }
    if ((*0xb13 & 1) != 0) {
        local_a = 0x6762;
        local_8 = u_var3;
        fun_2b26_0754();
        if (i_var1 == 0) {
            return local_e;
        }
    }
    return 0;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_154b_12c3() -> u16

{
    let u_var1: u16;
    let i_var2: i16;
    let i_var3: i16;
    let unaff_ds: u16;
    let u_var4: u32;
    undefined
    local_1e[12];
    let local_12: u16;
    let local_e: u16;
    let local_c: u16;
    let local_a: i16;
    let pu_stack_y8: *mut u16;

    fun_3444_02c6(0x39d9);
    pu_stack_y8 = 0x3444;
    local_a = 0x6788;
    u_var4 = fun_168b_0008();
    if (0xcf4 == 0xb) {
        u_var1 = 0xbc3;
    } else {
        u_var1 = 0xbb9;
    }
    (u_var4 + 0x26) = u_var1;
    local_12 = 0;
    pu_stack_y8 = &local_e;
    local_a = 8;
    local_c = 0x168b;
    local_e = 0x67bb;
    fun_2b26_0e3b();
    pu_stack_y8 = (local_a + 1);
    local_a = 0x400;
    local_c = 0x2b26;
    local_e = 0x67cf;
    fun_2b26_05ce();
    while (true) {
        u_var1 = 0x168b;
        pu_stack_y8 = 0x67d7;
        i_var2 = fun_168b_0c93();
        if (i_var2 != 0)
        break;
        pu_stack_y8 = local_1e;
        local_a = 0x168b;
        u_var1 = 0x2d56;
        local_c = 0x67e7;
        i_var3 = fun_2d56_0ead();
        if (((i_var3 != 0) && (local_12._1_1_ == '\x04')) || ((*0x878 & 1) == 0))
        break;
    }
    if ((*0x878 & 1) != 0) {
        local_a = 0x6814;
        pu_stack_y8 = u_var1;
        fun_2b26_0754();
        if (i_var2 == 0) {
            return local_12;
        }
    }
    return 0;
}


fn fun_154b_1375()

{
    let i_var1: i16;
    let u_var2: u16;
    let unaff_ss: i16;
    let unaff_ds: u16;
    undefined2 * ***local_6;

    local_6 = (undefined2 * ***)
    0x6830;
    fun_3444_02c6(0x39d9);
    if (0x1392 != 0) {
        local_6 = &local_6;
        fun_1ba9_1038(0x3444);
        u_var2 = 0xc49e;
        if ((unaff_ss < 0x1388 + 0x15c3) || (0x15c7 < unaff_ss)) {
            local_6 = (undefined2 * ***)
            0x0;
            fun_154b_0589(0x1ba9);
        }
        i_var1 = 0x138a;
        u_var2 = 0xc49e;
        if (local_6 < i_var1 + 0x15c1) {
            local_6 = (undefined2 * ***)
            0xffff;
        } else {
            if (local_6 <= 0x15c5 - i_var1) {
                return;
            }
            local_6 = (undefined2 * ***)
            0x1;
        }
        fun_154b_0589(0x1ba9);
    }
    return;
}


fn fun_168b_0008(param_1_00: u16, param_1: u16)

{
    fun_3444_02c6(0x39d9);
    FUN_2b26_0008(0x3444, param_1._1_1_, param_1);
    return;
}


// WARNING: Control flow encountered bad instruction data

fn fun_168b_0028()

{
    let pu_var1: *mut u16;
    let pi_var2: *mut u16;
    let pu_var3: *mut u16;
    let pb_var4: *mut u8;
    let cVar5: u8;
    let b_var6: u8;
    let u_var7: u16;
    let u_var8: u16;
    let u_var9: u16;
    let u_var10: u16;
    let u_var11: u16;
    let u_var12: u16;
    let u_var13: u16;
    let i_var14: i16;
    let u_var15: u16;
    let i_var16: i16;
    let pc_var17: String;
    let in_EAX: u32;
    let uVar18: u32;
    let u_var19: u16;
    let in_cx: u16;
    let extraout_dx: i16;
    let extraout_dx_00: i16;
    let extraout_dx_01: i16;
    let extraout_dx_02: i16;
    let extraout_dx_03: u16;
    let extraout_dx_04: i16;
    let extraout_dx_05: u16;
    let extraout_dx_06: i16;
    let extraout_dx_07: i16;
    let extraout_dx_08: u16;
    let extraout_dx_09: i16;
    let extraout_dx_10: i16;
    let i_var20: i16;
    let extraout_dx_11: u16;
    let extraout_dx_12: u16;
    let extraout_dx_13: i16;
    let extraout_dx_14: u16;
    let extraout_dx_15: u16;
    let in_bx: u16;
    let unaff_si: i16;
    let unaff_di: i16;
    let unaff_es: u16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let uStack0008: u8;
    let in_stack_00000008: u16;
    let auStackY120[u8;24];
    let u_stack_y96: u16;
    let u_stack_y94: u16;
    let i_stack_y92: i16;
    let i_stack_y90: i16;
    let u_stack_y88: u16;
    let u_stack_y86: u16;
    let u_stack_y84: u16;
    let i_stack_y82: i16;
    let u_stack_y80: u16;
    let u_stack_y78: u16;
    let u_stack_y76: u16;
    let i_stack_y74: i16;
    let u_stack_y72: u16;
    let u_stack_y70: u16;
    let u_stack_y68: u16;
    let u_stack_y66: u16;
    let u_stack_y64: u16;
    let u_stack_y62: u16;
    let u_stack_y60: u16;
    let u_stack_y58: u16;
    let u_stack_y56: u16;
    let i_stack_y54: i16;
    let u_stack_y52: u16;
    let u_stack_y50: u16;
    let u_stack_y48: u16;
    let u_stack_y46: u16;
    let u_stack_y44: u16;
    let u_stack_y42: u16;
    undefined * puStackY40;
    let in_stack_0000fff0: u16;
    let in_stack_0000fff2: i32;
    let u_var21: u16;

    uVar18 = in_EAX & 0xffff0000;
    fun_3444_02c6(0x39d9);
    cVar5 = 0x9c65;
    if (8 < cVar5) {
        return;
    }
    i_var16 = cVar5 * 2;
    pc_var17 = (uVar18 & 0xffff0000 | in_bx);
    b_var6 = in_bx;
    i_var20 = extraout_dx_13;
    match cVar5 {
    unsafe {
        '\x01' => {pbVar4 = (i_var16 + unaff_si); * pb_var4 = * pb_var4 | b_var6; fun_20d3_006c();
        return;}

        '\x02'=>{ while (true) {
        if ((i_var20 < = i_var16) & & ((i_var20 < i_var16 || (pc_var17 < in_cx)))) {
        0x30 = unaff_si; in_stack_0000fff2 = in_cx << 0x10;
        }
        unaff_si = unaff_si + 1; if (7 < unaff_si) break;
// LAB_1000_0624:
        uVar21 = 0xc126; in_cx = (unaff_si * 4 + 0x600); i_var16 = (unaff_si * 4 + 0x602); u_var9 = (in_stack_0000fff2 > > 0x10); pc_var17 = u_var9; i_var20 = u_var9 > > 0xf;
        }
        i_var16 = 0; loop {
        i_var20 = 3; u_var21 = 0xc14e; loop {
        i_var14 = (i_var16 * 5 + i_var20) * 4; u_var15 = (i_var14 + 0x502);
        (i_var14 + 0x504) = (i_var14 + 0x500); (i_var14 + 0x506) = u_var15;
        i_var20 = i_var20 + - 1;
        }
        while ( - 1 < i_var20); u_var15 = 100; i_var20 = i_var16 * 4; FUN_3444_23fe(); FUN_3444_2364(); u_var21 = 0xc14e;
        (i_var16 * 0x14 + 0x500) = u_var15;
        (i_var16 * 0x14 + 0x502) = extraout_dx_12;
        u_var21 = 0xc126; (i_var20 + 0x602) = 0; (i_var20 + 0x600) = 0;
        u_var21 = 0xc142; (i_var20 + 0x5aa) = 0; (i_var20 + 0x5a8) = 0;
        i_var16 = i_var16 + 1;
        }
        while (i_var16 < 8); i_var16 = 0; loop {
        i_var20 = 3; u_var21 = 0xc150; loop {
        i_var14 = (i_var16 * 5 + i_var20) * 2; (i_var14 + 0x462) = (i_var14 + 0x460); i_var20 = i_var20 + - 1;
        }
        while ( - 1 < i_var20); i_var14 = i_var16 * 2; i_var20 = (i_var14 + 0x694) * 200; FUN_3444_2364(); (i_var16 * 10 + 0x460) = i_var20; (i_var14 + 0x440) = (i_var14 + 0x624);
        (i_var14 + 0x694) = 0; (i_var14 + 0x624) = 0; i_var16 = i_var16 + 1;
        }
        while (i_var16 < 0x10); return;}

        '\x03' =>{ piVar2 = ( & stack0x8bee + unaff_di); *pi_var2 = * pi_var2 + in_cx; FUN_1f51_0749(); if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
        out(extraout_dx_15, 5); out(extraout_dx_15, 0xff08);
        }
        if (0x8540 == '\0') {
        if (0x8571 == '\0') {
        if (0x853f == '\0') {
        fun_2692_01e8();
        }
        } else {
        if (0x853e != '\0') {
        fun_2692_0562();
        }
        }
        }
        pc_var17 = 0x7fcc; * pc_var17 = * pc_var17 + - 1; return;}

        '\x04' => {pbVar4 = (i_var16 + unaff_si + 0x74);
        * pb_var4 = * pb_var4 | b_var6;
        // WARNING: Bad instruction - Truncating control flow here
        halt_baddata();}

        '\x05' => { * pcVar17 = * pc_var17 + b_var6; 0x67ef = 0x3d49; 0x67e0 = 8; 0x67e2 = 0x280;
        i_var16 = 0x1000; fun_2b26_0e73(); if (((0x9c65 != '\x02') & & (0x9c65 != '\x04')) & & (0x9c65 != '\x06')) {
        cVar5 = 0x9c65; if (cVar5 == '\0') {
        i_var16 = 0x1c;
        } else {
        if ((cVar5 == '\x03') || (cVar5 == '\x05')) {
        i_var16 = 10;
        } else {
        if (cVar5 == '\a') {
        i_var16 = 0xc;
        } else {
        if (cVar5 == '\b') {
        i_var16 = 0x24;
        }
        }
        }
        }
        i_var20 = 0x1cfb; u_var21 = 0x5b2d;
        // for (iVar14 = 0; i_var14 < 0xb; iVar14 = iVar14 + 1) { for iVar14 in 0..0xb {
        u_var15 = 0xc522; (i_var14 * 4 + 0x1e87) = i_var20; (i_var14 * 4 + 0x1e89) = u_var21; FUN_3074_00d3(); FUN_3444_1f26(); i_var20 = 2; fun_3074_01d4();
        i_var20 = i_var20 + i_var16;
        }
        }
        if 0x9c65 == '\x06' {
        i_var20 = 10000; FUN_3074_00d3();
        // for (iVar16 = 0; i_var16 < 0x300; iVar16 = iVar16 + 1) { for i_var16 in 0..0x300 {
        pc_var17 = (CONCAT22(extraout_dx_14, i_var20) + i_var16); * pc_var17 = * pc_var17 > > 2;
        }
        puStackY40 = (undefined * )(i_var20 + 2); FUN_3444_1be4(); fun_3074_01d4();
        }

        0x1a06 = 1; return;
    }

        '\x06' => {
    FUN_3444_16e8();
    FUN_3444_2364();
    FUN_3444_178e();
    fun_3444_1aca();
    FUN_3444_2430();
    FUN_3444_178e();
    fun_3444_1aca();
    puStackY40 = auStackY120;
    u_stack_y42 = 0x3444;
    u_stack_y44 = 0x415b;
    fun_3444_1aca();
    fun_154b_000c();
    puStackY40 = auStackY120;
    u_stack_y42 = 0x154b;
    u_stack_y44 = 0x418e;
    fun_3444_1aca();
    fun_1862_0004();
    return;
}
        '\a' => {
    puVar1 = (i_var16 + unaff_si + 0x2a);
    *pu_var1 = *pu_var1 | &stack0xfffa;
    if (in_bx != 0) {
        fun_20d3_0bed();
    }
    if ((0xd1e != '\0') || (0x992c == 0x15)) {
        i_var16 = 0x1042;
        FUN_2a60_0913();
        if (i_var16 != 0) {
            fun_2239_0147();
        }
    }
    if ((0x992c == 0x13) || (0xd1e != '\0')) {
        i_var16 = 0x1046;
        FUN_2a60_0913();
        if (i_var16 != 0) {
            fun_1d9a_0245();
        }
    }
    if (0x992c == 9) {
        i_var16 = 0x104a;
        FUN_2a60_0913();
        if (i_var16 != 0) {
            fun_1e08_1428();
        }
    }
    if ((0x992c == 0x1c) || (0xd1e != '\0')) {
        i_var16 = 0x104e;
        FUN_2a60_0913();
        if (i_var16 != 0) {
            fun_25d6_0038();
        }
    }
    if (((*0xa48 & 1) == 0) && (u_var21 = 0xc47c, (0x72ee | 0x72ec) != 0)) {
        fun_3143_0c84();
        u_var21 = 0xc47c;
        0x72ee = 0;
        0x72ec = 0;
    }
    if (((*0xaf6 & 1) == 0) && (u_var21 = 0xc47e, (0x72f4 | 0x72f2) != 0)) {
        fun_3143_0c84();
        u_var21 = 0xc47e;
        0x72f4 = 0;
        0x72f2 = 0;
    }
    if (0x1397 == '\0') {
        i_var16 = -0xf;
        FUN_2a60_0913();
        if (i_var16 != 0) {
            fun_154b_0359();
        }
    }
    fun_1862_247e();
    if ((0x139c == 0) && (u_var21 = 0xc482, 0x139a != 0)) {
        i_var16 = 0x139a;
        if (i_var16 == 2) {
            if (0xabe == 1) {
                FUN_39d9_0d9c();
            }
        } else {
            if (i_var16 == 3) {
                if (0xabe == 2) {
                    FUN_39d9_0dba();
                }
            } else {
                if ((i_var16 == 4) && (0xabe == 3)) {
                    FUN_39d9_0d4c();
                }
            }
        }
        0x139a = 0;
    }
    0x10d4 = 0;
    return;
}
        "\b" => {
    uVar21 = 0xc126;
    u_var7 = 0x614 * 2 + 0x696 + 0x608;
    FUN_3444_23fe();
    u_var8 = u_var7 + in_cx + in_stack_0000fff0;
    u_var21 = 0xc126;
    pu_var1 = 0x610;
    u_var9 = *pu_var1;
    i_var16 = 0x612;
    u_var21 = 0xc128;
    0x5fc = u_var8 + *pu_var1;
    0x5fe = extraout_dx + i_var20 + CARRY2(u_var7, in_cx) + 0x2d4 + CARRY2(u_var7 + in_cx, in_stack_0000fff0) + i_var16 + CARRY2(u_var8, u_var9);
    FUN_1d9a_0002();
    FUN_1d9a_0002();
    FUN_1d9a_0002();
    FUN_1d9a_0002();
    FUN_1d9a_0002();
    FUN_1d9a_0002();
    FUN_1d9a_0002();
    FUN_1d9a_0002();
    u_var21 = 0xc138;
    u_var9 = 0x5dc;
    i_var16 = 0x5de;
    u_var7 = i_var16 << 1 | (u_var9 < 0);
    i_var20 = 0x5ce;
    if (i_var20 < u_var7) || (i_var20 <= u_var7 && (0x5cc <= u_var9 << 1)) {
        u_var9 = 2;
        FUN_3444_2364();
        i_var16 = extraout_dx_00;
    }
    u_var8 = 100;
    FUN_3444_23fe();
    u_var21 = 0xc138;
    pu_var1 = 0x5c8;
    u_var7 = *pu_var1;
    *pu_var1 = *pu_var1 + u_var8;
    pi_var2 = 0x5ca;
    *pi_var2 = *pi_var2 + extraout_dx_01 + CARRY2(u_var7, u_var8);
    u_var13 = 0xfa;
    FUN_3444_23fe();
    u_stack_y64 = 0x5a6;
    puStackY40 = ff
    0x3444;
    u_stack_y42 = 0x476;
    i_var14 = extraout_dx_02;
    FUN_3444_23fe();
    u_stack_y44 = 0x3444;
    u_stack_y46 = 0x483;
    u_var12 = u_stack_y64;
    u_stack_y42 = u_stack_y64;
    puStackY40 = ff
    extraout_dx_03;
    u_stack_y62 = extraout_dx_03;
    FUN_3444_2364();
    u_var19 = (u_var13 - u_var9) * 2;
    u_var10 = u_var12 + u_var19;
    u_var21 = 0xc124;
    pu_var1 = 0x620;
    u_var7 = *pu_var1;
    u_var11 = u_var10 - *pu_var1;
    i_var20 = 0x622;
    u_var21 = 0xc138;
    pu_var1 = 0x5cc;
    u_var8 = *pu_var1;
    *pu_var1 = *pu_var1 + u_var11;
    pi_var2 = 0x5ce;
    *pi_var2 = *pi_var2 + (((extraout_dx_04 + (((i_var14 - i_var16) - (u_var13 < u_var9)) * 2 | ((u_var13 - u_var9) < 0)) + CARRY2(u_var12, u_var19)) - i_var20) - (u_var10 < u_var7)) + CARRY2(u_var8, u_var11);
    u_stack_y44 = 0x3444;
    u_stack_y46 = 0x4bc;
    FUN_3444_40e7();
    u_stack_y46 = 0x3444;
    u_stack_y48 = 0x4c5;
    fun_3444_4472();
    u_stack_y46 = 0x3444;
    u_stack_y48 = 0x4ca;
    fun_3444_42c7();
    u_var21 = 0xc138;
    0x5d0 = u_var11;
    0x5d2 = extraout_dx_05;
    pu_var1 = 0x5d4;
    u_var7 = *pu_var1;
    *pu_var1 = *pu_var1 + u_var9 * 2;
    pi_var2 = 0x5d6;
    *pi_var2 = *pi_var2 + (i_var16 << 1 | (u_var9 < 0)) + CARRY2(u_var7, u_var9 * 2);
    u_stack_y46 = 0;
    u_stack_y48 = 2;
    u_stack_y50 = 0;
    u_stack_y52 = 500;
    u_var21 = 0xc142;
    u_var7 = 0x5bc;
    pu_var1 = 0x5b0;
    u_var12 = u_var7 - *pu_var1;
    i_stack_y54 = (0x5be - 0x5b2) - (u_var7 < *pu_var1);
    u_stack_y58 = 0x3444;
    u_stack_y60 = 0x515;
    u_stack_y56 = u_var12;
    FUN_3444_23fe();
    u_stack_y58 = 0;
    u_stack_y60 = 0x18;
    u_stack_y66 = 0x3444;
    u_stack_y68 = 0x52d;
    u_var8 = u_var12;
    FUN_3444_2364();
    u_stack_y66 = 0;
    u_stack_y68 = 8;
    u_var21 = 0xc146;
    u_stack_y70 = 0x5a4;
    u_stack_y72 = 0x5a2;
    u_var7 = 0x5a0;
    i_stack_y74 = u_var7 >> 0xf;
    u_stack_y78 = 0x3444;
    u_stack_y80 = 0x55c;
    u_stack_y76 = u_var7;
    i_var20 = extraout_dx_07;
    FUN_3444_23fe();
    i_stack_y82 = 0x3444;
    u_stack_y84 = 0x563;
    u_stack_y80 = u_var7;
    u_stack_y78 = extraout_dx_08;
    FUN_3444_2364();
    u_var13 = (u_var7 - u_var12) + u_var8;
    u_var21 = 0xc124;
    pu_var1 = 0x620;
    u_var10 = u_var13 + *pu_var1;
    u_var15 = 0xc14a;
    pu_var3 = 0x43a;
    u_var11 = u_var10 + *pu_var3;
    i_stack_y82 = ((extraout_dx_09 - i_var20) - (u_var7 < u_var12)) + extraout_dx_06 + CARRY2(u_var7 - u_var12, u_var8) + 0x622 + CARRY2(u_var13, *pu_var1) + 0x43c + CARRY2(u_var10, *pu_var3);
    u_stack_y86 = 0x3444;
    u_stack_y88 = 0x592;
    u_stack_y84 = u_var11;
    FUN_3444_2364();
    u_var21 = 0xc138;
    pu_var1 = 0x5d8;
    u_var7 = u_var11 + *pu_var1;
    u_var8 = u_var7 + u_var9;
    i_var20 = extraout_dx_10 + 0x5da + CARRY2(u_var11, *pu_var1) + i_var16 + CARRY2(u_var7, u_var9);
    if i_var20 < 0 {
        i_var20 = 0;
        u_var8 = 0;
    }
    u_stack_y86 = 0;
    u_stack_y88 = 2;
    u_var7 = 0x5d8;
    i_var14 = u_var7 + u_var8;
    i_stack_y90 = 0x5da + i_var20 + CARRY2(u_var7, u_var8);
    u_stack_y94 = 0x3444;
    u_stack_y96 = 0x5d4;
    i_stack_y92 = i_var14;
    FUN_3444_2364();
    u_var21 = 0xc138;
    0x5d8 = i_var14;
    0x5da = extraout_dx_11;
    u_var8 = 0x694 / 5;
    u_var21 = 0xc138;
    pu_var1 = 0x5dc;
    u_var7 = *pu_var1;
    *pu_var1 = *pu_var1 + (u_var8 - u_var9);
    pi_var2 = 0x5de;
    *pi_var2 = *pi_var2 + (((u_var8 >> 0xf) - i_var16) - (u_var8 < u_var9)) + CARRY2(u_var7, u_var8 - u_var9);
    u_stack_y94 = 0x3444;
    u_stack_y96 = 0x608;
    fun_1000_07e8();
    u_stack_y94 = 0x3444;
    u_stack_y96 = 0x60c;
    fun_1000_0afb();
    0x30 = 0;
    in_stack_0000fff2 = 0;
    unaff_si = 1;
}
        // goto
        // LAB_1000_0624;
    }
    if (((in_bx & 0x3f00) == 0) && (((i_var16 = (in_bx & 0xe0) >> 5, i_var16 != 0 || ((in_bx & 0x8000) != 0)) && (b_var6 = *(((in_stack_00000008 & 0xfff1) >> 1) + i_var16 + 0x814), b_var6 != 0)))) {
        if ((in_bx & 0x8000) == 0) {
            if (b_var6 < (DAT_616d_0a84 & 7)) {
                return;
            }
        } else {
            if (b_var6 <= -((in_bx & 0x1f) - DAT_616d_0a8e)) {
                return;
            }
        }
        b_var6 = *((in_stack_00000008 >> 2) + 0x7d4);
        i_var16 = (in_stack_0000fff2 >> 0x10);
        pb_var4 = ((*(i_var16 + -0x40f8) >> 2) + 0x7d4);
        if (*pb_var4 < b_var6 || *pb_var4 == b_var6) {
            (i_var16 + -0x40f8) = uStack0008;
        }
    }
    return;
}


fn fun_168b_027d(param_1_00: u16, param_1: u16)

{
    let local_a: u16;
    let local_8: u16;
    let pu_stack_y6: *mut u16;

    pu_stack_y6 = 0x6b38;
    fun_3444_02c6(0x39d9);
    pu_stack_y6 = &local_a;
    local_8 = param_1;
    local_a = 0x3444;
    fun_2b26_0e3b();
    pu_stack_y6 = local_8;
    local_8 = local_a;
    local_a = 0x2b26;
    fun_168b_0561();
    return;
}


fn fun_168b_02a9(param_1_00: u16, param_1: u16)

{
    let local_a: u16;
    let u_stack_y8: u16;
    let local_6: *mut u16;

    local_6 = 0x6b64;
    fun_3444_02c6(0x39d9);
    local_6 = &local_a;
    u_stack_y8 = param_1;
    local_a = 0x3444;
    fun_2b26_0e3b();
    local_6 = &local_a;
    u_stack_y8 = 0x2b26;
    local_a = 0x6b84;
    fun_27ac_0730();
    return;
}


fn fun_168b_02da(param_1_00: u16, param_1: u16, param_2: i16)

{
    let u_var1: u16;
    let unaff_ds: u16;
    let local_a: i16;
    let local_8: u16;
    let pi_stack_y6: *mut u16;

    pi_stack_y6 = 0x6b95;
    fun_3444_02c6(0x39d9);
    pi_stack_y6 = &local_a;
    local_8 = param_1;
    local_a = 0x3444;
    fun_2b26_0e3b();
    u_var1 = 0xc4d8;
    0x7f98 = 0x7fd6 * param_2 + local_a;
    0x7f9a = local_8;
    return;
}



void FUN_168b_030f(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: i16,param_5: i16)

{
let local_a: i16; let local_8: i16;
let piStack6: * mut u16;

piStack6 = 0x6bca; FUN_3444_02c6(0x39d9); piStack6 = & local_a; local_8 = param_1; local_a = 0x3444; FUN_2b26_0e3b(); piStack6 = 0x2b26; local_8 = 0x6be1; FUN_168b_06a4(); piStack6 = param_2; local_8 = local_8 + param_5; local_a = local_a + param_4; FUN_2692_0ecc(0x2b26); return;
}



fn fun_168b_034f(param_1_00: u16, param_1: i16, param_2: i16, param_3: i16)

{
    let i_var1: i16;
    let unaff_si: i16;
    let unaff_ds: u16;
    let local_a: i16;
    let local_8: *mut u16;

    fun_3444_02c6(0x39d9);
    local_8 = 0x3444;
    local_a = 0x6c12;
    fun_168b_06a4();
    local_8 = &local_a;
    local_a = param_1;
    fun_2b26_0e3b(0x3444);
    local_8 = param_2;
    local_a = 0x2b26;
    i_var1 = FUN_3444_178e();
    i_var1 = (-local_a - (i_var1 * 0x7fd6 - param_3)) / 2 + local_a;
    if (i_var1 < local_a) {
        i_var1 = local_a;
    }
    local_a = param_2 + (-param_2 - (0x7fd4 - unaff_si)) / 2;
    local_8 = local_a;
    fun_2692_0ecc(0x3444, i_var1);
    return;
}


fn fun_168b_03d1(param_1_00: u16, param_1: u16, param_2: u16)

{
    let local_a: u16;
    let local_8: u16;
    let pu_stack6: *mut u16;

    pu_stack6 = 0x6c8c;
    fun_3444_02c6(0x39d9);
    pu_stack6 = 0x3444;
    local_8 = 0x6c93;
    fun_168b_06a4();
    pu_stack6 = &local_a;
    local_8 = param_1;
    local_a = 0x3444;
    fun_2b26_0e3b();
    pu_stack6 = param_2;
    fun_2692_0ecc(0x2b26);
    return;
}


fn fun_168b_0409(param_1_00: u16, param_1: u16, param_2: u16)

{
    code * *ppcVar1;
    let unaff_ds: u16;
    let local_a: u16;
    let pu_stack_y8: *mut u16;

    fun_3444_02c6(0x39d9);
    pu_stack_y8 = param_1;
    local_a = 0x3444;
    fun_2b26_0e3b();
    pu_stack_y8 = param_2;
    local_a = 0x2b26;
    ppcVar1 = (code * *)
    0xcf68;
    (**ppcVar1)();
    pu_stack_y8 = &local_a;
    local_a = 0x2b26;
    fun_27ac_074d();
    return;
}


fn fun_168b_044b(param_1_00: u16, param_1: u16, param_2: i16)

{
    code * *ppcVar1;
    let pi_var2: *mut u16;
    let unaff_ds: u16;
    let local_a: i16;
    let local_8: i16;
    let pi_stack6: *mut u16;

    pi_stack6 = 0x6d06;
    fun_3444_02c6(0x39d9);
    pi_stack6 = &local_a;
    local_8 = param_1;
    local_a = 0x3444;
    fun_2b26_0e3b();
    if ((*0x9c65 & 1) == 0) {
        if ((*0x9c65 & 2) == 0) {
            pi_stack6 = local_8;
            local_8 = local_a;
            local_a = 0x2b26;
            ppcVar1 = (code * *)
            0xcfbc;
            (**ppcVar1)();
            return;
        }
        pi_stack6 = 0x8;
    } else {
        pi_stack6 = 0x10;
    }
    pi_var2 = *(int * *)
    0x15c9;
    local_8 = (pi_var2 + 2);
    local_a = *pi_var2 + param_2 * 0x20;
    ppcVar1 = (code * *)
    0xcf8c;
    (**ppcVar1)(0x2b26, local_a, local_8);
    return;
}


fn fun_168b_04c4(param_1_00: u16, uparam_1: i16, param_2: u16, param_3: i16)

{
    code * *ppcVar1;
    let pi_var2: *mut u16;
    let i_var3: i16;
    let unaff_ds: u16;
    let u_var4: u16;
    let u_var5: u16;

    fun_3444_02c6(0x39d9);
    if ((*0x9c65 & 1) == 0) {
        if (0x9c65 == '\x06') {
            u_var5 = 8;
            pi_var2 = *(int * *)
            0x15c9;
            u_var4 = (pi_var2 + 2);
            i_var3 = *pi_var2 + param_3 * 0x20;
            goto
            LAB_168b_0559;
        }
        if (0x9c65 != '\x02') {
            ppcVar1 = (code * *)
            0xcfbc;
            (**ppcVar1)(0x3444, param_1 & 0xfff8, param_2,
                        (param_3 << (*0x1134 & 0x1f)) + 0x1132);
            return;
        }
        u_var5 = 8;
    } else {
        u_var5 = 0x10;
    }
    pi_var2 = *(int * *)
    0x15c9;
    u_var4 = (pi_var2 + 2);
    i_var3 = *pi_var2 + param_3 * 0x20;
    param_1 = param_1 & 0xfff8;
// LAB_168b_0559:
    ppcVar1 = (code * *)
    0xcf8c;
    (**ppcVar1)(0x3444, param_1, param_2, i_var3, u_var4, u_var5, u_var5);
    return;
}


fn fun_168b_0561(param_1_00: u16, param_1: u16, param_2: u16, param_3: u16)

{
    let pi_var1: *mut u16;
    let unaff_ds: u16;
    char * *ppcVar2;
    let u_var3: u16;

    fun_3444_02c6(0x39d9);
    ppcVar2 = (char * *)
    FUN_3074_00d3(0x3444, param_3, 2);
    u_var3 = (undefined2)(ppcVar2 >> 0x10);
    pi_var1 = ppcVar2;
    if (ppcVar2 != (char * *)
    0x0) {
    if ((**ppcVar2 == '\x01') && ((*0x9c65 & 1) == 0)) {
        fun_2c63_0100(0x3074, 0xf, 0);
        fun_2692_0042(0x2c63, param_1, param_2, *pi_var1 + 3, pi_var1[1]);
    } else {
        fun_2692_001f(0x3074, param_1, param_2, ppcVar2 + 3, pi_var1[1]);
    }
    fun_3074_02f7(0x2692, param_3, 2);
}
    return;
}



fn FUN_168b_05f1(param_1_00: u16,param_1: i16) -> i16

{
let iVar1: i16; let iVar2: i16;

FUN_3444_02c6(0x39d9); if (param_1 != 0) {
DAT_616d_0a74 = 0; for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + - 1) {
iVar1 = (iVar2 * 2 + 0xab2);
(iVar2 * 2 + 0xab4) = iVar1;
DAT_616d_0a74 = DAT_616d_0a74 + iVar1;
}
iVar2 = ((long)(DAT_616d_0a74 & 0x7fff) / (long)(0x7fff / (long)param_1)); if ( - 1 < iVar2) {
if (iVar2 < param_1) {
return iVar2;
}
return param_1 + - 1;
}
}
return 0;
}



fn fun_168b_0685(param_1_00: u16, param_1: u16)

{
    let u_var1: u32;

    fun_3444_02c6(0x39d9);
    u_var1 = fun_168b_0008(0x3444, param_1);
    FUN_2c63_058f(0x3444, u_var1);
    return;
}


fn fun_168b_06a4(param_1_00: u16, param_1: u16)

{
    let u_var1: u16;
    let i_var2: i16;
    let unaff_ds: u16;
    let u_var3: u32;

    fun_3444_02c6(0x39d9);
    u_var3 = fun_168b_0008(0x3444, param_1);
    i_var2 = (u_var3 + 0x20) * 6;
    u_var1 = 0xc4da;
    fun_2c63_0100(0x3444, (i_var2 + 0x15d5), (i_var2 + 0x15d7));
    return;
}



long FUN_168b_06e3(param_1_00: u16,param_1: u16,param_2: u16)

{
let lVar1: i32;

FUN_3444_02c6(0x39d9);
lVar1 = FUN_3074_00d3(0x3444, param_2, param_1); if (lVar1 == 0) {
// WARNING: Subroutine does not return
FUN_2a60_08cb(0x3074, 0x115c);
}
return lVar1;
}



fn fun_168b_071f()

{
    undefined
    local_66[84];
    let u_stack_y18: u16;
    let u_stack_y16: u16;
    undefined * puStackY14;

    fun_3444_02c6(0x39d9);
    puStackY14 = local_66;
    u_stack_y16 = 0x3444;
    u_stack_y18 = 0x6fef;
    fun_3444_1b7a();
    fun_2692_00b2();
    return;
}


fn fun_168b_0752(param_1_00: u16, param_1: u16, param_2: u16, param_3: u16)

{
    undefined
    local_6e[92];
    let u_stack_y18: u16;
    let u_stack_y16: u16;
    undefined * puStackY14;
    let local_a: u16;
    let local_8: u16;
    let pu_stack_y6: *mut u16;

    pu_stack_y6 = 0x700d;
    fun_3444_02c6(0x39d9);
    pu_stack_y6 = 0x3444;
    local_8 = 0x7014;
    fun_168b_06a4();
    pu_stack_y6 = &local_a;
    local_8 = param_1;
    local_a = 0x3444;
    fun_2b26_0e3b();
    pu_stack_y6 = &stack0x000a;
    local_8 = param_3;
    local_a = param_2;
    puStackY14 = local_6e;
    u_stack_y16 = 0x2b26;
    u_stack_y18 = 0x703a;
    fun_3444_1b7a();
    pu_stack_y6 = local_6e;
    puStackY14 = ff
    0x704d;
    fun_2692_0ecc();
    return;
}


fn fun_168b_07a1()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_168b_07a9()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_168b_07b1(param_1_00: u16, param_1: u16, param_2: u16)

{
    fun_3444_02c6(0x39d9);
    fun_3074_024c(0x3444, param_1, param_2);
    return;
}


fn fun_168b_07cc(param_1_00: u16, param_1: u16, param_2: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    0xcbe0 = param_1;
    0xcbe2 = param_2;
    0xcc34 = 1;
    return;
}


fn fun_168b_07ed(param_1_00: u16, param_1: u16, param_2: u16)

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var2 = 0xcc34 * 4;
    (i_var2 + -0x3420) = param_1;
    (i_var2 + -0x341e) = param_2;
    pi_var1 = 0xcc34;
    *pi_var1 = *pi_var1 + 1;
    return;
}


fn fun_168b_0815()

{
    fun_3444_02c6(0x39d9);
    fun_2af8_0006(0x3444, 0xcbe0);
    return;
}


fn fun_168b_0834(param_1_00: u16, undefined2 *param_1, param_2: u16)

{
    let u_var1: u16;
    undefined4 * puVar2;

    fun_3444_02c6(0x39d9);
    puVar2 = (undefined4 *)
    FUN_3074_00d3(0x3444, param_2, 2);
    u_var1 = (undefined2)(param_1 >> 0x10);
    if (puVar2 == (undefined4 *)
    0x0) {
    (param_1 + 2) = 1;
    *param_1 = 1;
}
    else {
    *param_1 = (*puVar2 + 3);
    (param_1 + 2) = (*puVar2 + 5);
    fun_3074_02f7(0x3074, param_2, 2);
}
    return;
}



void FUN_168b_089b(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16,param_5: u16)

{
let unaff_DS: u16; let local_a: i16;
let local_8: i16; let piStack6: * mut u16;

piStack6 = 0x7156; FUN_3444_02c6(0x39d9); piStack6 = & local_a; local_8 = param_1;
local_a = 0x3444; FUN_2b26_0e3b(); piStack6 = local_8; local_8 = local_a; local_a = 0x2b26;
FUN_168b_04c4(); piStack6 = 0x2b26; local_8 = 0x717d; FUN_168b_06a4(); piStack6 = param_3;
local_a = 0x138a + local_a + 2; FUN_2692_0ecc(0x2b26); piStack6 = param_5; local_8 = 0x2692; local_a = 0x71a8; FUN_2692_00b2(); return;
}



fn fun_168b_08fe(param_1_00: u16, param_1: i16)

{
    let b_var1: u8;
    let u_var2: u16;
    code * *ppcVar3;
    let u_var4: u16;
    let unaff_ds: u16;
    let u_var5: u32;
    let local_a: i16;
    let pi_stack8: *mut u16;

    fun_3444_02c6(0x39d9);
    pi_stack8 = &local_a;
    local_a = param_1;
    fun_2b26_0e3b(0x3444);
    pi_stack8 = 0x2b26;
    local_a = 0x71d1;
    u_var5 = fun_168b_0008();
    b_var1 = *((u_var5 + 0x20) * 6 + 0x15d7);
    u_var4 = b_var1 & 0xf;
    u_var2 = 0xc4d8;
    pi_stack8 = (0x7fd4 + 0x7f9a + -1);
    local_a = (u_var4 | u_var4 << 4 | b_var1 << 8) - 1;
    ppcVar3 = (code * *)
    0xcf74;
    (**ppcVar3)(0x2b26, 0x7f98, 0x7f9a);
    return;
}


fn fun_168b_097f(param_1_00: u16, param_1: i16)

{
    let b_var1: u8;
    code * *ppcVar2;
    let u_var3: u16;
    let unaff_si: i16;
    let unaff_ds: u16;
    let u_var4: u32;
    let local_a: i16;
    let local_8: *mut u16;

    fun_3444_02c6(0x39d9);
    local_8 = &local_a;
    local_a = param_1;
    fun_2b26_0e3b(0x3444);
    local_8 = 0x2b26;
    local_a = 0x7252;
    u_var4 = fun_168b_0008();
    b_var1 = *((u_var4 + 0x20) * 6 + 0x15d7);
    u_var3 = b_var1 & 0xf;
    local_8 = (unaff_si + -1);
    local_a = (u_var3 | u_var3 << 4 | b_var1 << 8) - 1;
    ppcVar2 = (code * *)
    0xcf74;
    (**ppcVar2)(0x2b26, local_a, local_8);
    return;
}



void FUN_168b_09f2(param_1_00: u16,param_1: i16,char *param_2,param_4: u16,param_5: i16,
param_6: u16,param_7: u16,int *param_8,param_9: i16)

{
code * * ppcVar1; let iVar2: i16;
let iVar3: i16; let iVar4: i16;
let iVar5: i16; let unaff_SS: u16;
let unaff_DS: u16; undefined local_b0 [156]; let uStackY20: u16; let uStackY18: u16; undefined * local_10;

FUN_3444_02c6(0x39d9);
local_10 = (undefined * )0x72be; iVar2 = FUN_2a60_0913(); if ((iVar2 != 0) || (param_9 != 0)) {
while ( true ) {
FUN_168b_06a4(); local_10 = (undefined * )0x72e2; iVar2 = param_1; FUN_2b26_0e3b();
iVar3 = ((iVar2 - local_10) + 1) / 0x7fd6; iVar4 = FUN_3444_178e();
local_10 = (undefined * )0x3444; uStackY18 = 0x7319; iVar5 = FUN_3444_1764(); iVar2 = local_10; if ((iVar5 == 0) && (( * param_8 != - 0x8000 & & ( * param_8 < iVar4)))) {
FUN_3444_178e(); if ( * param_8 < 0) {
if ( * param_8 == - iVar3 || SBORROW2( * param_8, - iVar3) != * param_8 + iVar3 < 0) {
* param_8 = 1 - iVar3;
}
local_10 = (undefined * )0x3444; uStackY18 = 0x7439; FUN_3444_1f84(); local_10 = local_b0 + - * param_8; uStackY18 = 0x3444; uStackY20 = 0x745b; FUN_3444_17a6(); if (param_9 == 0) {
* param_8 = * param_8 + 1;
}
local_b0[iVar3] = 0;
}
else {
local_10 = (undefined * )0x3444; uStackY18 = 0x7487; FUN_3444_172e(); if (param_9 == 0) {
* param_8 = * param_8 + 1;
}
if (param_5 < iVar3) {
local_10 = (undefined * )0x3444; uStackY18 = 0x74b8; FUN_3444_16e8();
}
else {
local_b0[iVar3] = 0;
}
}
local_10 = (undefined * )0x3444; uStackY18 = 0x74cc; FUN_27ac_0508(); return;
}
if ( * param_2 == '\0') {
return;
}
if (iVar4 < iVar3) break; * param_8 = - (iVar3 / 2); local_10 = (undefined * )0x3444; uStackY18 = 0x736a;
FUN_3444_172e();
}
local_10 = (undefined * )0x3444; uStackY18 = 0x7382; FUN_2692_0ecc(); iVar3 = 0x7fd6 * iVar4; iVar5 = FUN_3444_178e(); if (iVar4 < iVar5) {
uStackY18 = 0x3444; uStackY20 = 0x73ce; ppcVar1 = (code * * )0xcf74; local_10 = (undefined * )(iVar2 + iVar3); (* * ppcVar1)();
}
* param_8 = - 0x8000; local_10 = (undefined * )0x3444; uStackY18 = 0x73ea; FUN_3444_172e();
}
return;
}



fn fun_168b_0c25(param_1_00: u16, param_1: u16)

{
    let unaff_ds: u16;
    let u_var1: u32;

    fun_3444_02c6(0x39d9);
    u_var1 = FUN_2692_05ab(0x3444);
    0xcc36 = u_var1;
    0xcc38 = (u_var1 >> 0x10);
    0xfffd = param_1;
    return;
}



fn FUN_168b_0c4a() -> i16

{
let iVar1: i16; let iVar2: i16;

FUN_3444_02c6(0x39d9); iVar1 = FUN_2a25_003c(0x3444); if (iVar1 != 0) {
iVar1 = FUN_2a25_00b4(0x2a25); if ((iVar1 != 0xd) & & (iVar1 != 0x1b)) {
iVar1 = 0;
}
}
iVar2 = FUN_2a60_0913(0x2a25, 0xcc36); if ((iVar2 != 0) || (iVar1 != 0)) {
iVar2 = 1;
}
return iVar2;
}



fn fun_168b_0c93() -> u16

{
    let i_var1: i16;
    let u_var2: u16;

    u_var2 = 0x3444;
    fun_3444_02c6(0x39d9);
    loop {
    i_var1 = FUN_2a25_003c(u_var2);
    if (i_var1 == 0) {
        return 0;
    }
    u_var2 = 0x2a25;
    i_var1 = FUN_2a25_00b4(0x2a25);
}
    while (i_var1 != 0x1b);
    return 1;
}


fn fun_168b_0cbb()

{
    undefined
    local_1e[12];
    let u_stack_y18: u16;
    let u_stack_y16: u16;
    undefined * puStackY14;
    let u_stack_y12: u16;
    undefined * local_a;

    fun_3444_02c6(0x39d9);
    local_a = ff
    0x3444;
    u_stack_y12 = 0x7584;
    fun_2b26_0e3b();
    fun_2b26_05ce();
    local_a = ff
    0x2b26;
    u_stack_y12 = 0x759f;
    fun_168b_03d1();
    local_1e[0] = 0;
    puStackY14 = local_1e;
    u_stack_y16 = 0x2b26;
    u_stack_y18 = 0x75bd;
    local_a = puStackY14;
    FUN_39d9_0e50();
    fun_2b26_0754();
    fun_2d56_0eee();
    local_a = ff
    0x75d9;
    thunk_FUN_3444_1868();
    return;
}


fn fun_168b_0e52()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((0xd26 != '\0') && (0x25 == '\0')) {
        fun_32c9_0af0(0x3444, 0x11de);
    }
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_1776_004e(param_1_00: u16, uparam_1: i16, param_2: i16)

{
    let pi_var1: *mut u16;
    // code * *ppcVar2;
    let ppcVar2 = Code{};
    let bVar3: bool;
    let i_var4: i16;
    let i_var5: i16;
    let i_var6: i16;
    let u_var7: u16;
    let u_var8: u16;
    let unaff_ss: i16;
    let unaff_ds: u16;
    let u_stack_y108: u16;
    let local_5e: u16;
    let i_stack_y70: i16;
    let local_44: u16;
    let i_stack_y60: i16;
    let local_3a: i16;
    let local_38: u16;
    let local_36: i16;
    let auStackY48: [u16;4];
    let u_stack_y40: u16;
    let i_stack_y38: i16;
    let u_stack_y36: u16;
    let i_stack_y34: i16;
    let local_20: i16;
    let local_1c: i16;
    let u_stack_y24: u16;
    let u_stack_y22: u16;
    let u_stack_y20: u16;
    let i_var9: i16;
    let u_var10: u16;
    undefined * puVar11;

    fun_3444_02c6(0x39d9);
    local_3a = 0;
    local_38 = param_1;
    local_36 = param_2;
    param_2 = -0x8000;
    param_1 = 0;
    local_5e = 0x8000;
    local_44 = 0x8000;
    fun_2b26_0e3b();
    local_1c = local_1c - local_20;
    i_var9 = 0x780c;
    fun_1ba9_1038();
    if (0x7faa == 0x140) {
        auStackY48[2] = 0x7faa - local_1c & 0xfff8;
        u_stack_y36 = 0;
        u_stack_y40 = 0;
        i_stack_y38 = (0x7fac - i_var9) + -2;
        auStackY48[3] = 0x7fd4 + 4;
    } else {
        auStackY48[2] = (0x7faa - local_1c) - 10 & 0xfffc;
        u_stack_y36 = 0x14;
        u_stack_y40 = 0x14;
        i_stack_y38 = (0x7fac - i_var9) + -10;
        auStackY48[3] = 0x7fac / 0xe;
    }
    i_var9 = 0x2b26;
    auStackY48[0] = auStackY48[2];
    auStackY48[1] = i_stack_y38;
    i_stack_y34 = auStackY48[3];
    fun_2b26_0e3b();
    do unsafe {
    i_stack_y60 = local_3a;
    loop {
        i_var4 = FUN_1776_0e4b();
        if (i_var4 != 0)
        break;
        i_stack_y60 = (i_stack_y60 + 1) % 4;
    }
    while (i_stack_y60 != local_3a);
    local_3a = i_stack_y60;
    u_var8 = auStackY48[i_stack_y60 * 2];
    u_var7 = auStackY48[i_stack_y60 * 2 + 1];
    if ((u_var8 == local_44) && (u_var7 == local_5e)) {
        bVar3 = false;
    } else {
        ppcVar2 = (code * *)
        0xcf70;
        (**ppcVar2)();
        fun_2b26_0754();
        i_var9 = 0x2b26;
        fun_2b26_05ce();
        bVar3 = true;
        local_5e = u_var7;
        local_44 = u_var8;
    }
    if (bVar3) {
// LAB_1776_01f4:
        if (0x7faa == 0x140) {
            ppcVar2 = (code * *)
            0xcf6c;
            (**ppcVar2)();
        }
        param_2 = local_36;
        i_var4 = local_36 >> 1;
        param_1 = local_38 & 0x7f;
        i_var5 = param_1 >> 1;
        u_var10 = 0xc4e4;
        i_var6 = (*((param_1 * 0x40 + local_36) * 2 + 0x6bd) & 0xe0) >> 5;
        if (i_var6 == 0) {
            if ((*((param_1 * 0x40 + local_36) * 2 + 0x6be) & 0x80) == 0) {
                i_stack_y70 = 7000;
                if ((bVar3) || (0xcc4c != 0x2000)) {
                    fun_168b_097f();
                    fun_168b_03d1();
                    0xcc4c = 0x2000;
                }
            } else {
                i_stack_y70 = 0x1b60;
                i_var9 = (*((param_1 * 0x40 + local_36) * 2 + 0x6bd) & 0x1f) - 0xace;
                if (-i_var9 < 3) {
                    if ((i_var9 != -0x3002) || (bVar3)) {
                        fun_168b_097f();
                        fun_168b_03d1();
                        0xcc4c = 0x3002;
                    }
                } else {
                    if (-i_var9 < 6) {
                        if ((i_var9 != -0x3004) || (bVar3)) {
                            fun_168b_097f();
                            fun_168b_03d1();
                            0xcc4c = 0x3004;
                        }
                    } else {
                        if ((i_var9 != -0x3003) || (bVar3)) {
                            fun_168b_097f();
                            fun_168b_03d1();
                            0xcc4c = 0x3003;
                        }
                    }
                }
            }
        } else {
            if (0xabe == 5) {
                i_stack_y70 = i_var6 + 0x1fd5;
                if (bVar3) {
                    i_var9 = 0x1202;
                    fun_168b_03d1();
                } else {
                    i_var6 = FUN_39d9_0de2();
                    if ((i_var6 == i_var9) != 0xcc3e)
                    goto
                    LAB_1776_047c;
                }
                if (i_var9 != 0) {
                    FUN_39d9_0de2();
                }
            } else {
                i_stack_y70 = i_var6 + 7000;
                if ((bVar3) || (0xcc4c != i_var6)) {
                    fun_168b_097f();
                    u_var10 = 0x1202;
                    fun_168b_03d1();
                    0xcc4c = u_var10;
                }
                FUN_10bd_000e();
            }
            u_var10 = unaff_ds;
            FUN_168b_030f();
            0xcc3e = u_var10;
        }
// LAB_1776_047c:
        if ((0xcc40 != i_stack_y70) || (bVar3)) {
            if (i_stack_y70 == 0) {
                fun_168b_097f();
            } else {
                fun_168b_027d();
            }
            0xcc40 = i_stack_y70;
        }
        u_var8 = *(param_1 * 0x40 + local_36 + -0x40f8);
        if ((bVar3) || (u_var8 != 0xcc42)) {
            if (u_var8 == 0) {
                fun_168b_03d1();
                fun_168b_08fe();
                fun_168b_097f();
                fun_168b_097f();
                fun_168b_097f();
                u_var8 = 0x7e22;
                fun_168b_097f();
            } else {
                fun_168b_027d();
                fun_2b26_0e3b();
                fun_168b_04c4();
                fun_168b_04c4();
                fun_168b_04c4();
                if (0x7faa != 0x140) {
                    FUN_3444_17a6();
                }
                fun_168b_03d1();
                fun_168b_08fe();
                fun_168b_03d1();
                u_var8 = 0x1218;
                fun_2b26_0e3b();
                // for (iStackY60 = 0; i_stack_y60 < 8; iStackY60 = iStackY60 + 1) {
                for i_stack_y60 in 0 .. 8 {
                    u_var8 = u_stack_y108;
                    fun_168b_04c4();
                    u_stack_y22 = (*(((u_var8 & 0xfff1) >> 1) + i_stack_y60 + 0x814) + 1) / 3;
                    if 3 < u_stack_y22 {
                        u_stack_y22 = 3;
                    }
                    u_var8 = u_stack_y108;
                    fun_168b_04c4();
                    u_stack_y108 = u_stack_y108 + 0x138a;
                }
            }
            0xcc42 = u_var8;
        }
        u_var10 = 0xc4e4;
        u_var8 = ((param_1 * 0x40 + local_36) * 2 + 0x6bd);
        u_var7 = u_var8 >> 8 & 0x3f;
        if (bVar3) || (u_var7 + (u_var8 & 0x4000) != 0xcc3c) {
            0xcc3c = (*((param_1 * 0x40 + local_36) * 2 + 0x6be) & 0x40) * 0x100 + u_var7;
            fun_168b_097f();
            fun_168b_097f();
            fun_168b_097f();
            u_var8 = 0x7e9e;
            fun_168b_097f();
            if (u_var8 & 0x20) == 0 {
                if u_var8 == 0 {
                    if (*((param_1 * 0x40 + local_36) * 2 + 0x6be) & 0x40) == 0 {
                        fun_168b_03d1();
                    } else {
                        fun_168b_03d1();
                        FUN_168b_030f();
                    }
                } else {
                    fun_168b_027d();
                    fun_168b_03d1();
                    fun_2692_00b2();
                    fun_168b_03d1();
                    u_var8 = 0;
                    fun_168b_03d1();
                    if (u_var8 & 3) == 0 {
                        fun_2692_00b2();
                    } else {
                        FUN_3444_23fe();
                        u_stack_y20 = 0x12ea;
                        u_stack_y22 = 0x3444;
                        u_stack_y24 = 0x7fbb;
                        fun_168b_071f();
                    }
                }
            } else {
                fun_168b_03d1();
                FUN_168b_030f();
                fun_168b_027d();
            }
        }
        u_var8 = *(i_var5 * 0x20 + i_var4 + -0x48fa);
        if (u_var8 != 0xcc4e) || (bVar3) {
            if u_var8 == 0 {
                u_var10 = 0x80cf;
                fun_168b_097f();
            } else {
                fun_168b_03d1();
                u_var8 = 0x7f98;
                fun_168b_04c4();
                pi_var1 = 0x7f98;
                *pi_var1 = *pi_var1 + 0x138a + 2;
                u_var10 = (((u_var8 & 0xfff3) >> 2) + -0x17c);
                FUN_168b_030f();
            }
            0xcc4e = u_var10;
        }
        if bVar3 {
            fun_168b_03d1();
        } else {
            fun_168b_02da();
        }
        u_var8 = *(i_var5 * 0x20 + i_var4 + 0x56c2) - 0x46;
        u_var7 = u_var8 >> 0xf;
        i_var9 = (((u_var8 ^ u_var7) - u_var7) >> 2 ^ u_var7) - u_var7;
        if (bVar3) || (i_var9 != 0xcc44) {
            u_var10 = 0xc504;
            if 0xcf4 == 9 {
                i_var9 = i_var9 + -0x32;
            }
            if 0xcf4 == 10 {
                i_var9 = i_var9 + 200;
            }
            if i_var9 < 0 {
                fun_2692_00b2();
            }
            fun_168b_071f();
            u_var10 = 0x168b;
            fun_2692_00b2();
            0xcc44 = u_var10;
            fun_168b_08fe();
        }
        if bVar3 {
            fun_168b_03d1();
        } else {
            fun_168b_06a4();
            fun_168b_02da();
        }
        if 0x7faa != 0x140 {
            pi_var1 = 0x7f98;
            *pi_var1 = *pi_var1 + (0x7fd6 / '\x02');
        }
        u_var8 = *(i_var5 * 0x20 + i_var4 + -0xb15);
        if (u_var8 != 0xcc48) || (bVar3) {
            if u_var8 == 0 {
                ppcVar2 = (code * *)0xcf74;
                (**ppcVar2)();
                fun_2692_00b2();
            } else {
                fun_168b_04c4();
                pi_var1 = 0x7f98;
                *pi_var1 = *pi_var1 + 0x138a;
            }
            u_var10 = 0x8290;
            fun_168b_08fe();
            0xcc48 = u_var10;
        }
        if (bVar3) {
            fun_168b_03d1();
        } else {
            fun_168b_02da();
        }
        if ((bVar3) || (*(i_var5 * 0x20 + i_var4 + 0x46c2) != 0xcc46)) {
            fun_168b_071f();
            u_var10 = 0x168b;
            fun_2692_00b2();
            0xcc46 = u_var10;
        }
        if (bVar3) {
            u_var8 = 0x1209;
            fun_168b_03d1();
        } else {
            fun_168b_06a4();
            u_var8 = 0x168b;
            fun_168b_02da();
        }
        pi_var1 = 0x7f98;
        *pi_var1 = *pi_var1 + (0x7fd6 / '\x02');
        if ((bVar3) || (0xcc4a != u_var8)) {
            if ((u_var8 & 0xf0) == 0) {
                ppcVar2 = (code * *)
                0xcf74;
                (**ppcVar2)();
                fun_2692_00b2();
            } else {
                fun_168b_04c4();
                pi_var1 = 0x7f98;
                *pi_var1 = *pi_var1 + 0x138a;
                ppcVar2 = (code * *)
                0xcf74;
                (**ppcVar2)();
                pi_var1 = 0x7f98;
                *pi_var1 = *pi_var1 + 2;
                fun_168b_071f();
            }
            u_var10 = 0x8440;
            fun_168b_08fe();
            0xcc4a = u_var10;
        }
        u_var8 = *((param_1 * 0x40 + local_36) * 2 + 0x6bd) & 0x1f;
        if ((bVar3) || (u_var8 != 0xcc3a)) {
            if (0xace < u_var8) {
                fun_168b_03d1();
            } else {
                fun_168b_03d1();
            }
            fun_168b_071f();
            u_var10 = 0x84ff;
            fun_168b_08fe();
            0xcc3a = u_var10;
        }
    } else {
        i_var9 = 0x1ba9;
        i_var4 = fun_1ba9_104d();
        if (i_var4 != 0) {
            if ((((local_38 ^ param_1) & 0x7f) != 0) || (local_36 != param_2))
            goto
            LAB_1776_01f4;
        }
    }
    ppcVar2 = (code * *)
    0xcf70;
    (**ppcVar2)();
    fun_154b_1375();
    puVar11 = &stack0xfff8;
    i_var4 = unaff_ss;
    fun_1ba9_1038();
    i_var9 = 0x138a;
    local_38 = (puVar11 + (i_var9 / 3 - 0x15c1)) / i_var9;
    local_36 = 0x1388;
    local_36 = ((local_36 / 3 - 0x15c3) + i_var4) / local_36;
    if (0xd21 != '\0') {
        local_38 = local_38 << 1;
        local_36 = local_36 << 1;
    }
    local_38 = local_38 + 0xd2e;
    local_36 = local_36 + 0xd30;
    i_var9 = 0x1ba9;
    i_var4 = FUN_1ba9_10aa();
    if (i_var4 == 0) {
        fun_2b26_0754();
        fun_2d56_0eee();
        return;
    }
}
    while (true);
}



undefined2
FUN_1776_0e4b(param_1_00: u16,param_1: i16,param_2: i16,int *param_3,param_4: u16)

{
let iVar1: i16; let uVar2: u16;

FUN_3444_02c6(0x39d9); iVar1 = param_3[1]; if ((((0x854c < param_1 + - 0x10) || (param_3[2] + (param_1 - * param_3) + 0x10 < 0x8552)) || (0x854e < param_2 + - 0x10)) || (param_3[3] + (param_2 - iVar1) + 0x10 < 0x8550)) {
uVar2 = 1;
}
else {
uVar2 = 0;
}
return uVar2;
}



fn fun_1862_0004(param_1_00: u16, undefined2 * * param_1)

{
    code * *ppcVar1;
    let i_var2: i16;
    let unaff_ds: u16;
    undefined2 * **local_a;

    fun_3444_02c6(0x39d9);
    if ((*0x821 & 1) != 0) {
        local_a = (undefined2 * **)
        param_1;
        i_var2 = FUN_3444_1764(0x3444, 0x1eb3, 0x5b2d);
        if (i_var2 != 0) {
            local_a = (undefined2 * **)
            0x3444;
            fun_294b_02f2();
            local_a = &local_a;
            fun_2b26_0e3b(0x294b, 0x101);
            local_a = &local_a;
            fun_294b_077b(0x2b26);
            local_a = (undefined2 * **)
            0x1;
            local_a = (undefined2 * **)
            FUN_2b26_0008(0x294b);
            FUN_2c63_058f(0x2b26);
            local_a = (undefined2 * **)
            0x2c63;
            fun_168b_06a4();
            local_a = (undefined2 * **)
            param_1;
            fun_3444_172e(0x168b, 0x1eb3, 0x5b2d);
            if (0x7faa == 0x140) {
                local_a = (undefined2 * **)
                0x86cf;
                ppcVar1 = (code * *)
                0xcf6c;
                (**ppcVar1)();
            }
            local_a = (undefined2 * **)
            param_1;
            fun_168b_034f(0x3444, 0x101);
            if (0x7faa == 0x140) {
                local_a = (undefined2 * **)
                0x86f0;
                ppcVar1 = (code * *)
                0xcf70;
                (**ppcVar1)();
            }
            local_a = (undefined2 * **)
            0x86f5;
            fun_294b_03be();
        }
    }
    return;
}


fn fun_1862_00db()

{
    let unaff_ds: u16;
    undefined
    local_66[84];
    let u_stack_y18: u16;
    let u_stack_y16: u16;
    undefined * puStackY14;

    fun_3444_02c6(0x39d9);
    puStackY14 = local_66;
    u_stack_y16 = 0x3444;
    u_stack_y18 = 0x871a;
    fun_3444_172e();
    
    0x1eb3 = 0;
    puStackY14 = ff
    0x8731;
    fun_1862_0004();
    return;
}



void switchD_1000:da72::caseD_6(param_1_00: u16,uparam_1: i16)

{
let iVar1: i16; let unaff_DS: u16;
let uVar2: u32; let iVar3: i16;

FUN_3444_02c6(0x39d9); 0x1442 = param_1 & 3; iVar1 = (param_1 & 3) * 3; FUN_2b26_0402(0x3444, 1); for (iVar3 = 0; iVar3 < 0xc; iVar3 = iVar3 + 1) {
if ((iVar3 < iVar1) || (iVar1 + 3 < = iVar3)) {
FUN_2b26_0edc(0x2b26, iVar3 + 0x105, 0xffff,0, 0); if (iVar3 % 3 == 0) {
FUN_2b26_0edc(0x2b26, iVar3 / 3 + 0x111,0xffff, 0, 0);
}
}
else {
FUN_2b26_0edc(0x2b26, iVar3 + 0x105, 0xffff,1, 1); if (iVar3 % 3 == 0) {
FUN_2b26_0edc(0x2b26, iVar3 / 3 + 0x111,0xffff, 1, 1);
}
}
}
FUN_2b26_0363(0x2b26, 1); FUN_2b26_0e73(0x2b26, 0x11b, 0, 0, 0x1442 + 0x3de); if (( * 0x821 & 1) != 0) {
FUN_294b_02f2(0x2b26, 1); FUN_1862_2440(0x294b); uVar2 = FUN_2b26_0008(0x1862, 1,0x11b); FUN_2c63_058f(0x2b26, uVar2);
FUN_1862_2381(0x2c63); FUN_294b_03be(0x1862);
}
return;
}



fn fun_1862_0268(param_1_00: u16, param_1: u16)

{
    let i_var1: i16;
    let u_var2: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    u_var2 = 0xc518;
    0xd2c = param_1;
    i_var1 = 0xd2c * 4;
    fun_3444_172e(0x3444, 0xff65, 0x4b2d, (i_var1 + 0x19d6), (i_var1 + 0x19d8),
    );
    if ((*0x821 & 1) != 0) {
        FUN_13d4_0056(0x3444, 0, 0);
        fun_1862_00db(0x13d4);
        fun_294b_0c6d(0x1862);
        u_var2 = 0x294b;
        fun_294b_02f2(0x294b, 1);
        if (0x1440 != 0) {
            fun_1862_2440(0x294b);
            u_var2 = 0x1862;
            fun_1862_2381(0x1862);
        }
        fun_294b_0c76(u_var2);
    }
    return;
}


// WARNING: Instruction at (ram,0x00018b34) overlaps instruction at (ram,0x00018b33)
//
// WARNING: Control flow encountered bad instruction data
// WARNING: Stack frame is not setup normally: Input value of stackpointer is not used
// WARNING: Removing unreachable block (ram,0x0001f805)
// WARNING: Removing unreachable block (ram,0x0001f765)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

undefined2 *  FUN_1862_02f3()

{
let piVar1: * mut u16; let puVar2: * mut u16; let pcVar3: String; let    uVar4: u16; code * * ppcVar5; let uVar6: u16; let puVar7: * mut u16; let puVar8: * mut u16; let iVar9: i16; let in_CX: i16; let iVar10: i16; let bVar11: u8; let extraout_DX: i16; let extraout_DX_00: i16; let extraout_DX_01: i16; let in_BX: * mut u16;
let iVar12: i16; let iVar13: i16;
let puVar14: * mut u16; let iVar15: i16; int * * ppiVar16; int * *ppiVar17; let iVar18: i16; let puVar19: * mut u16; let puVar20: * mut u16; let puVar21: * mut u16; let puVar22: * mut u16; let puVar23: * mut u16; let puVar24: * mut u16; let puVar25: * mut u16; let puVar26: *mut u16; let puVar27: * mut u16;
let puVar28: * mut u16; let puVar29: * mut u16; let iVar30: i16; let puVar31: * mut u16; let puVar32: *mut u16; let puVar33: * mut u16;
let puVar34: * mut u16; let puVar35: * mut u16; let puVar36: * mut u16; let puVar37: * mut u16; let puVar38: * mut u16; let puVar39: * mut u16; let puVar40: * mut u16; let puVar41: * mut u16; let puVar42: *mut u16; int * * ppiVar43; undefined *puVar44; let puVar45: * mut u16; let puVar46: * mut u16; undefined * puVar47;
let piVar48: * mut u16; let piVar49: * mut u16; let iVar50: i16; undefined * puVar51; undefined * puVar52; undefined * puVar53; undefined * puVar54; undefined * puVar55; undefined * puVar56; undefined * puVar57; undefined * puVar58; undefined * puVar59; undefined * puVar60; undefined * puVar61; let iVar62: i16; let piVar63: * mut u16; undefined * puVar64; let piVar65: * mut u16; let piVar66: *mut u16; let iVar67: i16; undefined *puVar68; let iVar69: i16; let iVar70: i16; let in_ESP: u32; let puVar71: * mut u16; ulong uVar72; let unaff_BP: u16; let pbVar73: * mut u8; let unaff_SI: * mut u16; let unaff_DI: *mut u8; let uVar74: u16; let pbVar75: * mut u8; let pbVar76: * mut u8; let unaff_ES: u16; let uVar77: u16; let uVar78: u16; let unaff_SS: u16; let unaff_DS: u16; let uVar79: u32;

iVar15 = in_ESP; pbVar75 = (iVar15 + - 2); pbVar73 = (iVar15 + - 2); uVar77 = (undefined2)(in_ESP >> 0x10); (iVar15 + -2) = unaff_BP; (iVar15 + - 4) = 0x39d9; uVar78 = 0x3444; ppiVar16 = (int * * )(iVar15 + - 6); (iVar15 + - 6) = 0x891e; uVar79 = FUN_3444_02c6( * (u16 * )(iVar15 + - 4)); iVar12 = (uVar79 >> 0x10); puVar7 = uVar79; ppiVar16[1] = unaff_DI; puVar71 = CONCAT22(uVar77, ppiVar16); * ppiVar16 = unaff_SI; if (0x1a06 == '\0') {
if (( * 0x9c65 & 1) != 0) {
ppiVar16[ - 1] = 0x40; ppiVar16[- 2] = unaff_DS; ppiVar16[ - 3] = 0x1444; ppiVar16[ - 4] = unaff_DS; ppiVar16[ - 5] = 0x15ea;
ppiVar16[ - 6] = 0x3444; uVar78 = 0x3444; ppiVar17 = ppiVar16 + - 7; ppiVar16[ - 7] = 0x8947; FUN_3444_1f26(); (ppiVar17 + 8) = 0x40; in_CX = 0x1484; puVar71 = CONCAT22(uVar77, (undefined * )(ppiVar17 + 6));
(ppiVar17 + 6) = unaff_DS; goto code_r0x00018952;
}
puVar8 = in_BX; if (0x9c65 == '\x06') goto LAB_1862_0429; while ( true ) {
uVar78 = 0x3444; puVar7 = 0x9c65; if (0x8 < puVar7) break; in_BX = (puVar7 * 2); uVar78 = 0x1000; ppiVar43 = (int * * )puVar71; switch(puVar7) {
case 0x0: if (in_CX == 0) {
puVar7 = 0xa000; if (0x9c65 == '\x03') {
puVar7 = 0xb000; if ((unaff_SI & 0xff) != 0) {
bVar11 = * (iVar15 + - 2);
puVar7 = (bVar11 | 0xb000); if ((bVar11 & 0x80) != 0) {
ppiVar43[ - 1] = 0x0; ppiVar43[- 2] = 0xf7fb; puVar7 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1; return puVar7;
}
pcVar3 = (char * )0x67e8; * pcVar3 = * pcVar3 + '\x01'; in_CX = - 1; pbVar73 = (iVar15 + 0x3e); pbVar75 = unaff_DI + 0x2000; if (pbVar75 < 0) {
pbVar75 = unaff_DI + - 0x5fa6;
}
pbVar76 = pbVar75 + 0x2000; if (pbVar76 < 0) {
pbVar76 = pbVar75 + - 0x5fa6;
}
pbVar75 = pbVar76 + 0x2000; if (pbVar75 < 0) {
pbVar75 = pbVar76 + - 0x5fa6;
}
pbVar76 = pbVar75 + 0x2000; if (pbVar76 < 0) {
pbVar76 = pbVar75 + - 0x5fa6;
}
pbVar75 = pbVar76 + 0x2000; if (pbVar75 < 0) {
pbVar75 = pbVar76 + - 0x5fa6;
}
unaff_DI = pbVar75 + 0x2000; if (unaff_DI < 0) {
unaff_DI = pbVar75 + - 0x5fa6;
}
}
if (0 < in_CX) {
uVar72 = ZEXT24(ppiVar43 + - 1);
ppiVar43[ - 1] = unaff_SI; loop {
bVar11 = * pbVar73; puVar7 = (puVar7 & 0xff00 | bVar11); if ((bVar11 & 0x80) != 0) {
iVar70 = uVar72; (iVar70 + - 2) = 0x1000; uVar72 = (iVar70 - 4); (iVar70 + - 4) = 0xf876;
puVar7 = ( * _DAT_b000_67e9)(); *(undefined * )0x67f1 = 1;
}
pcVar3 = (char * )0x67e8; * pcVar3 = * pcVar3 + '\x01'; pbVar73 = pbVar73 + 0x40; pbVar75 = unaff_DI + 0x2000; if (pbVar75 < 0) {
pbVar75 = unaff_DI + - 0x5fa6;
}
pbVar76 = pbVar75 + 0x2000; if (pbVar76 < 0) {
pbVar76 = pbVar75 + - 0x5fa6;
}
pbVar75 = pbVar76 + 0x2000; if (pbVar75 < 0) {
pbVar75 = pbVar76 + - 0x5fa6;
}
pbVar76 = pbVar75 + 0x2000; if (pbVar76 < 0) {
pbVar76 = pbVar75 + - 0x5fa6;
}
pbVar75 = pbVar76 + 0x2000; if (pbVar75 < 0) {
pbVar75 = pbVar76 + - 0x5fa6;
}
unaff_DI = pbVar75 + 0x2000; if (unaff_DI < 0) {
unaff_DI = pbVar75 + - 0x5fa6;
}
in_CX = in_CX + - 1;
} while (in_CX != 0); unaff_SI = *(int * * )uVar72; ppiVar43 = (int * * )uVar72 + 1;
}
if (((unaff_SI & 0xff00) != 0) & & (bVar11 = * pbVar73, puVar7 = (puVar7 & 0xff00 | bVar11),
(bVar11 & 0x80) != 0)) {
(ppiVar43 + - 2) = in_CX; (ppiVar43 + - 4) = 0xf8df; puVar7 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1;
}
return puVar7;
}
if ((unaff_SI & 0xff) != 0) {
bVar11 = * (iVar15 + - 2);
puVar7 = CONCAT11(0xa0, bVar11); if ((bVar11 & 0x80) != 0) {
ppiVar43[ - 1] = 0x0; ppiVar43[- 2] = 0xf75b; puVar7 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1; return puVar7;
}
pcVar3 = (char * )0x67e8; * pcVar3 = * pcVar3 + '\x01'; in_CX = - 1; pbVar75 = (iVar15 + 0x3e);
}
if (0 < in_CX) {
uVar72 = ZEXT24(ppiVar43 + - 1);
ppiVar43[ - 1] = unaff_SI; loop {
bVar11 = * pbVar75; puVar7 = (puVar7 & 0xff00 | bVar11); if ((bVar11 & 0x80) != 0) {
iVar69 = uVar72; (iVar69 + - 2) = 0x1000; uVar72 = (iVar69 - 4); (iVar69 + - 4) = 0xf79f;
puVar7 = ( * _DAT_a000_67e9)(); *(undefined * )0x67f1 = 1;
}
pcVar3 = (char * )0x67e8; * pcVar3 = * pcVar3 + '\x01'; pbVar75 = pbVar75 + 0x40; in_CX = in_CX + - 1;
} while (in_CX != 0); unaff_SI = *(int * * )uVar72; ppiVar43 = (int * * )uVar72 + 1;
}
if (((unaff_SI & 0xff00) != 0) & & (bVar11 = * pbVar75, puVar7 = (puVar7 & 0xff00 | bVar11),
(bVar11 & 0x80) != 0)) {
(ppiVar43 + - 2) = in_CX; (ppiVar43 + - 4) = 0xf7d1; puVar7 = FUN_1f51_01e5(); * (undefined * )0x67f1 = 1;
}
return puVar7;
}
if (in_CX == 0) {
while ( true ) {
puVar7 = in (iVar12); bVar11 = (* puVar71 >> 8) + 1; uVar74 = * puVar71 & 0xff; if (uVar74 <= bVar11) break; iVar67 = (puVar71 + 1); uVar77 = (undefined2)((puVar71 + 1) >> 0x10); (iVar67 + - 2) = uVar74 | bVar11 << 8; (iVar67 + - 4) = 0x1000; puVar68 = (undefined * )(iVar67 + - 6); (iVar67 + - 6) = 0xf6ff; ppcVar5 = (code * *)0x67ed; ( * * ppcVar5)(); puVar71 = CONCAT22(uVar77, puVar68 + 2); iVar12 = extraout_DX_01;
}
return puVar7;
}
if (in_CX == 0) {
loop {
unaff_SI[0x81] = iVar12; puVar8 = (puVar8 & 0xf000 | ((puVar8 & 0xf0ff) | ((puVar8 & 0xf0ff) >> 8)) | 0x80); * unaff_DI = puVar8; loop {
piVar66 = puVar71; iVar9 = * piVar66; piVar1 = (iVar9 + - 0xe); * piVar1 = * piVar1 + 0x80; piVar1 = (iVar9 + - 0xc); * piVar1 = * piVar1 + 4; piVar1 = (iVar9 + - 0x10); * piVar1 = * piVar1 + 1;
piVar1 = (iVar9 + - 8); *piVar1 = * piVar1 + 1; if (((iVar9 + - 8) & 0x3f) == 0) {
piVar1 = (iVar9 + - 0xe); *piVar1 = * piVar1 + - 0x1ffe; piVar1 = (iVar9 + - 0xc); * piVar1 = * piVar1 + 0x100; (iVar9 + - 8) = 0; piVar1 = (iVar9 + -10); * piVar1 = * piVar1 + 1; if (((iVar9 + - 10) & 0x1f) == 0) {
return puVar8;
}
}
* piVar66 = 8; piVar66[ - 1] = 0x1234; piVar66[ - 2] = 0x1234; piVar66[ - 3] = 0x1234; piVar66[ - 4] = 0x1234; piVar66[ -5] = (iVar9 + - 0xe);
piVar66[ - 6] = (iVar9 + -10); piVar66[ - 7] = (iVar9 + - 8); piVar66[ - 8] = 0x1000; piVar65 = piVar66 + - 9; piVar66[ - 9] = 0xf576; ppcVar5 = (code * * )(iVar9 + 8); ( * * ppcVar5)();
uVar79 = * ff(iVar9 + 0x14); uVar77 = (undefined2)(uVar79 >> 0x10); iVar10 = uVar79; iVar12 = (piVar65 + 4) * 2; if ((piVar65 + 6) == 0x1234) {
uVar74 = (iVar12 + 0x6bd) & 0x1f;
if ((iVar9 + 6) < uVar74) {
uVar79 = * ff(iVar9 + 0xc); uVar77 = (undefined2)(uVar79 >> 0x10); iVar10 = uVar79;
}
else {
uVar74 = (uVar74 - (iVar9 + 6)) + 0x1f; uVar79 = * (undefined4 *)(iVar9 + 0x10); uVar77 = (undefined2)(uVar79 >> 0x10); iVar10 = uVar79;
}
uVar78 = (iVar10 + uVar74 * 2);
uVar79 = * ff(iVar9 + 0x14); uVar77 = (undefined2)(uVar79 >> 0x10); iVar10 = uVar79;
}
else {
uVar78 = (iVar10 + (piVar65 + 6) * 2);
}
(iVar9 + - 2) = uVar78; if ((piVar65 + 8) == 0x1234) {
uVar74 = (iVar12 + 0x73d) & 0x1f;
if ((iVar9 + 6) < uVar74) {
uVar79 = * ff(iVar9 + 0xc); uVar77 = (undefined2)(uVar79 >> 0x10); iVar10 = uVar79;
}
else {
uVar74 = (uVar74 - (iVar9 + 6)) + 0x1f; uVar79 = * (undefined4 *)(iVar9 + 0x10); uVar77 = (undefined2)(uVar79 >> 0x10); iVar10 = uVar79;
}
uVar78 = (iVar10 + uVar74 * 2);
uVar79 = * ff(iVar9 + 0x14); uVar77 = (undefined2)(uVar79 >> 0x10); iVar10 = uVar79;
}
else {
uVar78 = (iVar10 + (piVar65 + 8) * 2);
}
(iVar9 + - 4) = uVar78; if ((piVar65 + 10) == 0x1234) {
uVar74 = (iVar12 + 0x6bf) & 0x1f;
if ((iVar9 + 6) < uVar74) {
uVar79 = * ff(iVar9 + 0xc); uVar77 = (undefined2)(uVar79 >> 0x10); iVar10 = uVar79;
}
else {
uVar74 = (uVar74 - (iVar9 + 6)) + 0x1f; uVar79 = * (undefined4 *)(iVar9 + 0x10); uVar77 = (undefined2)(uVar79 >> 0x10); iVar10 = uVar79;
}
uVar78 = (iVar10 + uVar74 * 2);
uVar79 = * ff(iVar9 + 0x14); uVar77 = (undefined2)(uVar79 >> 0x10); iVar10 = uVar79;
}
else {
uVar78 = (iVar10 + (piVar65 + 10) * 2);
}
(iVar9 + - 6) = uVar78; if ((piVar65 + 0xc) == 0x1234) {
uVar74 = (iVar12 + 0x73f) & 0x1f;
if ((iVar9 + 6) < uVar74) {
uVar79 = * ff(iVar9 + 0xc); uVar77 = (undefined2)(uVar79 >> 0x10); iVar12 = uVar79;
}
else {
uVar74 = (uVar74 - (iVar9 + 6)) + 0x1f; uVar79 = * (undefined4 *)(iVar9 + 0x10); uVar77 = (undefined2)(uVar79 >> 0x10); iVar12 = uVar79;
}
iVar12 = (iVar12 + uVar74 * 2);
}
else {
iVar12 = (iVar10 + (piVar65 + 0xc) * 2);
}
unaff_DI = * (byte * * )(iVar9 + - 0x10); unaff_SI = * (int * * )(iVar9 + - 0xc);
bVar11 = * unaff_DI; uVar74 = (piVar65 + 0xe) & 0xff; uVar6 = bVar11 << 8; puVar8 = (uVar74 | uVar6);
puVar71 = ZEXT24((undefined * )(piVar65 + 0xe)); (piVar65 + 0xe) = iVar9; iVar10 = (iVar9 + - 4); iVar13 = (iVar9 + - 6); iVar9 = (iVar9 + - 2);
} while ((((((uVar6 & 0x8000) == 0) & & (iVar9 == *unaff_SI)) & & (iVar10 == unaff_SI[1])) & & ((iVar13 == unaff_SI[0x80] & & (iVar12 == unaff_SI[0x81])))) & & ((bVar11 & 0xf) == uVar74));
* unaff_SI = iVar9; unaff_SI[1] = iVar10; unaff_SI[0x80] = iVar13;
} while ( true );
}
return puVar8; case 0x1: return puVar8; case 0x2: 0x139a = 0; 0x10d4 = 0;
return puVar8; case 0x3: code_r0x00018952: iVar18 = puVar71; uVar77 = (undefined2)(puVar71 >> 0x10); (iVar18 + - 2) = in_CX; (iVar18 + - 4) = unaff_DS; (iVar18 + - 6) = 0x16ba; (iVar18 + - 8) = uVar78;
puVar19 = (iVar18 + - 10); (iVar18 + - 10) = 0x895d; FUN_3444_1f26(); puVar19[4] = 0x40; puVar19[3] = unaff_DS; puVar19[2] = 0x1484; puVar19[1] = unaff_DS;
* puVar19 = 0x162a; puVar19[ - 1] = 0x3444; puVar20 = puVar19 + - 2;
puVar19[ - 2] = 0x8973; FUN_3444_1f26(); puVar20[4] = 0x50; puVar20[3] = unaff_DS; puVar20[2] = 0x14c4; puVar20[1] = unaff_DS;
* puVar20 = 0x166a; puVar20[ - 1] = 0x3444; puVar21 = puVar20 + - 2;
puVar20[ - 2] = 0x8989; FUN_3444_1f26(); puVar21[4] = 0x40; puVar21[3] = unaff_DS; puVar21[2] = 0x1504; puVar21[1] = unaff_DS;
* puVar21 = 0x16fa; puVar21[ - 1] = 0x3444; puVar22 = puVar21 + - 2;
puVar21[ - 2] = 0x899f; FUN_3444_1f26(); puVar22[4] = 0x40; puVar22[3] = unaff_DS; puVar22[2] = 0x1544; puVar22[1] = unaff_DS;
* puVar22 = 0x173a; puVar22[ - 1] = 0x3444; puVar23 = puVar22 + - 2;
puVar22[ - 2] = 0x89b5; FUN_3444_1f26(); puVar23[4] = 0x20; puVar23[3] = unaff_DS; puVar23[2] = 0x1584; puVar23[1] = unaff_DS;
* puVar23 = 0x177a; puVar23[ - 1] = 0x3444; puVar24 = puVar23 + - 2;
puVar23[ - 2] = 0x89cb; FUN_3444_1f26(); puVar24[4] = 0x12; puVar24[3] = unaff_DS; puVar24[2] = 0x15a4; puVar24[1] = unaff_DS;
* puVar24 = 0x179a; puVar24[ - 1] = 0x3444; puVar25 = puVar24 + - 2;
puVar24[ - 2] = 0x89e1; FUN_3444_1f26(); puVar25[4] = 0x10; puVar25[3] = unaff_DS; puVar25[2] = 0x15b6; puVar25[1] = unaff_DS;
* puVar25 = 0x17ac; puVar25[ - 1] = 0x3444; puVar26 = puVar25 + - 2;
puVar25[ - 2] = 0x89f7; FUN_3444_1f26(); puVar26[4] = 0x10; puVar26[3] = unaff_DS; puVar26[2] = 0x15c6; in_CX = 0x17bc; puVar26[1] = unaff_DS; * puVar26 = 0x17bc; puVar26[ - 1] = 0x3444; puVar27 = puVar26 + - 2; puVar26[ - 2] = 0x8a0d; FUN_3444_1f26(); puVar27[4] = 0x10; puVar27[3] = unaff_DS;
puVar27[2] = 0x15d6; puVar27[1] = unaff_DS; * puVar27 = 0x17cc; puVar27[ - 1] = 0x3444; puVar28 = puVar27 + - 2; puVar27[ - 2] = 0x8a23; FUN_3444_1f26(); puVar28[4] = 4; puVar28[3] = unaff_DS;
puVar28[2] = 0x15e6; puVar28[1] = unaff_DS; * puVar28 = 0x17dc; puVar28[ - 1] = 0x3444; puVar29 = puVar28 + - 2; puVar28[ - 2] = 0x8a39; FUN_3444_1f26(); puVar71 = CONCAT22(uVar77, (undefined * )(puVar29 + 10)); iVar12 = extraout_DX; puVar8 = in_BX; break; case 0x4: * (undefined2 ** )(iVar15 + - 0x46) = in_BX; (iVar15 + - 0x44) = unaff_ES;
* in_BX = 0x8001; if (0xd21 == '\0') {
iVar12 = 0xff32;
}
else {
iVar12 = 0xff32 << 1;
}
(iVar15 + - 0x12) = iVar12; iVar12 = 0xd30; (iVar15 + - 0x16) = iVar12; * (int * * )(iVar15 + - 0x20) = unaff_SI; for (; iVar50 = puVar71, iVar12 < 0xd30 + (iVar15 + - 0x12); iVar12 = iVar12 + 1) {
uVar77 = 0xc600; iVar13 = iVar12 * 2;
(iVar15 + - 0x4e) = iVar13; iVar9 = (iVar13 + 0x5c1e); iVar10 = (iVar13 + 0x5c20); (iVar15 + - 0x4c) = iVar10; (iVar15 + - 0x50) = iVar9; iVar10 = iVar10 - iVar9; if (0 < iVar10) {
(iVar15 + - 8) = (iVar15 + - 0x1e) << 5; (iVar50 + - 2) = 0; (iVar50 + -4) = 0x4000; (iVar50 + - 6) = (iVar15 + - 0x34); (iVar50 + - 8) = (iVar15 + -0x36); iVar9 = (iVar13 + 0x5ca2); (iVar50 + - 10) = iVar9 >> 0xf; (iVar50 + - 0xc) = iVar9; (iVar15 + - 0x54) = iVar9; (iVar15 + - 0x52) = iVar9 >> 0xf; (iVar50 + - 0xe) = uVar78; puVar51 = (undefined * )(iVar50 + - 0x10); (iVar50 + - 0x10) = 0xe701; uVar79 = FUN_3444_23fe();
(puVar51 + - 2) = (uVar79 >> 0x10); (puVar51 + - 4) = uVar79; (puVar51 + - 6) = 0x3444; puVar52 = puVar51 + - 8; (puVar51 + - 8) = 0xe708; iVar13 = FUN_3444_2364(); iVar9 = (iVar15 + -0x32); (puVar52 + - 2) = 0; (puVar52 + - 4) = 0x4000; (puVar52 + - 6) = (iVar15 + - 0x52); (puVar52 + - 8) = (iVar15 + - 0x54); (puVar52 + - 10) = 0; (puVar52 + - 0xc) = 0x4000; (puVar52 + - 0xe) = (iVar15 + - 0x2e); (puVar52 + - 0x10) = (iVar15 + - 0x30); uVar77 = * ff(iVar15 + - 0x2c); (puVar52 + - 0x12) = 0; (puVar52 + - 0x14) = uVar77; (iVar15 + - 0x56) = - (iVar13 - iVar9); (puVar52 + - 0x16) = 0x3444;
puVar53 = puVar52 + - 0x18; (puVar52 + - 0x18) = 0xe732; uVar79 = FUN_3444_23fe(); (puVar53 + - 2) = (uVar79 >> 0x10); (puVar53 + -4) = uVar79; (puVar53 + - 6) = 0x3444; puVar54 = puVar53 + - 8; (puVar53 + - 8) = 0xe739;
uVar79 = FUN_3444_2364(); (puVar54 + -2) = (uVar79 >> 0x10);
(puVar54 + - 4) = uVar79; (puVar54 + - 6) = 0x3444; puVar55 = puVar54 + - 8; (puVar54 + - 8) = 0xe740; uVar79 = FUN_3444_23fe();
(puVar55 + - 2) = (uVar79 >> 0x10); (puVar55 + - 4) = uVar79; (puVar55 + - 6) = 0x3444; puVar56 = puVar55 + - 8; (puVar55 + - 8) = 0xe747; iVar9 = FUN_3444_2364(); iVar9 = iVar9 + (iVar15 + - 0x56) + (iVar15 + - 0x28); (iVar15 + - 0x1e) = iVar9; iVar9 = ((iVar9 * 0x20 - (iVar15 + - 8)) / iVar10) / 2; (iVar15 + - 0xc) = iVar9; (iVar15 + - 10) = iVar9 >> 0xf; (puVar56 + - 2) = 0; (puVar56 + - 4) = 2; (puVar56 + - 6) = (iVar15 + - 10); (puVar56 + - 8) = (iVar15 + - 0xc); (puVar56 + - 10) = 0x3444; puVar57 = puVar56 + - 0xc; (puVar56 + - 0xc) = 0xe777; iVar9 = FUN_3444_2364();
piVar1 = (iVar15 + - 8); *piVar1 = * piVar1 + iVar9; (iVar15 + - 6) = (iVar15 + - 0x1c) << 5; (puVar57 + - 2) = 0; (puVar57 + - 4) = 0x4000; (puVar57 + - 6) = (iVar15 + - 0x52); (puVar57 + -8) = (iVar15 + - 0x54);
(puVar57 + - 10) = 0; (puVar57 + - 0xc) = 0x4000; (puVar57 + - 0xe) = (iVar15 + - 0x2e); (puVar57 + - 0x10) = (iVar15 + - 0x30); uVar77 = * ff(iVar15 + - 0x3a);
(puVar57 + - 0x12) = 0; (puVar57 + - 0x14) = uVar77; (puVar57 + - 0x16) = 0x3444; puVar58 = puVar57 + - 0x18; (puVar57 + - 0x18) = 0xe7a7; uVar79 = FUN_3444_23fe(); (puVar58 + - 2) = (uVar79 >> 0x10); (puVar58 + - 4) = uVar79; (puVar58 + - 6) = 0x3444; puVar59 = puVar58 + - 8; (puVar58 + - 8) = 0xe7ae; uVar79 = FUN_3444_2364(); (puVar59 + - 2) = (uVar79 >> 0x10); (puVar59 + - 4) = uVar79; (puVar59 + -6) = 0x3444; puVar60 = puVar59 + -8; (puVar59 + - 8) = 0xe7b5; uVar79 = FUN_3444_23fe(); (puVar60 + - 2) = (uVar79 >> 0x10); (puVar60 + - 4) = uVar79;
(puVar60 + - 6) = 0x3444; puVar61 = puVar60 + - 8; (puVar60 + -8) = 0xe7bc; iVar9 = FUN_3444_2364(); iVar9 = iVar9 + (iVar15 + - 0x56) + (iVar15 + - 0x28); (iVar15 + - 0x1c) = iVar9; iVar9 = ((iVar9 * 0x20 - (iVar15 + -6)) / iVar10) / 2; (iVar15 + - 0x10) = iVar9; (iVar15 + - 0xe) = iVar9 >> 0xf;
(puVar61 + - 2) = 0; (puVar61 + - 4) = 2; (puVar61 + - 6) = (iVar15 + - 0xe); (puVar61 + - 8) = (iVar15 + - 0x10); (puVar61 + -10) = 0x3444; uVar78 = 0x3444; puVar71 = (puVar61 - 0xc); (puVar61 + - 0xc) = 0xe7ec; iVar9 = FUN_3444_2364(); piVar1 = (iVar15 + - 6); * piVar1 = * piVar1 + iVar9; iVar9 = (iVar15 + - 0x4c) + (iVar15 + - 0x26); if ((iVar15 + - 0x22) + - 1 < = iVar9) {
iVar9 = iVar9 + - 1;
}
(iVar15 + - 4) = (iVar15 + - 0x50) + (iVar15 + - 0x26); (iVar15 + - 0x16) = iVar12;
if ((iVar15 + - 0x50) == 0x5c1e) {
piVar1 = (iVar15 + - 4); *piVar1 = * piVar1 + 1;
}
iVar12 = (iVar15 + - 4); piVar1 = * (int * * )(iVar15 + - 0x42); if ( * piVar1 != iVar12 & & iVar12 < = * piVar1) {
* piVar1 = iVar12;
}
0x5d2a = iVar9; (iVar15 + - 0x14) = iVar9; iVar12 = (iVar15 + - 8); for (uVar74 = (iVar15 + -4); puVar2 = (iVar15 + - 0x14),
* puVar2 != uVar74 & & uVar74 <= * puVar2; uVar74 = uVar74 + 1) {
iVar9 = iVar12 >> 5; (iVar15 + - 0x58) = iVar9; piVar1 = * (int * * )(iVar15 + - 0x3e); if ( * piVar1 != iVar9 & & iVar9 < = * piVar1) {
* piVar1 = iVar9;
}
iVar9 = (iVar15 + - 6) >> 5; (iVar15 + - 0x5a) = iVar9; piVar1 = * (int * * )(iVar15 + - 0x46); if ( * piVar1 < iVar9) {
* piVar1 = iVar9;
}
iVar62 = puVar71; if ((uVar74 < (0xd30 * 2 + 0x5c1e) + (iVar15 + - 0x26) + 2) || ((((0xd30 + (iVar15 + - 0x12)) * 2 + 0x5c1e) + (iVar15 + - 0x26)) - 2 < = uVar74)) {
(iVar62 + - 2) = uVar74 + 1; (iVar62 + - 4) = (iVar15 + - 0x5a); (iVar62 + - 6) = uVar74; piVar63 = (iVar62 + -8); (iVar62 + - 8) = (iVar15 + - 0x58);
}
else {
(iVar62 + - 2) = uVar74 + 1; (iVar62 + - 4) = (iVar15 + - 0x58) + 2; (iVar62 + - 6) = uVar74; (iVar62 + -8) = (iVar15 + - 0x58);
(iVar62 + - 10) = uVar78; uVar78 = 0x2c63; piVar63 = (iVar62 + - 0xc); (iVar62 + - 0xc) = 0xe8bb; FUN_2c63_028d(); piVar63[3] = uVar74 + 1; piVar63[2] = (iVar15 + - 0x5a); piVar63[1] = uVar74; * piVar63 = (iVar15 + -0x5a) + - 2;
}
(piVar63 + - 2) = uVar78; uVar78 = 0x2c63; puVar64 = (undefined * )(piVar63 + - 4); (piVar63 + -4) = 0xe8e5; FUN_2c63_028d(); puVar71 = ZEXT24(puVar64 + 8); iVar12 = iVar12 + (iVar15 + - 0xc); piVar1 = (iVar15 + - 6); * piVar1 = * piVar1 + (iVar15 + - 0x10);
}
iVar12 = (iVar15 + - 0x16);
}
}
(iVar50 + - 2) = uVar78; (iVar50 + - 4) = 0xe8fe; puVar7 = FUN_294b_03be(); return puVar7; case 0x5:
* (undefined2 * * )0xad0 = puVar8;
ppiVar43[ - 1] = 0x1000; puVar14 = ppiVar43 + - 2; ppiVar43[ - 2] = 0x64a2; FUN_1862_1975(); (puVar14 + - 2) = 0x1862; (puVar14 + -4) = 0x64d6; puVar7 = FUN_154b_0395(); return puVar7; case 0x6:
// WARNING: Bad instruction - Truncating control flow here
halt_baddata(); case 0x7: unaff_DS = * ppiVar43; puVar71 = (puVar71 & 0xffff0000 | ZEXT24((undefined * )(ppiVar43 + 3)));
unaff_ES = (undefined2)( * (undefined4 *)(iVar15 + - 2 + unaff_SI) >> 0x10);
// LAB_1862_0429:
iVar30 = puVar71; uVar77 = (undefined2)(puVar71 >> 0x10);
(iVar30 + - 2) = 0x40; (iVar30 + - 4) = unaff_DS; (iVar30 + - 6) = 0x17e0; (iVar30 + - 8) = unaff_DS; (iVar30 + -10) = 0x15ea; (iVar30 + - 0xc) = uVar78; puVar31 = (iVar30 + -0xe); (iVar30 + - 0xe) = 0x8a5c; FUN_3444_1f26(); puVar31[4] = 0x40; puVar31[3] = unaff_DS;
puVar31[2] = 0x1820; puVar31[1] = unaff_DS; * puVar31 = 0x162a; puVar31[ - 1] = 0x3444; puVar32 = puVar31 + - 2; puVar31[ - 2] = 0x8a72; FUN_3444_1f26(); puVar32[4] = 0x50; puVar32[3] = unaff_DS;
puVar32[2] = 0x1860; puVar32[1] = unaff_DS; * puVar32 = 0x166a; puVar32[ - 1] = 0x3444; puVar33 = puVar32 + - 2; puVar32[ - 2] = 0x8a88; FUN_3444_1f26(); puVar33[4] = 0x40; puVar33[3] = unaff_DS;
puVar33[2] = 0x18b0; puVar33[1] = unaff_DS; * puVar33 = 0x16ba; puVar33[ - 1] = 0x3444; puVar34 = puVar33 + - 2; puVar33[ - 2] = 0x8a9e; FUN_3444_1f26(); puVar34[4] = 0x40; puVar34[3] = unaff_DS;
puVar34[2] = 0x18f0; puVar34[1] = unaff_DS; * puVar34 = 0x16fa; puVar34[ - 1] = 0x3444; puVar35 = puVar34 + - 2; puVar34[ - 2] = 0x8ab4; FUN_3444_1f26(); puVar35[4] = 0x40; puVar35[3] = unaff_DS;
puVar35[2] = 0x1930; puVar35[1] = unaff_DS; * puVar35 = 0x173a; puVar35[ - 1] = 0x3444; puVar36 = puVar35 + - 2; puVar35[ - 2] = 0x8aca; FUN_3444_1f26(); puVar36[4] = 0x20; puVar36[3] = unaff_DS;
puVar36[2] = 0x1970; puVar36[1] = unaff_DS; * puVar36 = 0x177a; puVar36[ - 1] = 0x3444; puVar37 = puVar36 + - 2; puVar36[ - 2] = 0x8ae0; FUN_3444_1f26(); puVar37[4] = 0x12; puVar37[3] = unaff_DS;
puVar37[2] = 0x1990; puVar37[1] = unaff_DS; * puVar37 = 0x179a; puVar37[ - 1] = 0x3444; puVar38 = puVar37 + - 2; puVar37[ - 2] = 0x8af6; FUN_3444_1f26(); puVar38[4] = 0x10; puVar38[3] = unaff_DS;
puVar38[2] = 0x19a2; puVar38[1] = unaff_DS; * puVar38 = 0x17ac; puVar38[ - 1] = 0x3444; puVar39 = puVar38 + - 2; puVar38[ - 2] = 0x8b0c; FUN_3444_1f26(); puVar39[4] = 0x10; puVar39[3] = unaff_DS;
puVar39[2] = 0x19b2; in_CX = 0x17bc; puVar39[1] = unaff_DS; * puVar39 = 0x17bc; puVar39[ - 1] = 0x3444; puVar40 = puVar39 + - 2; puVar39[- 2] = 0x8b22; FUN_3444_1f26();
puVar40[4] = 0x10; puVar40[3] = unaff_DS; puVar40[2] = 0x19c2; puVar40[1] = unaff_DS; * puVar40 = 0x17cc; puVar40[ - 1] = 0x3444; puVar41 = puVar40 + - 2; puVar40[- 2] = 0x8b38; FUN_3444_1f26();
puVar41[4] = 4; puVar41[3] = unaff_DS; puVar41[2] = 0x19d2; puVar41[1] = unaff_DS; * puVar41 = 0x17dc; puVar41[ - 1] = 0x3444; puVar42 = puVar41 + - 2; puVar41[- 2] = 0x8b4e; FUN_3444_1f26();
puVar71 = CONCAT22(uVar77, (undefined * )(puVar42 + 10)); iVar12 = extraout_DX_00; puVar8 = in_BX; break; case 0x8:
ppiVar43[ - 1] = unaff_DS; uVar72 = * (ulong * )0x6c7; unaff_DS = (undefined2)(uVar72 >> 0x10); puVar71 = (uVar72 & 0xffff); if (in_CX == 1 || in_BX == 0x0) {
0x67e2 = 0xa0; puVar7 = puVar8;
}
else {
puVar7 = (puVar8 & 0xff00 | ((puVar8 + ';') - (puVar8 < 0x68e))); 0x67ed = 0; 0x67ef = 0x3d49;
0x67e0 = 4; 0x67e2 = 0xa0;
}
goto LAB_1862_079a;
}
}
// LAB_1862_079a:
puVar44 = (undefined * )puVar71; if (((0x9c65 != '\x02') & & (0x9c65 != '\x04')) & & (0x9c65 != '\x06'))
{
if ((0x9c65 == '\a') || (0x9c65 == '\b')) {
(iVar15 + - 10) = 0x2724;
}
else {
(iVar15 + - 10) = 10000;
}
puVar8 = 0x9c65; if (puVar8 == 0x0) {
(iVar15 + - 0x10) = 0x1c; puVar7 = puVar8;
}
else {
puVar7 = (puVar8 + - 3); if ((puVar7 == 0x0) || (puVar7 = (puVar8 + - 5), puVar7 == 0x0)) {
(iVar15 + - 0x10) = 10;
}
else {
puVar7 = (puVar8 + - 7); if (puVar7 == 0x0) {
(iVar15 + - 0x10) = 0xc;
}
else {
puVar7 = puVar8 + - 4; if (puVar7 == 0x0) {
(iVar15 + - 0x10) = 0x24;
}
}
}
}
(iVar15 + - 8) = 0x1cfb; (iVar15 + - 6) = 0x5b2d; (iVar15 + - 4) = 0; while (puVar44 = (undefined * )puVar71, (iVar15 + - 4) < 0xb) {
uVar77 = (iVar15 + - 6); uVar4 = 0xc522; iVar12 = (iVar15 + - 4) * 4; (iVar12 + 0x1e87) = (iVar15 + - 8); (iVar12 + 0x1e89) = uVar77; (puVar44 + - 2) = 2; (puVar44 + - 4) = (iVar15 + - 10); (puVar44 + - 6) = uVar78; puVar45 = (puVar44 + - 8); (puVar44 + -8) = 0x8e8e; uVar79 = FUN_3074_00d3(); (iVar15 + - 0xe) = uVar79;
(iVar15 + - 0xc) = (uVar79 >> 0x10); puVar45[1] = (iVar15 + - 0x10); piVar1 = * (int * * )(iVar15 + - 0xe); iVar12 = * piVar1; * puVar45 = (piVar1 + 2); puVar45[ - 1] = iVar12 + 3; puVar45[ - 2] = (iVar15 + - 6); puVar45[- 3] = (iVar15 + - 8); puVar45[ - 4] = 0x3074; puVar46 = puVar45 + - 5; puVar45[ - 5] = 0x8eb3; FUN_3444_1f26(); (puVar46 + 8) = 2; (puVar46 + 6) = (iVar15 + - 10); piVar1 = (iVar15 + - 10); * piVar1 = * piVar1 + 1; (puVar46 + 4) = 0x3444; uVar78 = 0x3074; puVar47 = (undefined * )(puVar46 + 2);
(puVar46 + 2) = 0x8ec5; FUN_3074_01d4(); puVar71 = ZEXT24(puVar47 + 4); puVar7 = * (undefined2 * * )(iVar15 + - 0x10); piVar1 = (iVar15 + - 8); * piVar1 = * piVar1 + puVar7; piVar1 = (iVar15 + - 4); * piVar1 = * piVar1 + 1;
}
}
if (0x9c65 == '\x06') {
(puVar44 + - 2) = 9; (puVar44 + - 4) = 10000; (puVar44 + - 6) = uVar78; piVar48 = (puVar44 + - 8); (puVar44 + -8) = 0x8ee7; uVar79 = FUN_3074_00d3(); (iVar15 + - 0xe) = uVar79;
(iVar15 + - 0xc) = (uVar79 >> 0x10); (iVar15 + - 4) = 0; while ((iVar15 + - 4) < 0x300) {
uVar79 = * ff * ff(iVar15 + - 0xe); pcVar3 = (char * )(uVar79 + (iVar15 + - 4)); * pcVar3 = *pcVar3 >> 2; piVar1 = (iVar15 + - 4); * piVar1 = * piVar1 + 1;
}
(iVar15 + - 0x20) = 0x1012; (iVar15 + - 0x1e) = 0; (iVar15 + - 0x1c) = 0x100; (iVar15 + - 0x1a) = * ff(iVar15 + - 0xe); uVar79 = * ff(iVar15 + - 0xe);
(iVar15 + - 0x28) = (uVar79 + 2); piVar48[1] = unaff_SS;
* piVar48 = iVar15 + - 0x28; piVar48[- 1] = unaff_SS; piVar48[ - 2] = iVar15 + - 0x20; piVar48[ -3] = unaff_SS; piVar48[ - 4] = iVar15 + - 0x20; piVar48[ - 5] = 0x10; piVar48[ - 6] = 0x3074; piVar49 = piVar48 + - 7; piVar48[ - 7] = 0x8f4c; FUN_3444_1be4(); (piVar49 + 0xc) = 9; (piVar49 + 10) = 10000; (piVar49 + 8) = 0x3444; (piVar49 + 6) = 0x8f5c; puVar7 = FUN_3074_01d4();
}
* (undefined * )0x1a06 = 1;
}
return puVar7;
}


/*
Unable to decompile 'FUN_1862_0949'
Cause: Exception while decompiling 1862:0949: process: timeout

*/


fn fun_1862_0a23()

{
    let u_var1: u16;
    let i_var2: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    FUN_1862_02f3(0x3444);
    FUN_1862_1686(0x1862);
    i_var2 = 0x9c65;
    if ((i_var2 < 7) || (1 < i_var2 + -7)) {
        u_var1 = 0xc514;
        fun_2b26_05ce(0x1862, 0x900, 0x90a + 0x105, 0x90c + 0xe3);
    } else {
        u_var1 = 0xc514;
        fun_2b26_05ce(0x1862, 0x900, 0x90a + 0xe6, 0x90c + 0xf3);
    }
    0x143a = 1;
    return;
}


fn fun_1862_0aa7()

{
    let u_var1: u32;
    let unaff_ds: u16;
    let local_2e: i16;
    let local_2c: i16;
    let local_2a: i16;
    let local_28: i16;
    let local_1e: i16;
    let local_1c: i16;
    let local_1a: i16;
    let local_18: i16;
    let pi_var2: *mut u16;
    let u_var3: u16;

    fun_3444_02c6(0x39d9);
    if (((0x9c7c | 0x9c7a) != 0) && (u_var1 = 
    0x9c7a, (u_var1 + 2) != -0x8000)) {
if (( * 0x821 & 1) != 0) {
FUN_2b26_0e3b(); * (undefined * )0x67f1 = 0; if (0xd2c == 1) {
FUN_1862_0c6d();
}
if ((0x9c7c | 0x9c7a) == 0) {
if (0x7faa == 0x140) {
FUN_1f51_0848();
}
else {
FUN_1f51_03da();
}
}
else {
uVar3 = 0x9c7c; for (piVar2 = * (int * * )0x9c7a; piVar2[1] != - 0x8000; piVar2 = piVar2 + 4) {
local_1e = * piVar2; local_1c = piVar2[1]; local_1a = piVar2[2] + 1; local_18 = piVar2[3] + 1;
if (local_1e < local_2e) {
local_1e = local_2e;
}
if (local_1c < local_2c) {
local_1c = local_2c;
}
if (local_2a < local_1a) {
local_1a = local_2a;
}
if (local_28 < local_18) {
local_18 = local_28;
}
if ((local_1e < local_1a) & & (local_1c < local_18)) {
if (0x7faa == 0x140) {
FUN_1f51_0848();
}
else {
FUN_1f51_03da();
}
}
}
}
FUN_200c_0153(); if (0x1434 == 0) {
FUN_1862_1b4e();
}
}
FUN_1f51_0024();
}
    return;
}


/*
Unable to decompile 'FUN_1862_0c6d'
Cause: Exception while decompiling 1862:0c6d: process: timeout

*/


fn fun_1862_0e67()

{
    fun_3444_02c6(0x39d9);
    fun_1f51_0016(0x3444);
    fun_1862_2340(0x1f51);
    fun_1862_0aa7(0x1862);
    FUN_1862_2140(0x1862);
    fun_1862_00db(0x1862);
    return;
}


fn fun_1862_0e93()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((*0x821 & 1) == 0) {
        FUN_1862_0949(0x3444);
    } else {
        fun_1862_0268(0x3444, 0);
        if (0x7faa == 0x140) {
            switchD_1000: da72::caseD_6(
            0x1862, 0);
        }
        FUN_1862_1686(0x1862);
        fun_1f51_0016(0x1862);
        fun_1862_1975(0x1f51);
    }
    return;
}


fn fun_1862_0eeb()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0x1438 == 0) {
        FUN_1e08_0884(0x3444);
        if (0x1436 != 0) {
            fun_1e08_095b(0x1e08);
        }
        0x1438 = 0;
    }
    return;
}


fn fun_1862_0f22()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_0f35()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_0f80()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_0fbf()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_1082()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_10c1()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_1185()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_1249()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_1288()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_13a3()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_145e()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_1575()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_1862_1624()

{
    fun_3444_02c6(0x39d9);
    return;
}


// WARNING: Instruction at (ram,0x0001834a) overlaps instruction at (ram,0x00018348)
//
// WARNING: Control flow encountered bad instruction data
// WARNING: Unable to track spacebase fully for stack
// WARNING: Could not reconcile some variable overlaps

uint FUN_1862_1686(param_1: u16,char *param_2,undefined4 param_3)

{
let puVar1: * mut u16; let puVar2: * mut u16; let pbVar3: * mut u8; let puVar4: * mut u16; let pcVar5: String; let bVar6: u8; code ** ppcVar7; code * pcVar8; undefined uVar9;
undefined uVar10; undefined uVar11; undefined uVar12; char cVar13; undefined uVar14; undefined uVar15; undefined uVar16; undefined uVar17; char cVar18; let uVar19: u16; undefined * puVar20; let iVar21: i16; let uVar22: u16; let uVar23: u16; let uVar24: u16; let uVar25: u16; let in_CX: i16; undefined * puVar26;
let extraout_DX: u16; let extraout_DX_00: u16;
let extraout_DX_01: u16; let iVar27: i16;
let in_BX: u16; let iVar28: i16;
let pbVar29: * mut u8; undefined * unaff_SI; let unaff_DI: * mut u16; let puVar30: * mut u16; let puVar31: * mut u16; let uVar32: u16; let uVar33: u16; let piVar34: * mut u16; let unaff_SS: u16; let unaff_DS: u16; let lVar35: i32; let lVar36: i32; ulong uVar37; let piVar38: * mut u16; let uVar39: u32; let uStackY598: u16; undefined * puStackY594; let uStackY592: u16; let iStackY586: i16; let iStackY584: i16; undefined *puStackY582; let piStackY580: * mut u16; let uStackY576: u16; let iStackY574: i16; let iStackY572: i16; let iStackY570: i16; let iStackY568: i16; let uStackY566: u16; let    uStackY564: u16; int aiStackY562 [216];
let uStackY130: u16; let uStackY128: u16;
let uStackY126: u32; let uStackY122: u16;
let uStackY120: u16; let uStackY118: u16;
let uStackY116: u16; let uStackY114: u16;
let uStackY112: u16; let iStackY110: i16;
let iStackY108: i16; let iStackY106: i16;
let uStackY104: u16; let iStackY102: i16;
let iStackY100: i16; let uStackY98: u32;
let iStackY94: i16; let iStackY92: i16;
let uStackY90: u16; let uStackY88: u16;
let uStackY86: u16; let uStackY84: u16;
let uStackY82: u32; let uStackY78: u16;
let uStackY76: u16; let iStackY74: i16;
let iStackY72: i16; let iStackY70: i16;
let iStackY68: i16; let uStackY66: u16;
let iStackY64: i16; let iStackY62: i16;
let uStackY60: u32; let uStackY56: u16;
let iStackY54: i16; undefined * puStackY52; let iStackY50: i16; int aiStackY48 [4];
let iStackY40: i16; let uStackY38: u32;
let uStackY34: u32; let uStackY30: u32;
let uStackY26: u32; let local_14: u32;
let local_10: u8; char cStackY15; let local_e: u8; char cStackY13; let bStackY12: u8; char cStackY11; let uVar40: u16; let iVar41: i16;

FUN_3444_02c6(0x39d9); uVar32 = extraout_DX_01; puVar26 = unaff_SI; if ((* 0x9c65 & 1) == 0) {
if (0xabe == 1) {
in_CX = CONCAT11((in_CX >> 8), 4); uVar39 = FUN_3444_24dc();
uVar32 = (undefined2)(uVar39 >> 0x10); iVar41 = uVar39; if (7 < iVar41) {
iVar41 = 8;
}
}
else {
iVar41 = 8;
}
}
else {
iVar41 = 0;
}
uVar12 = cStackY11; uVar11 = bStackY12; uVar17 = cStackY13; uVar15 = local_e; uVar22 = 0xc518;
uVar23 = 0xd2c; if (0xb < uVar23) {
return uVar23;
}
uVar24 = uVar23 * 2; uVar33 = 0x1000;
cVar18 = in_BX; local_e = unaff_DS; uVar9 = local_e; cStackY13 = (unaff_DS >> 8); uVar10 = cStackY13; bStackY12 = unaff_SS; bVar6 = bStackY12; cStackY11 = (unaff_SS >> 8); cVar13 = cStackY11; switch(uVar23) {
case 0:
// WARNING: Bad instruction - Truncating control flow here
halt_baddata(); case 1:
uVar39 = * ff0xc5a1; uVar32 = (undefined2)(uVar39 >> 0x10); iVar28 = uVar39; iVar41 = in_BX + 0x2b26 + (uVar23 < 0); (iVar28 + - 2) = uVar32; puVar4 = unaff_DI;
* puVar4 = * puVar4; 0xff30 = iVar41 / 0x138a; 0xff32 = ((0x15c7 - 0x15c3) + 1) / 0x1388 + 1; 0xcbde = iVar41 / 0x7fd6; (iVar28 + - 4) = unaff_DS; (iVar28 + - 6) = 0xcabe; (iVar28 + - 8) = 0x19; (iVar28 + - 10) = 0x1000;
(iVar28 + - 0xc) = 0x5790; uVar23 = FUN_2b26_0e3b(); return uVar23; case 2: uVar32 = (uVar24 + 2); local_e = uVar32; cStackY13 = (uVar32 >> 8); iVar41 = 0; loop {
* (undefined * )(iVar41 + 0x3a) = * (undefined * )(in_BX + iVar41); iVar41 = iVar41 + 1;
} while (iVar41 < 0x400); bStackY12 = 0; cStackY11 = 0x10; local_e = 0x8c; cStackY13 = 0x2b; local_10 = cVar18; cStackY15 = (in_BX >> 8); FUN_168b_07a9();
bStackY12 = 0x8b; cStackY11 = 0x16; local_e = 0x99; cStackY13 = 0x2b; uVar23 = FUN_168b_07b1(); return uVar23; case 3: pcVar5 = (char * )(unaff_DI + ((uVar24 & 0xff | ((uVar24 >> 8) * '\x02') << 8) - 0x182)); * pcVar5 = * pcVar5 + '\x01';
pcVar5 = & stack0xfffe + unaff_DI; * pcVar5 = * pcVar5 + cVar18; local_e = uVar15; cStackY13 = uVar17; bStackY12 = uVar11; cStackY11 = uVar12; break; case 4: pcVar8 = swi(4); if (uVar23 < 0 != uVar24 < 0) {
( * pcVar8)();
}
uVar23 = FUN_1f51_01e5(); * ff0x67f1 = 1; pcVar5 = 0x67e8; * pcVar5 = * pcVar5 + '\x01'; puVar26 = puVar26 + - 1; pbVar29 = & stack0x003e; puVar30 = unaff_DI + 0x1000; if (puVar30 < 0) {
puVar30 = unaff_DI + - 0x2fd3;
}
puVar31 = puVar30 + 0x1000; if (puVar31 < 0) {
puVar31 = puVar30 + - 0x2fd3;
}
puVar30 = puVar31 + 0x1000; if (puVar30 < 0) {
puVar30 = puVar31 + - 0x2fd3;
}
puVar31 = puVar30 + 0x1000; if (puVar31 < 0) {
puVar31 = puVar30 + - 0x2fd3;
}
puVar30 = puVar31 + 0x1000; if (puVar30 < 0) {
puVar30 = puVar31 + - 0x2fd3;
}
puVar31 = puVar30 + 0x1000; if (puVar31 < 0) {
puVar31 = puVar30 + - 0x2fd3;
}
if (0 < puVar26) {
loop {
bVar6 = * pbVar29; uVar23 = uVar23 & 0xff00 | bVar6; if ((bVar6 & 0x80) != 0) {
ppcVar7 = (code * * )0x67e9; uVar23 = ( * * ppcVar7)(); *(undefined * )0x67f1 = 1;
}
pcVar5 = (char * )0x67e8; * pcVar5 = * pcVar5 + '\x01'; pbVar29 = pbVar29 + 0x40; puVar30 = puVar31 + 0x1000; if (puVar30 < 0) {
puVar30 = puVar31 + - 0x2fd3;
}
puVar31 = puVar30 + 0x1000; if (puVar31 < 0) {
puVar31 = puVar30 + - 0x2fd3;
}
puVar30 = puVar31 + 0x1000; if (puVar30 < 0) {
puVar30 = puVar31 + - 0x2fd3;
}
puVar31 = puVar30 + 0x1000; if (puVar31 < 0) {
puVar31 = puVar30 + - 0x2fd3;
}
puVar30 = puVar31 + 0x1000; if (puVar30 < 0) {
puVar30 = puVar31 + - 0x2fd3;
}
puVar31 = puVar30 + 0x1000; if (puVar31 < 0) {
puVar31 = puVar30 + - 0x2fd3;
}
puVar26 = puVar26 + - 1;
} while (puVar26 != (undefined * )0x0);
}
if (((unaff_SI & 0xff00) != 0) & & (bVar6 = * pbVar29, uVar23 = uVar23 & 0xff00 | bVar6, (bVar6 & 0x80) != 0)) {
uVar23 = FUN_1f51_01e5(); * ff0x67f1 = 1;
}
return uVar23; case 5: out(uVar32,in_BX); unaff_DS = ( * (undefined4 *)0x6c7 >> 0x10); if (in_CX == 2 || in_BX == 0x68e) {
0x67e2 = 0xa0;
}
else {
in_BX = in_BX & 0xff00 | ((cVar18 + ';') - (in_BX < 0x68e));
0x67ed = 0; 0x67ef = 0x3d49; 0x67e0 = 4; 0x67e2 = 0xa0;
}
if (((0x9c65 != '\x02') & & (0x9c65 != '\x04')) & & (0x9c65 != '\x06'))
{
uVar23 = SEXT12(0x9c65); if (uVar23 == 0) {
local_10 = 0x1c; cStackY15 = 0; in_BX = uVar23;
}
else {
in_BX = uVar23 - 3; if ((in_BX == 0) || (in_BX = uVar23 - 5, in_BX == 0)) {
local_10 = 10; cStackY15 = 0;
}
else {
in_BX = uVar23 - 7; if (in_BX == 0) {
local_10 = 0xc; cStackY15 = 0;
}
else {
in_BX = uVar23 - 8; if (in_BX == 0) {
local_10 = 0x24; cStackY15 = 0;
}
}
}
}
iVar41 = 0x1cfb; uVar32 = 0x5b2d; for (iVar21 = 0; iVar21 < 0xb; iVar21 = iVar21 + 1) {
uVar40 = 0xc522; (iVar21 * 4 + 0x1e87) = iVar41; (iVar21 * 4 + 0x1e89) = uVar32; bStackY12 = uVar33; cStackY11 = (uVar33 >> 8); local_e = 0x8e; cStackY13 = 0x8e; piVar38 = FUN_3074_00d3(); bStackY12 = ( * piVar38 + 3);
cStackY11 = (( * piVar38 + 3) >> 8); local_e = uVar32; cStackY13 = (uVar32 >> 8); local_14._2_2_ = 0x3074; local_14._0_2_ = 0x8eb3; FUN_3444_1f26(); iVar41 = 2; bStackY12 = 0x44; cStackY11 = 0x34; uVar33 = 0x3074; local_e = 0xc5; cStackY13 = 0x8e; FUN_3074_01d4(); in_BX = CONCAT11(cStackY15, local_10);
iVar41 = iVar41 + in_BX;
}
}
if (0x9c65 != '\x06') goto LAB_1862_093e; bStackY12 = uVar33; cStackY11 = (uVar33 >> 8); local_e = 0xe7; cStackY13 = 0x8e;
uVar39 = FUN_3074_00d3(); local_e = uVar39;
cStackY13 = (uVar39 >> 8); bStackY12 = (uVar39 >> 0x10); cStackY11 = (uVar39 >> 0x18); iVar41 = 0; break; case 6: iStackY574 = ((in_BX - uStackY56) >> 1) * in_CX + (uVar24 + 0xcd50); if (iStackY574 < 0) {
iStackY574 = 0;
}
iStackY572 = 0x7fd4 + 1; iStackY570 = 0x7fd6 * uStackY56 + iStackY574 + 0xf; uVar32 = 0xc888;
if (0x9c6e < iStackY570) {
puStackY52 = (undefined * )(iStackY570 - 0x9c6e); iStackY570 = - (puStackY52 - iStackY570); iStackY574 = iStackY574 - puStackY52;
}
iVar41 = 0x7fd4 + 5; if (iStackY572 < iVar41) {
iStackY572 = iVar41;
}
iStackY568 = 0x7fd4 * puVar26 + iStackY572 + 5;
iVar41 = 0x9c70; if (iVar41 + - 5 < iStackY568) {
puStackY52 = (undefined * )((iStackY568 - iVar41) + 5); iStackY572 = iStackY572 - puStackY52; iStackY568 = iStackY568 - puStackY52;
}
bStackY12 = 0; cStackY11 = 0x10; local_e = 0x82; cStackY13 = 0xd2; uStackY38 = FUN_27ac_078d(); aiStackY48[1] = iStackY574; aiStackY48[2] = iStackY572; aiStackY48[3] = iStackY570; iStackY40 = iStackY568; iVar41 = 0x7fd6; iStackY574 = iStackY574 + iVar41; iStackY570 = iStackY570 - iVar41; iStackY572 = iStackY572 + 3; iStackY568 = iStackY568 + - 3; bStackY12 = 0xb5;
cStackY11 = 0xd2; FUN_1ba9_0e19(); bStackY12 = & iStackY574; cStackY11 = ( & iStackY574 >> 8); local_e = 0xac; cStackY13 = 0x27; local_10 = 0xc5; cStackY15 = 0xd2; FUN_27ac_074d(); bStackY12 = 0xcf; cStackY11 = 0xd2; FUN_1ba9_0e19(); bStackY12 = & iStackY574;
cStackY11 = ( & iStackY574 >> 8);
local_e = 0xac; cStackY13 = 0x27; local_10 = 0xdf; cStackY15 = 0xd2; FUN_27ac_074d();
bStackY12 = 0xea; cStackY11 = 0xd2; FUN_1ba9_0e19(); aiStackY48[0] = iStackY574; iStackY50 = iStackY572; if (iStackY586 == 0) {
uVar32 = 0xa3e3;
}
else {
uVar32 = 0xa3dc;
}
bStackY12 = uVar32; cStackY11 = (uVar32 >> 8); local_10 = & uStackY34; cStackY15 = ( & uStackY34 >> 8); local_14._2_2_ = 0x27ac; piVar34 = 0x3444; local_14._0_2_ = 0xd31c; local_e = bVar6; cStackY13 = cVar13; FUN_3444_1aca(); piStackY580 = aiStackY562;
for (puStackY52 = (undefined * )0x0; uVar32 = (undefined2)(param_3 >> 0x10),
puStackY52 < puVar26; puStackY52 = (undefined * )(puStackY52 + 1)) {
uVar39 = * ff(puStackY52 * 4 + param_3); bStackY12 = unaff_SS; cStackY11 = (unaff_SS >> 8); if ((uVar39 + 1) == '-') {
local_e = (undefined * )(piStackY580 + 1); cStackY13 = ((undefined * )(piStackY580 + 1) >> 8); local_10 = piVar34; cStackY15 = (piVar34 >> 8); local_14._2_2_ = 0xd41d; FUN_3444_1f84(); * (undefined * )(piStackY580 + uStackY56) = 0; * (undefined * )(piStackY580 + (uStackY56 - 1)) = 0x20; * (undefined * )piStackY580 = *(undefined * )(piStackY580 + (uStackY56 - 1));
}
else {
if (iStackY586 == 0) {
if ( * param_2 - puStackY52 == 1) {
bStackY12 = 0x10;
}
else {
bStackY12 = 0x20;
}
cStackY11 = 0; local_10 = & uStackY34; cStackY15 = ( & uStackY34 >> 8); local_14._0_2_ = piStackY580; uStackY26._2_2_ = 0xd399; local_e = bVar6; cStackY13 = cVar13; FUN_3444_1aca();
}
else {
local_e = & uStackY34; cStackY13 = ( & uStackY34 >> 8); local_14._2_2_ = piStackY580; local_14._0_2_ = piVar34; local_10 = bStackY12; cStackY15 = cStackY11; bStackY12 = bVar6; cStackY11 = cVar13; FUN_3444_1aca();
}
}
bStackY12 = iStackY50; cStackY11 = (iStackY50 >> 8); local_e = aiStackY48[0];
cStackY13 = (aiStackY48[0] >> 8); local_10 = 0x44; cStackY15 = '4';
piVar34 = 0x27ac; local_14._2_2_ = 0xd3af;
FUN_27ac_0508(); * (undefined * )(piStackY580 + uStackY56) = 0; piStackY580 = (piStackY580 + uStackY56 + 1); if ( &iStackY62 < piStackY580) {
bStackY12 = 0xac; cStackY11 = 0x27; local_e = 0xd9; cStackY13 = 0xd3;
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
iStackY50 = iStackY50 + 0x7fd4;
}
FUN_1ba9_0e42(); iVar41 = FUN_1ba9_10aa();
if (iVar41 == 0) {
iStackY54 = iVar41;
}
puStackY52 = (undefined * )0xffff;
// LAB_1ba9_19ca: if (iStackY54 != 0) {
iVar41 = FUN_1ba9_10aa(); if (iVar41 == 0) goto LAB_1ba9_1cbc;
}
iVar41 = FUN_1ba9_10aa(); if ((iVar41 != 0) & & (iStackY54 == 0)) {
iStackY54 = 1;
}
iVar41 = FUN_2692_03c2(); if (iVar41 != 0) {
bStackY12 = 0x92; cStackY11 = '&'; local_e = 0x9d; cStackY13 = - 0x2c; FUN_2692_03c6(); if ((cStackY11 == - 2) && (bStackY12 != 0xa3da)) {
bStackY12 = local_10; cStackY11 = cStackY15; local_14._2_2_ = 0x2692; piVar34 = 0x2692; local_14._0_2_ = 0xd4c4; FUN_2692_03a7();
// LAB_1ba9_1cbc:
iVar41 = FUN_1ba9_10aa(); if ((iVar41 == 0) & & (0xa3da != - 1)) {
if (uStackY60._2_2_ != (undefined * )0xffff) {
bStackY12 = 0; cStackY11 = '\0'; local_e = (uStackY60._2_2_ + (0xa3da + - 0x30) * 0x10); cStackY13 = ((uStackY60._2_2_ + (0xa3da + - 0x30) * 0x10) >> 8); local_10 = piVar34; cStackY15 = (piVar34 >> 8);
local_14._2_2_ = 0xd777; FUN_2692_03a7();
}
uStackY576 = 1;
}
if (uStackY60._2_2_ != (undefined * )0xffff) {
* param_2 = uStackY60._2_1_ + '\x01';
}
FUN_1ba9_0e5d(); FUN_2692_0a79(); local_e = (aiStackY48 + 1); cStackY13 = ((aiStackY48 + 1) >> 8); local_10 = 0x92; cStackY15 = 0x26; local_14._2_2_ = 0xd7aa; bStackY12 = bVar6; cStackY11 = cVar13; FUN_27ac_0824(); 0x9c7a = uStackY566; 0x9c7c = uStackY564; return uStackY576;
}
}
if (iStackY54 != 0) goto LAB_1ba9_1a43; piVar34 = 0x2a25; iVar41 = FUN_2a25_003c(); if (iVar41 != 0) {
piVar34 = 0x2a25; uStackY592 = FUN_2a25_00b4();
if (((uStackY592 & 0x800) == 0) & & (( * (uStackY592 + 0xb8f1) & 2) != 0)) {
uStackY592 = uStackY592 - 0x20;
}
puStackY52 = uStackY60._2_2_; loop {
if ((uStackY592 == 10) || (uStackY592 == 0xd)) goto LAB_1ba9_1cbc; if (uStackY592 == 0x1b) {
// LAB_1ba9_1b5b:
piVar34 = 0x2a25; uStackY60._2_2_ = (undefined * )0xffff; goto LAB_1ba9_1cbc;
}
if (uStackY592 == 0x20) goto LAB_1ba9_1cbc; if (uStackY592 == 0x2b) {
// LAB_1ba9_1b63:
puStackY52 = (undefined * )((puStackY52 + 1) % puVar26);
}
else {
if ((uStackY592 != 0x2d) & & (uStackY592 != 0x848)) {
if (uStackY592 == 0x850) goto LAB_1ba9_1b63; if ((0 < (uStackY592 - 0x851)) & & (uStackY592 == 0x853 || (uStackY592 - 0x852) < 1)) goto LAB_1ba9_1cbc;
if ((uStackY592 & 0x800) != 0) {
bStackY12 = 0xe1; cStackY11 = 0xd5; FUN_2a25_00a3(); bStackY12 = 0xea; cStackY11 = - 0x2b; FUN_2a25_00a3(); goto LAB_1ba9_1b5b;
}
puStackY594 = uStackY60._2_2_; if (( *(uStackY592 + 0xb8f1) & 3) != 0) goto LAB_1ba9_1c61; goto LAB_1ba9_1bc6;
}
puVar20 = puVar26; if (0 < puStackY52) {
puVar20 = puStackY52;
}
puStackY52 = puVar20 + - 1;
}
uVar39 = * ff(puStackY52 * 4 + param_3); puVar20 = puStackY52;
} while ((uVar39 + 1) == '-');
// LAB_1ba9_1b99:
puStackY52 = puVar20; bStackY12 = 0x25; cStackY11 = '*'; piVar34 = 0x2692; local_e = 0x54; cStackY13 = - 0x2a; FUN_2692_09f6();
}
goto LAB_1ba9_1bc6; case 7: if (((in_BX & 0x3f00) == 0) & & (((iVar41 = (in_BX & 0xe0) >> 5, iVar41 != 0 || ((in_BX & 0x8000) != 0)) & &
(bVar6 = * (((param_3 & 0xfff1) >> 1) + iVar41 + 0x814), bVar6 != 0)))) {
if ((in_BX & 0x8000) == 0) {
if (bVar6 < (DAT_616d_0a84 & 7)) {
return 0;
}
}
else {
if (bVar6 < = - ((in_BX & 0x1f) - DAT_616d_0a8e)) {
return 0;
}
}
bVar6 = * ((param_3 >> 2) + 0x7d4); pbVar3 = (( * (CONCAT11(uVar12, uVar11) + - 0x40f8) >> 2) + 0x7d4); if (* pbVar3 < bVar6 || * pbVar3 == bVar6) {
* (undefined * )(CONCAT11(uVar12,uVar11) + - 0x40f8) = param_3; return 1;
}
}
return 0; case 8: loop {
bStackY12 = 0xd2; cStackY11 = 0x87; FUN_2b26_0edc(); loop {
while ( true ) {
iVar41 = iVar41 + 1; if (0xb < iVar41) {
FUN_2b26_0363(); bStackY12 = 0x3f; cStackY11 = 0x88; uVar23 = FUN_2b26_0e73(); if (( * 0x821 & 1) != 0) {
FUN_294b_02f2(); FUN_1862_2440(); FUN_2b26_0008(); FUN_2c63_058f(); FUN_1862_2381();
uVar23 = FUN_294b_03be();
}
return uVar23;
}
if ((param_2 < = iVar41) & & (iVar41 < param_2 + 3)) break;
iVar41 = 0; bStackY12 = 0xee; cStackY11 = 0x87; FUN_2b26_0edc(); if (iVar41 % 3 == 0) {
iVar41 = 0; bStackY12 = 0x1a; cStackY11 = 0x88; FUN_2b26_0edc();
}
}
iVar41 = 1; bStackY12 = 0xa6; cStackY11 = 0x87; FUN_2b26_0edc();
} while (iVar41 % 3 != 0); iVar41 = 1;
} while ( true ); case 9: loop {
uVar32 = 0x1e08; bStackY12 = 0xee; cStackY11 = 0xb6; FUN_1e08_0884(); while ( true ) {
uVar33 = 0xc530; if (0xace < = 0xad0) {
bStackY12 = & uStackY114; cStackY11 = ( & uStackY114 >> 8); local_e = uVar32; cStackY13 = (uVar32 >> 8); local_10 = 0xfb; cStackY15 = 0xb6; FUN_1862_0004();
bStackY12 = 2; cStackY11 = 0xb7; FUN_1862_2140(); bStackY12 = 7; cStackY11 = 0xb7;
FUN_294b_03be(); bStackY12 = 0x89; cStackY11 = 0xba; uVar23 = FUN_1862_1975(); return uVar23;
}
piVar38 = 0xad0; * piVar38 = * piVar38 + 1; if (0x992c != 1) break;
uVar32 = 0x1862; bStackY12 = 0xe1; cStackY11 = 0xb6; FUN_1862_1975();
}
bStackY12 = 0xe9; cStackY11 = 0xb6; FUN_1862_1686();
} while ( true ); case 10: bStackY12 = 0xb; cStackY11 = 0; FUN_3444_02c6(0x1000); bStackY12 = unaff_SI; cStackY11 = (unaff_SI >> 8); * (undefined * )0x6b4 = 1; iVar41 = 0; uVar32 = 0x3444; loop {
uVar33 = uVar32; if (((iVar41 * 2 + 0x694) != 0) & & (uVar40 = 0xc106, (iVar41 + 0x684) == '\0')) {
* (undefined * )(iVar41 + 0x684) = 1; local_10 = 0x6a; cStackY15 = 0; uVar33 = 0xc108; local_14._2_2_ = (iVar41 * 4 + 0x646); local_14._0_2_ = (iVar41 * 4 + 0x644); uVar33 = 0x2199; uStackY26._0_2_ = 0x5e; uStackY26._2_2_ = uVar32; local_e = uVar9; cStackY13 = uVar10; FUN_2199_0002();
}
iVar41 = iVar41 + 1; uVar32 = uVar33;
} while (iVar41 < 0xf); 0x38 = 0; 0x36 = 0; 0x34 = 0; 0x32 = 0; 0x2e = 0; 0x2c = 0; iVar41 = 2; loop {
iVar21 = 0x34; uVar32 = 0xc116; piVar38 = (iVar41 * 2 + 0x624); if (* piVar38 != iVar21 & & iVar21 < = *piVar38) {
0x34 = (iVar41 * 2 + 0x624);
0x2c = iVar41;
}
iVar41 = iVar41 + 1;
} while (iVar41 < 0x10); iVar41 = 2; loop {
iVar21 = 0x36; piVar38 = (iVar41 * 2 + 0x624); if (( * piVar38 != iVar21 & & iVar21 < = * piVar38) && (0x2c != iVar41)) {
0x36 = (iVar41 * 2 + 0x624);
0x2e = iVar41;
}
iVar41 = iVar41 + 1;
} while (iVar41 < 0x10); iVar41 = 2; loop {
iVar21 = 0x38; piVar38 = (iVar41 * 2 + 0x624); if ((( * piVar38 != iVar21 & & iVar21 < = * piVar38) & & (0x2c != iVar41)) & &
(0x2e != iVar41)) {
0x38 = (iVar41 * 2 + 0x624);
0x32 = iVar41;
}
iVar41 = iVar41 + 1;
} while (iVar41 < 0x10); 0x8 = (0x8 + 0x2) / 2; 0xa = (0xa + 0x4) / 2; iVar41 = (0x6 + 0x0) / 2; 0x6 = iVar41; cStackY15 = (iVar41 >> 8);
local_e = cStackY15 >> 7; cStackY13 = cStackY15 >> 0xf; local_10 = iVar41; local_14._2_2_ = 0x1; local_14._0_2_ = uVar33;
FUN_1d9a_0002(); uVar32 = 0x8; cStackY15 = (uVar32 >> 8); local_e = cStackY15 >> 7; cStackY13 = cStackY15 >> 0xf; local_10 = uVar32; local_14._2_2_ = 0x2; local_14._0_2_ = 0x1d9a; FUN_1d9a_0002(); uVar32 = 0xa; cStackY15 = (uVar32 >> 8); local_e = cStackY15 >> 7; cStackY13 = cStackY15 >> 0xf; local_10 = uVar32; local_14._2_2_ = 0x3; local_14._0_2_ = 0x1d9a; FUN_1d9a_0002(); 0x0 = 0; 0x2 = 0; 0x4 = 0;
uVar32 = 0xc124; 0x622 = 0; 0x620 = 0; iVar41 = 2; loop {
uVar23 = (iVar41 * 2 + 0x694);
uVar32 = 0xc124; puVar1 = 0x620; uVar22 = * puVar1; * puVar1 = * puVar1 + uVar23; piVar38 = 0x622; * piVar38 = * piVar38 + (uVar23 >> 0xf) + CARRY2(uVar22, uVar23); iVar41 = iVar41 + 1;
} while (iVar41 < 0xf); uVar33 = 0x622; local_e = uVar33; cStackY13 = (uVar33 >> 8); uVar32 = 0x620; local_10 = uVar32; cStackY15 = (uVar32 >> 8); local_14._2_2_ = 0xb; local_14._0_2_ = 0x1d9a; FUN_1d9a_0002(); uVar32 = 0xc126; local_e = 0x9a; cStackY13 = 0x1d; local_10 = 0x70; cStackY15 = 2; FUN_3444_24d0(); local_e = 0; cStackY13 = 0; local_10 = 0x11; cStackY15 = 0; local_14._2_2_ = 0x61a; uStackY26._2_2_ = 0x28c; local_14._0_2_ = extraout_DX; FUN_3444_23fe(); uVar33 = 0; uVar23 = 0x696; uStackY26._2_2_ = uVar23 >> 0xf; uVar32 = 0xc126;
iVar41 = 0x614; uVar22 = iVar41 * 2;
uStackY26._0_2_ = (0x616 << 1 | (iVar41 < 0)) + uStackY26._2_2_ + CARRY2(uVar22, uVar23) + 0x60a + CARRY2(uVar22 + uVar23, 0x608); uStackY30._0_2_ = 0x3444; uStackY34._2_2_ = 0x2d4; uStackY30._2_2_ = extraout_DX_00; lVar35 = FUN_3444_23fe(); lVar35 = lVar35 + CONCAT22(uStackY30._2_2_, uStackY30) + CONCAT22(local_14,uVar33); uVar23 = lVar35; uVar32 = 0xc126; puVar1 = 0x610; uStackY34._2_2_ = uVar23 + * puVar1; uStackY30._0_2_ = (lVar35 >> 0x10) + 0x612 + CARRY2(uVar23, * puVar1); uVar32 = 0xc128; 0x5fc = uStackY34._2_2_; 0x5fe = uStackY30; uStackY34._0_2_ = 10; uStackY38._2_2_ = 0x3444; uStackY38._0_2_ = 0x306; FUN_1d9a_0002(); uVar32 = 0xc12a; uStackY30._0_2_ = 0x5fa; uStackY34._2_2_ = 0x5f8; uStackY34._0_2_ = 6; uStackY38._2_2_ = 0x1d9a; uStackY38._0_2_ = 800; FUN_1d9a_0002(); uVar32 = 0xc12c; uStackY30._0_2_ = 0x5f6; uStackY34._2_2_ = 0x5f4; uStackY34._0_2_ = 4; uStackY38._2_2_ = 0x1d9a; uStackY38._0_2_ = 0x33a; FUN_1d9a_0002(); uVar32 = 0xc12e; uStackY30._0_2_ = 0x5f2; uStackY34._2_2_ = 0x5f0; uStackY34._0_2_ = 7; uStackY38._2_2_ = 0x1d9a; uStackY38._0_2_ = 0x354; FUN_1d9a_0002(); uVar32 = 0xc130; uStackY30._0_2_ = 0x5ee; uStackY34._2_2_ = 0x5ec; uStackY34._0_2_ = 0xc; uStackY38._2_2_ = 0x1d9a; uStackY38._0_2_ = 0x36e; FUN_1d9a_0002(); uVar32 = 0xc132; uStackY30._0_2_ = 0x5ea; uStackY34._2_2_ = 0x5e8; uStackY34._0_2_ = 0xd; uStackY38._2_2_ = 0x1d9a; uStackY38._0_2_ = 0x388; FUN_1d9a_0002(); uVar32 = 0xc134; uStackY30._0_2_ = 0x5e6; uStackY34._2_2_ = 0x5e4; uStackY34._0_2_ = 9; uStackY38._2_2_ = 0x1d9a; uStackY38._0_2_ = 0x3a2; FUN_1d9a_0002(); uVar32 = 0xc136; uStackY30._0_2_ = 0x5e2; uStackY34._2_2_ = 0x5e0; uStackY34._0_2_ = 0xe; uStackY38._2_2_ = 0x1d9a; uVar33 = 0x1d9a; uStackY38._0_2_ = 0x3bc; FUN_1d9a_0002(); uVar32 = 0xc138; iVar41 = 0x5dc; iVar21 = 0x5de; uVar23 = iVar21 << 1 | (iVar41 < 0); iVar27 = 0x5ce;
if ((iVar27 < uVar23) || ((iVar27 < = uVar23 & & (0x5cc <= (iVar41 << 1))))) {
uStackY30._0_2_ = 0; uStackY34._2_2_ = 2; uStackY34._0_2_ = 0x5ce; uStackY38._2_2_ = 0x5cc; uStackY38._0_2_ = 0x1d9a;
uVar33 = 0x3444; iStackY40 = 0x401; uVar39 = FUN_3444_2364(); local_10 = uVar39; cStackY15 = (uVar39 >> 8); local_e = (uVar39 >> 0x10); cStackY13 = (uVar39 >> 0x18);
}
else {
local_10 = iVar41; cStackY15 = (iVar41 >> 8); local_e = iVar21; cStackY13 = (iVar21 >> 8);
}
uStackY30._0_2_ = 0; uStackY34._2_2_ = 100; uVar32 = 0xc142; uStackY34._0_2_ = 0x5b6; uStackY38._2_2_ = 0x5b4; iStackY40 = 0x420; uStackY38._0_2_ = uVar33; uVar39 = FUN_3444_23fe(); uVar32 = 0xc138; puVar1 = 0x5c8; uVar23 = * puVar1; * puVar1 = * puVar1 + uVar39; piVar38 = 0x5ca; *piVar38 = * piVar38 + (uVar39 >> 0x10) + CARRY2(uVar23, uVar39); uStackY38._0_2_ = 0; iStackY40 = 0xfa; uVar32 = 0xc142; aiStackY48[3] = 0x5b2;
aiStackY48[2] = 0x5b0; aiStackY48[1] = 0x3444; aiStackY48[0] = 0x447; uStackY30 = FUN_3444_23fe(); aiStackY48[1] = 0; aiStackY48[0] = 0x10; uVar32 = 0xc128; iStackY50 = 0x5fe; puStackY52 = (undefined * )0x5fc; uStackY56 = 0x5a6; iStackY54 = uStackY56 >> 0xf; uStackY60._2_2_ = (undefined * )0x3444; uStackY60._0_2_ = (undefined * )0x476; uStackY60 = FUN_3444_23fe(); iStackY62 = 0x3444; iStackY64 = 0x483; uStackY26 = uStackY60; lVar35 = FUN_3444_2364(); iVar41 = uStackY30 - CONCAT11(cStackY15,local_10); lVar35 = lVar35 + CONCAT22(((uStackY30._2_2_ - CONCAT11(cStackY13, local_e)) - (uStackY30 < CONCAT11(cStackY15,local_10))) * 2 | (iVar41 < 0), iVar41 * 2); uVar24 = lVar35; uVar32 = 0xc124; puVar1 = 0x620;
uVar23 = * puVar1; uVar19 = uVar24 - *puVar1; iVar41 = 0x622; uVar32 = 0xc138;
puVar1 = 0x5cc; uVar22 = * puVar1; *puVar1 = * puVar1 + uVar19; piVar38 = 0x5ce; * piVar38 = * piVar38 + (((lVar35 >> 0x10) - iVar41) - (uVar24 < uVar23)) + CARRY2(uVar22,uVar19); iStackY62 = 0x3444; iStackY64 = 0x4bc; FUN_3444_40e7(); iStackY64 = 0x3444; uStackY66 = 0x4c5; FUN_3444_4472(); iStackY64 = 0x3444; uStackY66 = 0x4ca; uVar39 = FUN_3444_42c7(); uVar32 = 0xc138; 0x5d0 = uVar39; 0x5d2 = (uVar39 >> 0x10); uVar22 = CONCAT11(cStackY15, local_10) * 2; puVar1 = 0x5d4; uVar23 = * puVar1; * puVar1 = * puVar1 + uVar22; piVar38 = 0x5d6;
* piVar38 = * piVar38 + (CONCAT11(cStackY13, local_e) << 1 | (cStackY15 < '\0')) + CARRY2(uVar23, uVar22); iStackY64 = 0; uStackY66 = 2; iStackY68 = 0; iStackY70 = 500; uVar32 = 0xc142; uVar23 = 0x5bc; puVar1 = 0x5b0; iStackY74 = uVar23 - * puVar1; iStackY72 = (0x5be - 0x5b2) - (uVar23 < * puVar1); uStackY76 = 0x3444; uStackY78 = 0x515; lVar35 = FUN_3444_23fe(); uStackY76 = 0; uStackY78 = 0x18; uStackY84 = 0x3444; uStackY86 = 0x52d; uStackY82 = uStackY26; uStackY34 = FUN_3444_2364(); local_14._0_2_ = (lVar35 >> 0x10); uStackY84 = 0; uStackY86 = 8;
uVar32 = 0xc146; uStackY88 = 0x5a4; uStackY90 = 0x5a2; iStackY94 = 0x5a0; iStackY92 = iStackY94 >> 0xf; uStackY98._2_2_ = 0x3444; uStackY98._0_2_ = 0x55c; uStackY98 = FUN_3444_23fe(); local_14._0_2_ = (lVar35 >> 0x10); iStackY100 = 0x3444; iStackY102 = 0x563;
lVar36 = FUN_3444_2364(); local_14._0_2_ = (lVar35 >> 0x10); lVar35 = lVar35 + (lVar36 - uStackY34); uVar23 = lVar35; uVar32 = 0xc124; puVar1 = 0x620; uVar22 = uVar23 + * puVar1; uVar33 = 0xc14a;
puVar2 = 0x43a; iStackY102 = uVar22 + * puVar2; iStackY100 = (lVar35 >> 0x10) + 0x622 + CARRY2(uVar23, * puVar1) +
0x43c + CARRY2(uVar22, * puVar2);
uStackY104 = 0x3444; iStackY106 = 0x592; uVar39 = FUN_3444_2364(); uVar32 = 0xc138; puVar1 = 0x5d8; uVar23 = uVar39 + * puVar1; iVar41 = uVar23 + CONCAT11(cStackY15, local_10);
iVar21 = (uVar39 >> 0x10) + 0x5da + CARRY2(uVar39, * puVar1) + CONCAT11(cStackY13, local_e) + CARRY2(uVar23,CONCAT11(cStackY15, local_10)); bStackY12 = iVar41; cStackY11 = (iVar41 >> 8); if (iVar21 < 0) {
iVar21 = 0; bStackY12 = 0; cStackY11 = 0;
}
uStackY104 = 0; iStackY106 = 2; uVar23 = 0x5d8; iStackY110 = uVar23 + CONCAT11(cStackY11,bStackY12); iStackY108 = 0x5da + iVar21 + CARRY2(uVar23, CONCAT11(cStackY11, bStackY12)); uStackY112 = 0x3444; uStackY114 = 0x5d4; uVar39 = FUN_3444_2364(); uVar32 = 0xc138; 0x5d8 = uVar39; 0x5da = (uVar39 >> 0x10); uVar22 = 0x694 / 5; uVar24 = uVar22 - CONCAT11(cStackY15, local_10); uVar32 = 0xc138; puVar1 = 0x5dc; uVar23 = *puVar1; * puVar1 = * puVar1 + uVar24;
piVar38 = 0x5de; * piVar38 = * piVar38 +
(((uVar22 >> 0xf) - CONCAT11(cStackY13, local_e)) - (uVar22 < CONCAT11(cStackY15, local_10))) + CARRY2(uVar23, uVar24); uStackY112 = 0x3444;
uStackY114 = 0x608; FUN_1000_07e8(); uStackY112 = 0x3444; uStackY114 = 0x60c; FUN_1000_0afb();
0x30 = 0; local_14._2_2_ = 0x0;
bStackY12 = 1; cStackY11 = 0; uStackY112 = 0; iVar41 = 1; loop {
uVar32 = 0xc126; uVar23 = (iVar41 * 4 + 0x600); iVar21 = (iVar41 * 4 + 0x602); uVar22 = CONCAT11(cStackY11,bStackY12); iVar27 = CONCAT11(cStackY11, bStackY12) + uVar23; bStackY12 = iVar27; cStackY11 = (iVar27 >> 8); uStackY112 = uStackY112 + iVar21 + CARRY2(uVar22, uVar23);
if ((local_14._2_2_ >> 0xf <= iVar21) & & ((local_14._2_2_ >> 0xf < iVar21 || (local_14._2_2_ < uVar23)))) {
0x30 = iVar41; local_14._2_2_ = uVar23;
}
iVar41 = iVar41 + 1;
} while (iVar41 < 8); iVar41 = 0; loop {
iVar21 = 3; uVar32 = 0xc14e; loop {
iVar27 = (iVar41 * 5 + iVar21) * 4; uVar33 = (iVar27 + 0x502);
(iVar27 + 0x504) = (iVar27 + 0x500); (iVar27 + 0x506) = uVar33;
iVar21 = iVar21 + - 1;
} while ( - 1 < iVar21); uStackY114 = CONCAT11(cStackY11, bStackY12); uStackY116 = 0; uStackY118 = 100; uVar32 = 0xc126; uStackY34._0_2_ = iVar41 * 4; uStackY120 = (uStackY34 + 0x602); uStackY122 = (uStackY34 + 0x600); uStackY126._2_2_ = 0x3444; uStackY126._0_2_ = 0x6b9; iVar21 = uStackY112; uStackY126 = FUN_3444_23fe(); uStackY128 = 0x3444; uStackY130 = 0x6c0; uVar37 = FUN_3444_2364(); uStackY30._2_2_ = (uVar37 >> 0x10);
uStackY30 = uVar37 & 0xffff0000 | uStackY30 & 0xffff;
uVar32 = 0xc14e; (iVar41 * 0x14 + 0x500) = uVar37; (iVar41 * 0x14 + 0x502) = uStackY30._2_2_; uVar32 = 0xc126;
(uStackY34 + 0x602) = 0; (uStackY34 + 0x600) = 0; uVar32 = 0xc142;
(uStackY34 + 0x5aa) = 0; (uStackY34 + 0x5a8) = 0; iVar41 = iVar41 + 1; uStackY112 = iVar21;
} while (iVar41 < 8); uVar32 = 0xc104; uVar23 = 0x6b2; uVar22 = 0x696; uVar24 = 0x694; uVar19 = uVar23 + uVar22 + uVar24; uVar32 = 0xc124; puVar1 = 0x620; uVar25 = uVar19 + * puVar1; uStackY112 = (uVar23 >> 0xf) + (uVar22 >> 0xf) + CARRY2(uVar23, uVar22) + (uVar24 >> 0xf) + CARRY2(uVar23 + uVar22, uVar24) + 0x622 + CARRY2(uVar19, * puVar1); bStackY12 = uVar25; cStackY11 = (uVar25 >> 8); if ((uStackY112 < 1) & & ((uStackY112 < 0 || (uVar25 < 200)))) {
bStackY12 = 200; cStackY11 = 0; uStackY112 = 0;
}
iVar41 = 0; loop {
iVar21 = 3; uVar32 = 0xc150; loop {
iVar27 = (iVar41 * 5 + iVar21) * 2; (iVar27 + 0x462) = (iVar27 + 0x460); iVar21 = iVar21 + - 1;
} while ( - 1 < iVar21); uStackY114 = CONCAT11(cStackY11, bStackY12); uStackY34._0_2_ = iVar41 * 2; lVar35 = (long)(uStackY34 + 0x694) * 200; uStackY116 = (undefined2)(lVar35 >> 0x10);
uStackY118 = (undefined2)lVar35; uStackY120 = 0x3444; uStackY122 = 0x797; uVar39 = FUN_3444_2364(); uStackY30._2_2_ = (uVar39 >> 0x10); (iVar41 * 10 + 0x460) = uVar39; (uStackY34 + 0x440) = (uStackY34 + 0x624); (uStackY34 + 0x694) = 0; (uStackY34 + 0x624) = 0;
iVar41 = iVar41 + 1;
} while (iVar41 < 0x10); return 0;
case 0xb: * (undefined * )unaff_DI = * unaff_SI; uVar23 = 0xb85b; pcVar5 = unaff_SI + 1 + (uVar24 - 0x48); *pcVar5 = * pcVar5 + uVar23; puVar1 = (& stack0xfffe + (unaff_SI + 1));
* puVar1 = * puVar1 | uVar23; uVar23 = uVar22; code_r0x00018352: bStackY12 = in_BX; cStackY11 = (in_BX >> 8); local_e = uVar33; cStackY13 = (uVar33 >> 8);
local_10 = 0x58; cStackY15 = 0x83; FUN_168b_02da(); loop {
uVar32 = 0xc4fe; piVar38 = 0x7f98; * piVar38 = * piVar38 + (0x7fd6 / '\x02');
if ((iStackY100 != 0) || (0xcc4a != uVar22)) {
if ((uVar22 & 0xf0) == 0) {
iVar41 = 0x7f9a; iVar21 = iVar41 + 0x1388 + - 1; bStackY12 = iVar21; cStackY11 = (iVar21 >> 8); local_14._2_2_ = 0x7f98; iVar21 = local_14._2_2_ + 0x138a;
local_e = iVar21; cStackY13 = (iVar21 >> 8); local_10 = iVar41; cStackY15 = (iVar41 >> 8); local_14._0_2_ = 0x168b; ppcVar7 = (code * * )0xcf74; ( * * ppcVar7)(); bStackY12 = 0x69; cStackY11 = 0x13; local_e = 0x8b; cStackY13 = 0x16; uVar32 = 0x2692; local_10 = 0x35; cStackY15 = 0x84; FUN_2692_00b2();
}
else {
uVar33 = 0x7f9a; bStackY12 = uVar33; cStackY11 = (uVar33 >> 8); uVar32 = 0x7f98; local_e = uVar32; cStackY13 = (uVar32 >> 8); local_10 = 0x8b; cStackY15 = 0x16; local_14._2_2_ = 0x839d; FUN_168b_04c4(); uVar32 = 0xc4fe; piVar38 = 0x7f98;
* piVar38 = * piVar38 + 0x138a; iVar41 = 0x7fd4 + 0x7f9a; bStackY12 = iVar41; cStackY11 = (iVar41 >> 8); local_14._2_2_ = 0x7f98; local_e = (local_14._2_2_ + 1); cStackY13 = ((local_14._2_2_ + 1) >> 8); uVar32 = 0x7f9a; local_10 = uVar32; cStackY15 = (uVar32 >> 8); local_14._0_2_ = 0x168b; ppcVar7 = (code * * )0xcf74;
( * * ppcVar7)(); piVar38 = 0x7f98; * piVar38 = * piVar38 + 2;
local_e = 0x5e; cStackY13 = 0x13; local_10 = 0x8b; cStackY15 = 0x16; uVar32 = 0x168b;
local_14._2_2_ = 0x83f2; bStackY12 = uVar9;
cStackY11 = uVar10; FUN_168b_071f();
}
uVar33 = 0x1209; bStackY12 = uVar32; cStackY11 = (uVar32 >> 8); local_e = 0x40; cStackY13 = - 0x7c; FUN_168b_08fe();
0xcc4a = uVar33;
}
uVar22 = * ((param_2 * 0x40 + param_2._2_2_) * 2 + 0x6bd) & 0x1f; if ((iStackY100 != 0) || (uVar22 != 0xcc3a)) {
if (0xace < uVar22) {
bStackY12 = 0x70; cStackY11 = 0x13; local_e = 10; cStackY13 = 0x12; local_10 = 0x8b;
cStackY15 = 0x16; local_14._2_2_ = 0x848a;
FUN_168b_03d1();
}
else {
bStackY12 = 0x7b; cStackY11 = 0x13; local_e = 10; cStackY13 = 0x12; local_10 = 0x8b;
cStackY15 = 0x16; local_14._2_2_ = 0x84a8;
FUN_168b_03d1();
}
local_e = 0x83; cStackY13 = 0x13; local_10 = 0x8b; cStackY15 = 0x16; local_14._2_2_ = 0x84f3; bStackY12 = uVar9; cStackY11 = uVar10;
FUN_168b_071f(); uVar32 = 0x120a; bStackY12 = 0x8b; cStackY11 = 0x16; local_e = 0xff;
cStackY13 = - 0x7c; FUN_168b_08fe(); 0xcc3a = uVar32; local_14 = CONCAT22(local_14._2_2_, local_14);
}
loop {
loop {
bStackY12 = 10; cStackY11 = 0x85; ppcVar7 = (code * * )0xcf70; ( * *ppcVar7)(); bStackY12 = 0xf; cStackY11 = 0x85; FUN_154b_1375(); bStackY12 = &stack0xfff8; cStackY11 = ( & stack0xfff8 >> 8); local_e = 0x4b; cStackY13 = 0x15;
local_10 = 0x19; cStackY15 = 0x85; FUN_1ba9_1038(); iVar41 = 0x138a; uStackY56 = ((iVar41 / 3 - 0x15c1) + uVar23) / iVar41; iStackY54 = 0x1388; iStackY54 = (puVar26 + (iStackY54 / 3 - 0x15c3)) / iStackY54; if (0xd21 != '\0') {
uStackY56 = uStackY56 << 1; iStackY54 = iStackY54 << 1;
}
uStackY56 = uStackY56 + 0xd2e; iStackY54 = iStackY54 + 0xd30; uVar32 = 0x1ba9; bStackY12 = 0x90;
cStackY11 = 0x85; iVar41 = FUN_1ba9_10aa();
if (iVar41 == 0) {
bStackY12 = 0xa9; cStackY11 = 0x1b; local_e = 0xa0; cStackY13 = 0x85; FUN_2b26_0754();
bStackY12 = 0xa6; cStackY11 = 0x85; uVar23 = FUN_2d56_0eee(); return uVar23;
}
uStackY60._0_2_ = uStackY60._2_2_; loop {
bStackY12 = ( & uStackY34 + 2); cStackY11 = (( & uStackY34 + 2) >> 8); iVar41 = aiStackY48[ffuStackY60 * 2 + 1]; local_e = iVar41; cStackY13 = (iVar41 >> 8); iVar41 = aiStackY48[(undefined * )uStackY60 * 2]; local_10 = iVar41; cStackY15 = (iVar41 >> 8); local_14._2_2_ = 0x1ba9; local_14._0_2_ = 0x78af; iVar41 = FUN_1776_0e4b(); if (iVar41 != 0) break; uStackY60._0_2_ = ff(((undefined * )uStackY60 + 1) % 4);
} while ((undefined * )uStackY60 != uStackY60._2_2_); uStackY60._2_2_ = ffuStackY60; puStackY52 = (undefined * )aiStackY48[(undefined * )uStackY60 * 2];
iStackY62 = aiStackY48[(undefined * )uStackY60 * 2 + 1]; if ((puStackY52 == (undefined * )iStackY68) & & (iStackY62 == iStackY94)) {
iStackY100 = 0;
}
else {
bStackY12 = 0xec; cStackY11 = 0x78; ppcVar7 = (code * * )0xcf70; ( * *ppcVar7)(); bStackY12 = 0xa9; cStackY11 = 0x1b; local_e = 0xf5; cStackY13 = 0x78; FUN_2b26_0754(); bStackY12 = puStackY52; cStackY11 = (puStackY52 >> 8); local_e = 0; cStackY13 = '\x12'; local_10 = 0x26;
cStackY15 = 0x2b; uVar32 = 0x2b26; local_14._2_2_ = 0x7905; FUN_2b26_05ce(); iStackY100 = 1; iStackY68 = puStackY52; iStackY94 = iStackY62;
}
uVar33 = uVar32; if (iStackY100 != 0) goto LAB_1776_01f4; bStackY12 = & local_14; cStackY11 = ( & local_14 >> 8); local_10 = & stack0xfff8; cStackY15 = ( & stack0xfff8 >> 8); uVar33 = 0x1ba9; local_14._0_2_ = 0x7935; local_14._2_2_ = uVar32; local_e = bVar6; cStackY13 = cVar13; iVar41 = FUN_1ba9_104d();
} while (iVar41 == 0);
} while ((((uStackY56 ^ param_2) & 0x7f) == 0) & & (local_14 = CONCAT22(local_14._2_2_, local_14), iStackY54 == param_2._2_2_));
// LAB_1776_01f4: if (0x7faa == 0x140) {
bStackY12 = 0x60; cStackY11 = 0x79; ppcVar7 = (code * * )0xcf6c; ( * *ppcVar7)();
}
uVar17 = cStackY15; uVar15 = local_10; iStackY64 = iStackY54 >> 1; param_2 = (CONCAT22(iStackY54, uStackY56) & 0xffff007f); iStackY72 = (uStackY56 & 0x7f) >> 1; uVar32 = 0xc4e4; uVar22 = (* ((param_2 * 0x40 + param_2._2_2_) * 2 + 0x6bd) & 0xe0) >> 5; uStackY98._0_2_ = 0; uStackY98._2_2_ = 0; local_10 = uVar33; cStackY15 = (uVar33 >> 8); bStackY12 = local_10; cStackY11 = cStackY15; if (uVar22 == 0) {
if (( * ((param_2 * 0x40 + param_2._2_2_) * 2 + 0x6be) & 0x80) == 0) {
iStackY70 = 7000; if ((iStackY100 != 0) || (0xcc4c != 0x2000)) {
local_e = 0xfc; cStackY13 = 0x7a; local_10 = uVar15; cStackY15 = uVar17; FUN_168b_097f();
uVar32 = 0xff02; bStackY12 = uVar32; cStackY11 = (uVar32 >> 8); local_e = 2; cStackY13 = 0x12; local_10 = 0x8b; cStackY15 = 0x16; uVar33 = 0x168b; local_14._2_2_ = 0x7b14; FUN_168b_03d1(); 0xcc4c = 0x2000; uVar15 = local_10; uVar17 = cStackY15;
}
}
else {
iStackY70 = 0x1b60; iVar41 = ( * ((param_2 * 0x40 + param_2._2_2_) * 2 + 0x6bd) & 0x1f) - 0xace; if ( - iVar41 < 3) {
if ((iVar41 != - 0x3002) || (iStackY100 != 0)) {
local_e = 99; cStackY13 = 0x7b; local_10 = uVar15; cStackY15 = uVar17; FUN_168b_097f();
bStackY12 = 0xa5; cStackY11 = 0x12; local_e = 2; cStackY13 = 0x12; local_10 = 0x8b;
cStackY15 = 0x16; uVar33 = 0x168b; local_14._2_2_ = 0x7b72; FUN_168b_03d1(); 0xcc4c = 0x3002; uVar15 = local_10; uVar17 = cStackY15;
}
}
else {
if ( - iVar41 < 6) {
if ((iVar41 != - 0x3004) || (iStackY100 != 0)) {
local_e = 0x96; cStackY13 = 0x7b; uVar14 = local_10; local_10 = uVar15; uVar16 = cStackY15;
cStackY15 = uVar17; FUN_168b_097f(); bStackY12 = 0xab; cStackY11 = 0x12; local_e = 2;
cStackY13 = 0x12; local_10 = 0x8b; cStackY15 = 0x16; uVar33 = 0x168b; local_14._2_2_ = 0x7ba5; FUN_168b_03d1(); 0xcc4c = 0x3004;
uVar15 = local_10; uVar17 = cStackY15;
}
}
else {
if ((iVar41 != - 0x3003) || (iStackY100 != 0)) {
local_e = 0xc4; cStackY13 = 0x7b; local_10 = uVar15; cStackY15 = uVar17; FUN_168b_097f();
bStackY12 = 0xb1; cStackY11 = 0x12; local_e = 2; cStackY13 = 0x12; local_10 = 0x8b;
cStackY15 = 0x16; uVar33 = 0x168b; local_14._2_2_ = 0x7bd3; FUN_168b_03d1(); 0xcc4c = 0x3003; uVar15 = local_10; uVar17 = cStackY15;
}
}
}
}
}
else {
bStackY12 = param_2; uVar11 = bStackY12; cStackY11 = 0; uVar12 = cStackY11; if (0xabe == 5) {
iStackY70 = uVar22 + 0x1fd5; if (iStackY100 != 0) {
bStackY12 = 0x6d; cStackY11 = 0x12; local_e = 2; cStackY13 = 0x12; uVar33 = 0x168b;
local_14._2_2_ = 0x79d2; uVar22 = unaff_DS;
FUN_168b_03d1();
}
uVar32 = uVar33; if (iStackY100 == 0) {
local_e = uVar33; cStackY13 = (uVar33 >> 8); uVar33 = 0x39d9; local_10 = 0xe6; cStackY15 = 0x79; bStackY12 = uVar11; cStackY11 = uVar12; uVar22 = param_2._2_2_; uVar24 = FUN_39d9_0de2(); uVar32 = uVar33; uVar15 = local_10; uVar17 = cStackY15; if ((uVar24 == uVar22) != 0xcc3e) goto LAB_1776_047c;
}
if (uVar22 == 0) {
iVar41 = 0x7fd4; bStackY12 = 0; cStackY11 = 0; uVar33 = 0x1284;
}
else {
iVar41 = 0x7fd4; bStackY12 = 0; cStackY11 = 0; local_e = (param_2 >> 0x10); cStackY13 = (param_2 >> 0x18);
local_14._0_2_ = 0x7a16; local_14._2_2_ = uVar32; local_10 = uVar11; cStackY15 = uVar12;
iVar21 = FUN_39d9_0de2(); uVar32 = 0x39d9;
if (iVar21 == iVar41) {
uVar33 = 0x1275;
}
else {
uVar33 = 0x127e;
}
}
}
else {
iStackY70 = uVar22 + 7000; if ((iStackY100 != 0) || (0xcc4c != uVar22)) {
iVar41 = 0x1202; local_e = 0x66; cStackY13 = 0x7a; bStackY12 = local_10; local_10 = uVar15;
cStackY11 = cStackY15; cStackY15 = uVar17; FUN_168b_097f(); uVar32 = 0xc4e8; uVar40 = (iVar41 * 4 + - 0xfc); uVar32 = (iVar41 * 4 + - 0xfe); bStackY12 = uVar32; cStackY11 = (uVar32 >> 8); local_e = 2; cStackY13 = 0x12; local_10 = 0x8b; cStackY15 = 0x16; uVar33 = 0x168b; local_14._2_2_ = 0x7a85; FUN_168b_03d1(); 0xcc4c = uVar40;
}
local_e = uVar33; cStackY13 = (uVar33 >> 8); uVar32 = 0x10bd; local_10 = 0x99; cStackY15 = 0x7a; bStackY12 = uVar11; cStackY11 = uVar12; iVar41 = FUN_10bd_000e(); if (iVar41 == 0) {
iVar41 = 0x7fd4; bStackY12 = 0; cStackY11 = 0; uVar33 = 0x129c;
}
else {
iVar41 = 0x7fd4; bStackY12 = 0; cStackY11 = 0; if (iVar41 == 0) {
uVar33 = 0x1296;
}
else {
uVar33 = 0x128d;
}
}
}
local_10 = uVar33; cStackY15 = (uVar33 >> 8); local_14._2_2_ = 0x1202; uVar33 = 0x168b; local_14._0_2_ = uVar32; local_e = uVar9; cStackY13 = uVar10; FUN_168b_030f(); 0xcc3e = iVar41; uVar15 = local_10; uVar17 = cStackY15;
}
// LAB_1776_047c:
cStackY15 = uVar17; local_10 = uVar15; if ((0xcc40 != iStackY70) || (iStackY100 != 0)) {
local_e = uVar33; bStackY12 = local_e; cStackY13 = (uVar33 >> 8); cStackY11 = cStackY13; if (iStackY70 == 0) {
local_e = 5; cStackY13 = 0x7c; FUN_168b_097f();
}
else {
bStackY12 = 1; cStackY11 = 0x12; local_10 = 0xf9; cStackY15 = 0x7b; FUN_168b_027d();
}
uVar33 = 0x168b; 0xcc40 = iStackY70;
}
uVar22 = * (param_2 * 0x40 + param_2._2_2_ + - 0x40f8); if ((iStackY100 != 0) || (uVar22 != 0xcc42)) {
local_e = uVar33; local_10 = local_e; cStackY13 = (uVar33 >> 8); cStackY15 = cStackY13; if (uVar22 == 0) {
bStackY12 = 0xc3; cStackY11 = 0x12; local_e = 3; cStackY13 = 0x12; local_14._2_2_ = 0x7dee; FUN_168b_03d1(); bStackY12 = 0x8b;
cStackY11 = 0x16; local_e = 0xfa; cStackY13 = 0x7d; FUN_168b_08fe(); bStackY12 = 0x8b;
cStackY11 = 0x16; local_e = 4; cStackY13 = 0x7e; FUN_168b_097f(); bStackY12 = 0x8b;
cStackY11 = 0x16; local_e = 0xe; cStackY13 = 0x7e; FUN_168b_097f(); bStackY12 = 0x8b;
cStackY11 = 0x16; local_e = 0x18; cStackY13 = 0x7e; FUN_168b_097f(); uVar22 = 0x1217;
bStackY12 = 0x8b; cStackY11 = 0x16; uVar33 = 0x168b; local_e = 0x22; cStackY13 = 0x7e;
FUN_168b_097f();
}
else {
bStackY12 = 5; cStackY11 = 0x12; local_10 = 0x59; cStackY15 = 0x7c; FUN_168b_027d();
bStackY12 = & iStackY108; cStackY11 = ( & iStackY108 >> 8); local_e = 0x16; cStackY13 = 0x12; local_10 = 0x8b; cStackY15 = 0x16; local_14._2_2_ = 0x7c69; uVar24 = unaff_SS; FUN_2b26_0e3b(); iVar41 = 0x160 - (((uVar24 & 0xf) != 0) - uVar24); bStackY12 = iStackY106; cStackY11 = (iStackY106 >> 8); local_e = iStackY108;
cStackY13 = (iStackY108 >> 8); local_10 = 0x26; cStackY15 = 0x2b; local_14._2_2_ = 0x7c8c; FUN_168b_04c4(); iVar41 = iVar41 + 0x160; bStackY12 = iStackY106; cStackY11 = (iStackY106 >> 8); iVar21 = 0x138a + iStackY108; local_e = iVar21; cStackY13 = (iVar21 >> 8); local_10 = 0x8b; cStackY15 = 0x16; local_14._2_2_ = 0x7caa; FUN_168b_04c4(); uVar24 = iVar41 + 0x161; bStackY12 = iStackY106; cStackY11 = (iStackY106 >> 8); iVar41 = 0x138a * 2 + iStackY108;
local_e = iVar41; cStackY13 = (iVar41 >> 8); local_10 = 0x8b; cStackY15 = 0x16; uVar32 = 0x168b; local_14._2_2_ = 0x7cca; FUN_168b_04c4(); if (0x7faa == 0x140) {
uVar22 = uVar24 >> 0xf; uVar33 = (((((uVar24 ^ uVar22) - uVar22) >> 4 ^ uVar22) - uVar22) * 4 + 0x644); bStackY12 = uVar33;
cStackY11 = (uVar33 >> 8);
}
else {
uVar32 = 0xc4f0; iVar41 = (uVar22 >> 4) * 4; uVar33 = (iVar41 + 0x646); bStackY12 = uVar33; cStackY11 = (uVar33 >> 8); uVar32 = (iVar41 + 0x644); local_e = uVar32; cStackY13 = (uVar32 >> 8); local_14._2_2_ = & iStackY92; local_14._0_2_ = 0x168b;
uVar32 = 0x3444; local_10 = bVar6; cStackY15 = cVar13; FUN_3444_17a6(); uStackY82._0_2_ = uStackY82 & 0xff; bStackY12 = & iStackY92; cStackY11 = ( & iStackY92 >> 8);
}
local_e = 3; cStackY13 = 0x12; local_10 = uVar32; cStackY15 = (uVar32 >> 8); local_14._2_2_ = 0x7d31; FUN_168b_03d1(); bStackY12 = 0x8b; cStackY11 = 0x16; local_e = 0x3d; cStackY13 = 0x7d; FUN_168b_08fe(); bStackY12 = 0xba; cStackY11 = 0x12; local_e = 0x17; cStackY13 = 0x12; local_10 = 0x8b; cStackY15 = 0x16; local_14._2_2_ = 0x7d4c; FUN_168b_03d1(); bStackY12 = & iStackY108;
cStackY11 = ( & iStackY108 >> 8);
local_e = 0x18; cStackY13 = 0x12; local_10 = 0x8b; cStackY15 = 0x16; uVar33 = 0x2b26;
local_14._2_2_ = 0x7d5d; uVar22 = unaff_SS;
FUN_2b26_0e3b(); for (uStackY60._0_2_ = (undefined * )0x0; (undefined * )uStackY60 < 8; uStackY60._0_2_ = (undefined * )uStackY60 + 1) {
if ((undefined * )uStackY60 == (undefined * )0x0) {
puVar20 = (undefined * )0x42;
}
else {
puVar20 = (undefined * )uStackY60 + 0x30;
}
bStackY12 = iStackY106; cStackY11 = (iStackY106 >> 8); local_e = iStackY108; cStackY13 = (iStackY108 >> 8); local_10 = uVar33;
cStackY15 = (uVar33 >> 8); local_14._2_2_ = 0x7d76; FUN_168b_04c4(); uVar22 = (((undefined * )uStackY60)[((puVar20 & 0xfff1) >> 1) + 0x814] + 1) / 3; if (3 < uVar22) {
uVar22 = 3;
}
uVar22 = uVar22 + 0x80; iVar41 = 0x1388 + iStackY106; bStackY12 = iVar41; cStackY11 = (iVar41 >> 8); local_e = iStackY108; cStackY13 = (iStackY108 >> 8); local_10 = 0x8b; cStackY15 = 0x16; uVar33 = 0x168b;
local_14._2_2_ = 0x7dbb; FUN_168b_04c4();
iStackY108 = iStackY108 + 0x138a;
}
}
0xcc42 = uVar22;
}
uVar32 = 0xc4e4; uVar22 = ((param_2 * 0x40 + param_2._2_2_) * 2 + 0x6bd); uVar24 = uVar22 >> 8 & 0x3f; if ((iStackY100 != 0) || (uVar24 + (uVar22 & 0x4000) != 0xcc3c)) {
0xcc3c = ( * ((param_2 * 0x40 + param_2._2_2_) * 2 + 0x6be) & 0x40) * 0x100 + uVar24; bStackY12 = uVar33; cStackY11 = (uVar33 >> 8);
local_e = 0x80; cStackY13 = 0x7e; FUN_168b_097f(); bStackY12 = 0x8b; cStackY11 = 0x16;
local_e = 0x8a; cStackY13 = 0x7e; FUN_168b_097f(); bStackY12 = 0x8b; cStackY11 = 0x16;
local_e = 0x94; cStackY13 = 0x7e; FUN_168b_097f(); uVar22 = 0x120c; bStackY12 = 0x8b;
cStackY11 = 0x16; local_e = 0x9e; cStackY13 = 0x7e; FUN_168b_097f(); if ((uVar22 & 0x20) == 0) {
if (uVar22 == 0) {
if (( * ((param_2 * 0x40 + param_2._2_2_) * 2 + 0x6be) & 0x40) == 0) {
bStackY12 = 0x13; cStackY11 = 0x13; local_e = 4; cStackY13 = 0x12; local_10 = 0x8b;
cStackY15 = 0x16; uVar33 = 0x168b; local_14._2_2_ = 0x8021; FUN_168b_03d1();
}
else {
bStackY12 = 1; cStackY11 = 0x13; local_e = 4; cStackY13 = 0x12; local_10 = 0x8b;
cStackY15 = 0x16; local_14._2_2_ = 0x7ff3;
FUN_168b_03d1(); bStackY12 = 0x7fd6; cStackY11 = bStackY12 >> 7; local_10 = 9; cStackY15 = 0x13; local_14._2_2_ = 0x1204; local_14._0_2_ = 0x168b; uVar33 = 0x168b; local_e = uVar9; cStackY13 = uVar10; FUN_168b_030f();
}
}
else {
bStackY12 = 0x15; cStackY11 = 0x12; local_e = 0x8b; cStackY13 = 0x16; local_10 = 0x12;
cStackY15 = 0x7f; FUN_168b_027d(); uVar32 = (0xec5f * 4 + - 0x13e); bStackY12 = uVar32; cStackY11 = (uVar32 >> 8); local_e = 4; cStackY13 = 0x12;
local_10 = 0x8b; cStackY15 = 0x16; local_14._2_2_ = 0x7f38; FUN_168b_03d1(); if (0xec5f == 7) {
uVar32 = 0x12da;
}
else {
uVar32 = 0x12df;
}
bStackY12 = uVar32; cStackY11 = (uVar32 >> 8); local_e = 0x8b; cStackY13 = 0x16; local_10 = 0x56; cStackY15 = 0x7f; uVar22 = unaff_DS; FUN_2692_00b2(); uVar32 = ((uVar22 & 0xfffc) - 0x1c2); bStackY12 = uVar32; cStackY11 = (uVar32 >> 8); local_e = 0xb; cStackY13 = 0x12;
local_10 = 0x92; cStackY15 = 0x26; local_14._2_2_ = 0x7f75; FUN_168b_03d1(); bStackY12 = 0xe5; cStackY11 = 0x12; local_e = 0xc;
cStackY13 = 0x12; local_10 = 0x8b; cStackY15 = 0x16; local_14._2_2_ = 0x7f86; uVar22 = unaff_DS; FUN_168b_03d1(); uStackY112 = uVar22 & 3; iStackY110 = 0; if ((uVar22 & 3) == 0) {
bStackY12 = 0xf6; cStackY11 = 0x12; local_e = 0x8b; cStackY13 = 0x16; uVar33 = 0x2692;
local_10 = 0xca; cStackY15 = 0x7f; FUN_2692_00b2();
}
else {
bStackY12 = (uVar22 >> 2); cStackY11 = (uVar22 >> 10); local_e = 0; cStackY13 = 0; local_10 = uStackY112;
cStackY15 = 0; local_14._2_2_ = 0x168b;
local_14._0_2_ = 0x7faf; local_14 = FUN_3444_23fe(); uStackY26._2_2_ = 0x12ea; uStackY26._0_2_ = 0x3444; uVar33 = 0x168b; uStackY30._2_2_ = 0x7fbb; FUN_168b_071f();
}
}
}
else {
bStackY12 = 0xce; cStackY11 = 0x12; local_e = 4; cStackY13 = 0x12; local_10 = 0x8b;
cStackY15 = 0x16; local_14._2_2_ = 0x7eb3;
FUN_168b_03d1(); bStackY12 = 0x7fd6; cStackY11 = bStackY12 >> 7; iVar41 = (0x7fd4 & 7) * 4; uVar32 = (iVar41 + 0x123a); local_e = uVar32; cStackY13 = (uVar32 >> 8); uVar32 = (iVar41 + 0x1238); local_10 = uVar32; cStackY15 = (uVar32 >> 8); local_14._2_2_ = 0x1204; local_14._0_2_ = 0x168b; FUN_168b_030f(); bStackY12 = 0x15; cStackY11 = 0x12; local_e = 0x8b; cStackY13 = 0x16; uVar33 = 0x168b; local_10 = 0xf0; cStackY15 = 0x7e; FUN_168b_027d();
}
}
uVar17 = cStackY15; uVar15 = local_10; uVar22 = * (iStackY72 * 0x20 + iStackY64 + - 0x48fa); if ((uVar22 != 0xcc4e) || (iStackY100 != 0)) {
local_10 = uVar33; cStackY15 = (uVar33 >> 8); if (uVar22 == 0) {
uVar22 = 0x120d; local_e = 0xcf; cStackY13 = 0x80; bStackY12 = local_10; local_10 = uVar15;
cStackY11 = cStackY15; cStackY15 = uVar17; FUN_168b_097f();
}
else {
bStackY12 = 0x1f; cStackY11 = 0x13; local_e = 0xd; cStackY13 = 0x12; local_14._2_2_ = 0x805d; FUN_168b_03d1(); uVar32 = 0xc4fe;
uVar33 = 0x7f9a; bStackY12 = uVar33; cStackY11 = (uVar33 >> 8); uVar32 = 0x7f98; local_e = uVar32; cStackY13 = (uVar32 >> 8); local_10 = 0x8b; cStackY15 = 0x16; local_14._2_2_ = 0x807e; FUN_168b_04c4(); piVar38 = 0x7f98; * piVar38 = *piVar38 + 0x138a + 2; uVar22 = 0x1388;
bStackY12 = 0; cStackY11 = 0; uVar32 = 0xc500; iVar41 = (uVar22 & 0xfff3) >> 2; uVar33 = (iVar41 + - 0x17c); local_e = uVar33; cStackY13 = (uVar33 >> 8); uVar32 = (iVar41 + - 0x17e); local_10 = uVar32; cStackY15 = (uVar32 >> 8); local_14._2_2_ = 0x120d; local_14._0_2_ = 0x168b; FUN_168b_030f();
}
uVar33 = 0x168b; 0xcc4e = uVar22;
}
local_10 = uVar33; local_e = local_10; cStackY15 = (uVar33 >> 8); cStackY13 = cStackY15; if (iStackY100 == 0) {
bStackY12 = 6; cStackY11 = 0x12; local_10 = 0xfc; cStackY15 = 0x80; FUN_168b_02da();
}
else {
bStackY12 = 0x27; cStackY11 = 0x13; local_e = 6; cStackY13 = 0x12; local_14._2_2_ = 0x80ea; FUN_168b_03d1();
}
uVar32 = 0x168b; uVar22 = * (iStackY72 * 0x20 + iStackY64 + 0x56c2) - 0x46; uVar24 = uVar22 >> 0xf; iVar41 = (((uVar22 ^ uVar24) - uVar24) >> 2 ^ uVar24) - uVar24; if ((iStackY100 != 0) || (iVar41 != 0xcc44)) {
uVar33 = 0xc504; if (0xcf4 == 9) {
iVar41 = iVar41 + - 0x32;
}
if (0xcf4 == 10) {
iVar41 = iVar41 + 200;
}
if (iVar41 < 0) {
bStackY12 = 0x2e; cStackY11 = 0x13; local_e = 0x8b; cStackY13 = 0x16; uVar32 = 0x2692;
local_10 = 0x60; cStackY15 = 0x81; FUN_2692_00b2();
}
local_e = 0x30; cStackY13 = 0x13; local_10 = uVar32; cStackY15 = (uVar32 >> 8); local_14._2_2_ = 0x8172; bStackY12 = uVar9; cStackY11 = uVar10; FUN_168b_071f(); bStackY12 = 0x33; cStackY11 = 0x13; local_e = 0x8b; cStackY13 = 0x16; local_10 = 0x7f; cStackY15 = 0x81; uVar22 = unaff_DS; FUN_2692_00b2(); 0xcc44 = uVar22; bStackY12 = 0x92; cStackY11 = 0x26; local_e = 0x90; cStackY13 = 0x81; FUN_168b_08fe();
}
if (iStackY100 == 0) {
bStackY12 = 0x8b; cStackY11 = 0x16; local_e = 0xb3; cStackY13 = 0x81; FUN_168b_06a4();
bStackY12 = 8; cStackY11 = 0x12; local_e = 0x8b; cStackY13 = 0x16; local_10 = 0xc1;
cStackY15 = 0x81; FUN_168b_02da();
}
else {
bStackY12 = 0x36; cStackY11 = 0x13; local_e = 8; cStackY13 = 0x12; local_10 = 0x8b;
cStackY15 = 0x16; local_14._2_2_ = 0x81a5;
FUN_168b_03d1();
}
if (0x7faa != 0x140) {
piVar38 = 0x7f98; * piVar38 = * piVar38 + (0x7fd6 / '\x02');
}
uVar22 = * (iStackY72 * 0x20 + iStackY64 + - 0xb15); if ((uVar22 != 0xcc48) || (iStackY100 != 0)) {
if (uVar22 == 0) {
iVar41 = 0x7f9a; iVar21 = iVar41 + 0x1388 + - 1; bStackY12 = iVar21; cStackY11 = (iVar21 >> 8); local_14._2_2_ = 0x7f98; iVar21 = local_14._2_2_ + 0x138a;
local_e = iVar21; cStackY13 = (iVar21 >> 8); iVar41 = iVar41 + 0x7fd4; local_10 = iVar41; cStackY15 = (iVar41 >> 8); local_14._0_2_ = 0x168b; ppcVar7 = (code * * )0xcf74; ( * *ppcVar7)(); bStackY12 = 0x3c; cStackY11 = 0x13; local_e = 0x8b; cStackY13 = 0x16; uVar32 = 0x2692; local_10 = 0x85; cStackY15 = 0x82; FUN_2692_00b2();
}
else {
uVar32 = 0xc4fe; uVar33 = 0x7f9a; bStackY12 = uVar33; cStackY11 = (uVar33 >> 8); uVar32 = 0x7f98; local_e = uVar32; cStackY13 = (uVar32 >> 8); local_10 = 0x8b; cStackY15 = 0x16; uVar32 = 0x168b;
local_14._2_2_ = 0x8227; FUN_168b_04c4();
piVar38 = 0x7f98; * piVar38 = * piVar38 + 0x138a;
}
uVar33 = 0x1208; bStackY12 = uVar32; cStackY11 = (uVar32 >> 8); local_e = 0x90; cStackY13 = 0x82; FUN_168b_08fe(); 0xcc48 = uVar33;
}
if (iStackY100 == 0) {
bStackY12 = 7; cStackY11 = 0x12; local_e = 0x8b; cStackY13 = 0x16; local_10 = 0xbd;
cStackY15 = 0x82; FUN_168b_02da();
}
else {
bStackY12 = 0x41; cStackY11 = 0x13; local_e = 7; cStackY13 = 0x12; local_10 = 0x8b;
cStackY15 = 0x16; local_14._2_2_ = 0x82ab;
FUN_168b_03d1();
}
uVar32 = 0x168b; uVar22 = * (iStackY72 * 0x20 + iStackY64 + 0x46c2); if ((iStackY100 != 0) || (uVar22 != 0xcc46)) {
bStackY12 = ((uVar22 % 10) / 10); cStackY11 = 0; local_10 = 0x48;
cStackY15 = 0x13; local_14._2_2_ = 0x168b;
local_14._0_2_ = 0x82fb; local_e = uVar9;
cStackY13 = uVar10; FUN_168b_071f(); bStackY12 = 0x50; cStackY11 = 0x13; local_e = 0x8b;
cStackY13 = 0x16; uVar32 = 0x2692; local_10 = 8; cStackY15 = 0x83; uVar22 = unaff_DS;
FUN_2692_00b2(); 0xcc46 = uVar22;
}
uVar17 = cStackY15; uVar15 = local_10; local_10 = uVar32; cStackY15 = (uVar32 >> 8); if (iStackY100 == 0) goto LAB_1776_0be1;
bStackY12 = 0x57; cStackY11 = 0x13; local_e = 9; cStackY13 = '\x12'; local_14._2_2_ = 0x833c; uVar22 = unaff_DS; FUN_168b_03d1();
} while ( true );
}
for (; iVar41 < 0x300; iVar41 = iVar41 + 1) {
uVar39 = * ffCONCAT13(cStackY11, CONCAT12(bStackY12, CONCAT11(cStackY13, local_e))); pcVar5 = (char * )(uVar39 + iVar41); * pcVar5 = *pcVar5 >> 2;
}
uStackY34._2_2_ = 0x1012; uStackY30._0_2_ = 0; uStackY30._2_2_ = 0x100; uStackY26._0_2_ = CONCAT13(cStackY11, CONCAT12(bStackY12,CONCAT11(cStackY13, local_e))); iStackY40 = (CONCAT11(cStackY13, local_e) + 2); local_14._2_2_ = ( & uStackY34 + 2); local_e = local_14._2_2_; cStackY13 = (local_14._2_2_ >> 8);
local_14._0_2_ = 0x10; uStackY26._2_2_ = 0x8f4c; local_10 = bVar6; cStackY15 = cVar13;
bStackY12 = bVar6; cStackY11 = cVar13; FUN_3444_1be4(); bStackY12 = 0x44; cStackY11 = 0x34;
local_e = 0x5c; cStackY13 = 0x8f; in_BX = FUN_3074_01d4();
// LAB_1862_093e: * (undefined * )0x1a06 = 1; return in_BX;
// LAB_1776_0be1:
uVar33 = 0x168b;
local_e = 0x4a; cStackY13 = 0x83; bStackY12 = local_10; local_10 = uVar15; cStackY11 = cStackY15;
cStackY15 = uVar17; FUN_168b_06a4(); uVar22 = 6; in_BX = 0x1209; goto code_r0x00018352;
// LAB_1ba9_1a43:
bStackY12 = 0x92; cStackY11 = 0x26; local_e = 0xdc; cStackY13 = 0xd4; FUN_1ba9_1038(); bStackY12 = & iStackY584; cStackY11 = ( & iStackY584 >> 8); local_10 = & iStackY62; cStackY15 = ( & iStackY62 >> 8); local_14._2_2_ = 0x2692; piVar34 = 0x3444; local_14._0_2_ = 0xd4f2; local_e = bVar6; cStackY13 = cVar13; iVar41 = FUN_3444_1eca(); if (iVar41 == 0) goto LAB_1ba9_19ca; iStackY584 = iStackY62; puStackY582 = (undefined * )uStackY60;
local_e = & iStackY62; cStackY13 = ( & iStackY62 >> 8); local_10 = 0x44; cStackY15 = '4'; local_14._2_2_ = 0xd519; bStackY12 = bVar6; cStackY11 = cVar13; iVar41 = FUN_1ba9_104d(); if ((((iVar41 == 0) || (puStackY52 = ff
(((undefined * )uStackY60 - iStackY572) / 0x7fd4),
puStackY52 < 0)) || (puVar26 < = puStackY52)) || (uVar39 = * ff(puStackY52 * 4 + param_3),
(uVar39 + 1) == '-')) {
puStackY52 = (undefined * )0xffff;
}
// LAB_1ba9_1bc6: if (puStackY52 != uStackY60._2_2_) {
if (uStackY60._2_2_ != (undefined * )0xffff) {
bStackY12 = 0x6c; cStackY11 = 0xd6; FUN_1ba9_0e19(); iVar41 = 0x7fd4 * uStackY60._2_2_ + iStackY572; bStackY12 = iVar41; cStackY11 = (iVar41 >> 8); local_e = aiStackY48[0]; cStackY13 = (aiStackY48[0] >> 8); local_10 = piVar34; cStackY15 = (piVar34 >> 8); piVar34 = 0x27ac; local_14._2_2_ = 0xd690; FUN_27ac_0508(); uStackY60._2_2_ = (undefined * )0xffff;
}
if (puStackY52 != (undefined * )0xffff) {
uStackY60._2_2_ = puStackY52; bStackY12 = 0xae;
cStackY11 = 0xd6; FUN_1ba9_0e19(); iVar41 = 0x7fd4 * puStackY52 + iStackY572; bStackY12 = iVar41;
cStackY11 = (iVar41 >> 8); local_e = aiStackY48[0]; cStackY13 = (aiStackY48[0] >> 8); local_10 = piVar34; cStackY15 = (piVar34 >> 8); piVar34 = 0x27ac; local_14._2_2_ = 0xd6d2; FUN_27ac_0508();
}
}
goto LAB_1ba9_19ca;
// LAB_1ba9_1c61:
loop {
puStackY594 = puStackY594 + 1; if (puStackY594 < puVar26) {
uVar39 = * ff(puStackY594 * 4 + param_3); uStackY598 = SEXT12((uVar39 + 1)); if (( *(uStackY598 + 0xb8f1) & 2) != 0) {
uStackY598 = uStackY598 - 0x20;
}
puVar20 = puStackY594; if (uStackY598 == uStackY592) goto LAB_1ba9_1b99;
}
else {
puStackY594 = (undefined * )0xffff;
}
} while (puStackY594 != uStackY60._2_2_); goto LAB_1ba9_1bc6;
}



fn fun_1862_1975()

{
    let u_var1: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    u_var1 = 0xc514;
    if (((*0x821 & 1) != 0) || ((*0x909 & 1) != 0)) {
        u_var1 = 0x1862;
        FUN_1862_1686(0x3444);
        if ((*0x821 & 1) != 0) {
            fun_294b_02f2(0x1862, 1);
            fun_1862_2340(0x294b);
            fun_1862_0aa7(0x1862);
            FUN_1862_2140(0x1862);
            u_var1 = 0x294b;
            fun_294b_03be(0x1862);
        }
        if ((*0x909 & 1) != 0) {
            if (((0x67f1 != '\0') && (0x992c != 9)) && (0x1436 == 0)) {
                FUN_1e08_0884(u_var1);
                fun_294b_03be(0x1e08);
            }
            0x1438 = 0;
        }
    }
    return;
}


fn fun_1862_1a1b(param_1_00: u16, param_1: u16)

{
    let unaff_ds: u16;
    let local_10: i16;
    let local_e: u16;
    let u_stack_y12: u16;
    let pu_stack_y10: *mut u16;

    fun_3444_02c6(0x39d9);
    0x142c = param_1;
    local_10 = 0xd2c;
    if ((local_10 == 0xb) && (0xabe == 1)) {
        local_10 = 0xc;
    } else {
        if ((local_10 == 10) && (0xabe == 5)) {
            local_10 = 0xd;
        }
    }
    if ((((0x142c == 0) && (local_10 != 1)) && (local_10 != 2)) && ((local_10 != 5 && (local_10 != 8)))) {
        pu_stack_y10 = 0xffff;
        u_stack_y12 = 0xffff;
        local_e = 0x119;
        local_10 = 0x3444;
        fun_2b26_0edc();
        0x1430 = 0;
    } else {
        pu_stack_y10 = 0xffff;
        u_stack_y12 = 0xffff;
        local_e = 0x119;
        fun_2b26_0edc();
        0x1432 = 0x4e5c + 6000;
        pu_stack_y10 = 0x0;
        u_stack_y12 = 0;
        local_e = 0x119;
        local_10 = 0x2b26;
        fun_2b26_0e73();
        if ((*0x821 & 1) != 0) {
            pu_stack_y10 = &local_e;
            u_stack_y12 = 0x119;
            local_e = 0x2b26;
            local_10 = 0xa119;
            fun_2b26_0e3b();
            pu_stack_y10 = 0x2b26;
            u_stack_y12 = 0xa125;
            fun_294b_02f2();
            pu_stack_y10 = 0x1;
            u_stack_y12 = 0x294b;
            local_e = 0xa133;
            pu_stack_y10 = FUN_2b26_0008();
            u_stack_y12 = 0x2b26;
            local_e = 0xa13c;
            FUN_2c63_058f();
        }
        0x1430 = 1;
    }
    0x142e = local_10;
    return;
}


fn fun_1862_1b4e()

{
    let u_var1: u16;
    // code * *ppcVar2;
    let mut ppcVar2 = Code{ address: Address { lower: 0, upper: 0 } };
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let l_var5: i32;
    let local_16: i16;
    let local_14: i16;
    let local_12: i16;
    let local_10: i16;
    let local_e: i16;
    let local_c: i16;
    let i_var6: i16;

    fun_3444_02c6(0x39d9);
    _local_c = 0x3444a184;
    fun_1862_1a1b();
    if 0x1430 == 0 {
        _local_c = CONCAT22(&local_14, 0x115);
        local_e = 0x1862;
        local_10 = -0x5e63;
        fun_2b26_0e3b();
        if (*0x9c65 & 1) == 0 {
            _local_c = CONCAT22(0xf, local_e);
            local_e = local_10;
            local_10 = local_12;
            local_12 = local_14;
            local_14 = 0x2b26;
            i_var4 = 0x2c63;
            fun_2c63_0002();
        } else {
            _local_c = CONCAT22(unaff_ss, &local_14);
            local_e = 0x2b26;
            i_var4 = 0x27ac;
            local_10 = -0x5e26;
            fun_27ac_076d();
            local_10 = local_10 + 1;
            local_e = local_e + 1;
        }
        if 0x7faa == 0x140 {
            // for (iVar6 = 4; i_var6 < 0x7c; iVar6 = iVar6 + 8) {
            for mut i_var6 in 4 .. 0x7c {
                // for (iVar3 = 1; i_var3 < (local_e - local_12) + -1; iVar3 = iVar3 + 7) {
                loop {
                    i_var6 = 0x707;
                    _local_c = CONCAT22(0x707, local_12 + i_var3 + 1);
                    local_e = local_14 + 0x708;
                    local_10 = local_12 + i_var3;
                    local_12 = local_14 + 0x707;
                    local_14 = i_var4;
                    fun_2c63_0002();
                    i_var4 = 0x2c63;
                }
            }
            local_16 = (0xd2c * 0x40 + -0x18cf) / -7 + local_e + -2;
            // for (iVar6 = 0; i_var6 < 0x1f; iVar6 = iVar6 + 1) {
            for i_var6 in 0 .. 0x1f {
                i_var3 = ((0xd2c * 0x20 + i_var6) * 2 + -0x18cf) / -7 + local_e + -2;
                _local_c = CONCAT22(i_var3, 3);
                local_e = local_16;
                local_10 = 0;
                local_14 = -0x5d0a;
                // ppcVar2 = (code * *)0xcfac;
                
                local_12 = i_var4;
                local_16 = i_var3;
                (**ppcVar2)();
            }
        } else {
            // for (iVar6 = 2; i_var6 < 0x7c; iVar6 = iVar6 + 8) {
            for mut i_var6 in 2 .. 0x7c {
                if (*0x9c65 & 1) == 0 {
                    // for (iVar3 = 3; i_var3 < local_e - local_12; iVar3 = iVar3 + 8) {
                    for i_var3 in 3 .. (local_e - local_12))
                        i_var6 = 0x707;
                        _local_c = CONCAT22(0x707, local_12 + i_var3 + 1);
                        local_e = local_14 + 0x708;
                        local_10 = local_12 + i_var3;
                        local_12 = local_14 + 0x707;
                        local_14 = i_var4;
                        fun_2c63_0002();
                        i_var4 = 0x2c63;
                    }
                } else {
                    // for (iVar3 = 3; i_var3 < local_e - local_12; iVar3 = iVar3 + 8) {
                for i_var3 in 3 .. local_e - local_12 {
                        i_var6 = 0;
                        _local_c = (local_12 + i_var3 + 1);
                        local_e = local_14 + 1;
                        local_10 = local_12 + i_var3;
                        local_12 = local_14;
                        local_14 = i_var4;
                        fun_2c63_0002();
                        i_var4 = 0x2c63;
                    }
                }
            }
            u_var1 = 0xc518;
            if ((0xd2c + 0x1a26) != '\0') {
                _local_c = CONCAT22((0xd2c + 0x1a26) + 0x4d58, i_var4);
                i_var4 = 0x3074;
                local_e = -0x5c1c;
                l_var5 = FUN_3074_00d3();
                if (l_var5 != 0) {
                    if ((*0x9c65 & 1) == 0) {
                        _local_c = 0xf3074;
                        local_e = 0xa40e;
                        fun_2c63_0100();
                    } else {
                        _local_c = 0xf;
                        local_e = 0x3074;
                        local_10 = 0xa424;
                        fun_2c63_0100();
                    }
                    local_c = local_12 + 4;
                    local_e = local_14 + 4;
                    local_10 = 0x2c63;
                    local_12 = 0xa449;
                    fun_2692_0042();
                    _local_c = CONCAT22(local_c, 0x2692);
                    i_var4 = 0x3074;
                    local_e = -0x5ba9;
                    fun_3074_02da();
                }
            }
            local_16 = (0xd2c * 0x40 + -0x18cf) / -7 + local_e + -2;
            // for (iVar6 = 0; i_var6 < 0x1f; iVar6 = iVar6 + 1) {
        for i_var6 in 0 .. 0x1f {
                i_var3 = ((0xd2c * 0x20 + i_var6) * 2 + -0x18cf) / -7 + local_e + -2;
                _local_c = CONCAT22(i_var3, 3);
                local_e = local_16;
                local_10 = 0;
                local_14 = -0x5b22;
                ppcVar2 = (code * *)0xcfac;
                local_12 = i_var4;
                local_16 = i_var3;
                (**ppcVar2)();
            }
        }
    }
    return;
}



void FUN_1862_1ed0(param_1_00: u16,param_1: i16,param_2: i16,param_3: i16,param_4: i16,
int *param_5)

{
let uVar1: u16;

FUN_3444_02c6(0x39d9);
if ( * param_5 != param_1 & & param_1 <= * param_5) {
param_1 = * param_5;
}
uVar1 = (undefined2)(param_5 >> 0x10); if ((param_5 + 4) < param_3) {
param_3 = (param_5 + 4);
}
if ((param_1 < param_3) & & (param_2 < param_4)) {
FUN_2c63_028d(0x3444, param_1, param_2, param_3,param_4);
}
return;
}



fn fun_1862_1f3d(param_1_00: u16, int *param_1)

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let u_var5: u16;
    let unaff_ss: i16;
    let i_var6: i16;
    let local_c: i16;
    let pi_stack10: *mut u16;

    fun_3444_02c6(0x39d9);
    pi_stack10 = &local_c;
    local_c = 0x103;
    i_var6 = 0x3444;
    fun_2b26_0e3b(0x3444);
    i_var2 = unaff_ss - local_c;
    u_var5 = (undefined2)(param_1 >> 0x10);
    i_var4 = param_1;
    pi_var1 = (i_var4 + 4);
    if (*pi_var1 != unaff_ss && unaff_ss <= *pi_var1) {
        *param_1 = *param_1 - i_var2;
        pi_var1 = (i_var4 + 4);
        *pi_var1 = *pi_var1 - i_var2;
    }
    pi_stack10 = &local_c;
    local_c = (i_var4 + 2) + i_var6;
    i_var6 = (i_var4 + 4);
    i_var3 = (i_var4 + 2);
    FUN_1862_1ed0(0x2b26, *param_1, i_var3, i_var6);
    pi_stack10 = &local_c;
    local_c = (i_var4 + 6) - i_var6;
    i_var3 = *param_1 + i_var3;
    FUN_1862_1ed0(0x1862, *param_1, (i_var4 + 2) + i_var3);
    pi_stack10 = &local_c;
    local_c = (i_var4 + 6) - i_var3;
    FUN_1862_1ed0(0x1862, (i_var4 + 4) - ((i_var4 + 2) + (i_var4 + 4)));
    pi_stack10 = &local_c;
    local_c = (i_var4 + 6);
    i_var6 = (i_var4 + 4);
    FUN_1862_1ed0(0x1862, *param_1, (i_var4 + 6) - i_var6);
    if (*param_1 < 0x103) {
        pi_stack10 = &local_c;
        local_c = (i_var4 + 2) + i_var6;
        i_var3 = (i_var4 + 4) + i_var2;
        i_var6 = (i_var4 + 2);
        FUN_1862_1ed0(0x1862, *param_1 + i_var2, i_var6, i_var3);
        pi_stack10 = &local_c;
        local_c = (i_var4 + 6) - i_var3;
        i_var6 = *param_1 + i_var2 + i_var6;
        FUN_1862_1ed0(0x1862, *param_1 + i_var2, (i_var4 + 2) + i_var6);
        pi_stack10 = &local_c;
        local_c = (i_var4 + 6) - i_var6;
        FUN_1862_1ed0(0x1862, (i_var4 + 4) + (-(i_var4 + 4) - (i_var4 + 2)));
        pi_stack10 = &local_c;
        local_c = (i_var4 + 6);
        FUN_1862_1ed0(0x1862, *param_1 + i_var2, (i_var4 + 6) - ((i_var4 + 4) + i_var2));
    }
    return;
}


// WARNING: Instruction at (ram,0x00019a2a) overlaps instruction at (ram,0x00019a28)
//
// WARNING: Unable to track spacebase fully for stack
// WARNING: Removing unreachable block (ram,0x000155a8)
// WARNING: Removing unreachable block (ram,0x00019a58)
// WARNING: Removing unreachable block (ram,0x00019a2e)

uint FUN_1862_2140(param_1_00: i16,param_2: i16,param_3: i16,uparam_1: i16)

{
let puVar1: * mut u16; let piVar2: * mut u16; let pbVar3: * mut u8; let pcVar4: String; code * * ppcVar5; let puVar6: * mut u16; let bVar7: u8; let uVar8: u16; let uVar9: u16; let uVar10: u16; let uVar11: u16; let in_CX: i16; let uVar12: u16; let extraout_DX: u16; let extraout_DX_00: u16; let iVar13: i16; let puVar14: * mut u16; let in_BX: u16;
let puVar15: * mut u16; let puVar16: * mut u16; let piVar17: * mut u16; let piVar18: * mut u16; let iVar19: i16; let iVar20: i16; let unaff_SI: i16; let iVar21: i16; let unaff_DI: * mut u16; let unaff_SS: u16;
let uVar22: u16; let unaff_DS: u16;
let in_AF: u8; let uVar23: u32;
undefined uStackY60; undefined uStackY59; undefined uStackY56; undefined uStackY55; undefined uStackY52; undefined uStackY51; undefined uStackY46; undefined uStackY45; undefined uStackY12; char cStackY11;
undefined uVar24; char cVar25; undefined uVar26; undefined uStack7; undefined uStack6; undefined uStack5; let puVar27: * mut u16;

uVar11 = FUN_3444_02c6(0x39d9); uStack6 = unaff_SI; uStack5 = (unaff_SI >> 8); uVar10 = 0xc514; if ((((* 0x821 & 1) == 0) || (0x143e != 0)) || (0x143c != 0)) {
return uVar11;
}
uVar24 = SUB21( & stack0xfff6, 0);
uVar26 = ( & stack0xfff6 >> 8); puVar27 = unaff_DI; FUN_2b26_0e3b(); cVar25 = 0x9c65; uVar11 = SEXT12(cVar25); if (8 < uVar11) {
uVar10 = 0xc552; 0x1f17 = CONCAT11(uVar26,uVar24); 0x1f19 = uVar10; 0x1f1b = unaff_SI; * (undefined2 * * )0x1f1d = puVar27; uVar11 = FUN_1862_1f3d(); 0x143c = 1; return uVar11;
}
bVar7 = in_BX; uStack7 = unaff_DS; switch(cVar25) {
case '\0': uVar11 = in (0x5d);
return uVar11; case '\x01': * unaff_DI = 0; puVar6 = unaff_DI + (uVar11 - 0x1dd); * puVar6 = puVar6 + in_CX; iVar20 = param_2 * 0x40 + unaff_SI; uVar11 = (iVar20 * 2 + 0x6bd); if (((uVar11 & 0x3f00) == 0) & & (((iVar21 = (uVar11 & 0xe0) >> 5, iVar21 != 0 || ((uVar11 & 0x8000) != 0)) & &
(bVar7 = * (((param_1 & 0xfff1) >> 1) + iVar21 + 0x814), bVar7 != 0)))) {
if ((uVar11 & 0x8000) == 0) {
if (bVar7 < (DAT_616d_0a84 & 7)) {
return 0;
}
}
else {
if (bVar7 < = - ((uVar11 & 0x1f) - DAT_616d_0a8e)) {
return 0;
}
}
bVar7 = * ((param_1 >> 2) + 0x7d4); pbVar3 = (( * (iVar20 + - 0x40f8) >> 2) + 0x7d4); if ( * pbVar3 < bVar7 || * pbVar3 == bVar7) {
* (undefined * )(iVar20 + - 0x40f8) = param_1; return 1;
}
}
return 0; case '\x02': uVar24 = in (extraout_DX); * (undefined * )unaff_DI = uVar24; puVar1 = ( & stack0x4470 + unaff_SI); uVar11 = * puVar1; * puVar1 = uVar11 >> 4 | uVar11 << 0xd; if (bVar7 == 0xff) {
FUN_3444_40fa(); FUN_3444_4472();
}
FUN_3444_44ba(); uVar11 = FUN_3444_42c7();
return uVar11; case '\x03': uVar23 = * ff0x6c7; uVar22 = (undefined2)(uVar23 >> 0x10); iVar19 = uVar23; in_AF = 9 < (bVar7 & 0xf) | in_AF; (iVar19 + - 2) = 0x1000; puVar15 = (iVar19 + - 4); (iVar19 + - 4) = 0x695c;
ppcVar5 = (code * * )0xcfc0; (* * ppcVar5)(); puVar15[3] = 9; puVar15[2] = 0x3b6; puVar15[1] = 0x1000; * puVar15 = 0x696c; FUN_3074_01d4(); puVar15[1] = 9; * puVar15 = 0x3b7; puVar15[ - 1] = 0x3074; puVar16 = puVar15 + - 2; puVar15[ - 2] = 0x697b; uVar23 = FUN_3074_00d3(); uVar12 = (undefined2)(uVar23 >> 0x10);
uVar10 = 0xc4d0; 0x15cd = uVar23; 0x15cf = uVar12; puVar16[1] = uVar12; *puVar16 = uVar23; puVar16[ - 1] = 0x3074; piVar17 = puVar16 + - 2; puVar16[ - 2] = 0x6991; uVar11 = FUN_3143_1656(); piVar17[1] = uVar11 >> 7; * piVar17 = ((CONCAT11((in_BX >> 8) + in_AF, bVar7 + in_AF * '\x06') & 0xff0f) >> 2) + 0x1132; puVar6 = * ff0x15cd; piVar17[ - 1] = (puVar6 + 2); piVar17[ - 2] = * puVar6; piVar17[ - 3] = 0x3143; piVar18 = piVar17 + - 4;
piVar17[ - 4] = 0x69b7; ppcVar5 = (code * * )0xcfc0; ( * *ppcVar5)(); piVar18[3] = 9; piVar18[2] = 0x3b7; piVar18[1] = 0x3143; * piVar18 = 0x69c7; uVar11 = FUN_3074_01d4(); return uVar11;
case '\x05': pcVar4 = (char * )(uVar11 * 2 + unaff_SI + - 0x66);
* pcVar4 = * pcVar4 + extraout_DX; return in_BX; case '\x06': if ((0xcf4 == 9) || (0xcf4 == 10)) {
uStackY60 = uStackY56; uStackY59 = uStackY55; uStackY52 = uStackY56; uStackY51 = uStackY55; uStack6 = uStackY56;
uStack5 = uStackY55;
}
FUN_23e0_01d9(); uStackY46 = extraout_DX_00; uStackY45 = (extraout_DX_00 >> 8); FUN_23e0_01d9(); FUN_23e0_01d9(); FUN_23e0_01d9(); if (0x1436 == 1) {
for (iVar20 = 6; CONCAT11(uStackY55,uStackY56) != iVar20 & & iVar20 < = CONCAT11(uStackY55, uStackY56); iVar20 = iVar20 + 10) {
FUN_23e0_01d9(); FUN_3444_23fe(); FUN_3444_2364(); FUN_23e0_01d9(); FUN_3444_23fe();
FUN_3444_2364(); uStackY60 = uStackY46; uStackY59 = uStackY45; FUN_23e0_01d9(); uStackY46 = 0x58;
uStackY45 = 8; uStackY52 = uStackY56; uStackY51 = uStackY55; FUN_3444_23fe(); FUN_3444_2364();
FUN_23e0_01d9(); uStackY56 = 0x18; uStackY55 = 8; FUN_1e08_0940();
}
}
FUN_1e08_0940(); if (0 < CONCAT11(uStackY59, uStackY60)) {
FUN_1e08_0940();
}
if (0 < CONCAT11(uStackY51, uStackY52)) {
FUN_1e08_0940();
}
if (0 < CONCAT11(uStack5, uStack6)) {
FUN_1e08_0940();
}
FUN_23e0_01d9(); FUN_23e0_01d9(); FUN_23e0_01d9(); FUN_23e0_01d9(); ppcVar5 = (code * * )0xcf6c; ( * * ppcVar5)(); FUN_2c63_0100(); FUN_2c63_01c1(); if (CONCAT11(uStack5, uStack6) < CONCAT11(uStackY51, uStackY52)) {
FUN_2c63_01c1();
}
if (CONCAT11(uStackY51, uStackY52) < CONCAT11(uStackY59, uStackY60)) {
FUN_2c63_01c1();
}
FUN_2c63_01c1(); ppcVar5 = (code * *)0xcfac; ( * * ppcVar5)(); if (CONCAT11(uStack5, uStack6) < CONCAT11(uStackY51, uStackY52)) {
ppcVar5 = (code * * )0xcfac; (* * ppcVar5)();
}
if (CONCAT11(uStackY51, uStackY52) < CONCAT11(uStackY59, uStackY60)) {
ppcVar5 = (code * * )0xcfac; (* * ppcVar5)();
}
ppcVar5 = (code * * )0xcfac; (* * ppcVar5)(); ppcVar5 = (code * * )0xcf70; ( * * ppcVar5)(); uVar11 = FUN_294b_03be();
0x1436 = 2; return uVar11; case '\a':
out(0x40, in_BX); FUN_3444_4472(); cVar25 = 'D'; uVar24 = 4; uVar23 = FUN_3444_42c7(); uVar10 = 0xc138; 0x5d0 = uVar23; 0x5d2 = (uVar23 >> 0x10); uVar8 = CONCAT11(cVar25, uVar24) * 2; puVar1 = 0x5d4; uVar11 = *puVar1; * puVar1 = * puVar1 + uVar8;
piVar2 = 0x5d6; * piVar2 = * piVar2 + (CONCAT11(uStack7, 0x34) << 1 | (cVar25 < '\0')) + CARRY2(uVar11, uVar8); uVar26 = 0; uVar24 = 0; FUN_3444_23fe(); FUN_3444_2364(); FUN_3444_23fe(); FUN_3444_2364(); FUN_3444_2364(); uVar23 = FUN_3444_2364(); uVar10 = 0xc138; 0x5d8 = uVar23; 0x5da = (uVar23 >> 0x10); uVar8 = 0x694 / 5; uVar9 = uVar8 - CONCAT11(uVar26,uVar24); uVar10 = 0xc138; puVar1 = 0x5dc; uVar11 = * puVar1; * puVar1 = *puVar1 + uVar9; piVar2 = 0x5de; * piVar2 = * piVar2 + (((uVar8 >> 0xf) + (unaff_DS & 0xff) * -0x100) - (uVar8 < CONCAT11(uVar26,uVar24))) + CARRY2(uVar11, uVar9); FUN_1000_07e8(); FUN_1000_0afb();
0x30 = 0; uStackY12 = 0; cStackY11 = '\0'; iVar20 = 1; loop {
uVar10 = 0xc126; uVar11 = (iVar20 * 4 + 0x600); iVar21 = (iVar20 * 4 + 0x602); if ((cStackY11 >> 7 < = iVar21) & & ((cStackY11 >> 7 < iVar21 || (CONCAT11(cStackY11, uStackY12) < uVar11)))) {
0x30 = iVar20; uStackY12 = uVar11; cStackY11 = (uVar11 >> 8);
}
iVar20 = iVar20 + 1;
} while (iVar20 < 8); iVar20 = 0; loop {
iVar21 = 3; uVar10 = 0xc14e; loop {
iVar13 = (iVar20 * 5 + iVar21) * 4; uVar12 = (iVar13 + 0x502);
(iVar13 + 0x504) = (iVar13 + 0x500); (iVar13 + 0x506) = uVar12;
iVar21 = iVar21 + - 1;
} while ( - 1 < iVar21); iVar21 = iVar20 * 4; FUN_3444_23fe(); uVar23 = FUN_3444_2364(); uVar10 = 0xc14e; (iVar20 * 0x14 + 0x500) = uVar23; (iVar20 * 0x14 + 0x502) = (uVar23 >> 0x10); uVar10 = 0xc126; (iVar21 + 0x602) = 0; (iVar21 + 0x600) = 0; uVar10 = 0xc142; (iVar21 + 0x5aa) = 0; (iVar21 + 0x5a8) = 0; iVar20 = iVar20 + 1;
} while (iVar20 < 8); iVar20 = 0; loop {
iVar21 = 3; uVar10 = 0xc150; loop {
iVar13 = (iVar20 * 5 + iVar21) * 2; (iVar13 + 0x462) = (iVar13 + 0x460); iVar21 = iVar21 + - 1;
} while ( - 1 < iVar21); iVar21 = iVar20 * 2; uVar10 = FUN_3444_2364();
(iVar20 * 10 + 0x460) = uVar10;
(iVar21 + 0x440) = (iVar21 + 0x624); (iVar21 + 0x694) = 0;
(iVar21 + 0x624) = 0; iVar20 = iVar20 + 1;
} while (iVar20 < 0x10); return 0;
case '\b': if (in_CX != 0) {
bVar7 = * (param_1 * 2 + 0x73f); uVar11 = bVar7 & 0xe0; if ((bVar7 & 0xe0) != 0) {
uVar11 = uVar11 >> 5;
}
return uVar11;
}
FUN_3444_02c6(0x1000); bVar7 = * (param_1_00 + - 0x40b7); uVar11 = bVar7; if (bVar7 != 0) {
if (bVar7 < 0xc) {
uVar11 = (bVar7 & 0x1c) >> 2;
}
else {
uVar11 = ((bVar7 & 0x1c) >> 2) - 1;
}
}
return uVar11;
}
* (undefined * )(unaff_DI + uVar11 + 0xc582) = 0; bVar7 = * ((uVar11 * 2 << (in_CX & 0x1f)) + (unaff_SI >> 1) + 0x4ec2) >> 5; uVar11 = bVar7; if (bVar7 != 0) {
uVar11 = uVar11 + 0x20;
}
if (uVar11 != 0) goto LAB_154b_0b06; if (DAT_616d_0cd0 != 0) {
uVar11 = ((unaff_DI * 0x40 + unaff_SI) * 2 + 0x6bd); uVar8 = uVar11 >> 8; uVar9 = uVar8 & 0x3f; if (uVar9 != 0) {
if ((uVar8 & 0x20) != 0) {
uVar11 = (uVar8 & 7) + 0x72;
goto LAB_154b_0b06;
}
if ((uVar8 & 3) == 0) {
if ((uVar11 >> 8 & 0x80) != 0) {
uVar11 = ((uVar8 & 0x1c) >> 2) + 0x5f; goto LAB_154b_0b06;
}
uVar11 = DAT_4b2d_ec49; if (uVar9 < 5) goto LAB_154b_0b06;
}
uVar11 = uVar9 + 0x40; goto LAB_154b_0b06;
}
}
if (DAT_616d_0cd2 != 0) {
iVar20 = unaff_DI * 0x40 + unaff_SI; bVar7 = * (iVar20 + - 0x40f8); if (bVar7 != 0) {
if ((DAT_616d_0cce == 0) || (( * (iVar20 * 2 + 0x6bd) & 0xe0) != 0x20)) {
uVar11 = bVar7 + 0x160;
}
else {
uVar11 = 0x31;
}
goto LAB_154b_0b06;
}
}
if ((DAT_616d_0cce == 0) || (iVar20 = ( * ((unaff_DI * 0x40 + unaff_SI) * 2 + 0x6bd) & 0xe0) >> 5,
iVar20 == 0)) {
if ((DAT_616d_0ccc == 0) || (uVar11 = ((unaff_DI * 0x40 + unaff_SI) * 2 + 0x6bd), (uVar11 & 0x8000) == 0))
{
uVar11 = ((unaff_DI * 0x40 + unaff_SI) * 2 + 0x6bd) & 0x1f;
}
else {
iVar20 = DAT_616d_0a8e - (uVar11 & 0x1f);
if (iVar20 < 3) {
uVar11 = 0x42;
}
else {
if (iVar20 < 6) {
uVar11 = 0x41;
}
else {
uVar11 = 0x40;
}
}
}
}
else {
if (DAT_616d_0a7e == 5) {
uVar11 = iVar20 + 0x78;
}
else {
uVar11 = iVar20 + 0x30;
}
}
// LAB_154b_0b06:
puVar14 = ((param_3 * 0x28 + param_2) * 2 + 0xc57); if ( * puVar14 == uVar11) {
uVar8 = 0x6169;
}
else {
uVar8 = FUN_168b_04c4(); CONCAT13(0x60,CONCAT12(0x13, puVar14)) = uVar11;
}
return uVar8;
}



fn fun_1862_2340()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (((*0x821 & 1) != 0) && (0x143c != 0)) {
        fun_1862_1f3d(0x3444, 0x1f17, 0x5b2d);
        0x143c = 0;
    }
    return;
}


fn fun_1862_2381()

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    let i_var4: i16;

    fun_3444_02c6(0x39d9);
    if ((((*0x821 & 1) != 0) && (0x1440 == 0)) && ((0x7faa != 0x140 || (0xd2c / 3 == 0x1442)))) {
        u_var3 = 0xc518;
        i_var4 = 0xd2c;
        i_var2 = 0xd2c;
        if (i_var2 == 9) {
            i_var4 = 0xb;
        } else {
            if ((0 < i_var2 + -9) && (i_var2 + -10 < 2)) {
                i_var4 = i_var4 + -1;
            }
        }
        fun_2b26_0e3b(0x3444, i_var4 + 0x105, 0xcc50);
        pi_var1 = 0xcc50;
        *pi_var1 = *pi_var1 + -1;
        pi_var1 = 0xcc52;
        *pi_var1 = *pi_var1 + -1;
        pi_var1 = 0xcc54;
        *pi_var1 = *pi_var1 + 1;
        pi_var1 = 0xcc56;
        *pi_var1 = *pi_var1 + 1;
        fun_1862_1f3d(0x2b26, 0xcc50);
        0x1440 = 1;
    }
    return;
}


fn fun_1862_2440()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (((*0x821 & 1) != 0) && (0x1440 != 0)) {
        fun_1862_1f3d(0x3444, 0xcc50);
        0x1440 = 0;
    }
    return;
}


fn fun_1862_247e()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_154b_037e(0x3444, 0);
    if ((*0x821 & 1) != 0) {
        0x143e = 0;
        fun_294b_02f2(0x154b, 1);
        FUN_1862_2140(0x294b);
        fun_1862_2381(0x1862);
        fun_294b_03be(0x1862);
    }
    return;
}


/*
Unable to decompile 'FUN_1862_24c9'
Cause: Exception while decompiling 1862:24c9: process: timeout

*/

/*
Unable to decompile 'FUN_1862_27fa'
Cause: Exception while decompiling 1862:27fa: Decompiler process died

*/


// WARNING: Could not reconcile some variable overlaps

fn fun_1862_2b82()

{
    let i_var1: i16;
    let unaff_di: i16;
    let u_var2: u16;
    let unaff_ds: i16;
    let local_1e: u32;
    let local_1a: i16;
    let u_stack_y24: u16;
    let local_16: i16;
    let local_14: i16;
    let local_12: i16;
    let local_10: u16;
    let local_e: i16;
    let local_c: *mut u16;
    let pi_var3: *mut u16;
    let i_var4: i16;

    fun_3444_02c6(0x39d9);
    local_c = 0x115;
    local_e = 0x3444;
    local_10 = 0xb1c2;
    fun_2b26_0e3b();
    0xcc58 = 0xffff;
    fun_1862_2440();
    local_c = 0x0;
    local_e = 0x119;
    local_10 = 0x1862;
    local_12 = -0x4e1e;
    fun_2b26_0e73();
    local_c = 0xb1ee;
    fun_294b_02f2();
    fun_1862_2340();
    local_c = 0x1862;
    local_e = 0xb201;
    FUN_2b26_0008();
    local_c = 0x2b26;
    local_e = -0x4df6;
    FUN_2c63_058f();
    fun_294b_03be();
    0x1434 = 1;
    loop {
    u_var2 = 0x1ba9;
    i_var1 = FUN_1ba9_10aa();
    if (i_var1 == 0) {
// LAB_1862_2e36:
        0x1434 = 0;
        if (0x1430 != 0) {
            local_c = 0x0;
            local_e = 0x119;
            local_12 = -0x4b88;
            local_10 = u_var2;
            fun_2b26_0e73();
            local_c = 0xb484;
            fun_294b_02f2();
            local_c = 0x294b;
            local_e = 0xb492;
            FUN_2b26_0008();
            local_c = 0x2b26;
            local_e = -0x4b65;
            FUN_2c63_058f();
            fun_294b_03be();
        }
        fun_1ba9_1d7e();
        fun_1862_2381();
        FUN_1862_2140();
        fun_1862_1975();
        return;
    }
    local_c = 0x1ba9;
    local_e = -0x4dd1;
    i_var1 = fun_2d56_0ead();
    if (((i_var1 != 0) && ((local_1e + 0xc) == 0x115)) && ((*(local_1e + 7) & 0x60) != 0)) {
        u_var2 = 0x1d9a;
        fun_1d9a_0147();
        goto
        LAB_1862_2e36;
    }
    pi_var3 = &local_1a;
    local_c = 0x2d56;
    local_e = -0x4d9a;
    fun_1ba9_1038();
    if (0x7faa == 0x140) {
        i_var1 = 10 - local_1a;
    } else {
        i_var1 = 0xb - local_1a;
    }
    local_c = ((pi_var3 + i_var1) / 7 + 0xf);
    if (local_c < 0) {
        local_c = 0x0;
    }
    if (0xf < local_c) {
        local_c = 0xf;
    }
    if (local_c != *(int * *)
    0xcc58) {
        *(int * *)
        0xcc58 = local_c;
        local_c = 0x0;
        local_e = 0;
        local_10 = 0;
        local_12 = 0;
        local_14 = 0x1862;
        local_16 = 0x1624;
        u_stack_y24 = 0;
        local_1a = 0x1ba9;
        local_1e = CONCAT22(0xb2eb, local_1e);
        i_var1 = unaff_ds;
        FUN_1f51_0032();
        if (local_e != -1) {
            if (0x7faa == 0x140) {
                local_c = (unaff_di + -0xc);
                local_12 = local_e + 1;
                local_10 = 0xc;
                local_14 = 0x1f51;
                local_16 = -0x4cde;
                local_e = local_12;
                fun_2c63_0002();
            } else {
                if ((*0x9c65 & 1) == 0) {
                    local_c = (unaff_di + -0x10);
                    local_12 = local_e + 2;
                    local_10 = 0xd;
                    local_14 = 0x1f51;
                    local_16 = -0x4c79;
                    local_e = local_12;
                    fun_2c63_0002();
                } else {
                    local_16 = local_e;
                    local_12 = local_e + 1;
                    local_14 = i_var1 + 0xd;
                    local_c = &local_16;
                    local_e = 0x1f51;
                    local_10 = 0xb35f;
                    fun_27ac_076d();
                }
            }
        }
        local_c = 0xb393;
        fun_294b_02f2();
        i_var4 = 0x294b;
        i_var1 = -0x4c67;
        fun_1862_0aa7();
        if (0x7faa == 0x140) {
            i_var4 = local_c * 7;
            local_c = (unaff_di + -0xc);
            local_12 = 0x74 - (i_var4 - i_var1);
            local_10 = 0xb;
            local_14 = 0x1862;
            local_16 = -0x4c2b;
            local_e = local_12;
            fun_2c63_0002();
        } else {
            local_12 = -(local_c * 7 - i_var1);
            local_16 = local_12 + 0x74;
            if ((*0x9c65 & 1) == 0) {
                local_c = (unaff_di + -0x10);
                local_12 = local_12 + 0x76;
                local_10 = 0xc;
                local_14 = 0x1862;
                local_16 = -0x4bb5;
                local_e = local_12;
                fun_2c63_0002();
            } else {
                local_12 = local_12 + 0x75;
                local_14 = i_var4 + 0xd;
                local_c = &local_16;
                local_e = 0x1862;
                local_10 = 0xb423;
                fun_27ac_076d();
            }
        }
        fun_294b_03be();
    }
}
    while (true);
}


/*
Unable to decompile 'FUN_1862_2e9c'
Cause: Exception while decompiling 1862:2e9c: Decompiler process died

*/


fn fun_1ba9_0000()

{
    let u_var1: u16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var2 = 0x50;
    u_var3 = 0x3444;
    loop {
    if (0xd32 - i_var2 == -0x50) {
        u_var1 = 0x10;
    } else {
        u_var1 = 0x20;
    }
    fun_1ba9_1338(u_var3, i_var2, u_var1);
    i_var2 = i_var2 + 1;
    u_var3 = 0x1ba9;
}
    while (i_var2 < 0x54);
    fun_1ba9_0dd7(0x1ba9, 0x42, 0xd21);
    fun_1ba9_0dd7(0x1ba9, 0x40, 0xd20);
    fun_1ba9_0dd7(0x1ba9, 0x41, 0xd1e);
    fun_1ba9_0dd7(0x1ba9, 0x43, 0x1394);
    fun_1ba9_0dd7(0x1ba9, 0x44, 0xd26);
    fun_1ba9_0dd7(0x1ba9, 0x45, 0x1390);
    fun_1ba9_0dd7(0x1ba9, 0x46, 0x1392);
    fun_1ba9_0dd7(0x1ba9, 0x60, 0x1b56);
    fun_1ba9_0dd7(0x1ba9, (0x1b54 == '\0') + 'U', 1);
    fun_1ba9_0dd7(0x1ba9, 0x56 - (0x1b54 == '\0'), 0);
    i_var2 = 99;
    loop {
    fun_1ba9_0dd7(0x1ba9, i_var2, 0x1b55 - i_var2 == -99);
    i_var2 = i_var2 + 1;
}
    while (i_var2 < 0x6a);
    return;
}


/*
Unable to decompile 'FUN_1ba9_0125'
Cause: Exception while decompiling 1ba9:0125: process: timeout

*/


uint  FUN_1ba9_0465()

{
let pbVar1: * mut u8; let pcVar2: String; let bVar3: u8; undefined uVar4;
let uVar5: u16; code * * ppcVar6;
let iVar7: i16; let uVar8: u16;
let uVar9: u16; let uVar10: u16;
let in_CX: i16; let extraout_DX: u16;
let iVar11: i16; let unaff_BP: u16;
let pbVar12: * mut u8; let unaff_SI: i16; let iVar13: i16; let unaff_DI: i16; let uVar14: u16; let unaff_SS: u16; let unaff_DS: u16; let uVar15: u32; let in_stack_00000008: i16; let in_stack_0000000c: u16; let bStack000d: u8; let in_stack_0000003e: u8; undefined * local_c; let piVar16: *mut u16; let puVar17: * mut u16;

pbVar12 = & stack0xfffe; FUN_3444_02c6(0x39d9);
iVar7 = FUN_2676_000c(); if (iVar7 == 0) {
uVar8 = FUN_2a60_0221(); return uVar8;
}
if ((0x138e != '\0') & & (0xabe != 0)) {
loop {
iVar7 = FUN_2a60_0570(); if (iVar7 == 2) {
return 0;
}
} while ((iVar7 == 0) & & (iVar7 = FUN_39d9_0e32(), iVar7 == 0));
}
0xd30 = 0; 0xd2e = 0; uVar8 = FUN_2199_0160(); if (uVar8 == 0x60e) {
return 0x60e;
}
if ((uVar8 == 0x606) & & (unaff_SI = FUN_2199_03be(), unaff_SI == 0)) {
return 0;
}
* (undefined * )0x138e = 0; 0xcf4 = uVar8 - 0x602; FUN_154b_0359(); uVar14 = 0xc576; 0xd02 = 0; 0xd00 = 0; uVar14 = 0xc578; local_c = ffCONCAT22(uVar14, 0x46bd); * (undefined * )0x46bd = 1; * (undefined * )0x1b53 = 1; * ff0x5ec6 = 0; * (undefined * )0xd08 = 0; iVar7 = 0x1695; 0xcf6 = iVar7; if (iVar7 == 0) {
uVar14 = 0xc582; 0xd04 = 0xffff; 0xd06 = 0xffff;
}
else {
if (iVar7 == 1) {
uVar14 = 0xc582; 0xd04 = 5000;
}
else {
if (iVar7 != 2) {
if (iVar7 != 3) goto LAB_1ba9_05e1; *local_c = 0;
}
uVar14 = 0xc582; 0xd04 = 2000;
}
0xd06 = 0;
}
// LAB_1ba9_05e1:
FUN_2b26_0e73(); FUN_2b26_08ec(); if (uVar8 == 0x606) {
FUN_337d_0068(); FUN_24bf_0004(); FUN_24bf_0fb3(); FUN_24bf_0dc9(); 0xabe = unaff_SI;
if (unaff_SI == 1) {
FUN_39d9_0e00();
}
else {
if (unaff_SI == 2) {
FUN_39d9_0e28();
}
else {
if (unaff_SI == 3) {
FUN_39d9_0dec();
}
else {
if (unaff_SI == 4) {
FUN_39d9_0e1e();
}
}
}
}
0xd2c = 0; piVar16 = 0xffff; uVar14 = 0x1d9a; FUN_1d9a_0002();
}
else {
puVar17 = 0x12b26; FUN_27ac_0287(); uVar14 = (undefined2)(puVar17 >> 0x10);
switch( * puVar17) {
case 5: uVar8 = FUN_3444_02c6(0x1000);
if ((0xd26 != '\0') & & (0x25 == '\0')) {
uVar8 = FUN_32c9_0af0();
}
return uVar8; case 6: out(extraout_DX & 0xff | ((extraout_DX >> 8) + (uVar8 + 4)) << 8,
0xff08); loop {
uVar15 = FUN_2fad_0189(); in_CX = in_CX + - 1;
} while (in_CX != 0); if (bStack000d != 0) {
uVar4 = * (undefined * )(bStack000d + 0xe); * (undefined * )0x67e6 = uVar4; if ((0x9c65 != '\x06') && (0x9c65 != '\x02')) {
out((uVar15 >> 0x10), CONCAT11(uVar4, 8));
}
uVar15 = FUN_2fad_0189();
}
uVar14 = (undefined2)(uVar15 >> 0x10); uVar8 = uVar15; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar14, 0xff08); uVar8 = 5; out(uVar14, 5);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
uVar8 = FUN_2692_01e8();
}
}
else {
if (0x853e != '\0') {
uVar8 = FUN_2692_0562();
}
}
}
pcVar2 = (char * )0x7fcc; * pcVar2 = * pcVar2 + - 1; return uVar8;
case 7: uVar9 = 0xa000; if (0x9c65 == '\x02') {
uVar9 = 0xb800;
}
uVar10 = uVar9; if ((uVar8 & 0xff) != 0) {
uVar10 = uVar9 | unaff_BP & 0xff; if ((((unaff_BP & 0x80) != 0) || ((unaff_BP & 0x8000) != 0)) || ((in_stack_0000003e & 0x80) != 0)) {
if (in_CX == 0) {
uVar8 = FUN_1f51_01e5(); * ff0x67f1 = 1; return uVar8;
}
uVar10 = FUN_1f51_01e5(); * ff0x67f1 = 1;
}
pcVar2 = (char * )0x67e8; * pcVar2 = * pcVar2 + '\x01'; in_CX = in_CX + - 1; pbVar12 = & stack0x003e;
}
if (0 < in_CX) {
loop {
bVar3 = * pbVar12; uVar10 = uVar10 & 0xff00 | bVar3; if ((((bVar3 & 0x80) != 0) || ((pbVar12[1] & 0x80) != 0)) || ((pbVar12[0x40] & 0x80) != 0)
) {
ppcVar6 = (code * * )0x67e9; uVar10 = ( * * ppcVar6)(); *(undefined * )0x67f1 = 1;
}
pcVar2 = (char * )0x67e8; * pcVar2 = * pcVar2 + '\x01'; pbVar12 = pbVar12 + 0x40; in_CX = in_CX + - 1;
} while (in_CX != 0);
}
if (((uVar8 & 0xff00) != 0) & & (((bVar3 = * pbVar12, uVar10 = uVar10 & 0xff00 | bVar3, (bVar3 & 0x80) != 0 || ((pbVar12[1] & 0x80) != 0)) || ((pbVar12[0x40] & 0x80) != 0)))) {
uVar10 = FUN_1f51_01e5(); * ff0x67f1 = 1;
}
return uVar10; case 8: pbVar1 = 0xd12;
* pbVar1 = * pbVar1 ^ 1; uVar8 = FUN_154b_0395(); return uVar8; case 9:
bVar3 = * (in_stack_00000008 * 2 + 0x740); uVar8 = SEXT12((bVar3 & 0x3f)); if ((((uVar8 & 0x23) != 0) & & ((bVar3 & 0x20) == 0)) & & ((uVar8 & 3) != 0)) {
uVar8 = (uVar8 >> 2) - 1;
}
return uVar8; case 10: if ((puVar17 & 0xff00 | (puVar17 - ( & stack0x06c2)[unaff_DI])) != 0) {
FUN_2239_0147();
}
if (((0x992c == 0x13) || (0xd1e != '\0')) & & (iVar7 = FUN_2a60_0913(), iVar7 != 0)) {
FUN_1d9a_0245();
}
if ((0x992c == 9) & & (iVar7 = FUN_2a60_0913(), iVar7 != 0)) {
FUN_1e08_1428();
}
if (((0x992c == 0x1c) || (0xd1e != '\0')) & & (iVar7 = FUN_2a60_0913(), iVar7 != 0)) {
FUN_25d6_0038();
}
if ((( * 0xa48 & 1) == 0) & & (uVar14 = 0xc47c, (0x72ee | 0x72ec) != 0)) {
FUN_3143_0c84(); uVar14 = 0xc47c; 0x72ee = 0; 0x72ec = 0;
}
if ((( * 0xaf6 & 1) == 0) & & (uVar14 = 0xc47e, (0x72f4 | 0x72f2) != 0)) {
FUN_3143_0c84(); uVar14 = 0xc47e; 0x72f4 = 0; 0x72f2 = 0;
}
if ((0x1397 == '\0') & & (iVar7 = FUN_2a60_0913(), iVar7 != 0)) {
FUN_154b_0359();
}
uVar8 = FUN_1862_247e(); if ((0x139c == 0) & & (uVar14 = 0xc482, 0x139a != 0)) {
iVar7 = 0x139a; uVar8 = iVar7 - 2;
if (uVar8 == 0) {
if (0xabe == 1) {
uVar8 = FUN_39d9_0d9c();
}
}
else {
uVar8 = iVar7 - 3; if (uVar8 == 0) {
if (0xabe == 2) {
uVar8 = FUN_39d9_0dba();
}
}
else {
uVar8 = iVar7 - 4; if ((uVar8 == 0) & & (0xabe == 3)) {
uVar8 = FUN_39d9_0d4c();
}
}
}
0x139a = 0;
}
0x10d4 = 0; return uVar8; case 0xb:
loop {
unaff_DI = unaff_DI + - 1; if (unaff_DI < 0) {
iVar7 = uVar8 * 4; FUN_3444_23fe();
uVar15 = FUN_3444_2364(); uVar14 = 0xc14e;
(uVar8 * 0x14 + 0x500) = uVar15;
(uVar8 * 0x14 + 0x502) = (uVar15 >> 0x10); uVar14 = 0xc126; (iVar7 + 0x602) = 0; (iVar7 + 0x600) = 0; uVar14 = 0xc142; (iVar7 + 0x5aa) = 0; (iVar7 + 0x5a8) = 0; uVar8 = uVar8 + 1; if (7 < uVar8) {
iVar7 = 0; loop {
iVar13 = 3; uVar14 = 0xc150; loop {
iVar11 = (iVar7 * 5 + iVar13) * 2; (iVar11 + 0x462) = (iVar11 + 0x460); iVar13 = iVar13 + - 1;
} while ( - 1 < iVar13); iVar13 = iVar7 * 2; uVar14 = FUN_3444_2364();
(iVar7 * 10 + 0x460) = uVar14;
(iVar13 + 0x440) = (iVar13 + 0x624); (iVar13 + 0x694) = 0;
(iVar13 + 0x624) = 0; iVar7 = iVar7 + 1;
} while (iVar7 < 0x10); return 0;
}
unaff_DI = 3; uVar14 = 0xc14e;
}
iVar7 = (uVar8 * 5 + unaff_DI) * 4; uVar5 = (iVar7 + 0x502);
(iVar7 + 0x504) = (iVar7 + 0x500); (iVar7 + 0x506) = uVar5;
} while ( true ); default: 0xd2c = 0; FUN_1d9a_0002(); FUN_154b_000c(); FUN_13d4_0056(); uVar14 = 0x1862; piVar16 = 0x13d4c5b5; FUN_1862_0e93();
}
}
if ( * piVar16 < 5) {
uVar14 = 0x2b26; FUN_2b26_0754();
}
if (( * 0x804 & 1) == 0) {
uVar14 = 0x154b; FUN_154b_0225();
}
if (( * 0x821 & 1) == 0) {
piVar16 = CONCAT22(uVar14, 0xc5ea); FUN_1862_0949();
}
else {
piVar16 = CONCAT22(0x100, uVar14); FUN_2b26_09bf();
}
if (4 < * piVar16) {
FUN_236f_0691();
}
FUN_2239_0193(); FUN_1d9a_0234(); FUN_20d3_0bed(); uVar8 = FUN_27ac_0287(); return uVar8;
}



fn fun_1ba9_0b99()

{
    char
    cVar1;
    let i_var2: i16;
    let u_var3: u16;
    let u_var4: u16;
    let u_var5: u16;
    let unaff_ds: u16;
    undefined
    local_1a[12];
    let local_e: i16;
    let u_stack_y12: u16;
    let local_a: u16;
    let u_stack_y8: u16;
    let pu_stack_y6: *mut u16;

    u_var4 = 0x3444;
    pu_stack_y6 = 0xc634;
    fun_3444_02c6(0x39d9);
    if (0xabe == 0) {
// LAB_1ba9_0c98:
        puStackY6 = 0x1c42;
        local_a = 0xc732;
        u_stack_y8 = u_var4;
        fun_141a_0355();
        return;
    }
// LAB_1ba9_0bb3:
    uStackY8 = 0xc64c;
    pu_stack_y6 = u_var4;
    fun_2b26_05ce();
    pu_stack_y6 = 0x2b26;
    u_stack_y8 = 0xc656;
    fun_294b_02f2();
    pu_stack_y6 = &local_a;
    u_stack_y8 = 0x1905;
    local_a = 0x294b;
    u_stack_y12 = 0xc665;
    fun_2b26_0e3b();
    pu_stack_y6 = &local_a;
    u_stack_y8 = 0x2b26;
    local_a = 0xc672;
    fun_294b_077b();
    pu_stack_y6 = 0xff3d;
    u_stack_y8 = 0x1905;
    local_a = 0x294b;
    u_stack_y12 = 0xc685;
    fun_168b_03d1();
    u_var4 = 0x294b;
    pu_stack_y6 = 0xc68d;
    fun_294b_03be();
// LAB_1ba9_0bfd:
    loop {
    u_var5 = u_var4;
    if ((*0xad9 & 1) == 0)
    break;
    pu_stack_y6 = local_1a;
    u_var5 = 0x2d56;
    local_a = 0xc6a3;
    u_stack_y8 = u_var4;
    i_var2 = fun_2d56_0ead();
    if (i_var2 != 0)
    break;
    u_var4 = 0x2a25;
    pu_stack_y6 = 0xc6ae;
    i_var2 = FUN_2a25_003c();
    if (i_var2 != 0) {
        u_var4 = 0x2a25;
        pu_stack_y6 = 0xc6b7;
        u_var3 = FUN_2a25_00b4();
        if (u_var3 != 0x73) {
            if (0x73 < u_var3)
            goto
            LAB_1ba9_0bfd;
            cVar1 = u_var3;
            if ((cVar1 != '\n') && (cVar1 != '\r')) {
                if ((cVar1 == '\x1b') || (cVar1 == 'C')) {
// LAB_1ba9_0c83:
                    puStackY6 = 0x2a25;
                    u_stack_y8 = 0xc71c;
                    fun_2b26_0754();
                    return;
                }
                if (cVar1 != 'D') {
                    if (cVar1 == 'S')
                    goto
                    LAB_1ba9_0c50;
                    if (cVar1 == 'c')
                    goto
                    LAB_1ba9_0c83;
                    if (cVar1 != 'd')
                    goto
                    LAB_1ba9_0bfd;
                }
                pu_stack_y6 = 0x2a25;
                u_var4 = 0x2b26;
                u_stack_y8 = 0xc727;
                fun_2b26_0754();
                goto
                LAB_1ba9_0c98;
            }
        }
// LAB_1ba9_0c50:
        puStackY6 = 0x2a25;
        u_stack_y8 = 0xc6e9;
        fun_2b26_0754();
        goto
        LAB_1ba9_0c5a;
    }
}
    while (true);
    u_var4 = 0x2b26;
    u_stack_y8 = 0xc705;
    pu_stack_y6 = u_var5;
    fun_2b26_0754();
    if (local_e != 0x1902) {
        if (local_e != 0x1903) {
            return;
        }
        goto
        LAB_1ba9_0c98;
    }
// LAB_1ba9_0c5a:
    puStackY6 = 0x2b26;
    u_var4 = 0x39d9;
    u_stack_y8 = 0xc6f2;
    i_var2 = FUN_39d9_0e32();
    if (i_var2 != 0)
    goto
    LAB_1ba9_0c98;
    goto
    LAB_1ba9_0bb3;
}


fn fun_1ba9_0ca8()

{
    fun_27ac_0287(0x39d9, 0);
    fun_2692_015a(0x27ac);
    fun_2692_032b(0x2692);
    fun_2692_0ab0(0x2692);
    fun_2692_030e(0x2692, 0x10, 0x10);
    fun_1ba9_0f70(0x2692, 0x9c6a, 0x6169, 0xff00);
    return;
}


fn fun_1ba9_0ce0(param_1_00: u16, param_1: u16)

{
    uint * *ppuVar1;
    let pu_var2: *mut u16;
    let u_var3: u16;
    let u_var4: u16;
    let pu_var5: *mut u16;
    let u_var6: u16;
    let pu_var7: *mut u16;
    let i_var8: i16;
    uint * *ppuVar9;
    let unaff_ds: u16;
    let pu_var10: *mut u16;

    pu_var10 = FUN_3074_00d3(0x39d9, param_1, 6);
    u_var3 = (pu_var10 + 2);
    0xa394 = *pu_var10;
    0xa396 = u_var3;
    if ((u_var3 | 0xa394) == 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3074, 0xa398);
    }
    fun_3074_034b(0x3074, param_1, 6);
    u_var4 = 0xa396;
    for (ppuVar9 = (uint * *) * (uint * *)0xa394; (ppuVar9[1] | *ppuVar9) != 0;
        ppuVar9 = ppuVar9 + 2) {
        u_var3 = 0xa394;
        i_var8 = 0xa396;
        ppuVar1 = ppuVar9;
        pu_var7 = *ppuVar1;
        *ppuVar1 = (*ppuVar1 + u_var3);
        ppuVar1 = ppuVar9 + 1;
        *ppuVar1 = (*ppuVar1 + CARRY2(pu_var7, u_var3) + i_var8);
        pu_var5 = ppuVar9[1];
        for (puVar7 = * ppuVar9; (puVar7[1] | *puVar7) != 0; puVar7 = puVar7 + 2) {
            u_var3 = 0xa394;
            i_var8 = 0xa396;
            pu_var2 = pu_var7;
            u_var6 = *pu_var2;
            *pu_var2 = *pu_var2 + u_var3;
            pu_var2 = pu_var7 + 1;
            *pu_var2 = *pu_var2 + i_var8 + CARRY2(u_var6, u_var3);
        }
    }
    fun_1ba9_131c(0x3074);
    0xa36e = 0x7fd4 + 1;
    i_var8 = 0;
    ppuVar1 = (uint * *) * (undefined4 *)
    0xa394;
    u_var4 = (ppuVar1 + 2);
    for (puVar7 = * ppuVar1; (puVar7[1] | *puVar7) != 0; puVar7 = puVar7 + 2) {
        fun_1ba9_0f2e(0x3074, (i_var8 * 2 + -0x32b0), (i_var8 * 2 + -0x32c4),
                      i_var8 + -0x200);
        i_var8 = i_var8 + 1;
    }
    return;
}


fn fun_1ba9_0dd7(param_1_00: u16, uparam_1: i16, param_2: i16)

{
    let u_var1: u32;
    let unaff_ds: u16;

    u_var1 = 
    0xa394;
    u_var1 = (u_var1 + ((param_1 & 0xfff3) >> 2) + 4);
    **(char * *)(u_var1 + (param_1 & 0xf) * 4) = (-(param_2 == 0) & 0x10) + 0x10;
    return;
}


fn fun_1ba9_0e0e()

{
    fun_2692_036e(0x39d9);
    fun_2692_0139(0x2692);
    return;
}


fn fun_1ba9_0e19(param_1_00: u16, param_1: i16)

{
    code * *ppcVar1;
    let u_var2: u16;
    let unaff_ds: u16;
    let u_var3: u16;
    let u_var4: u16;

    if (param_1 == 0) {
        u_var4 = 0;
        u_var3 = 0x101;
        u_var2 = 0xb0b;
    } else {
        u_var4 = 0xc0;
        u_var3 = 0xb0b;
        u_var2 = 0x101;
    }
    ppcVar1 = (code * *)
    0xcf68;
    (**ppcVar1)(0x39d9, u_var2, u_var3, u_var4);
    return;
}


fn fun_1ba9_0e42()

{
    let u_var1: u32;

    u_var1 = FUN_27ac_021e(0x39d9, 0xd1a, 0x2692, 100);
    FUN_1ba9_0e72(0x27ac, u_var1);
    return;
}


fn fun_1ba9_0e5d()

{
    fun_2692_0b68(0x39d9, 100, 0x728, 0x421c);
    return;
}



void FUN_1ba9_0e72(param_1_00: u16,undefined2 *param_1,param_2: u16,param_3: u16,
param_4: u16)

{
let iVar1: i16; let uVar2: u16;
let unaff_DS: u16;

uVar2 = (undefined2)(param_1 >> 0x10); iVar1 = param_1; 0xa344 = * param_1; 0xa346 = (iVar1 + 2); 0xa348 = (iVar1 + 4); 0xa34a = (iVar1 + 6);
0xa350 = param_4; 0xa34c = param_2; 0xa34e = param_3; FUN_2692_0b0d(0x39d9, 0xa344); return;
}



fn fun_1ba9_0ebc(param_1_00: u16, param_1: u16)

{
    fun_2692_0b68(0x39d9, param_1, 0x728, 0x421c);
    return;
}



void FUN_1ba9_0ed3(param_1_00: u16,undefined2 *param_1,param_2: u16,param_3: u16,
param_4: u16)

{
let iVar1: i16; let uVar2: u16;
let unaff_DS: u16;

uVar2 = (undefined2)(param_1 >> 0x10); iVar1 = param_1; 0xa344 = * param_1; 0xa346 = (iVar1 + 2); 0xa348 = (iVar1 + 4); 0xa34a = (iVar1 + 6);
0xa350 = param_4; 0xa34c = param_2; 0xa34e = param_3; FUN_2692_0b68(0x39d9, param_4, 0x728,0x421c); FUN_2692_0ad0(0x2692, 0xa344);
return;
}



fn fun_1ba9_0f2e(param_1_00: u16, param_1: i16, param_2: i16, param_3: u16)

{
    char
    cVar1;
    let unaff_ds: u16;

    cVar1 = 0x7fd6;
    0xa368 = param_1;
    0xa36c = cVar1 * param_2 + param_1;
    0xa374 = param_3;
    fun_2692_0b68(0x39d9, param_3, 0x60, 0x421c);
    fun_2692_0b0d(0x2692, 0xa368);
    return;
}


fn fun_1ba9_0f70(param_1_00: u16, undefined2 *param_1, param_2: u16)

{
    let i_var1: i16;
    let u_var2: u16;
    let unaff_ds: u16;

    u_var2 = (undefined2)(param_1 >> 0x10);
    i_var1 = param_1;
    0xa332 = *param_1;
    0xa334 = (i_var1 + 2);
    0xa336 = (i_var1 + 4);
    0xa338 = (i_var1 + 6);
    0xa33e = param_2;
    fun_2692_0b68(0x39d9, param_2, 0x3c4, 0x421c);
    fun_2692_0b0d(0x2692, 0xa332);
    return;
}


fn fun_1ba9_0fbd(param_1_00: u16, param_1: u16)

{
    fun_2692_0b68(0x39d9, param_1, 0x3c4, 0x421c);
    return;
}


fn fun_1ba9_0fd4(param_1_00: u16, undefined2 *param_1, param_2: u16)

{
    let i_var1: i16;
    let u_var2: u16;
    let unaff_ds: u16;

    u_var2 = (undefined2)(param_1 >> 0x10);
    i_var1 = param_1;
    0xa37a = *param_1;
    0xa37c = (i_var1 + 2);
    0xa37e = (i_var1 + 4);
    0xa380 = (i_var1 + 6);
    0xa386 = param_2;
    fun_2692_0b68(0x39d9, param_2, 0x60, 0x421c);
    fun_2692_0b0d(0x2692, 0xa37a);
    return;
}


fn fun_1ba9_1021(param_1_00: u16, param_1: u16)

{
    fun_2692_0b68(0x39d9, param_1, 0x60, 0x421c);
    return;
}


fn fun_1ba9_1038(param_1_00: u16, undefined2 *param_1)

{
    let unaff_ds: u16;

    *param_1 = 0xcf62;
    (param_1 + 2) = 0xcf64;
    return;
}


fn fun_1ba9_104d(param_1_00: u16, int *param_1, int *param_2) -> u16

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    let u_var5: u16;

    u_var4 = (undefined2)(param_2 >> 0x10);
    i_var3 = param_2;
    if ((*param_1 <= (i_var3 + 4)) && (*param_2 == *param_1 || *param_2 < *param_1)) {
        u_var5 = (undefined2)(param_1 >> 0x10);
        i_var2 = (param_1 + 2);
        pi_var1 = (i_var3 + 2);
        if ((*pi_var1 == i_var2 || *pi_var1 < i_var2) && (i_var3 = (i_var3 + 6), pi_var1 = (param_1 + 2),
                                                          *pi_var1 == i_var3 || *pi_var1 < i_var3)) {
            return 1;
        }
    }
    return 0;
}


fn fun_1ba9_1093(param_1_00: u16, param_1: u16)

{
    fun_2692_0bd2(0x39d9, param_1, 0x3c4, 0x421c);
    return;
}



byte FUN_1ba9_10aa()

{
let bVar1: u8; let iVar2: i16;
let unaff_DS: u16;

bVar1 = * 0xcf60 & 3; iVar2 = FUN_2692_0a3d(0x39d9, 0x52); if (iVar2 == 0) {
iVar2 = FUN_2692_0a3d(0x2692, 0x39); if (iVar2 == 0) goto LAB_1ba9_10d2;
}
bVar1 = bVar1 | 1;
// LAB_1ba9_10d2:
iVar2 = FUN_2692_0a3d(0x2692, 0x53); if (iVar2 != 0) {
bVar1 = bVar1 | 2;
}
return bVar1;
}



fn fun_1ba9_10e7()

{
    let unaff_ds: u16;
    let u_var1: u32;

    u_var1 = FUN_2692_05ab(0x39d9);
    0xcd64 = u_var1;
    0xcd66 = (u_var1 >> 0x10);
    0xcd6a = 2;
    0xcd68 = 0;
    return;
}


fn fun_1ba9_1100() -> u16

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let unaff_ds: u16;
    let u_var3: u32;

    if (0xcd6a == 0) {
        if ((0xcd68 == 0) && (i_var2 = FUN_1ba9_10aa(0x39d9), i_var2 == 0)) {
            0xcd68 = 0;
        } else {
            0xcd68 = 1;
        }
        if ((0xcd68 != 0) && (i_var2 = FUN_1ba9_10aa(0x39d9), i_var2 == 0)) {
            return 0;
        }
    } else {
        u_var3 = FUN_2692_05ab(0x39d9);
        if ((u_var3 != 0xcd64) || ((u_var3 >> 0x10) != 0xcd66)) {
            pi_var1 = 0xcd6a;
            *pi_var1 = *pi_var1 + -1;
            u_var3 = FUN_2692_05ab(0x2692);
            0xcd64 = u_var3;
            0xcd66 = (u_var3 >> 0x10);
        }
    }
    return 1;
}



void FUN_1ba9_1157(param_1_00: u16,uparam_1: i16,uparam_3: i16,param_5: u16,
param_6: u16)

{
code * * ppcVar1; let iVar2: i16;
let iVar3: i16; let iVar4: i16;
let unaff_DS: u16; let local_c: i16;
let local_a: i16; let local_8: i16;
let local_6: i16; let local_4: i16;

local_4 = FUN_3444_178e(0x39d9, param_5, param_6); iVar2 = 0x7fd6; iVar3 = param_1._1_1_ + (param_1 & 0xff) * iVar2; local_8 = iVar3 + iVar2 * local_4 + - 1;
iVar2 = 0x7fd4; iVar4 = iVar2 * (param_3 & 0xff) + (param_3._1_1_ * iVar2) / 0xe; local_6 = iVar2 + iVar4 + - 1; local_c = iVar3; local_a = iVar4; FUN_27ac_074d(0x3444, & local_c); ppcVar1 = (code * * )0xcf68; ( ** ppcVar1)(0x27ac, 0x7fda, 0x7fd8,0x7fdc); FUN_27ac_074d(0x27ac, & local_c); ppcVar1 = (code * * )0xcf68;
( * * ppcVar1)(0x27ac, 0x7fda,0x7fd8, 0x7fdc); FUN_2692_0ecc(0x27ac, iVar3, iVar4, param_5, param_6); FUN_1ba9_0f70(0x2692, & local_c); return;
}



fn fun_1ba9_122f(param_1_00: u16, uparam_1: i16, uparam_3: i16, char *param_4)

{
    code * *ppcVar1;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let u_var5: u16;
    let unaff_ds: u16;
    let local_c: i16;
    let local_a: i16;
    let local_8: i16;
    let local_6: i16;
    let local_4: i16;

    local_4 = FUN_3444_178e(0x39d9, param_4, param_4._2_2_);
    i_var2 = 0x7fd6;
    i_var3 = param_1._1_1_ + (param_1 & 0xff) * i_var2;
    local_8 = i_var2 + i_var3 + -1;
    i_var2 = 0x7fd4;
    i_var4 = i_var2 * (param_3 & 0xff) + ((param_3 >> 8) * i_var2) / 0xe;
    local_6 = i_var2 * local_4 + i_var4 + -1;
    local_c = i_var3;
    local_a = i_var4;
    fun_27ac_074d(0x3444, &local_c);
    ppcVar1 = (code * *)
    0xcf68;
    (**ppcVar1)(0x27ac, 0x7fda, 0x7fd8, 0x7fdc);
    fun_27ac_074d(0x27ac, &local_c);
    ppcVar1 = (code * *)
    0xcf68;
    (**ppcVar1)(0x27ac, 0x7fda, 0x7fd8, 0x7fdc);
    u_var5 = 0x27ac;
    while (*param_4 != '\0') {
        fun_2692_00cc(u_var5, i_var3, i_var4, *param_4);
        param_4 = (param_4 & 0xffff0000 | (param_4 + 1));
        i_var4 = i_var4 + 0x7fd4;
        u_var5 = 0x2692;
    }
    fun_1ba9_0f70(u_var5, &local_c);
    return;
}


fn fun_1ba9_131c()

{
    let unaff_ds: u16;
    let u_var1: u32;

    u_var1 = FUN_27ac_021e(0x39d9, 0xa31a, 0xa31c);
    FUN_27ac_0b00(0x27ac, u_var1);
    fun_1ba9_137d(0x27ac);
    return;
}


fn fun_1ba9_1338(param_1_00: u16, uparam_1: i16, undefined param_2)

{
    let u_var1: u32;
    let unaff_ds: u16;

    if ((0xa396 | 0xa394) == 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x39d9, 0xa3a9);
    }
    u_var1 = 
    0xa394;
    u_var1 = (u_var1 + ((param_1 & 0xfff3) >> 2) + 4);
     * (undefined4 *)(u_var1 + (param_1 & 0xf) * 4) = param_2;
    return;
}


fn fun_1ba9_137d() -> u16

{
    uint * *ppuVar1;
    let u_var2: u16;
    let i_var3: i16;
    let i_var4: i16;
    let pu_var5: *mut u16;
    let i_var6: i16;
    let u_var7: u16;
    let unaff_ds: u16;
    let pu_var8: *mut u16;
    let local_e: *mut u16;
    let local_a: i16;
    let local_8: i16;

    if ((0xa396 | 0xa394) == 0) {
        u_var2 = 0;
    } else {
        fun_1ba9_0e19(0x39d9, 1);
        pu_var8 = FUN_27ac_021e(0x39d9);
        u_var2 = (undefined2)(pu_var8 >> 0x10);
        i_var6 = pu_var8;
        DAT_5b2d_617a = *pu_var8;
        DAT_5b2d_617c = (i_var6 + 2);
        DAT_5b2d_617e = (i_var6 + 4);
        DAT_5b2d_6180 = (i_var6 + 6);
        u_var2 = 0xc886;
        0x6180 = 0x7fd4 + 0x617c + 3;
        fun_27ac_076d(0x27ac, 0x617a, 0x5b2d, 0x7fda + 0x7fdc);
        local_a = 0;
        pu_var8 = 
        0xa394;
        local_e = CONCAT22((pu_var8 + 2), *pu_var8);
        i_var6 = 0;
        u_var2 = 0x27ac;
        while (true) {
            u_var7 = (undefined2)(local_e >> 0x10);
            i_var4 = local_e;
            if (((i_var4 + 2) | *local_e) == 0)
            break;
            i_var3 = FUN_3444_178e(u_var2, *local_e, (i_var4 + 2));
            (i_var6 * 2 + -0x32c4) = i_var3;
            local_a = local_a + i_var3;
            i_var6 = i_var6 + 1;
            local_e = (local_e & 0xffff0000 | (i_var4 + 4));
            u_var2 = 0x3444;
        }
        0xa38c = i_var6;
        if (1 < i_var6) {
            i_var6 = (0x7faa / 0x7fd6 - local_a) / (i_var6 + -1);
            0xa390 = i_var6;
            if (i_var6 < 4) {
                if (i_var6 < 1) {
                    0xa390 = 1;
                }
            } else {
                0xa390 = 3;
            }
            i_var6 = 0;
            local_8 = 0;
            ppuVar1 = (uint * *) * (undefined4 *)
            0xa394;
            u_var7 = (ppuVar1 + 2);
            for (puVar5 = * ppuVar1; (puVar5[1] | *puVar5) != 0; puVar5 = puVar5 + 2) {
                (local_8 * 2 + -0x32b0) = i_var6;
                fun_27ac_0508(u_var2, i_var6, 1, *pu_var5, pu_var5[1]);
                i_var6 = i_var6 + ((local_8 * 2 + -0x32c4) + 0xa390) * 0x7fd6;
                local_8 = local_8 + 1;
                u_var2 = 0x27ac;
            }
        }
        u_var2 = 1;
    }
    return u_var2;
}


fn fun_1ba9_14ce(param_1_00: u16, param_1: i16)

{
    let unaff_ds: u16;
    undefined
    local_12[7];
    undefined
    local_b;
    let local_6: i16;

    local_b = 0;
    local_6 = param_1;
    fun_2692_09f6(0x39d9, 0x7fd6 * 4 + (param_1 * 2 + -0x32b0), 1);
    fun_1ba9_1507(0x2692, local_12);
    return;
}


fn fun_1ba9_1507(param_1_00: u16, undefined4 param_1)

{
    let u_var1: u32;
    char
    cVar2;
    let i_var3: i16;
    let u_var4: u16;
    let i_var5: i16;
    let u_var6: u16;
    let u_var7: u16;
    let u_var8: u16;
    let unaff_ds: u16;
    undefined
    local_4;
    char
    local_3;

    u_var7 = 0x39d9;
    i_var3 = FUN_1ba9_10aa(0x39d9);
    u_var8 = (undefined2)(param_1 >> 0x10);
    if (((i_var3 == 0) && ((param_1 + 7) != '\0')) || (u_var4 = *(param_1 + 0xc), u_var4 == 0xa3da)) {
        return;
    }
    u_var8 = u_var7;
    if (0xa3da == -1)
    goto
    LAB_1ba9_157a;
    loop {
    while (true) {
        while (true) {
            fun_1ba9_0e19(u_var7, 1);
            i_var5 = 0xa3da * 4;
            u_var1 =  * (undefined4 *)
            0xa394;
            u_var6 = (undefined2)(u_var1 >> 0x10);
            i_var3 = u_var1;
            u_var8 = 0x27ac;
            fun_27ac_0508(u_var7, (0xa3da * 2 + -0x32b0), 1,
                          (i_var3 + i_var5), (i_var3 + i_var5 + 2));
            0xa3da = 0xffff;
// LAB_1ba9_157a:
            if (99 < u_var4) {
                return;
            }
            fun_1ba9_0e19(u_var8, 0);
            u_var1 =  * (undefined4 *)
            0xa394;
            u_var7 = (undefined2)(u_var1 >> 0x10);
            i_var3 = u_var1;
            fun_27ac_0508(u_var8, (u_var4 * 2 + -0x32b0), 1,
                          (u_var4 * 4 + i_var3), (u_var4 * 4 + i_var3 + 2));
            0xa3da = u_var4;
            i_var3 = fun_1ba9_1663(0x27ac, &local_4);
            if (i_var3 == 0) {
                return;
            }
            u_var4 = 0xff;
            i_var3 = FUN_2a25_003c(0x27ac);
            if ((i_var3 != 0) && (cVar2 = FUN_2a25_007e(0x2a25), cVar2 == '\0'))
            break;
            u_var7 = 0x2a25;
        }
        local_3 = FUN_2a25_007e(0x2a25);
        if (local_3 != 'K')
        break;
        if (0xa3da == 0) {
            i_var3 = 0xa38c;
        } else {
            i_var3 = 0xa3da;
        }
        u_var4 = i_var3 - 1;
// LAB_1ba9_1621:
        uVar7 = 0x2692;
        fun_2692_09f6(0x2a25, 0x7fd6 * 3 + (u_var4 * 2 + -0x32b0),
                      (0x7fd4 / '\x02'));
    }
    if (local_3 == 'M') {
        u_var4 = (0xa3da + 1) % 0xa38c;
        goto
        LAB_1ba9_1621;
    }
    fun_2a25_00a3(0x2a25, local_3);
    u_var7 = 0x2a25;
    fun_2a25_00a3(0x2a25, 0);
}
    while (true);
}


// WARNING: Could not reconcile some variable overlaps

fn fun_1ba9_1663(param_1_00: u16, char *param_1, undefined4 param_2) -> u16

{
    let u_var1: u16;
    let u_var2: u32;
    let i_var3: i16;
    let i_var4: i16;
    let i_var5: i16;
    let u_var6: u16;
    let u_var7: u16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let local_256: u16;
    let local_252: i16;
    let local_250: u16;
    let local_24a: u16;
    let local_244: *mut u16;
    let local_240: u16;
    let local_23e: i16;
    let local_23c: i16;
    let local_23a: i16;
    let local_238: i16;
    let local_236: u16;
    let local_234: u16;
    uint
    local_232[250];
    let local_3e: u16;
    let local_3c: i16;
    let local_3a: i16;
    let local_38: i16;
    let local_36: i16;
    let local_34: i16;
    let local_32: i16;
    let local_30: i16;
    let local_2e: i16;
    let i_stack44: i16;
    let i_stack42: i16;
    let i_stack40: i16;
    let local_26: u32;
    undefined
    local_22[10];
    undefined
    local_18[8];
    let local_10: u16;
    let local_e: u16;
    let local_c: u16;
    let local_a: u16;
    let local_8: i16;
    let local_6: i16;
    let local_4: i16;

    local_240 = 0;
    local_36 = 0;
    local_236 = 0x9c7a;
    local_234 = 0x9c7c;
    0x9c7c = 0;
    0x9c7a = 0;
    local_3a = -1;
    fun_2a60_007b(0x39d9, 1);
    fun_2692_0a4d(0x2a60);
    local_24a = (0xa3da != -1);
    fun_1ba9_1038(0x2692, &local_3e);
    local_34 = 0;
    local_38 = 0;
    u_var7 = 0x2692;
    while (true) {
        i_var3 = local_34;
        i_var4 = local_34 * 4;
        u_var6 = (undefined2)(param_2 >> 0x10);
        i_var5 = param_2;
        if (((i_var4 + i_var5 + 2) | (i_var4 + i_var5)) == 0)
        break;
        local_8 = FUN_3444_178e(u_var7, (i_var4 + i_var5), (i_var4 + i_var5 + 2));
        if (local_38 < local_8) {
            local_38 = local_8;
        }
        local_34 = local_34 + 1;
        u_var7 = 0x3444;
    }
    local_38 = local_38 + (1 - local_24a);
    local_6 = local_34;
    if (0xa3da == -1) {
        local_23e = (local_3e & 0xfff8) + 0x10;
        local_23c = (1 - local_34) * 0x7fd4 + local_3c + -3;
    } else {
        i_var4 = 0xa3da * 2;
        local_23e = ((i_var4 + -0x32c4) - local_38 >> 1) * 0x7fd6 + (i_var4 + -0x32b0);
        if (local_23e < 0) {
            local_23e = 0;
        }
        local_23c = 0x7fd4 + 1;
    }
    local_23a = 0x7fd6 * local_38 + local_23e + 0xf;
    u_var1 = 0xc888;
    if (0x9c6e < local_23a) {
        local_34 = local_23a - 0x9c6e;
        local_23a = -(local_34 - local_23a);
        local_23e = local_23e - local_34;
    }
    i_var4 = 0x7fd4 + 5;
    if (local_23c < i_var4) {
        local_23c = i_var4;
    }
    local_238 = 0x7fd4 * i_var3 + local_23c + 5;
    i_var3 = 0x9c70;
    if (i_var3 + -5 < local_238) {
        local_34 = (local_238 - i_var3) + 5;
        local_23c = local_23c - local_34;
        local_238 = local_238 - local_34;
    }
    local_26 = FUN_27ac_078d(u_var7, &local_23e);
    local_2e = local_23e;
    i_stack44 = local_23c;
    i_stack42 = local_23a;
    i_stack40 = local_238;
    i_var3 = 0x7fd6;
    local_23e = local_23e + i_var3;
    local_23a = local_23a - i_var3;
    local_23c = local_23c + 3;
    local_238 = local_238 + -3;
    fun_1ba9_0e19(0x27ac, 1);
    fun_27ac_074d(0x27ac, &local_23e);
    fun_1ba9_0e19(0x27ac, 0);
    fun_27ac_074d(0x27ac, &local_23e);
    fun_1ba9_0e19(0x27ac, 1);
    local_30 = local_23e;
    local_32 = local_23c;
    u_var7 = 0x3444;
    fun_3444_1aca(0x27ac, local_22);
    local_244 = local_232;
    for (local_34 = 0; local_34 < local_6; local_34 = local_34 + 1) {
        u_var2 = (local_34 * 4 + i_var5);
        if ((u_var2 + 1) == '-') {
            FUN_3444_1f84(u_var7, ff(local_244 + 1), unaff_ss, 0x2d, local_38 + -2);
            (local_244 + local_38) = 0;
            (local_244 + local_38 + -1) = 0x20;
            
            local_244 = (local_244 + local_38 + -1);
        } else {
            if (local_24a == 0) {
                fun_3444_1aca(u_var7, local_244, unaff_ss, local_22);
            } else {
                fun_3444_1aca(u_var7, local_244, unaff_ss, local_22);
            }
        }
        u_var7 = 0x27ac;
        fun_27ac_0508(0x3444, local_30, local_32, local_244, unaff_ss);
        (local_244 + local_38) = 0;
        local_244 = (local_244 + local_38 + 1);
        if (&local_3e < local_244) {
            // WARNING: Subroutine does not return
            fun_2a60_08cb(0x27ac, 0xa3ed);
        }
        local_32 = local_32 + 0x7fd4;
    }
    fun_1ba9_0e42(u_var7);
    i_var3 = FUN_1ba9_10aa(u_var7);
    if (i_var3 == 0) {
        local_36 = i_var3;
    }
    local_34 = -1;
// LAB_1ba9_19ca:
    if (local_36 != 0) {
        i_var3 = FUN_1ba9_10aa(u_var7);
        if (i_var3 == 0)
        goto
        LAB_1ba9_1cbc;
    }
    i_var3 = FUN_1ba9_10aa(u_var7);
    if ((i_var3 != 0) && (local_36 == 0)) {
        local_36 = 1;
    }
    i_var3 = fun_2692_03c2(u_var7);
    if (i_var3 != 0) {
        fun_2692_03c6(0x2692, local_18);
        if ((local_c._1_1_ == -2) && ((local_c & 0xff) != 0xa3da)) {
            u_var7 = 0x2692;
            fun_2692_03a7(0x2692, local_c, local_a, local_10, local_e, 0);
// LAB_1ba9_1cbc:
            iVar3 = FUN_1ba9_10aa(u_var7);
            u_var6 = u_var7;
            if ((i_var3 == 0) && (0xa3da != -1)) {
                if (local_3a != -1) {
                    u_var6 = 0x2692;
                    fun_2692_03a7(u_var7, (0xa3da + -0x30) * 0x10 + local_3a, 0, 0, 0);
                }
                local_240 = 1;
            }
            if (local_3a != -1) {
                *param_1 = local_3a + '\x01';
            }
            fun_1ba9_0e5d(u_var6);
            fun_2692_0a79(u_var6);
            FUN_27ac_0824(0x2692, &local_2e);
            0x9c7a = local_236;
            0x9c7c = local_234;
            return local_240;
        }
    }
    if (local_36 != 0)
    goto
    LAB_1ba9_1a43;
    u_var7 = 0x2a25;
    i_var3 = FUN_2a25_003c(0x2692);
    if (i_var3 != 0) {
        u_var7 = 0x2a25;
        local_250 = FUN_2a25_00b4(0x2a25);
        if (((local_250 & 0x800) == 0) && ((*(local_250 + 0xb8f1) & 2) != 0)) {
            local_250 = local_250 - 0x20;
        }
        local_34 = local_3a;
        loop {
            if ((local_250 == 10) || (local_250 == 0xd))
            goto
            LAB_1ba9_1cbc;
            if (local_250 == 0x1b) {
// LAB_1ba9_1b5b:
                uVar7 = 0x2a25;
                local_3a = -1;
                goto
                LAB_1ba9_1cbc;
            }
            if (local_250 == 0x20)
            goto
            LAB_1ba9_1cbc;
            if (local_250 == 0x2b) {
// LAB_1ba9_1b63:
                local_34 = (local_34 + 1) % local_6;
            } else {
                if ((local_250 != 0x2d) && (local_250 != 0x848)) {
                    if (local_250 == 0x850)
                    goto
                    LAB_1ba9_1b63;
                    if ((0 < (local_250 - 0x851)) && (local_250 == 0x853 || (local_250 - 0x852) < 1)
                    )
                    goto
                    LAB_1ba9_1cbc;
                    if ((local_250 & 0x800) != 0) {
                        fun_2a25_00a3(0x2a25, local_250 & 0xff);
                        fun_2a25_00a3(0x2a25, 0);
                        goto
                        LAB_1ba9_1b5b;
                    }
                    local_252 = local_3a;
                    if ((*(local_250 + 0xb8f1) & 3) != 0)
                    goto
                    LAB_1ba9_1c61;
                    goto
                    LAB_1ba9_1bc6;
                }
                i_var3 = local_6;
                if (0 < local_34) {
                    i_var3 = local_34;
                }
                local_34 = i_var3 + -1;
            }
            u_var2 = (local_34 * 4 + i_var5);
            i_var3 = local_34;
        }
        while ((u_var2 + 1) == '-');
// LAB_1ba9_1b99:
        local_34 = i_var3;
        u_var7 = 0x2692;
        fun_2692_09f6(0x2a25, 0x7fd6 * 4 + local_30,
                      (0x7fd4 / '\x02') + 0x7fd4 * local_34 + local_23c);
    }
    goto
    LAB_1ba9_1bc6;
// LAB_1ba9_1a43:
    FUN_1ba9_1038(0x2692, &local_3e);
    u_var7 = 0x3444;
    i_var3 = FUN_3444_1eca(0x2692, &local_3e);
    if (i_var3 == 0)
    goto
    LAB_1ba9_19ca;
    local_4 = fun_1ba9_104d(0x3444, &local_3e);
    if ((((local_4 == 0) || (local_34 = (local_3c - local_23c) / 0x7fd4, local_34 < 0)) || (local_6 <= local_34)) || (u_var2 = (local_34 * 4 + i_var5), (u_var2 + 1) == '-')) {
        local_34 = -1;
    }
// LAB_1ba9_1bc6:
    if (local_34 != local_3a) {
        if (local_3a != -1) {
            fun_1ba9_0e19(u_var7, 1);
            fun_27ac_0508(u_var7, local_30, 0x7fd4 * local_3a + local_23c,
                          (local_232 + (local_38 + 1) * local_3a));
            local_3a = -1;
            u_var7 = 0x27ac;
        }
        if (local_34 != -1) {
            local_3a = local_34;
            fun_1ba9_0e19(u_var7, 0);
            fun_27ac_0508(u_var7, local_30, 0x7fd4 * local_34 + local_23c,
                          (local_232 + (local_38 + 1) * local_34));
            u_var7 = 0x27ac;
        }
    }
    goto
    LAB_1ba9_19ca;
// LAB_1ba9_1c61:
    loop {
    local_252 = local_252 + 1;
    if (local_252 < local_6) {
        u_var2 = (local_252 * 4 + i_var5);
        local_256 = SEXT12((u_var2 + 1));
        if ((*(local_256 + 0xb8f1) & 2) != 0) {
            local_256 = local_256 - 0x20;
        }
        i_var3 = local_252;
        if (local_256 == local_250)
        goto
        LAB_1ba9_1b99;
    } else {
        local_252 = -1;
    }
}
    while (local_252 != local_3a);
    goto
    LAB_1ba9_1bc6;
}


fn fun_1ba9_1d36(param_1_00: u16, param_1: i16, int *param_2, param_3: i16, param_4: i16) -> u16

{
    let i_var1: i16;

    if (param_1 == 0x2b) {
        i_var1 = *param_2 + 1;
        if (param_3 <= i_var1) {
            i_var1 = 0;
        }
    } else {
        if (param_1 != 0x2d) {
            return 0;
        }
        i_var1 = *param_2 + -1;
        if (i_var1 < 0) {
            i_var1 = param_3 + -1;
        }
    }
    fun_2692_0c4f(0x39d9, i_var1 + param_4);
    *param_2 = i_var1;
    return 1;
}


fn fun_1ba9_1d7e()

{
    let i_var1: i16;
    let u_var2: u16;
    undefined
    local_12[16];

    u_var2 = 0x39d9;
    while (true) {
        i_var1 = fun_2692_03c2(u_var2);
        if (i_var1 == 0)
        break;
        u_var2 = 0x2692;
        fun_2692_03c6(0x2692, local_12);
    }
    return;
}


fn fun_1ba9_1d9f() -> u16

{
    let i_var1: i16;
    let u_var2: u16;

    u_var2 = 0x39d9;
    loop {
    i_var1 = FUN_2a25_003c(u_var2);
    if (i_var1 == 0) {
        return 0;
    }
    u_var2 = 0x2a25;
    i_var1 = FUN_2a25_00b4(0x2a25);
}
    while (i_var1 != 0xd);
    return 1;
}


fn fun_1d85_0000()

{
    let pi_var1: *mut u16;
    let pu_var2: *mut u16;
    let u_var4: u16;
    let u_var6: u16;
    let i_var7: i16;
    let u_var8: u16;
    let u_var9: u16;
    let i_var10: i16;
    let unaff_ds: u16;
    let local_c: *mut u16;
    u16
    uVar3;
    u16
    uVar5;

    fun_3444_02c6(0x39d9);
    fun_1357_0663();
    fun_1357_0274();
    loop {
    FUN_2692_05ab();
    if ((0xabe != 0) && (0xd23 == '\0')) {
        FUN_1d85_00ef();
        u_var9 = 0xaca;
        u_var4 = 0xc5a0;
        local_c = CONCAT22(u_var4, 0xd00);
        i_var10 = 0xd02;
        if ((u_var9 >> 0xf < i_var10) || ((u_var9 >> 0xf <= i_var10 && (u_var9 < 0xd00)))) {
            i_var10 = 0xd02;
            u_var6 = 0xc5a2;
            pi_var1 = 0xd06;
            i_var7 = *pi_var1;
            if ((i_var10 <= i_var7) && ((*pi_var1 != i_var10 && i_var10 <= i_var7 || (*local_c <= 0xd04)))) {
                u_var9 = u_var9 + 1;
                pu_var2 = 0xd00;
                u_var8 = *pu_var2;
                *pu_var2 = *pu_var2 - u_var9;
                pi_var1 = 0xd02;
                *pi_var1 = (*pi_var1 - (u_var9 >> 0xf)) - (u_var8 < u_var9);
            }
        } else {
            0xd02 = 0;
            *local_c = 0;
        }
        fun_154b_012d();
    }
    if (0xd23 == '\0') {
        FUN_10f0_0a4f();
    }
    loop {
        fun_148d_03d4();
        i_var10 = FUN_2a60_0913();
    }
    while (i_var10 == 0);
}
    while (true);
}


fn fun_1d85_00e7()

{
    fun_3444_02c6(0x39d9);
    return;
}


// WARNING: Instruction at (ram,0x0001386c) overlaps instruction at (ram,0x00013869)
//
// WARNING: Removing unreachable block (ram,0x00013995)

uint FUN_1d85_00ef(param_1: i16,uparam_2: i16)

{
let pbVar1: * mut u8; let pcVar2: String; let piVar3: * mut u16; char cVar4; let bVar5: u8; let iVar6: i16; let uVar7: u16; let iVar8: i16; let in_CX: i16; let extraout_DX: u16; let uVar9: u16; let pcVar10: String; let in_BX: u16; let unaff_BP: i16; let pbVar11: * mut u8; let unaff_SI: i16; let uVar12: u16; let    uVar13: u16; let unaff_SS: u16; let    unaff_DS: u16; let lVar14: i32; let uVar15: u32; let in_stack_00000000: u16;

FUN_3444_02c6(0x39d9); piVar3 = 0xac0; * piVar3 = * piVar3 + 1; uVar12 = extraout_DX;
FUN_1205_0002(0x3444, in_stack_00000000, param_1, param_2); uVar13 = 0xc59a; uVar7 = 0xabe - 1; if (5 < uVar7) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
iVar8 = uVar7 * 2; cVar4 = in_BX;
switch(uVar7) {
case 0: (unaff_BP + - 4) = (cVar4 - in_CX) & 0x3f; iVar8 = (unaff_BP + 6) * 0x40 + (unaff_BP + - 4); (unaff_BP + - 10) = iVar8; uVar7 = (iVar8 * 2 + 0x6bd); (unaff_BP + - 8) = uVar7; if (((uVar7 & 0x3f00) == 0) & & (((iVar8 = ( * (unaff_BP + - 8) & 0xe0) >> 5, iVar8 != 0 || (( * (unaff_BP + - 7) & 0x80) != 0)) & & (bVar5 = * ((((unaff_BP + 10) & 0xfff1) >> 1) + iVar8 + 0x814),
bVar5 != 0)))) {
if (( * (unaff_BP + - 7) & 0x80) == 0) {
if (bVar5 < (DAT_616d_0a84 & 7)) {
return 0;
}
}
else {
if (bVar5 < = - (((unaff_BP + - 8) & 0x1f) - DAT_616d_0a8e)) {
return 0;
}
}
bVar5 = * (((unaff_BP + 10) >> 2) + 0x7d4); pbVar1 = (( * ((unaff_BP + - 10) + - 0x40f8) >> 2) + 0x7d4); if ( * pbVar1 < bVar5 || * pbVar1 == bVar5) {
* (undefined * )((unaff_BP + -10) + - 0x40f8) = * (undefined * )(unaff_BP + 10); return 1;
}
}
return 0; case 1: if (in_CX == 1 || iVar8 == 0) {
return in_BX & 0xff00 | (cVar4 - 0x15);
}
if (uVar7 < 0 != iVar8 < 0) goto LAB_1357_0284; code_r0x0001386f: loop {
FUN_3444_07d2(); FUN_3444_01db();
// LAB_1357_0284: while ( true ) {
while ( true ) {
loop {
unaff_SI = unaff_SI + 1; piVar3 = (unaff_BP + 6); if ( * piVar3 == unaff_SI || * piVar3 < unaff_SI) {
lVar14 = FUN_3444_1986(); if (lVar14 != 0) {
FUN_3444_1986(0x3444); iVar8 = FUN_3444_1d8c(0x3444); if (iVar8 == 0) {
* (undefined * )0x8538 = 1;
}
}
lVar14 = FUN_3143_1690(); uVar13 = 0xc418;
0xff93 = lVar14; 0xff95 = (lVar14 >> 0x10); if ((0xf4f == '\0') & & (lVar14 < 110000)) {
FUN_3444_07d2(); FUN_3444_01db();
}
FUN_3440_0043(); FUN_3440_0042(); uVar15 = FUN_3444_2108(); uVar13 = 0xc41a; 0xff8f = uVar15; 0xff91 = (uVar15 >> 0x10); 0xff8d = * * (char * * )0xff8f; iVar8 = FUN_3444_178e(); (unaff_BP + - 4) = iVar8 + - 1;
uVar15 = * ff0xff8f; uVar13 = (undefined2)(uVar15 >> 0x10); pcVar10 = (char * )(uVar15 + iVar8 + - 1); if ( * pcVar10 == '\\') {
* pcVar10 = '\0';
}
FUN_3074_000c(); FUN_27ac_0008(); FUN_3444_2278(); FUN_27ac_0b38(); FUN_1ba9_0ca8();
FUN_1ba9_0ce0(); FUN_1ba9_0000(); FUN_27ac_0bdf(); FUN_337d_0000(); FUN_168b_0028();
FUN_3444_172e(0x168b); FUN_3444_172e(0x3444);
FUN_1357_000e(); FUN_148d_0254(); FUN_1ba9_0000(); uVar7 = FUN_1357_053a(); return uVar7;
}
uVar15 = * ff(unaff_BP + 8); pcVar2 = * (char * *)(unaff_SI * 4 + uVar15); uVar13 = (undefined2)(pcVar2 >> 0x10);
} while ( * pcVar2 != '/'); iVar8 = (pcVar2 + 2); (unaff_BP + -4) = iVar8; bVar5 = * (pcVar2 + 1); if (bVar5 == 0x73) break; if (bVar5 < 0x74) {
if (bVar5 == 0x21) {
* (undefined * )0xf4f = 1;
}
else {
if (bVar5 == 0x62) {
* (undefined * )0x8538 = 1;
}
else {
if (bVar5 == 100) {
uVar7 = (unaff_BP + - 4); if (iVar8 < 0) goto code_r0x0001386f; if (uVar7 == 0x6d) {
* (undefined * )0x9c65 = 7;
}
else {
if (0x6d < uVar7) goto code_r0x0001386f; cVar4 = uVar7; if (cVar4 == '2') {
* (undefined * )0x9c65 = 6;
}
else {
if (cVar4 == 'E') {
* (undefined * )0x9c65 = 0;
}
else {
if (cVar4 == 'H') {
* (undefined * )0x9c65 = 3;
}
else {
if (cVar4 == 'M') {
* (undefined * )0x9c65 = 5;
}
else {
if (cVar4 == 'T') {
* (undefined * )0x9c65 = 2;
}
else {
if (cVar4 == 'V') {
* (undefined * )0x9c65 = 8;
}
else {
if (cVar4 != 'e') goto code_r0x0001386f; *(undefined * )0x9c65 = 4;
}
}
}
}
}
}
}
}
}
}
}
}
uVar7 = (unaff_BP + - 4); if (iVar8 < 0) break; if (uVar7 == 0x74) {
// LAB_1357_03c3:
0x8 = 3;
}
else {
if ((0x74 < uVar7) || (bVar5 = uVar7, bVar5 < 0x41)) break; if (bVar5 == 0x41 || bVar5 == 0x42) {
// LAB_1357_038b:
0x8 = 1;
}
else {
if (bVar5 == 0x43) {
// LAB_1357_0399:
0x8 = 2;
}
else {
if (bVar5 == 0x49) {
// LAB_1357_03a7:
0x8 = 0;
}
else {
if (bVar5 != 0x4e) {
if (bVar5 == 0x54) goto LAB_1357_03c3; if ((bVar5 + 0xac) < 0xd) break; if (bVar5 == 0x61 || bVar5 == 0x62) goto LAB_1357_038b; if (bVar5 == 99) goto LAB_1357_0399; if (bVar5 == 0x69) goto LAB_1357_03a7; if (bVar5 != 0x6e) break;
}
0x8 = 0xffff;
}
}
}
}
}
} while ( true ); case 2: switchD_1000_d965_caseD_2:
(unaff_BP + - 0xe) = 10; break; case 3: iVar8 = 1; loop {
if (((unaff_BP + 10) == 0) || (uVar7 = FUN_168b_05f1(), uVar7 != 0)) {
uVar9 = (iVar8 * 2 + 0x22a) + (unaff_BP + 6) / 2; uVar7 = (unaff_BP + 8) / 2 + (iVar8 * 2 + 0x23c); (unaff_BP + -2) = uVar7; if (uVar7 < 0x20) {
if (uVar7 < 0) {
(unaff_BP + - 2) = 0; goto LAB_10f0_075e;
}
}
else {
(unaff_BP + - 2) = 0x1f;
// LAB_10f0_075e:
uVar9 = uVar9 + 0x20;
}
pbVar11 = ((uVar9 & 0x3f) * 0x20 + (unaff_BP + - 2) + - 0x48fa); uVar13 = 0xc1d6; * (byte ** )(unaff_BP + - 6) = pbVar11; (unaff_BP + - 4) = uVar13;
if ((( * pbVar11 & 0xf) == 0) & & (( * (((uVar9 & 0x3f) * 0x40 + (unaff_BP + - 2)) * 4 + 0x6be) & 0x80) != 0))
{
uVar7 = iVar8 - 0x20; * (undefined4 *)(unaff_BP + - 6) = uVar7;
}
}
iVar8 = iVar8 + 1; if (8 < iVar8) {
return uVar7;
}
} while ( true ); case 4: out(uVar12, in_BX); unaff_DS = (undefined2)( * ff0x6c7 >> 0x10); if (in_CX == 2 || in_BX == 0x68e) {
0x67e2 = 0xa0;
}
else {
in_BX = in_BX & 0xff00 | ((cVar4 + ';') - (in_BX < 0x68e));
0x67ed = 0; 0x67ef = 0x3d49; 0x67e0 = 4; 0x67e2 = 0xa0;
}
if (((0x9c65 == '\x02') || (0x9c65 == '\x04')) || (0x9c65 == '\x06'))
goto LAB_1862_08b0; if ((0x9c65 == '\a') || (0x9c65 == '\b')) {
(unaff_BP + - 8) = 0x2724;
}
else {
(unaff_BP + - 8) = 10000;
}
uVar7 = SEXT12(0x9c65); if (uVar7 == 0) {
(unaff_BP + - 0xe) = 0x1c; in_BX = uVar7;
}
else {
in_BX = uVar7 - 3; if ((in_BX == 0) || (in_BX = uVar7 - 5, in_BX == 0)) goto switchD_1000_d965_caseD_2;
in_BX = uVar7 - 7; if (in_BX == 0) {
(unaff_BP + - 0xe) = 0xc;
}
else {
in_BX = uVar7 - 8; if (in_BX == 0) {
(unaff_BP + - 0xe) = 0x24;
}
}
}
break; case 5: iVar8 = ((in_BX - (unaff_BP + - 0x36)) >> 1) * in_CX + (iVar8 + - 0x32b0); (unaff_BP + - 0x23c) = iVar8; if (iVar8 < 0) {
(unaff_BP + - 0x23c) = 0;
}
(unaff_BP + - 0x23a) = 0x7fd4 + 1; iVar8 = 0x7fd6 * (unaff_BP + - 0x36) + (unaff_BP + - 0x23c) + 0xf; (unaff_BP + - 0x238) = iVar8;
uVar13 = 0xc888; if (0x9c6e < iVar8) {
iVar8 = iVar8 - 0x9c6e; (unaff_BP + -0x32) = iVar8; (unaff_BP + - 0x238) = - (iVar8 - (unaff_BP + -0x238)); piVar3 = (unaff_BP + -0x23c); * piVar3 = * piVar3 - (unaff_BP + - 0x32);
}
iVar8 = 0x7fd4 + 5; if ((unaff_BP + - 0x23a) < iVar8) {
(unaff_BP + - 0x23a) = iVar8;
}
iVar6 = 0x7fd4 * (unaff_BP + - 4) + (unaff_BP + - 0x23a) + 5;
(unaff_BP + - 0x236) = iVar6; iVar8 = 0x9c70; if (iVar8 + - 5 < iVar6) {
iVar8 = (iVar6 - iVar8) + 5;
(unaff_BP + - 0x32) = iVar8; piVar3 = (unaff_BP + - 0x23a); * piVar3 = * piVar3 - iVar8; piVar3 = (unaff_BP + - 0x236); * piVar3 = * piVar3 - iVar8;
}
uVar15 = FUN_27ac_078d(); (unaff_BP + -0x24) = uVar15; (unaff_BP + - 0x22) = (uVar15 >> 0x10); (unaff_BP + - 0x2c) = (unaff_BP + -0x23c); (unaff_BP + - 0x2a) = (unaff_BP + - 0x23a); (unaff_BP + - 0x28) = (unaff_BP + - 0x238); (unaff_BP + - 0x26) = (unaff_BP + - 0x236); iVar8 = 0x7fd6; piVar3 = (unaff_BP + - 0x23c); * piVar3 = * piVar3 + iVar8; piVar3 = (unaff_BP + - 0x238); * piVar3 = * piVar3 - iVar8; piVar3 = (unaff_BP + - 0x23a); * piVar3 = * piVar3 + 3;
piVar3 = (unaff_BP + - 0x236); *piVar3 = * piVar3 + - 3; FUN_1ba9_0e19(); FUN_27ac_074d(); FUN_1ba9_0e19();
FUN_27ac_074d(); FUN_1ba9_0e19(); (unaff_BP + - 0x2e) = (unaff_BP + - 0x23c); (unaff_BP + - 0x30) = (unaff_BP + - 0x23a); uVar13 = 0x3444;
FUN_3444_1aca(0x27ac, unaff_BP + - 0x20);
(unaff_BP + - 0x242) = unaff_BP + -0x230; (unaff_BP + - 0x240) = unaff_SS; (unaff_BP + - 0x32) = 0;
while (iVar8 = (unaff_BP + - 0x32), piVar3 = (unaff_BP + - 4),
* piVar3 != iVar8 & & iVar8 < = *piVar3) {
uVar15 = * ff(unaff_BP + 10); uVar15 = * ff(iVar8 * 4 + uVar15); if ((uVar15 + 1) == '-') {
FUN_3444_1f84(uVar13); uVar15 = * ff(unaff_BP + - 0x242); uVar13 = (undefined2)(uVar15 >> 0x10); iVar6 = uVar15; iVar8 = (unaff_BP + - 0x36); * (undefined * )(iVar6 + iVar8) = 0; * (undefined * )(iVar6 + iVar8 + - 1) = 0x20; uVar15 = * ff(unaff_BP + - 0x242); uVar13 = (undefined2)(uVar15 >> 0x10); *(undefined * )(unaff_BP + - 0x242) = * (undefined * )(uVar15 + -1 + iVar8);
}
else {
if ((unaff_BP + - 0x248) == 0) {
FUN_3444_1aca(uVar13, (unaff_BP + - 0x242), (unaff_BP + - 0x240), unaff_BP + - 0x20);
}
else {
FUN_3444_1aca(uVar13, (unaff_BP + - 0x242), (unaff_BP + - 0x240)
);
}
}
uVar13 = 0x27ac; FUN_27ac_0508(0x3444); uVar15 = * ff(unaff_BP + -0x242); uVar12 = (undefined2)(uVar15 >> 0x10); iVar6 = uVar15; iVar8 = (unaff_BP + - 0x36); * (undefined * )(iVar6 + iVar8) = 0; uVar7 = iVar6 + iVar8 + 1; (unaff_BP + - 0x242) = uVar7; (unaff_BP + - 0x240) = uVar12; if (unaff_BP - 0x3cU < uVar7) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
piVar3 = (unaff_BP + - 0x32); *piVar3 = * piVar3 + 1; piVar3 = (unaff_BP + - 0x30); * piVar3 = *piVar3 + 0x7fd4;
}
FUN_1ba9_0e42(); iVar8 = FUN_1ba9_10aa();
if (iVar8 == 0) {
(unaff_BP + - 0x34) = 0;
}
(unaff_BP + - 0x32) = 0xffff;
// LAB_1ba9_19ca: if (((unaff_BP + - 0x34) == 0) || (iVar8 = FUN_1ba9_10aa(), iVar8 != 0)) {
(unaff_BP + - 0x24c) = 1; (unaff_BP + - 0x24a) = 0; iVar8 = FUN_1ba9_10aa(); if ((iVar8 != 0) & & ((unaff_BP + - 0x34) == 0)) {
(unaff_BP + - 0x34) = 1;
}
iVar8 = FUN_2692_03c2(); if (((iVar8 == 0) || (FUN_2692_03c6(), (unaff_BP + - 9) != - 2)) || ( * (unaff_BP + -10) == 0xa3da)) {
if ((unaff_BP + - 0x34) != 0) goto LAB_1ba9_1a43; uVar13 = 0x2a25; iVar8 = FUN_2a25_003c(); if (iVar8 != 0) {
uVar13 = 0x2a25; uVar7 = FUN_2a25_00b4();
(unaff_BP + - 0x24e) = uVar7; if (((uVar7 & 0x800) == 0) & & (( * (uVar7 + 0xb8f1) & 2) != 0)) {
(unaff_BP + - 0x24e) = uVar7 - 0x20;
}
(unaff_BP + - 0x32) = (unaff_BP + - 0x38); loop {
iVar8 = (unaff_BP + - 0x24e); if ((iVar8 == 10) || (iVar8 == 0xd)) goto LAB_1ba9_1cbc; if (iVar8 == 0x1b) {
// LAB_1ba9_1b5b:
uVar13 = 0x2a25; (unaff_BP + - 0x38) = 0xffff; goto LAB_1ba9_1cbc;
}
if (iVar8 == 0x20) goto LAB_1ba9_1cbc; if (iVar8 == 0x2b) {
// LAB_1ba9_1b63:
(unaff_BP + - 0x32) = ((unaff_BP + - 0x32) + 1) % (unaff_BP + - 4);
}
else {
if ((iVar8 != 0x2d) & & (iVar8 != 0x848)) {
if (iVar8 == 0x850) goto LAB_1ba9_1b63; if ((0 < iVar8 + - 0x851) && (iVar8 == 0x853 || iVar8 + -0x852 < 1))
goto LAB_1ba9_1cbc; if (( * (unaff_BP + - 0x24d) & 8) != 0) {
FUN_2a25_00a3(); FUN_2a25_00a3(); goto LAB_1ba9_1b5b;
}
uVar12 = (unaff_BP + - 0x38); (unaff_BP + - 0x252) = uVar12; (unaff_BP + - 0x250) = uVar12; if ((* ((unaff_BP + - 0x24e) + -0x470f) & 3) != 0) goto LAB_1ba9_1c61; goto LAB_1ba9_1bc6;
}
if ((unaff_BP + - 0x32) < 1) {
iVar8 = (unaff_BP + - 4);
}
else {
iVar8 = (unaff_BP + - 0x32);
}
(unaff_BP + - 0x32) = iVar8 + -1;
}
uVar15 = * ff(unaff_BP + 10); uVar15 = * ff((unaff_BP + - 0x32) * 4 + uVar15);
} while ((uVar15 + 1) == '-');
// LAB_1ba9_1b99:
uVar13 = 0x2692; FUN_2692_09f6();
}
goto LAB_1ba9_1bc6;
}
uVar13 = 0x2692; FUN_2692_03a7(0x2692, (unaff_BP + - 10));
}
// LAB_1ba9_1cbc:
iVar8 = FUN_1ba9_10aa(); if ((iVar8 == 0) & & (0xa3da != - 1)) {
if ((unaff_BP + - 0x38) != -1) {
FUN_2692_03a7(uVar13);
}
(unaff_BP + - 0x23e) = 1;
}
if ((unaff_BP + - 0x38) != -1) {
* * (char * * )(unaff_BP + 6) = (unaff_BP + - 0x38) + '\x01';
}
FUN_1ba9_0e5d(); FUN_2692_0a79(); FUN_27ac_0824(0x2692); uVar13 = (unaff_BP + - 0x232); 0x9c7a = (unaff_BP + - 0x234); 0x9c7c = uVar13; return (unaff_BP + -0x23e);
}
(unaff_BP + - 6) = 0x1cfb; (unaff_BP + - 4) = 0x5b2d; (unaff_BP + - 2) = 0; while ((unaff_BP + - 2) < 0xb) {
uVar13 = (unaff_BP + - 4); uVar12 = 0xc522; iVar8 = (unaff_BP + - 2) * 4; (iVar8 + 0x1e87) = (unaff_BP + - 6); (iVar8 + 0x1e89) = uVar13; uVar15 = FUN_3074_00d3(); (unaff_BP + - 0xc) = uVar15;
(unaff_BP + - 10) = (uVar15 >> 0x10); FUN_3444_1f26(0x3074, (unaff_BP + - 6)); piVar3 = (unaff_BP + - 8); * piVar3 = * piVar3 + 1; FUN_3074_01d4(); in_BX = (unaff_BP + - 0xe); piVar3 = (unaff_BP + - 6); * piVar3 = * piVar3 + in_BX; piVar3 = (unaff_BP + - 2); * piVar3 = * piVar3 + 1;
}
// LAB_1862_08b0: if (0x9c65 == '\x06') {
uVar15 = FUN_3074_00d3(); (unaff_BP + -0xc) = uVar15; (unaff_BP + - 10) = (uVar15 >> 0x10); (unaff_BP + - 2) = 0; while ((unaff_BP + - 2) < 0x300) {
uVar15 = * ff * ff(unaff_BP + - 0xc); pcVar2 = (char * )(uVar15 + (unaff_BP + - 2)); * pcVar2 = *pcVar2 >> 2; piVar3 = (unaff_BP + - 2); * piVar3 = * piVar3 + 1;
}
(unaff_BP + - 0x1e) = 0x1012; (unaff_BP + - 0x1c) = 0; (unaff_BP + - 0x1a) = 0x100; (unaff_BP + - 0x18) = * ff(unaff_BP + - 0xc); uVar15 = * ff(unaff_BP + - 0xc);
(unaff_BP + - 0x26) = (uVar15 + 2); FUN_3444_1be4(0x3074, 0x10, unaff_BP + - 0x1e); in_BX = FUN_3074_01d4();
}
* (undefined * )0x1a06 = 1; return in_BX;
// LAB_1ba9_1a43:
FUN_1ba9_1038(); uVar13 = 0x3444;
iVar8 = FUN_3444_1eca(0x2692, unaff_BP + - 0x3c); if (iVar8 == 0) goto LAB_1ba9_19ca; uVar12 = (unaff_BP + - 0x3a);
(unaff_BP + - 0x246) = (unaff_BP + - 0x3c); (unaff_BP + - 0x244) = uVar12; iVar8 = FUN_1ba9_104d(0x3444);
(unaff_BP + - 2) = iVar8; if (iVar8 != 0) {
iVar8 = ((unaff_BP + - 0x3a) - (unaff_BP + - 0x23a)) / 0x7fd4;
(unaff_BP + - 0x32) = iVar8; if ((( - 1 < iVar8) & & (iVar8 < (unaff_BP + - 4))) & & (uVar15 = * (undefined4 *)(unaff_BP + 10), uVar15 = *ff(iVar8 * 4 + uVar15),
(uVar15 + 1) != '-')) goto LAB_1ba9_1bc6;
}
(unaff_BP + - 0x32) = 0xffff;
// LAB_1ba9_1bc6:
iVar8 = (unaff_BP + - 0x38); if ((unaff_BP + - 0x32) != iVar8) {
if (iVar8 != - 1) {
FUN_1ba9_0e19(); FUN_27ac_0508(uVar13); (unaff_BP + - 0x38) = 0xffff; uVar13 = 0x27ac;
}
if ((unaff_BP + - 0x32) != -1) {
(unaff_BP + - 0x38) = (unaff_BP + - 0x32); FUN_1ba9_0e19(); FUN_27ac_0508(uVar13); uVar13 = 0x27ac;
}
}
goto LAB_1ba9_19ca;
// LAB_1ba9_1c61:
loop {
iVar8 = (unaff_BP + - 4); piVar3 = (unaff_BP + - 0x250); * piVar3 = * piVar3 + 1; if ((unaff_BP + - 0x250) < iVar8) {
uVar15 = * ff(unaff_BP + 10); uVar15 = * ff((unaff_BP + - 0x250) * 4 + uVar15); iVar8 = (uVar15 + 1); (unaff_BP + - 0x254) = iVar8;
if (( * (iVar8 + - 0x470f) & 2) != 0) {
(unaff_BP + - 0x254) = iVar8 + -0x20;
}
if ((unaff_BP + - 0x254) == (unaff_BP + - 0x24e)) {
(unaff_BP + - 0x32) = (unaff_BP + - 0x250); goto LAB_1ba9_1b99;
}
}
else {
(unaff_BP + - 0x250) = 0xffff;
}
} while ((unaff_BP + - 0x250) != (unaff_BP + - 0x252)); goto LAB_1ba9_1bc6;
}


// WARNING: Could not reconcile some variable overlaps

uint FUN_1d9a_0002(param_1_00: u16,char *param_1,undefined4 param_3)

{
let pbVar1: * mut u8; let pcVar2: String; let piVar3: * mut u16; let bVar5: u8; let uVar7: u16; u16 in_CX; u8 uVar6; let iVar8: i16;
let uVar9: u16; let pbVar10: * mut u8; let unaff_SI: i16; let iVar11: i16; let uVar12: u16; let uVar13: u16; undefined * puVar14; let unaff_SS: u16; let unaff_DS: u16; let uVar15: u32; let uStackY598: u16; let iStackY594: i16; let uStackY592: u16; let iStackY586: i16; undefined * puStackY580; let uStackY576: u16;
let iStackY574: i16; let iStackY572: i16;
let iStackY570: i16; let iStackY568: i16;
u16 uStackY566; u16 uStackY564; undefined auStackY562 [500]; undefined auStackY62 [2]; let iStackY60: i16; let iStackY58: i16; let iStackY56: i16; let iStackY54: i16; let iStackY52: i16; let iStackY50: i16; let iStackY48: i16; let iStackY46: i16; let iStackY44: i16; let iStackY42: i16; let iStackY40: i16; u32 uStackY38; undefined * puStackY34;
let uStack16: u16; u32 uStack14; let iStack8: i16; let uVar16: u16; u8 bVar4;

uVar7 = FUN_3444_02c6(0x39d9); if (param_1 == - 1) {
0x1f2b = 0x1f; return uVar7;
}
if (param_1 == 10) {
piVar3 = 0x1f2b; * piVar3 = * piVar3 + - 1;
}
for (iVar8 = 0; uVar6 = (u8)(in_CX >> 8), iVar8 < 0x1f; iVar8 = iVar8 + 1) {
in_CX = CONCAT11(uVar6, 5); iVar11 = (param_1 * 0x20 + iVar8) * 2; (iVar11 + - 0x18cf) = (iVar11 + - 0x18cd);
}
uVar7 = (param_1 * 2 + 0x1d5c);
uStack16 = uVar7 >> 0xf; FUN_3444_23fe(); uVar15 = FUN_3444_2364(); uVar16 = uVar15; uVar12 = uVar16; if (uVar16 < 0) {
uVar12 = 0;
}
if (uVar12 < 0xf0) {
(param_1 * 0x40 + - 0x1891) = uVar12;
}
else {
(param_1 * 0x40 + - 0x1891) = 0xef;
}
* (undefined * )0x1e12 = 1; if (0x1b56 == 0) {
return uVar16;
}
uVar13 = 0xc5ac; uVar12 = 0x1b55; uVar9 = uVar12 * 2; if ((uVar9 + 0x1d1e) != param_1) {
return uVar16;
}
if (6 < uVar12) {
return uVar12;
}
switch(uVar12) {
case 0: FUN_1357_019a(); FUN_1357_019a(); FUN_1357_019a(); FUN_1357_019a(); FUN_1357_019a(); uVar7 = FUN_1357_019a(); return uVar7; case 1: switchD_1000_d965_caseD_2: uStack16 = 10; break; case 2: iVar8 = 1;
loop {
if ((param_3 == 0) || (uVar7 = FUN_168b_05f1(), uVar7 != 0)) {
uVar12 = (iVar8 * 2 + 0x22a) + param_1 / 2; uVar7 = param_1._2_2_ / 2 + (iVar8 * 2 + 0x23c);
if (uVar7 < 0x20) {
uVar16 = uVar7; if (uVar7 < 0) {
uVar16 = 0; goto LAB_10f0_075e;
}
}
else {
uVar16 = 0x1f;
// LAB_10f0_075e:
uVar12 = uVar12 + 0x20;
}
pbVar10 = ((uVar12 & 0x3f) * 0x20 + uVar16 + - 0x48fa); uVar13 = 0xc1d6; _iStack8 = (undefined * )CONCAT22(uVar13, pbVar10); if ((( * pbVar10 & 0xf) == 0) & & ((* (((uVar12 & 0x3f) * 0x40 + uVar16) * 4 + 0x6be) & 0x80) != 0)) {
uVar7 = iVar8 - 0x20; * _iStack8 = uVar7;
}
}
iVar8 = iVar8 + 1; if (8 < iVar8) {
return uVar7;
}
} while ( true ); case 3: out((uVar15 >> 0x10), uVar9);
unaff_DS = (undefined2)( * (undefined4 *)0x6c7 >> 0x10); if (CONCAT11(uVar6, 6) == 2 || uVar9 == 0x68e) {
0x67e2 = 0xa0;
}
else {
uVar9 = uVar9 & 0xff00 | ((uVar9 + ';') - (uVar9 < 0x68e));
0x67ed = 0; 0x67ef = 0x3d49; 0x67e0 = 4; 0x67e2 = 0xa0;
}
if (((0x9c65 == '\x02') || (0x9c65 == '\x04')) || (0x9c65 == '\x06'))
goto LAB_1862_08b0; uVar7 = SEXT12(0x9c65); if (uVar7 == 0) {
uStack16 = 0x1c; uVar9 = uVar7;
}
else {
uVar9 = uVar7 - 3; if ((uVar9 == 0) || (uVar9 = uVar7 - 5, uVar9 == 0)) goto switchD_1000_d965_caseD_2;
uVar9 = uVar7 - 7; if (uVar9 == 0) {
uStack16 = 0xc;
}
else {
uVar9 = uVar7 - 8; if (uVar9 == 0) {
uStack16 = 0x24;
}
}
}
break; case 4: iStackY574 = ((uVar9 - iStackY56) >> 1) * CONCAT11(uVar6, 6) + (uVar12 * 2 + - 0x32b0); if (iStackY574 < 0) {
iStackY574 = 0;
}
iStackY572 = 0x7fd4 + 1; iStackY570 = 0x7fd6 * iStackY56 + iStackY574 + 0xf; uVar13 = 0xc888;
if (0x9c6e < iStackY570) {
iStackY52 = iStackY570 - 0x9c6e; iStackY570 = - (iStackY52 - iStackY570); iStackY574 = iStackY574 - iStackY52;
}
iVar8 = 0x7fd4 + 5; if (iStackY572 < iVar8) {
iStackY572 = iVar8;
}
iStackY568 = 0x7fd4 * unaff_SI + iStackY572 + 5;
iVar8 = 0x9c70; if (iVar8 + - 5 < iStackY568) {
iStackY52 = (iStackY568 - iVar8) + 5;
iStackY572 = iStackY572 - iStackY52; iStackY568 = iStackY568 - iStackY52;
}
uStackY38 = FUN_27ac_078d(); iStackY46 = iStackY574;
iStackY44 = iStackY572; iStackY42 = iStackY570; iStackY40 = iStackY568; iStackY48 = iStackY574 + 0x7fd6; FUN_1ba9_0e19(); FUN_27ac_074d(); FUN_1ba9_0e19();
FUN_27ac_074d(); FUN_1ba9_0e19(); puStackY34 = (undefined * )0x27ac; puVar14 = (undefined * )0x3444; uStackY38._2_2_ = (undefined * )0xd31c; iStackY50 = iStackY572 + 3;
FUN_3444_1aca(); puStackY580 = auStackY562; for (iStackY52 = 0; uVar13 = (undefined2)(param_3 >> 0x10), iStackY52 < unaff_SI;
iStackY52 = iStackY52 + 1) {
uVar15 = * ff(iStackY52 * 4 + param_3); if ((uVar15 + 1) == '-') {
puStackY34 = (undefined * )0xd41d; FUN_3444_1f84(); puStackY580[iStackY56] = 0; puStackY580[iStackY56 + - 1] = 0x20; *puStackY580 = puStackY580[iStackY56 + - 1];
}
else {
if (iStackY586 == 0) {
uStackY38._2_2_ = puStackY580; iStackY40 = - 0x2c67; uStackY38._0_2_ = puVar14; FUN_3444_1aca();
}
else {
puStackY34 = puStackY580; uStackY38._0_2_ = (undefined * )0xd35c; uStackY38._2_2_ = puVar14;
FUN_3444_1aca();
}
}
puVar14 = (undefined * )0x27ac; puStackY34 = (undefined * )0xd3af; FUN_27ac_0508();
puStackY580[iStackY56] = 0; puStackY580 = puStackY580 + iStackY56 + 1; if (auStackY62 < puStackY580) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
iStackY50 = iStackY50 + 0x7fd4;
}
FUN_1ba9_0e42(); iVar8 = FUN_1ba9_10aa();
if (iVar8 == 0) {
iStackY54 = iVar8;
}
iStackY52 = - 1;
// LAB_1ba9_19ca: if ((iStackY54 != 0) & & (iVar8 = FUN_1ba9_10aa(), iVar8 == 0)) goto LAB_1ba9_1cbc; iVar8 = FUN_1ba9_10aa(); if ((iVar8 != 0) & & (iStackY54 == 0)) {
iStackY54 = 1;
}
iVar8 = FUN_2692_03c2(); if (iVar8 != 0) {
FUN_2692_03c6(); uStack14._3_1_ = (param_3 >> 8); if ((uStack14._3_1_ == - 2) & & ((param_3 & 0xff) != 0xa3da)) {
puStackY34 = (undefined * )0x2692; uStackY38._2_2_ = (undefined * )0xd4c4; FUN_2692_03a7();
// LAB_1ba9_1cbc:
iVar8 = FUN_1ba9_10aa(); if ((iVar8 == 0) & & (0xa3da != - 1)) {
if (iStackY58 != - 1) {
puStackY34 = (undefined * )0xd777; FUN_2692_03a7();
}
uStackY576 = 1;
}
if (iStackY58 != - 1) {
* param_1 = iStackY58 + '\x01';
}
FUN_1ba9_0e5d(); FUN_2692_0a79(); puStackY34 = (undefined * )0xd7aa; FUN_27ac_0824();
* (u16 * )0x9c7a = uStackY566; *(u16 * )0x9c7c = uStackY564; return uStackY576;
}
}
if (iStackY54 != 0) goto LAB_1ba9_1a43; iVar8 = FUN_2a25_003c(); if (iVar8 != 0) {
uStackY592 = FUN_2a25_00b4(); if (((uStackY592 & 0x800) == 0) & & (( * (uStackY592 + 0xb8f1) & 2) != 0)) {
uStackY592 = uStackY592 - 0x20;
}
iStackY52 = iStackY58; loop {
if ((uStackY592 == 10) || (uStackY592 == 0xd)) goto LAB_1ba9_1cbc; if (uStackY592 == 0x1b) {
// LAB_1ba9_1b5b:
iStackY58 = - 1; goto LAB_1ba9_1cbc;
}
if (uStackY592 == 0x20) goto LAB_1ba9_1cbc; if (uStackY592 == 0x2b) {
// LAB_1ba9_1b63:
iStackY52 = (iStackY52 + 1) % unaff_SI;
}
else {
if ((uStackY592 != 0x2d) & & (uStackY592 != 0x848)) {
if (uStackY592 == 0x850) goto LAB_1ba9_1b63; if ((0 < (uStackY592 - 0x851)) & & (uStackY592 == 0x853 || (uStackY592 - 0x852) < 1)) goto LAB_1ba9_1cbc;
if ((uStackY592 & 0x800) != 0) {
FUN_2a25_00a3(); FUN_2a25_00a3(); goto LAB_1ba9_1b5b;
}
iStackY594 = iStackY58; if (( * (uStackY592 + 0xb8f1) & 3) != 0) goto LAB_1ba9_1c61; goto LAB_1ba9_1bc6;
}
iVar8 = unaff_SI; if (0 < iStackY52) {
iVar8 = iStackY52;
}
iStackY52 = iVar8 + - 1;
}
uVar15 = * ff(iStackY52 * 4 + param_3); iVar8 = iStackY52;
} while ((uVar15 + 1) == '-');
// LAB_1ba9_1b99:
iStackY52 = iVar8; FUN_2692_09f6();
}
goto LAB_1ba9_1bc6; case 5: if (((uVar9 & 0x3f00) == 0) & & (((iVar8 = (uVar9 & 0xe0) >> 5, iVar8 != 0 || ((uVar9 & 0x8000) != 0)) & &
(bVar5 = * (((param_3 & 0xfff1) >> 1) + iVar8 + 0x814), bVar5 != 0)))) {
if ((uVar9 & 0x8000) == 0) {
if (bVar5 < (DAT_616d_0a84 & 7)) {
return 0;
}
}
else {
if (bVar5 < = - ((uVar9 & 0x1f) - DAT_616d_0a8e)) {
return 0;
}
}
bVar5 = * ((param_3 >> 2) + 0x7d4); pbVar1 = (( * (param_3 + 0xbf08) >> 2) + 0x7d4); if ( * pbVar1 < bVar5 || * pbVar1 == bVar5) {
* (undefined * )(param_3 + 0xbf08) = param_3; return 1;
}
}
return 0; case 6: FUN_3444_02c6(0x1000); uVar7 = uVar7 & 3; 0x1442 = uVar7; iVar11 = uVar7 * 3; puStackY34 = (undefined * )0x8762; FUN_2b26_0402(); for (iVar8 = 0; iVar8 < 0xc; iVar8 = iVar8 + 1) {
if ((iVar8 < iVar11) || (iVar11 + 3 < = iVar8)) {
puStackY34 = (undefined * )0xffff; uStackY38._2_2_ = (undefined * )(iVar8 + 0x105); uStackY38._0_2_ = (undefined * )0x2b26; iStackY40 = 0x87ee; FUN_2b26_0edc();
if (iVar8 % 3 == 0) {
puStackY34 = (undefined * )0xffff; uStackY38._2_2_ = (undefined * )(iVar8 / 3 + 0x111); uStackY38._0_2_ = (undefined * )0x2b26; iStackY40 = 0x881a; FUN_2b26_0edc();
}
}
else {
puStackY34 = (undefined * )0xffff; uStackY38._2_2_ = (undefined * )(iVar8 + 0x105); uStackY38._0_2_ = (undefined * )0x2b26; iStackY40 = 0x87a6; FUN_2b26_0edc();
if (iVar8 % 3 == 0) {
puStackY34 = (undefined * )0xffff; uStackY38._2_2_ = (undefined * )(iVar8 / 3 + 0x111); uStackY38._0_2_ = (undefined * )0x2b26; iStackY40 = 0x87d2; FUN_2b26_0edc();
}
}
}
puStackY34 = (undefined * )0x8829; FUN_2b26_0363(); puStackY34 = (undefined * )0x0;
uStackY38._2_2_ = (undefined * )0x11b;
uStackY38._0_2_ = (undefined * )0x2b26;
iStackY40 = 0x883f; uVar7 = FUN_2b26_0e73();
if (( * 0x821 & 1) != 0) {
puStackY34 = (undefined * )0x885a; FUN_294b_02f2(); FUN_1862_2440(); puStackY34 = (undefined * )0x1862; uStackY38._2_2_ = (undefined * )0x886d; FUN_2b26_0008(); puStackY34 = (undefined * )0x2b26; uStackY38._2_2_ = (undefined * )0x8876; FUN_2c63_058f();
FUN_1862_2381(); uVar7 = FUN_294b_03be();
}
return uVar7;
}
_iStack8 = (undefined * )0x5b2d1cfb; for (iVar8 = 0; iVar8 < 0xb; iVar8 = iVar8 + 1) {
uVar13 = 0xc522; (iVar8 * 4 + 0x1e87) = iStack8; (iVar8 * 4 + 0x1e89) = (_iStack8 >> 0x10); FUN_3074_00d3(); puStackY34 = (undefined * )0x3074; uStackY38._2_2_ = (undefined * )0x8eb3; FUN_3444_1f26(); FUN_3074_01d4(); _iStack8 = (undefined * )(_iStack8 & 0xffff0000 | (iStack8 + uStack16)); uVar9 = uStack16;
}
// LAB_1862_08b0: if (0x9c65 == '\x06') {
uStack14 = FUN_3074_00d3(); for (iVar8 = 0; iVar8 < 0x300; iVar8 = iVar8 + 1) {
pcVar2 = (char * )( * ffuStack14 + iVar8); * pcVar2 = * pcVar2 >> 2;
}
puStackY34 = & stack0xffe0; uStackY38._2_2_ = (undefined * )0x10; uStackY38._0_2_ = (undefined * )0x3074; iStackY40 = 0x8f4c; FUN_3444_1be4(); uVar9 = FUN_3074_01d4();
}
* (undefined * )0x1a06 = 1; return uVar9;
// LAB_1ba9_1a43:
FUN_1ba9_1038(); puStackY34 = (undefined * )0x2692; uStackY38._2_2_ = (undefined * )0xd4f2; iVar8 = FUN_3444_1eca();
if (iVar8 == 0) goto LAB_1ba9_19ca; puStackY34 = (undefined * )0xd519; iVar8 = FUN_1ba9_104d(); if ((((iVar8 == 0) || (iStackY52 = (iStackY60 - (iStackY572 + 3)) / 0x7fd4, iStackY52 < 0)) || (unaff_SI < = iStackY52)) || (uVar15 = * ff(iStackY52 * 4 + param_3), (uVar15 + 1) == '-')) {
iStackY52 = - 1;
}
// LAB_1ba9_1bc6: if (iStackY52 != iStackY58) {
if (iStackY58 != - 1) {
FUN_1ba9_0e19(); puStackY34 = (undefined * )0xd690; FUN_27ac_0508(); iStackY58 = - 1;
}
if (iStackY52 != - 1) {
iStackY58 = iStackY52; FUN_1ba9_0e19(); puStackY34 = (undefined * )0xd6d2; FUN_27ac_0508();
}
}
goto LAB_1ba9_19ca;
// LAB_1ba9_1c61:
loop {
iStackY594 = iStackY594 + 1; if (iStackY594 < unaff_SI) {
uVar15 = * ff(iStackY594 * 4 + param_3); uStackY598 = SEXT12((uVar15 + 1)); if (( *(uStackY598 + 0xb8f1) & 2) != 0) {
uStackY598 = uStackY598 - 0x20;
}
iVar8 = iStackY594; if (uStackY598 == uStackY592) goto LAB_1ba9_1b99;
}
else {
iStackY594 = - 1;
}
} while (iStackY594 != iStackY58); goto LAB_1ba9_1bc6;
}



fn fun_1d9a_010d()

{
    let i_var1: i16;
    let i_var2: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var2 = 0;
    loop {
    // for (iVar1 = 0; i_var1 < 0x20; iVar1 = iVar1 + 1) {
        for i_var1 in 0 .. 0x20 {
        ((i_var2 * 0x20 + i_var1) * 2 + -0x18cf) = 0;
    }
    i_var2 = i_var2 + 1;
}
    while (i_var2 < 0x12);
    return;
}


fn fun_1d9a_0147()

{
    code * *ppcVar1;
    let unaff_ds: u16;
    let local_a: i16;
    let local_8: i16;
    let local_6: *mut u16;
    let i_var2: i16;

    local_6 = 0xdaf2;
    fun_3444_02c6(0x39d9);
    local_6 = &local_a;
    local_8 = 0x1303;
    local_a = 0x3444;
    fun_2b26_0e3b();
    i_var2 = 0x2b26;
    local_6 = 0xdb07;
    ppcVar1 = (code * *)
    0xcf6c;
    (**ppcVar1)();
    0x1f44 = (-local_a - (0x7fd6 * 6 - local_6)) + -2;
    0x1da4 = (i_var2 - local_8) + -2;
    local_6 = 0xdb2e;
    ppcVar1 = (code * *)
    0xcf70;
    (**ppcVar1)();
    local_6 = 0x2b26;
    local_8 = 0xdb37;
    fun_2b26_05ce();
    return;
}


fn fun_1d9a_019c()

{
    char
    cVar1;
    let i_var2: i16;
    let u_var3: u16;
    let i_var4: i16;
    let u_var5: u16;
    let unaff_ds: u16;

    u_var5 = 0x3444;
    fun_3444_02c6(0x39d9);
    i_var4 = 0;
    loop {
    i_var2 = (i_var4 * 2 + 0x1d52);
    if (i_var2 == -0x8000)
    break;
    if ((i_var2 + 0x1f2d) != '\0') {
        fun_168b_02a9(u_var5, i_var2 + 0x1305);
        if (0x7faa == 0x140) {
            u_var3 = 0xffff;
        } else {
            u_var3 = 0xfffe;
        }
        u_var5 = 0x168b;
        fun_168b_0409(0x168b, i_var2 + 0x1305,
                      ((i_var2 * 2 + -0x33a6) * 2 + 0x1d2c), u_var3);
    }
    i_var4 = i_var4 + 1;
}
    while (i_var4 < 4);
    cVar1 = 0x1e12;
    if (cVar1 != '\0') {
        fun_294b_0b7c(u_var5);
        u_var5 = 0x294b;
        fun_294b_02f2(0x294b, 0x13);
    }
    fun_1d9a_0273(u_var5);
    if (cVar1 != '\0') {
        fun_294b_0c76(u_var5);
    }
    return;
}


fn fun_1d9a_0234()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    
    0x1e12 = 1;
    fun_1d9a_0245(0x3444);
    return;
}


fn fun_1d9a_0245()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((0x1e12 != '\0') && ((*0xa2b & 1) != 0)) {
        fun_294b_02f2(0x3444, 0x1300);
        fun_1d9a_0273(0x294b);
        fun_294b_03be(0x294b);
    }
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_1d9a_0273()

{
    let u_var1: u16;
    let u_var2: u16;
    code * *ppcVar3;
    let i_var4: i16;
    let i_var5: i16;
    let pi_var6: *mut u16;
    let i_var7: i16;
    let i_var8: i16;
    let u_var9: u16;
    let i_var10: i16;
    let i_var11: i16;
    let unaff_ds: u16;
    let local_1e: *mut u16;
    let local_1a: *mut u16;
    let local_16: *mut u16;
    let i_var12: i16;
    let i_var13: i16;

    fun_3444_02c6(0x39d9);
    
    0x1e12 = 0;
    local_16 = 0x5b2d1f3c;
    fun_2b26_0e3b(0x3444, 0x1303, 0x1f3c, 0x5b2d);
    fun_294b_0b7c(0x2b26);
    fun_294b_077b(0x294b, 0x1f3c, 0x5b2d);
    fun_168b_0685(0x294b, 0x1303);
    i_var10 = 0x294b;
    fun_294b_0c76(0x168b);
    ppcVar3 = (code * *)
    0xcf6c;
    (**ppcVar3)(0x294b);
    i_var7 = 0;
    loop {
    if ((i_var7 + 0x1f2d) != '\0') {
        u_var2 = ((i_var7 * 2 + -0x33a6) * 2 + 0x1d2c);
        if (0x1f2b < 1) {
            u_var1 = 0xc5b6;
        } else {
            u_var1 = 0xc5b6;
        }
        local_1a = CONCAT22(u_var1, 0x1f42);
        i_var13 = 0xf0f;
        ppcVar3 = (code * *)
        0xcf68;
        (**ppcVar3)(i_var10, u_var2, 0xf0f, u_var2);
        i_var4 = 0x7fd4;
        i_var13 = i_var13 - i_var4;
        u_var2 = 0xc5b6;
        local_1e = CONCAT22(u_var2, 0x1f3e);
        if (i_var13 < 0x1f3e) {
            i_var13 = 0x1f3e;
        } else {
            if (*local_1a - i_var4 < i_var13) {
                i_var13 = *local_1a - i_var4;
            }
        }
        i_var5 = i_var7 * 4;
        i_var8 = (i_var5 + 0x1da6);
        i_var4 = *local_16;
        fun_2692_0ecc(i_var10, i_var4, i_var13, i_var8, (i_var5 + 0x1da8));
        i_var11 = 0x2692;
        // for (iVar13 = 1; i_var13 < 0x20; iVar13 = iVar13 + 1) {
        for i_var13 in 1 .. 0x20 {
            if (0x1f2b < i_var13) {
                i_var8 = *local_1a - (((long)((i_var10 * 0x20 + i_var13) * 2 + -0x18cf) * (long)
                0x1da4 & 0xffff) / 0xf0);
            } else {
                i_var8 = *local_1a;
            }
            pi_var6 = 0x1f42;
            u_var9 = u_var1;
            if ((*local_1a < i_var8) || (pi_var6 = 0x1f3e, u_var9 = u_var2, *local_1e != i_var8 && i_var8 <= *local_1e)) {
                i_var8 = *pi_var6;
            }
            local_16 = CONCAT22(0xddfc, local_16._0_2_);
            i_var7 = i_var11;
            i_var12 = i_var8;
            FUN_23e0_0d75();
            i_var11 = 0x23e0;
            i_var10 = i_var4;
            i_var4 = i_var12;
        }
        i_var10 = 0x7fd4;
        i_var8 = i_var8 - i_var10;
        if (i_var8 < *local_1e) {
            i_var8 = *local_1e;
        } else {
            if (*local_1a - i_var10 < i_var8) {
                i_var8 = *local_1a - i_var10;
            }
        }
        i_var10 = 0x2692;
        fun_2692_0ecc(i_var11, (i_var5 + 0x1da8), i_var8, (i_var5 + 0x1da6));
    }
    i_var7 = i_var7 + 1;
}
    while (i_var7 < 0xf);
    u_var2 = 0xc5a8;
    if (0 < 0x1f2b) {
        i_var7 = (0x1f2b * 0x1f44) / 0x1f + 0x7fd6 * 3 + *local_16;
        fun_294b_0b7c(i_var10);
        fun_294b_02f2(0x294b, 0x13);
        u_var2 = 0xc5b6;
        ppcVar3 = (code * *)
        0xcf74;
        (**ppcVar3)(0x294b, i_var7, 0x1f3e, i_var7 + 1, 0x1f42, 0xe2e);
        i_var10 = 0x294b;
        fun_294b_0c76(0x294b);
    }
    ppcVar3 = (code * *)
    0xcf70;
    (**ppcVar3)(i_var10);
    return;
}


fn fun_1d9a_0530(param_1_00: u16, undefined4 param_1)

{
    let pu_var1: *mut u16;
    let u_var2: u16;
    let pc_var3: String;
    let i_var4: i16;
    let i_var5: i16;
    let u_var6: u16;
    let unaff_ds: u16;
    undefined * puVar7;
    let u_var8: u16;

    fun_3444_02c6(0x39d9);
    u_var6 = 0x294b;
    fun_294b_02f2();
    i_var4 = (param_1 + 0xc);
    i_var5 = i_var4 + -0x1305;
    if (0xf < i_var5) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x294b, 0x1e13);
    }
    pc_var3 = (i_var4 + 0xc28);
    u_var2 = 0xc5b2;
    if (*pc_var3 == '\0') {
        *pc_var3 = '\x01';
        i_var4 = 0x1d58;
        if (i_var4 != -0x8000) {
            (i_var4 + 0x1f2d) = 0;
            fun_168b_02a9();
            pu_var1 = 0x1e2c;
            *pu_var1 = *pu_var1 | 1 << (*(i_var4 * 2 + -0x33a6) & 0x1f);
            u_var6 = 0x168b;
            fun_168b_0409();
        }
        FUN_3444_1e00(u_var6, 0x1d54, unaff_ds, 0x1d52, unaff_ds, 6);
        0x1d52 = i_var5;
        u_var8 = 1;
        for (iVar4 = 0; i_var4 < 4; iVar4 = iVar4 + 1) {
            if ((0x1e2c & u_var8) != 0) {
                pu_var1 = 0x1e2c;
                *pu_var1 = *pu_var1 & ~u_var8;
                (i_var5 * 2 + -0x33a6) = i_var4;
                break;
            }
            u_var8 = u_var8 << 1;
        }
        fun_168b_0409();
    } else {
        for (iVar4 = 0; i_var4 < 4; iVar4 = iVar4 + 1) {
            if ((i_var4 * 2 + 0x1d52) == i_var5) {
                u_var6 = 0x3444;
                FUN_3444_1e00(0x294b);
                break;
            }
        }
        puVar7 = ff
        CONCAT22(u_var6, 0xdf79);
        fun_168b_0409();
        *puVar7 = 0;
        pu_var1 = 0x1e2c;
        *pu_var1 = *pu_var1 | 1 << (*(i_var5 * 2 + -0x33a6) & 0x1f);
    }
    fun_168b_02a9();
    
    0x1e12 = 1;
    fun_1d9a_0273(0x168b);
    fun_294b_03be(0x168b);
    return;
}


fn fun_1e08_018f()

{
    let u_var1: u16;
    let u_var2: u16;
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ds: u16;
    let u_var5: u32;
    let u_var6: u16;
    let u_var7: u16;
    let u_var8: u16;
    let u_var9: u16;
    let u_var10: u16;

    fun_3444_02c6(0x39d9);
    0x5d22 = 0x7faa >> 3;
    i_var4 = 0;
    loop {
    FUN_3444_4101(0x3444);
    fun_3444_4472(0x3444);
    fun_3444_4472(0x3444);
    fun_3444_4217(0x3444);
    fun_3444_48ea(0x3444);
    FUN_3444_405a(0x3444);
    fun_3444_4472(0x3444);
    u_var1 = fun_3444_42c7(0x3444);
    i_var3 = i_var4 * 2;
    (i_var3 + 0x5b9c) = u_var1 & 0xff | ((u_var1 >> 8) + 0x20) << 8;
    if ((i_var4 == 0) || (i_var4 == 0x40)) {
        (i_var3 + 0x5ca0) = 0;
    } else {
        u_var7 = 0x3444;
        u_var6 = 0xe2bc;
        FUN_3444_4890(0x3444, 0xc5dc, 0xc5de, 0xc5e0,
                      0xc5e2, 0xc5d4, 0xc5d6,
                      0xc5d8, 0xc5da, 0x40, 0);
        FUN_3444_405a(0x3444);
        u_var2 = 0xc5d4;
        u_var8 = 0xe2e1;
        FUN_3444_200e(0x3444, i_var4 + -0x20, u_var2, 0xc5d6, 0xc5d8,
                      0xc5da);
        u_var10 = 0x3444;
        u_var9 = 0xe2ed;
        FUN_3444_4101(0x3444);
        fun_3444_4217(0x3444, u_var6, u_var7, u_var8, u_var9);
        FUN_3444_4890(0x3444);
        u_var6 = 0xe308;
        fun_3444_443b(0x3444);
        fun_3444_4217(0x3444, u_var10, u_var2, u_var6);
        fun_3444_487e(0x3444);
        FUN_3444_405a(0x3444);
        fun_3444_4472(0x3444);
        u_var5 = fun_3444_42c7(0x3444);
        u_var2 = FUN_3444_2364(0x3444, u_var5);
        (i_var3 + 0x5ca0) = u_var2;
    }
    i_var4 = i_var4 + 1;
}
    while (i_var4 < 0x41);
    i_var4 = 0;
    u_var2 = 0xc5f0;
    loop {
    (i_var4 + 0x1f46) = 0xff;
    i_var4 = i_var4 + 1;
}
    while (i_var4 < 0x100);
    i_var4 = 0;
    u_var2 = 0xc5f2;
    loop {
    (*(i_var4 + 0x1e6e) + 0x5a9a) = i_var4;
    i_var4 = i_var4 + 1;
}
    while (i_var4 < 0x24);
    return;
}


// WARNING: Instruction at (ram,0x00019a2a) overlaps instruction at (ram,0x00019a28)
//
// WARNING: Removing unreachable block (ram,0x00019a58)
// WARNING: Removing unreachable block (ram,0x00019a2e)

uint FUN_1e08_030e(param_1: u16,param_2: i16,param_3: u16,param_4: i16)

{
let puVar1: * mut u16; let pcVar2: String; let bVar3: u8; let uVar4: u16; let uVar5: u16; let uVar6: u16; let in_CX: i16; let extraout_DX: i16; let extraout_DX_00: u16; let iVar7: i16; let iVar8: i16; let in_BX: u16; let uVar9: u16; let iVar10: i16; let unaff_DI: i16; let unaff_ES: u16; let uVar11: u16; let unaff_SS: u16; let unaff_DS: u16; let lVar12: i32; let lVar13: i32; let uVar14: u32; let iStackY28: i16; let uStackY16: u16; let uStackY12: u16; let uVar15: u16; let piVar16: * mut u16;

FUN_3444_02c6(0x39d9); uVar9 = 0; if (0x1e92 == 0) {
in_BX = unaff_DS; FUN_3444_2226(); uStackY16 = 0xe3bf; uVar14 = FUN_3444_109a(); uVar11 = (undefined2)(uVar14 >> 0x10);
0x1e92 = uVar14; if (uVar14 < 1) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
uVar9 = 1;
}
else {
uStackY16 = 0xe3e8; FUN_3444_1006(); uVar11 = extraout_DX_00;
}
lVar13 = CONCAT22(uVar11, in_CX); uVar6 = SEXT12(0x9c65); if (8 < uVar6) {
if (uVar9 != 0) {
FUN_3444_0fe6(); uVar6 = FUN_3444_109a();
0x1e92 = uVar6; if (uVar6 < 1) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
}
return uVar6;
}
switch(uVar6) {
case 0: puVar1 = ( & stack0x085c + in_BX); * puVar1 = * puVar1 >> 0xe | * puVar1 << 2; return uVar9;
case 1: piVar16 = (uVar6 * 2 + 5); * piVar16 = * piVar16 + unaff_DI + (uVar6 < 0); iVar7 = FUN_2a60_0913(); if (iVar7 != 0) {
FUN_20d3_0bed();
}
if (((0xd1e != '\0') || (0x992c == 0x15)) & & (iVar7 = FUN_2a60_0913(), iVar7 != 0)) {
FUN_2239_0147();
}
if (((0x992c == 0x13) || (0xd1e != '\0')) & & (iVar7 = FUN_2a60_0913(), iVar7 != 0)) {
FUN_1d9a_0245();
}
if ((0x992c == 9) & & (iVar7 = FUN_2a60_0913(), iVar7 != 0)) {
FUN_1e08_1428();
}
if (((0x992c == 0x1c) || (0xd1e != '\0')) & & (iVar7 = FUN_2a60_0913(), iVar7 != 0)) {
FUN_25d6_0038();
}
if ((( * 0xa48 & 1) == 0) & & (uVar11 = 0xc47c, (0x72ee | 0x72ec) != 0)) {
FUN_3143_0c84(); uVar11 = 0xc47c; 0x72ee = 0; 0x72ec = 0;
}
if ((( * 0xaf6 & 1) == 0) & & (uVar11 = 0xc47e, (0x72f4 | 0x72f2) != 0)) {
FUN_3143_0c84(); uVar11 = 0xc47e; 0x72f4 = 0; 0x72f2 = 0;
}
if ((0x1397 == '\0') & & (iVar7 = FUN_2a60_0913(), iVar7 != 0)) {
FUN_154b_0359();
}
uVar9 = FUN_1862_247e(); if ((0x139c == 0) & & (uVar11 = 0xc482, 0x139a != 0)) {
iVar7 = 0x139a; uVar9 = iVar7 - 2;
if (uVar9 == 0) {
if (0xabe == 1) {
uVar9 = FUN_39d9_0d9c();
}
}
else {
uVar9 = iVar7 - 3; if (uVar9 == 0) {
if (0xabe == 2) {
uVar9 = FUN_39d9_0dba();
}
}
else {
uVar9 = iVar7 - 4; if ((uVar9 == 0) & & (0xabe == 3)) {
uVar9 = FUN_39d9_0d4c();
}
}
}
0x139a = 0;
}
0x10d4 = 0; return uVar9; case 2:
lVar12 = FUN_3444_23fe(); uVar6 = (lVar12 + lVar13); uVar4 = uVar6 + uStackY16;
uVar11 = 0xc126; puVar1 = 0x610; uVar9 = * puVar1; iVar7 = 0x612; uVar11 = 0xc128; 0x5fc = uVar4 + * puVar1; 0x5fe =
((lVar12 + lVar13) >> 0x10) + 0x3444 + CARRY2(uVar6, uStackY16) + iVar7 + CARRY2(uVar4, uVar9); FUN_1d9a_0002(); FUN_1d9a_0002(); FUN_1d9a_0002(); FUN_1d9a_0002(); FUN_1d9a_0002(); FUN_1d9a_0002(); FUN_1d9a_0002(); FUN_1d9a_0002(); uVar11 = 0xc138; iVar7 = 0x5dc; iVar10 = 0x5de; uVar9 = iVar10 << 1 | (iVar7 < 0); iVar8 = 0x5ce;
if ((iVar8 < uVar9) || ((iVar8 < = uVar9 & & (0x5cc <= (iVar7 << 1))))) {
FUN_3444_2364(); iVar10 = extraout_DX;
}
uVar15 = 0; uVar14 = FUN_3444_23fe();
uVar11 = 0xc138; puVar1 = 0x5c8; uVar9 = * puVar1; * puVar1 = * puVar1 + uVar14; piVar16 = 0x5ca; * piVar16 = * piVar16 + (uVar14 >> 0x10) + CARRY2(uVar9, uVar14); lVar13 = FUN_3444_23fe(); FUN_3444_23fe(); lVar12 = FUN_3444_2364(); lVar13 = lVar13 - CONCAT22(iVar10, uVar15); iVar7 = lVar13; lVar12 = lVar12 + CONCAT22((lVar13 >> 0x10) * 2 | (iVar7 < 0), iVar7 * 2); uVar4 = lVar12; uVar11 = 0xc124;
puVar1 = 0x620; uVar9 = * puVar1; uVar5 = uVar4 - * puVar1; iVar7 = 0x622;
uVar11 = 0xc138; puVar1 = 0x5cc; uVar6 = * puVar1; * puVar1 = * puVar1 + uVar5; piVar16 = 0x5ce; * piVar16 = * piVar16 + (((lVar12 >> 0x10) - iVar7) - (uVar4 < uVar9)) +
CARRY2(uVar6, uVar5); FUN_3444_40e7(); FUN_3444_4472(); uVar14 = FUN_3444_42c7(); uVar11 = 0xc138; 0x5d0 = uVar14; 0x5d2 = (uVar14 >> 0x10); puVar1 = 0x5d4; uVar9 = * puVar1; * puVar1 = * puVar1 + uVar15 * 2; piVar16 = 0x5d6; * piVar16 = * piVar16 + (iVar10 << 1 | (uVar15 < 0)) + CARRY2(uVar9, uVar15 * 2); FUN_3444_23fe(); FUN_3444_2364(); FUN_3444_23fe(); FUN_3444_2364(); FUN_3444_2364(); uVar14 = FUN_3444_2364(); uVar11 = 0xc138; 0x5d8 = uVar14; 0x5da = (uVar14 >> 0x10); uVar6 = 0x694 / 5; uVar11 = 0xc138; puVar1 = 0x5dc; uVar9 = * puVar1; * puVar1 = * puVar1 + (uVar6 - uVar15); piVar16 = 0x5de; * piVar16 = * piVar16 + (((uVar6 >> 0xf) - iVar10) - (uVar6 < uVar15)) + CARRY2(uVar9, uVar6 - uVar15); FUN_1000_07e8(); FUN_1000_0afb(); 0x30 = 0; uStackY12 = 0; iVar7 = 1; loop {
uVar11 = 0xc126; uVar9 = (iVar7 * 4 + 0x600); iVar10 = (iVar7 * 4 + 0x602); if ((uStackY12 >> 0xf < = iVar10) & & ((uStackY12 >> 0xf < iVar10 || (uStackY12 < uVar9)))) {
0x30 = iVar7; uStackY12 = uVar9;
}
iVar7 = iVar7 + 1;
} while (iVar7 < 8); in_BX = 0; loop {
unaff_DI = 3; unaff_ES = 0xc14e; loop {
iVar7 = (in_BX * 5 + unaff_DI) * 4; uVar11 = (iVar7 + 0x502);
(iVar7 + 0x504) = (iVar7 + 0x500); (iVar7 + 0x506) = uVar11;
uVar9 = in_BX; switchD_1000_e974_caseD_6: in_BX = uVar9;
unaff_DI = unaff_DI + - 1;
} while ( - 1 < unaff_DI); iStackY28 = in_BX * 4; FUN_3444_23fe(); lVar13 = FUN_3444_2364(); uVar9 = in_BX; switchD_1000_e3fa_caseD_5:
uVar11 = 0xc14e; (in_BX * 0x14 + 0x500) = lVar13; (in_BX * 0x14 + 0x502) = (lVar13 >> 0x10); uVar11 = 0xc126; (iStackY28 + 0x602) = 0; (iStackY28 + 0x600) = 0; uVar11 = 0xc142; (iStackY28 + 0x5aa) = 0; (iStackY28 + 0x5a8) = 0; in_BX = uVar9 + 1;
} while (in_BX < 8); iVar7 = 0; loop {
iVar10 = 3; uVar11 = 0xc150; loop {
iVar8 = (iVar7 * 5 + iVar10) * 2; (iVar8 + 0x462) = (iVar8 + 0x460); iVar10 = iVar10 + - 1;
} while ( - 1 < iVar10); iVar10 = iVar7 * 2; uVar11 = FUN_3444_2364();
(iVar7 * 10 + 0x460) = uVar11;
(iVar10 + 0x440) = (iVar10 + 0x624); (iVar10 + 0x694) = 0;
(iVar10 + 0x624) = 0; iVar7 = iVar7 + 1;
} while (iVar7 < 0x10); return 0;
case 4: return in_BX; case 5: goto switchD_1000_e3fa_caseD_5; case 6: goto switchD_1000_e974_caseD_6; case 7: out(uVar11, in_BX); FUN_24bf_0004(); uVar11 = 0xc586; 0xff97 = 0;
0xffaf = 2; FUN_24bf_0dc9(); FUN_13d4_000c(); FUN_3444_172e(); FUN_39d9_0e14();
0x6b5 = 2; 0xabe = 2; FUN_154b_1039(); 0xd2c = 0; FUN_1d9a_0002();
FUN_154b_000c(); FUN_13d4_0056(); uVar11 = 0x1862; piVar16 = 0x13d4c5b5; FUN_1862_0e93();
if ( * piVar16 < 5) {
uVar11 = 0x2b26; FUN_2b26_0754();
}
if (( * 0x804 & 1) == 0) {
uVar11 = 0x154b; FUN_154b_0225();
}
if (( * 0x821 & 1) == 0) {
piVar16 = CONCAT22(uVar11, 0xc5ea); FUN_1862_0949();
}
else {
piVar16 = CONCAT22(0x100, uVar11); FUN_2b26_09bf();
}
if (4 < * piVar16) {
FUN_236f_0691();
}
FUN_2239_0193(); FUN_1d9a_0234(); FUN_20d3_0bed(); uVar9 = FUN_27ac_0287(); return uVar9; case 8: piVar16 = ( & stack0x8bee + unaff_DI); * piVar16 = * piVar16 + in_CX; uVar14 = FUN_1f51_0749(); uVar11 = (undefined2)(uVar14 >> 0x10); uVar9 = uVar14; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar11, 5); uVar9 = 0xff08; out(uVar11, 0xff08);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
uVar9 = FUN_2692_01e8();
}
}
else {
if (0x853e != '\0') {
uVar9 = FUN_2692_0562();
}
}
}
pcVar2 = (char * )0x7fcc; * pcVar2 = * pcVar2 + - 1; return uVar9;
}
if (in_CX != 0) {
bVar3 = * (param_4 * 2 + 0x73f); uVar9 = bVar3 & 0xe0; if ((bVar3 & 0xe0) != 0) {
uVar9 = uVar9 >> 5;
}
return uVar9;
}
FUN_3444_02c6(0x1000); uVar9 = * (param_2 + - 0x40b7); if (uVar9 != 0) {
if (uVar9 < 0xc) {
uVar9 = (uVar9 & 0x1c) >> 2;
}
else {
uVar9 = ((uVar9 & 0x1c) >> 2) - 1;
}
}
return uVar9;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_1e08_043b()

{
    let u_var1: u16;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let i_var5: i16;
    let i_var6: i16;
    let i_var7: i16;
    let u_var8: u16;
    let i_var9: i16;
    let pu_var10: *mut u16;
    let i_var11: i16;
    let i_var12: i16;
    let u_var13: u16;
    let unaff_ds: u16;
    let u_var14: u32;
    let u_var15: u32;
    let u_var16: u32;
    let u_var17: u32;
    let local_46: *mut u16;
    let local_42: *mut u16;
    let local_3e: *mut u16;
    let local_3a: *mut u16;
    let u_var18: u16;
    let u_var19: u16;
    let local_2c: *mut u16;
    let local_28: i16;
    let local_26: i16;
    let local_24: i16;
    let local_22: i16;
    let local_20: i16;
    let local_1e: i16;
    let local_1c: i16;
    let local_1a: i16;
    let local_18: i16;
    let local_16: u32;
    let local_12: i16;
    let local_10: i16;
    let local_e: i16;
    let local_c: i16;
    let local_a: *mut u16;

    fun_3444_02c6(0x39d9);
    if ((*0x909 & 1) != 0) {
        local_a = &local_28;
        local_c = 0x903;
        local_e = 0x3444;
        local_10 = 0xe4e5;
        fun_2b26_0e3b();
        local_1a = local_24 - local_28;
        if (0xd21 == '\0') {
            u_var1 = 0xc5f8;
            local_18 = (0x40 - 0xff30) / 2;
            i_var12 = local_18 + 0xff30;
        } else {
            u_var1 = 0xc5f8;
            local_18 = ((0x20 - 0xff30) * 2) / 2;
            i_var12 = local_18 + 0xff30 * 2;
        }
        local_a = 0x4000;
        i_var2 = local_1a / 2;
        local_c = i_var2 >> 0xf;
        local_1e = (0xd30 * 2 + 0x5ca0);
        local_1c = local_1e >> 0xf;
        local_16._2_2_ = 0x2b26;
        local_16._0_2_ = 0xe578;
        local_12 = local_1e;
        local_10 = local_1c;
        local_e = i_var2;
        local_16 = FUN_3444_23fe();
        local_18 = 0x3444;
        local_1a = 0xe57f;
        i_var3 = FUN_3444_2364();
        local_18 = 0;
        local_1a = 0x4000;
        local_20 = 0;
        local_22 = 0x4000;
        local_24 = 0;
        local_26 = 0x4000;
        u_var1 = 0x5b9c;
        local_28 = 0;
        u_var14 = FUN_3444_23fe();
        local_2c = CONCAT22(u_var1, (u_var14 >> 0x10));
        u_var15 = FUN_3444_2364(0x3444);
        u_var19 = (undefined2)(u_var15 >> 0x10);
        u_var16 = FUN_3444_23fe(0x3444);
        u_var18 = (undefined2)(u_var16 >> 0x10);
        i_var4 = FUN_3444_2364();
        local_1e = -(i_var3 - i_var2) + i_var4 + local_28;
        pu_var10 = (i_var12 * 2 + 0x5b9c);
        u_var1 = 0xc5ec;
        local_3a = CONCAT22(u_var1, pu_var10);
        u_var17 = FUN_3444_23fe(0x3444, *pu_var10, 0);
        u_var17 = FUN_3444_2364(0x3444, u_var17);
        u_var17 = FUN_3444_23fe(0x3444, u_var17);
        i_var6 = u_var17;
        i_var4 = FUN_3444_2364(0x3444, u_var17);
        local_1c = -(i_var3 - i_var2) + i_var4 + local_28;
        u_var13 = 0x294b;
        fun_294b_02f2(0x3444, 9);
        u_var1 = 0xc5fc;
        local_42 = CONCAT22(u_var1, 0x5d26);
        0x5d26 = 0x7fff;
        local_3e = CONCAT22(u_var1, 0x5d24);
        0x5d24 = 0x7fff;
        local_46 = CONCAT22(u_var1, 0x5d28);
        0x5d28 = 0x8001;
        if (0xd21 == '\0') {
            local_12 = 0xff32;
        } else {
            local_12 = 0xff32 << 1;
        }
        i_var2 = 0xd30;
        local_20 = i_var12;
        local_16._0_2_ = i_var2;
        for (; i_var2 < 0xd30 + local_12; iVar2 = iVar2 + 1) {
            u_var1 = 0xc600;
            i_var11 = i_var2 * 2;
            i_var12 = (i_var11 + 0x5c1e);
            i_var3 = (i_var11 + 0x5c20);
            i_var4 = i_var3 - i_var12;
            if (0 < i_var4) {
                i_var5 = local_1e << 5;
                i_var7 = (i_var11 + 0x5ca2);
                i_var9 = i_var7 >> 0xf;
                u_var17 = FUN_3444_23fe(u_var13, i_var7, i_var9, u_var16, u_var18, 0x4000, 0, i_var6, i_var7, i_var9,
                                        i_var12, i_var11);
                i_var6 = FUN_3444_2364(0x3444, u_var17);
                i_var6 = -(i_var6 - u_var15);
                u_var17 = FUN_3444_23fe(0x3444, *local_2c, 0, u_var19, u_var14, 0x4000, 0, i_var7, i_var9, 0x4000, 0);
                u_var17 = FUN_3444_2364(0x3444, u_var17);
                u_var17 = FUN_3444_23fe(0x3444, u_var17);
                i_var11 = FUN_3444_2364(0x3444, u_var17);
                local_1e = i_var11 + i_var6 + local_28;
                local_c = ((local_1e * 0x20 - i_var5) / i_var4) / 2;
                local_a = (local_c >> 0xf);
                i_var11 = FUN_3444_2364(0x3444, local_c, local_a, 2, 0);
                i_var5 = i_var5 + i_var11;
                i_var11 = local_1c << 5;
                u_var17 = FUN_3444_23fe(0x3444, *local_3a, 0, u_var19, u_var14, 0x4000, 0, i_var7, i_var9, 0x4000, 0);
                u_var17 = FUN_3444_2364(0x3444, u_var17);
                u_var17 = FUN_3444_23fe(0x3444, u_var17);
                i_var7 = FUN_3444_2364(0x3444, u_var17);
                local_1c = i_var7 + i_var6 + local_28;
                local_10 = ((local_1c * 0x20 - i_var11) / i_var4) / 2;
                local_e = local_10 >> 0xf;
                i_var4 = FUN_3444_2364(0x3444, local_10, local_e, 2, 0);
                i_var11 = i_var11 + i_var4;
                local_16._2_2_ = i_var3 + local_26;
                if (local_22 + -1 <= local_16._2_2_) {
                    local_16._2_2_ = local_16._2_2_ + -1;
                }
                u_var8 = i_var12 + local_26;
                if (i_var12 == 0x5c1e) {
                    u_var8 = u_var8 + 1;
                }
                if (*local_42 != u_var8 && u_var8 <= *local_42) {
                    *local_42 = u_var8;
                }
                0x5d2a = local_16._2_2_;
                u_var13 = 0x3444;
                local_16._0_2_ = i_var2;
                for (; iVar2 = local_16, u_var8 < local_16._2_2_; uVar8 = uVar8 + 1) {
                    i_var12 = i_var5 >> 5;
                    if (*local_3e != i_var12 && i_var12 <= *local_3e) {
                        *local_3e = i_var12;
                    }
                    i_var12 = i_var11 >> 5;
                    if (*local_46 < i_var12) {
                        *local_46 = i_var12;
                    }
                    if ((u_var8 < (0xd30 * 2 + 0x5c1e) + local_26 + 2) || ((((0xd30 + local_12) * 2 + 0x5c1e) + local_26) - 2 <= u_var8)) {
                        i_var2 = u_var8 + 1;
                    } else {
                        i_var12 = u_var8 + 3;
                        FUN_2c63_028d(u_var13, u_var8 + 1, u_var8, i_var12);
                        i_var2 = i_var12 + -2;
                        u_var13 = 0x2c63;
                    }
                    FUN_2c63_028d(u_var13, i_var2, u_var8, i_var12, u_var8 + 1);
                    i_var5 = i_var5 + local_c;
                    i_var11 = i_var11 + local_10;
                    u_var13 = 0x2c63;
                }
            }
        }
        fun_294b_03be(u_var13);
    }
    return;
}


// WARNING: Instruction at (ram,0x00013800) overlaps instruction at (ram,0x000137ff)
//
// WARNING: Control flow encountered bad instruction data
// WARNING: Removing unreachable block (ram,0x00013995)

uint FUN_1e08_0884()

{
let piVar1: * mut u16; let puVar2: * mut u16; let pbVar3: * mut u8; let pcVar4: String; let uVar5: u16; let uVar6: u16; let uVar7: u16; code * * ppcVar8; char cVar9; let bVar10: u8; let uVar11: u16; let uVar12: u16; let uVar13: u16; let iVar14: i16; let uVar15: u16; let uVar16: u16; let in_CX: i16; let iVar17: i16; let pcVar18: String; let in_BX: u16; let unaff_BP: i16; let iVar19: i16; let unaff_DI: i16; let    uVar20: u16; let uVar21: u16; let    unaff_SS: u16; let unaff_DS: u16; let lVar22: i32; let uVar23: u32;

uVar13 = FUN_3444_02c6(0x39d9); if (( *0x909 & 1) != 0) {
if (0xd21 == '\0') {
uVar20 = 0xc602; in_CX = 0x80; uVar13 = (0xff30 / 2 + 0xd2e) % 0x80;
}
else {
uVar20 = 0xc602; uVar13 = (0xff30 & 0xfffe) + 0xd2e & 0x7f;
}
iVar19 = uVar13 - 0x20; if (iVar19 < 0) {
iVar19 = uVar13 + 0x60;
}
uVar13 = SEXT12(0x9c65); if (uVar13 < 9) {
iVar14 = uVar13 * 2; uVar21 = 0x1000;
switch(uVar13) {
case 0: (unaff_BP + - 10) = in_BX; FUN_1ba9_1038(0x1000, unaff_BP + - 6); if (0x7faa == 0x140) {
uVar13 = 0x7faa - (unaff_BP + - 2) & 0xfff8; (unaff_BP + - 0x2a) = uVar13; (unaff_BP + - 0x2e) = uVar13; (unaff_BP + - 0x22) = 0;
(unaff_BP + - 0x26) = 0; iVar19 = (0x7fac - (unaff_BP + - 10)) + - 2; (unaff_BP + - 0x24) = iVar19; (unaff_BP + - 0x2c) = iVar19; iVar19 = 0x7fd4 + 4;
}
else {
uVar13 = (0x7faa - (unaff_BP + - 2)) - 10 & 0xfffc; (unaff_BP + - 0x2a) = uVar13; (unaff_BP + -0x2e) = uVar13; (unaff_BP + - 0x22) = 0x14; (unaff_BP + - 0x26) = 0x14; iVar19 = (0x7fac - (unaff_BP + - 10)) + - 10; (unaff_BP + - 0x24) = iVar19; (unaff_BP + - 0x2c) = iVar19; iVar19 = 0x7fac / 0xe;
}
(unaff_BP + - 0x20) = iVar19; (unaff_BP + - 0x28) = iVar19; * (undefined * )(unaff_BP + - 0x30) = 0; * (undefined * )(unaff_BP + - 0x40) = 0; uVar20 = 0x2b26;
FUN_2b26_0e3b(0x1ba9, 0, unaff_BP + - 0x12); break; case 1: LOCK(); uVar13 = - ((in_BX & 0x1f) - 0xace); if ((unaff_BP + -4) < = uVar13) {
* (undefined * ) * ff(unaff_BP + - 10) = 0;
}
return uVar13; case 2: if (in_CX != 0) {
if (in_CX != 0) {
if (iVar14 == 0 || (uVar13 < 0 != iVar14 < 0) != iVar14 < 0) {
if (iVar14 != 0) goto code_r0x0001380e;
// WARNING: Bad instruction - Truncating control flow here
halt_baddata();
}
loop {
pcVar4 = * (char * * )(iVar14 + unaff_DI); uVar20 = (undefined2)(pcVar4 >> 0x10); iVar14 = pcVar4;
if ( * pcVar4 == '/') {
code_r0x0001380e: iVar17 = (iVar14 + 2);
(unaff_BP + - 4) = iVar17; bVar10 = * (iVar14 + 1); if (bVar10 == 0x73) {
uVar13 = (unaff_BP + - 4); if (iVar17 < 0) {
// LAB_1357_02fc:
FUN_3444_07d2(uVar21, 0xe70); uVar21 = 0x3444; FUN_3444_01db(0x3444, 4);
}
else {
if (uVar13 == 0x74) {
// LAB_1357_03c3:
0x8 = 3;
}
else {
if ((0x74 < uVar13) || (bVar10 = uVar13, bVar10 < 0x41))
goto LAB_1357_02fc; if (bVar10 == 0x41 || bVar10 == 0x42) {
// LAB_1357_038b:
0x8 = 1;
}
else {
if (bVar10 != 0x43) {
if (bVar10 == 0x49) {
// LAB_1357_03a7:
0x8 = 0; goto LAB_1357_0312;
}
if (bVar10 == 0x4e) {
// LAB_1357_03b5:
0x8 = 0xffff; goto LAB_1357_0312;
}
if (bVar10 == 0x54) goto LAB_1357_03c3; if (0xc < (bVar10 + 0xac)) {
if (bVar10 == 0x61 || bVar10 == 0x62) goto LAB_1357_038b; if (bVar10 == 99) goto LAB_1357_0399; if (bVar10 == 0x69) goto LAB_1357_03a7; if (bVar10 == 0x6e) goto LAB_1357_03b5;
}
goto LAB_1357_02fc;
}
// LAB_1357_0399:
0x8 = 2;
}
}
}
}
else {
if (bVar10 < 0x74) {
if (bVar10 == 0x21) {
* (undefined * )0xf4f = 1;
}
else {
if (bVar10 == 0x62) {
* (undefined * )0x8538 = 1;
}
else {
if (bVar10 == 100) {
uVar13 = (unaff_BP + - 4); if (iVar17 < 0) goto LAB_1357_02fc; if (uVar13 == 0x6d) {
* (undefined * )0x9c65 = 7;
}
else {
if (0x6d < uVar13) goto LAB_1357_02fc; cVar9 = uVar13; if (cVar9 == '2') {
* (undefined * )0x9c65 = 6;
}
else {
if (cVar9 == 'E') {
* (undefined * )0x9c65 = 0;
}
else {
if (cVar9 == 'H') {
* (undefined * )0x9c65 = 3;
}
else {
if (cVar9 == 'M') {
* (undefined * )0x9c65 = 5;
}
else {
if (cVar9 == 'T') {
* (undefined * )0x9c65 = 2;
}
else {
if (cVar9 == 'V') {
* (undefined * )0x9c65 = 8;
}
else {
if (cVar9 != 'e') goto LAB_1357_02fc; *(undefined * )0x9c65 = 4;
}
}
}
}
}
}
}
}
}
}
}
}
}
// LAB_1357_0312:
iVar19 = iVar19 + 1; piVar1 = (unaff_BP + 6); if ( * piVar1 == iVar19 || * piVar1 < iVar19) {
lVar22 = FUN_3444_1986(uVar21, 0xea7); if (lVar22 != 0) {
uVar20 = 0xeab; uVar23 = FUN_3444_1986(0x3444,0xeb3); iVar19 = FUN_3444_1d8c(0x3444, uVar23, uVar20); if (iVar19 == 0) {
* (undefined * )0x8538 = 1;
}
}
lVar22 = FUN_3143_1690(0x3444); uVar20 = 0xc418; 0xff93 = lVar22; 0xff95 = (lVar22 >> 0x10); if ((0xf4f == '\0') & & (lVar22 < 110000)) {
FUN_3444_07d2(0x3143, 0xeb7); FUN_3444_01db(0x3444, 1);
}
FUN_3440_0043(7); FUN_3440_0042(); uVar23 = FUN_3444_2108(0x3444, 0, 0, 0); uVar20 = 0xc41a; 0xff8f = uVar23;
0xff91 = (uVar23 >> 0x10); pcVar4 = * (char * * )0xff8f; 0xff8d = * pcVar4; iVar19 = FUN_3444_178e(0x3444,pcVar4, (pcVar4 >> 0x10));
(unaff_BP + - 4) = iVar19 + -1; uVar23 = * ff0xff8f; uVar20 = (undefined2)(uVar23 >> 0x10); pcVar18 = (char * )(uVar23 + iVar19 + - 1); if (* pcVar18 == '\\') {
* pcVar18 = '\0';
}
FUN_3074_000c(0x3444, 0xf39); FUN_27ac_0008(0x3074, 0xf40); FUN_3444_2278(0x27ac, 0x80f,0x2a60); FUN_27ac_0b38(0x3444, 4);
FUN_1ba9_0ca8(0x27ac); FUN_1ba9_0ce0(0x1ba9, 0); FUN_1ba9_0000(0x1ba9); FUN_27ac_0bdf(0x1ba9, 5); FUN_337d_0000(0x27ac); FUN_168b_0028(0x337d); FUN_3444_172e(0x168b, 0xff3d,0x4b2d, 0xf43); FUN_3444_172e(0x3444, 0xff65, 0x4b2d, 0xf49); FUN_1357_000e(0x3444); FUN_148d_0254(0x1357); FUN_1ba9_0000(0x148d); uVar13 = FUN_1357_053a(0x1ba9); return uVar13;
}
iVar14 = iVar19 * 4; uVar23 = * ff(unaff_BP + 8); uVar20 = (undefined2)(uVar23 >> 0x10); unaff_DI = uVar23;
} while ( true );
}
in_BX = in_BX & 0xff00 | (in_BX + (iVar19 + 0x34)); iVar14 = 0;
uVar20 = 0xc408; iVar19 = iVar14;
}
loop {
(iVar19 * 2 + 0x6ec9) = 1;
iVar14 = iVar14 + 1; iVar19 = iVar14;
} while (iVar14 < 0xc); return in_BX;
case 3: pbVar3 = 0xd12; * pbVar3 = * pbVar3 ^ 1; uVar13 = FUN_154b_0395(0x1000); return uVar13; case 4: (unaff_BP + - 2) = ( * (iVar14 + 0x6c0) & 0x3f); if (( *(unaff_BP + - 2) & 0x23) != 0) {
if (( * (unaff_BP + - 2) & 0x20) == 0) {
if (( * (unaff_BP + - 2) & 3) != 0) {
(unaff_BP + 0x10) = ((unaff_BP + - 2) >> 2) + - 1;
}
}
else {
(unaff_BP + 0x10) = 0x10;
}
}
(unaff_BP + - 2) = ( * ((unaff_BP + 10) * 2 + 0x73e) & 0x3f); if (( * (unaff_BP + - 2) & 0x23) != 0) {
if (( * (unaff_BP + - 2) & 0x20) == 0) {
if (( * (unaff_BP + - 2) & 3) != 0) {
(unaff_BP + 0xe) = ((unaff_BP + - 2) >> 2) + - 1;
}
}
else {
(unaff_BP + 0xe) = 0x10;
}
}
uVar13 = SEXT12(( * ((unaff_BP + 10) * 2 + 0x740) & 0x3f)); (unaff_BP + - 2) = uVar13; if (( * (unaff_BP + - 2) & 0x23) != 0) {
if (( * (unaff_BP + - 2) & 0x20) == 0) {
if (( * (unaff_BP + - 2) & 3) != 0) {
uVar13 = ((unaff_BP + - 2) >> 2) - 1; (unaff_BP + 0x12) = uVar13;
}
}
else {
(unaff_BP + 0x12) = 0x10;
}
}
return uVar13; case 5: if ((in_BX & 0xff00 | (in_BX - (unaff_BP + unaff_DI + 0x6c4))) != 0) {
uVar21 = 0x2239; FUN_2239_0147(0x1000);
}
if ((0x992c == 0x13) || (0xd1e != '\0')) {
iVar19 = FUN_2a60_0913(uVar21, 0x1046); uVar21 = 0x2a60; if (iVar19 != 0) {
uVar21 = 0x1d9a; FUN_1d9a_0245(0x2a60);
}
}
uVar20 = uVar21; if (0x992c == 9) {
uVar20 = 0x2a60; iVar19 = FUN_2a60_0913(uVar21,0x104a); if (iVar19 != 0) {
uVar20 = 0x1e08; FUN_1e08_1428(0x2a60);
}
}
if ((0x992c == 0x1c) || (uVar21 = uVar20, 0xd1e != '\0')) {
uVar21 = 0x2a60; iVar19 = FUN_2a60_0913(uVar20,0x104e); if (iVar19 != 0) {
uVar21 = 0x25d6; FUN_25d6_0038(0x2a60);
}
}
uVar20 = uVar21; if ((( * 0xa48 & 1) == 0) & & (uVar11 = 0xc47c, (0x72ee | 0x72ec) != 0)) {
uVar20 = 0x3143; FUN_3143_0c84(uVar21, 0x72ec,0x72ee); uVar21 = 0xc47c; 0x72ee = 0; 0x72ec = 0;
}
uVar21 = uVar20; if ((( * 0xaf6 & 1) == 0) & & (uVar11 = 0xc47e, (0x72f4 | 0x72f2) != 0)) {
uVar21 = 0x3143; FUN_3143_0c84(uVar20, 0x72f2,0x72f4); uVar20 = 0xc47e; 0x72f4 = 0; 0x72f2 = 0;
}
uVar20 = uVar21; if (0x1397 == '\0') {
uVar20 = 0x2a60; iVar19 = FUN_2a60_0913(uVar21,0xfff1, 0x4b2d, 0x7e); if (iVar19 != 0) {
uVar20 = 0x154b; FUN_154b_0359(0x2a60, 0x10d3);
}
}
uVar13 = FUN_1862_247e(uVar20); if ((0x139c == 0) & & (uVar20 = 0xc482, 0x139a != 0)) {
iVar19 = 0x139a; uVar13 = iVar19 - 2;
if (uVar13 == 0) {
if (0xabe == 1) {
uVar13 = FUN_39d9_0d9c(0x1862, 0xffed, 0xffef);
}
}
else {
uVar13 = iVar19 - 3; if (uVar13 == 0) {
if (0xabe == 2) {
uVar13 = FUN_39d9_0dba(0x1862, 0xffed, 0xffef);
}
}
else {
uVar13 = iVar19 - 4; if ((uVar13 == 0) & & (0xabe == 3)) {
uVar13 = FUN_39d9_0d4c(0x1862, 0xffed, 0xffef);
}
}
}
0x139a = 0;
}
0x10d4 = 0; return uVar13; case 6:
loop {
unaff_DI = unaff_DI + - 1; if (unaff_DI < 0) {
uVar20 = (unaff_BP + - 2); uVar11 = (unaff_BP + - 4); uVar6 = 0xc126; iVar14 = iVar19 * 4; uVar7 = (iVar14 + 0x602); uVar6 = (iVar14 + 0x600); (unaff_BP + - 0x1a) = iVar14; uVar23 = FUN_3444_23fe(uVar21, uVar6, uVar7, 100, 0, uVar11, uVar20); uVar21 = 0x3444; uVar23 = FUN_3444_2364(0x3444, uVar23); (unaff_BP + - 0x14) = (uVar23 >> 0x10); uVar20 = 0xc14e; uVar11 = (unaff_BP + - 0x14); (iVar19 * 0x14 + 0x500) = uVar23; (iVar19 * 0x14 + 0x502) = uVar11; uVar20 = 0xc126; iVar14 = (unaff_BP + - 0x1a); (iVar14 + 0x602) = 0; (iVar14 + 0x600) = 0; uVar20 = 0xc142; (iVar14 + 0x5aa) = 0; (iVar14 + 0x5a8) = 0; iVar19 = iVar19 + 1; if (7 < iVar19) {
uVar20 = 0xc104; uVar13 = 0x6b2; uVar12 = 0x696; uVar5 = 0x694; uVar15 = uVar13 + uVar12 + uVar5; uVar20 = 0xc124; puVar2 = 0x620; uVar16 = uVar15 + * puVar2; iVar19 = (uVar13 >> 0xf) + (uVar12 >> 0xf) + CARRY2(uVar13, uVar12) + (uVar5 >> 0xf) + CARRY2(uVar13 + uVar12, uVar5) + 0x622 +
CARRY2(uVar15, * puVar2); (unaff_BP + - 4) = uVar16; (unaff_BP + - 2) = iVar19; if ((iVar19 < 1) & & ((iVar19 < 0 || (uVar16 < 200)))) {
(unaff_BP + - 4) = 200; (unaff_BP + - 2) = 0;
}
iVar19 = 0; loop {
iVar14 = 3; uVar20 = 0xc150; loop {
iVar17 = (iVar19 * 5 + iVar14) * 2; (iVar17 + 0x462) = (iVar17 + 0x460); iVar14 = iVar14 + - 1;
} while ( - 1 < iVar14); uVar20 = (unaff_BP + - 2); uVar21 = (unaff_BP + - 4); lVar22 = (long)(iVar19 * 2 + 0x694) * 200; (unaff_BP + - 0x1a) = iVar19 * 2; uVar23 = FUN_3444_2364(0x3444, lVar22,(lVar22 >> 0x10), uVar21, uVar20
); (unaff_BP + - 0x14) = (uVar23 >> 0x10); (iVar19 * 10 + 0x460) = uVar23; iVar14 = (unaff_BP + - 0x1a); (iVar14 + 0x440) = (iVar14 + 0x624); (iVar14 + 0x694) = 0; (iVar14 + 0x624) = 0; iVar19 = iVar19 + 1;
} while (iVar19 < 0x10); return 0;
}
unaff_DI = 3; uVar20 = 0xc14e;
}
iVar14 = (iVar19 * 5 + unaff_DI) * 4; uVar11 = (iVar14 + 0x502);
(iVar14 + 0x504) = (iVar14 + 0x500); (iVar14 + 0x506) = uVar11;
} while ( true ); case 7: FUN_24bf_0004(0x1000); uVar20 = 0xc586; 0xff97 = 0; 0xffaf = 2; FUN_24bf_0dc9(); FUN_13d4_000c(0x24bf, 3000, 0, 0);
FUN_3444_172e(0x13d4, 0xff3d, 0x4b2d, 0x1c0b); FUN_39d9_0e14(0x3444, 0x3f, 0, 5, 0xffff, 3, 10, 10, 1, 1, 0); 0x6b5 = 2;
0xabe = 2; FUN_154b_1039(0x39d9); 0xd2c = 0; FUN_1d9a_0002(0x154b, 0xffff);
FUN_154b_000c(0x1d9a, 0xff3d); FUN_13d4_0056(0x154b, 0); uVar20 = 0x1862; FUN_1862_0e93(); if ( * * (int * *)(unaff_BP + - 6) < 5) {
uVar20 = 0x2b26; FUN_2b26_0754(0x1862);
}
if (( * 0x804 & 1) == 0) {
uVar20 = 0x154b; FUN_154b_0225();
}
if (( * 0x821 & 1) == 0) {
uVar21 = 0x1862; FUN_1862_0949();
}
else {
uVar21 = 0x2b26; FUN_2b26_09bf(uVar20);
}
if (4 < * * (int * *)(unaff_BP + - 6)) {
FUN_236f_0691(uVar21);
}
FUN_2239_0193(); FUN_1d9a_0234(); FUN_20d3_0bed(); uVar13 = FUN_27ac_0287(0x20d3); return uVar13; case 8: piVar1 = (unaff_BP + unaff_DI + - 0x7410); * piVar1 = *piVar1 + in_CX; uVar23 = FUN_1f51_0749(uVar20); uVar20 = (undefined2)(uVar23 >> 0x10); uVar13 = uVar23; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar20, 5); uVar13 = 0xff08; out(uVar20, 0xff08);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
uVar13 = FUN_2692_01e8(0x1000);
}
}
else {
if (0x853e != '\0') {
uVar13 = FUN_2692_0562(0x1000);
}
}
}
pcVar4 = (char * )0x7fcc; * pcVar4 = * pcVar4 + - 1; return uVar13;
}
loop {
(unaff_BP + - 0x3a) = (unaff_BP + - 0x38); loop {
iVar19 = (unaff_BP + - 0x3a) * 4; iVar19 = FUN_1776_0e4b(uVar20, (unaff_BP + iVar19 + - 0x2e),
(unaff_BP + iVar19 + - 0x2c), unaff_BP + - 0x1e); if (iVar19 != 0) break; iVar19 = ((unaff_BP + - 0x3a) + 1) % 4; (unaff_BP + - 0x3a) = iVar19;
} while (iVar19 != (unaff_BP + - 0x38)); iVar19 = (unaff_BP + - 0x3a); (unaff_BP + - 0x38) = iVar19;
iVar19 = iVar19 * 4; iVar14 = (unaff_BP + iVar19 + - 0x2e); (unaff_BP + - 0x32) = iVar14; iVar19 = (unaff_BP + iVar19 + - 0x2c); (unaff_BP + - 0x3c) = iVar19; if ((iVar14 == (unaff_BP + - 0x42)) & & (iVar19 == (unaff_BP + - 0x5c))) {
(unaff_BP + - 0x62) = 0;
}
else {
ppcVar8 = (code * * )0xcf70; (* * ppcVar8)(uVar20); FUN_2b26_0754(uVar20, 0x1200); uVar20 = 0x2b26; FUN_2b26_05ce(0x2b26, 0x1200, (unaff_BP + - 0x32),
(unaff_BP + - 0x3c));
(unaff_BP + - 0x62) = 1; (unaff_BP + - 0x42) = (unaff_BP + -0x32); (unaff_BP + - 0x5c) = (unaff_BP + - 0x3c);
}
uVar21 = uVar20; if ((unaff_BP + -0x62) == 0) {
uVar21 = 0x1ba9; iVar19 = FUN_1ba9_104d(uVar20,unaff_BP + - 6); if ((iVar19 != 0) & & (((( *(unaff_BP + - 0x36) ^ * (unaff_BP + 6)) & 0x7f) != 0 || ((unaff_BP + - 0x34) != (unaff_BP + 8))))) goto LAB_1776_01f4;
}
else {
// LAB_1776_01f4: if (0x7faa == 0x140) {
ppcVar8 = (code * * )0xcf6c; (* * ppcVar8)(uVar21);
}
iVar19 = (unaff_BP + - 0x34); (unaff_BP + 8) = iVar19; (unaff_BP + - 0x3e) = iVar19 >> 1; uVar13 = * (unaff_BP + - 0x36) & 0x7f; (unaff_BP + 6) = uVar13; (unaff_BP + - 0x46) = uVar13 >> 1; uVar20 = 0xc4e4; iVar19 = ( * (((unaff_BP + 6) * 0x40 + (unaff_BP + 8)) * 2 + 0x6bd) & 0xe0) >> 5; (unaff_BP + - 8) = iVar19; (unaff_BP + -0x60) = 0; (unaff_BP + - 0x5e) = 0; (unaff_BP + - 0x44) = 0; if (iVar19 == 0) {
if (( * (((unaff_BP + 6) * 0x40 + (unaff_BP + 8)) * 2 + 0x6be) & 0x80) == 0) {
(unaff_BP + - 0x44) = 7000; if (((unaff_BP + - 0x62) != 0) || (0xcc4c != 0x2000)) {
FUN_168b_097f(uVar21, 0x1202); uVar20 = 0xc4e8; uVar21 = 0x168b; FUN_168b_03d1(0x168b, 0x1202, 0xff02, 0xff04); 0xcc4c = 0x2000;
}
}
else {
(unaff_BP + - 0x44) = 0x1b60; iVar19 = ( * (((unaff_BP + 6) * 0x40 + (unaff_BP + 8)) * 2 + 0x6bd) & 0x1f) - 0xace;
iVar14 = - iVar19; (unaff_BP + - 8) = iVar14; if (iVar14 < 3) {
if ((iVar19 != - 0x3002) || ((unaff_BP + - 0x62) != 0)) {
FUN_168b_097f(uVar21, 0x1202); uVar21 = 0x168b; FUN_168b_03d1(0x168b, 0x1202, 0x12a5);
0xcc4c = 0x3002;
}
}
else {
if (iVar14 < 6) {
if ((iVar19 != - 0x3004) || ((unaff_BP + - 0x62) != 0)) {
FUN_168b_097f(uVar21, 0x1202); uVar21 = 0x168b; FUN_168b_03d1(0x168b, 0x1202, 0x12ab);
0xcc4c = 0x3004;
}
}
else {
if ((iVar19 != - 0x3003) || ((unaff_BP + - 0x62) != 0)) {
FUN_168b_097f(uVar21, 0x1202); uVar21 = 0x168b; FUN_168b_03d1(0x168b, 0x1202, 0x12b1);
0xcc4c = 0x3003;
}
}
}
}
}
else {
if (0xabe == 5) {
(unaff_BP + - 0x44) = iVar19 + 0x1fd5; uVar20 = uVar21; if ((unaff_BP + - 0x62) != 0) {
uVar20 = 0x168b; FUN_168b_03d1(uVar21, 0x1202,0x126d);
}
if ((unaff_BP + - 0x62) == 0) {
uVar21 = 0x39d9; iVar19 = FUN_39d9_0de2(uVar20,(unaff_BP + 6),
(unaff_BP + 8)); uVar20 = uVar21; if ((iVar19 == (unaff_BP + - 8)) != 0xcc3e)
goto LAB_1776_047c;
}
if ((unaff_BP + - 8) == 0) {
uVar11 = 0x1284;
}
else {
iVar19 = FUN_39d9_0de2(uVar20, (unaff_BP + 6),
(unaff_BP + 8), 0,0x7fd4); uVar20 = 0x39d9; if (iVar19 == (unaff_BP + - 8)) {
uVar11 = 0x1275;
}
else {
uVar11 = 0x127e;
}
}
}
else {
(unaff_BP + - 0x44) = iVar19 + 7000; if (((unaff_BP + - 0x62) != 0) || (0xcc4c != (unaff_BP + - 8)))
{
FUN_168b_097f(uVar21, 0x1202); uVar20 = 0xc4e8; iVar19 = (unaff_BP + - 8) * 4; uVar21 = 0x168b; FUN_168b_03d1(0x168b,0x1202, (iVar19 + - 0xfe),
(iVar19 + - 0xfc)); 0xcc4c = (unaff_BP + - 8);
}
uVar20 = 0x10bd; iVar19 = FUN_10bd_000e(uVar21,(unaff_BP + 6),
(unaff_BP + 8)); (unaff_BP + - 8) = iVar19; if (iVar19 == 0) {
uVar11 = 0x129c;
}
else {
if ((unaff_BP + - 8) == 0) {
uVar11 = 0x1296;
}
else {
uVar11 = 0x128d;
}
}
}
uVar21 = 0x168b; FUN_168b_030f(uVar20, 0x1202,uVar11); 0xcc3e = (unaff_BP + - 8);
}
// LAB_1776_047c:
iVar19 = (unaff_BP + - 0x44); if ((0xcc40 != iVar19) || ((unaff_BP + - 0x62) != 0)) {
if (iVar19 == 0) {
FUN_168b_097f(uVar21, 0x1201);
}
else {
FUN_168b_027d(uVar21, 0x1201, iVar19);
}
uVar21 = 0x168b; 0xcc40 = (unaff_BP + -0x44);
}
uVar13 = * ((unaff_BP + 6) * 0x40 + (unaff_BP + 8) + - 0x40f8); (unaff_BP + - 8) = uVar13; if (((unaff_BP + - 0x62) != 0) || (uVar13 != 0xcc42)) {
if (uVar13 == 0) {
FUN_168b_03d1(uVar21, 0x1203, 0x12c3); FUN_168b_08fe(0x168b, 0x1203); FUN_168b_097f(0x168b,0x1205); FUN_168b_097f(0x168b, 0x1216);
FUN_168b_097f(0x168b, 0x1218); uVar21 = 0x168b; FUN_168b_097f(0x168b, 0x1217);
}
else {
FUN_168b_027d(uVar21, 0x1205, (uVar13 >> 4) + 8000); FUN_2b26_0e3b(0x168b,0x1216, unaff_BP + - 0x6a); FUN_168b_04c4(0x2b26, (unaff_BP + - 0x6a),
(unaff_BP + - 0x68),
0x160 - ((( * (unaff_BP + - 8) & 0xf) != 0) - (unaff_BP + - 8))); FUN_168b_04c4(0x168b, 0x138a + (unaff_BP + - 0x6a),
(unaff_BP + - 0x68), (unaff_BP + - 8) + 0x160); uVar20 = 0x168b; FUN_168b_04c4(0x168b, 0x138a * 2 + (unaff_BP + -0x6a),
(unaff_BP + - 0x68),(unaff_BP + - 8) + 0x161);
if (0x7faa == 0x140) {
uVar13 = (unaff_BP + - 8); uVar12 = uVar13 >> 0xf; iVar19 = (((((uVar13 ^ uVar12) - uVar12) >> 4 ^ uVar12) - uVar12) * 4 + 0x644);
}
else {
uVar20 = 0x3444; FUN_3444_17a6(0x168b, unaff_BP + - 0x5a); * (undefined * )(unaff_BP + - 0x4f) = 0; iVar19 = unaff_BP + - 0x5a;
}
FUN_168b_03d1(uVar20, 0x1203, iVar19); FUN_168b_08fe(0x168b, 0x1203); FUN_168b_03d1(0x168b,0x1217, 0x12ba); uVar21 = 0x2b26; FUN_2b26_0e3b(0x168b, 0x1218, unaff_BP + - 0x6a); (unaff_BP + - 0x3a) = 0;
while ((unaff_BP + - 0x3a) < 8) {
if ((unaff_BP + - 0x3a) == 0) {
iVar19 = 0x42;
}
else {
iVar19 = (unaff_BP + - 0x3a) + 0x30;
}
FUN_168b_04c4(uVar21, (unaff_BP + - 0x6a),
(unaff_BP + - 0x68), iVar19); uVar13 = ( * ((((unaff_BP + - 8) & 0xfff1) >> 1) + (unaff_BP + - 0x3a) + 0x814) + 1) / 3; (unaff_BP + - 0x14) = uVar13; if (3 < uVar13) {
(unaff_BP + - 0x14) = 3;
}
uVar21 = 0x168b; FUN_168b_04c4(0x168b, (unaff_BP + - 0x6a),
0x1388 + (unaff_BP + - 0x68),
(unaff_BP + - 0x14) + 0x80); piVar1 = (unaff_BP + -0x3a); * piVar1 = * piVar1 + 1; piVar1 = (unaff_BP + - 0x6a);
* piVar1 = * piVar1 + 0x138a;
}
}
0xcc42 = (unaff_BP + - 8);
}
uVar20 = 0xc4e4; uVar13 = (((unaff_BP + 6) * 0x40 + (unaff_BP + 8)) * 2 + 0x6bd); uVar12 = uVar13 >> 8 & 0x3f; (unaff_BP + - 8) = uVar12; if (((unaff_BP + - 0x62) != 0) || (uVar12 + (uVar13 & 0x4000) != 0xcc3c)) {
0xcc3c = ( * (((unaff_BP + 6) * 0x40 + (unaff_BP + 8)) * 2 + 0x6be) & 0x40) * 0x100 + (unaff_BP + - 8); FUN_168b_097f(uVar21, 0x1204); FUN_168b_097f(0x168b, 0x1215); FUN_168b_097f(0x168b, 0x120b); FUN_168b_097f(0x168b, 0x120c); if (( *(unaff_BP + - 8) & 0x20) == 0) {
if ((unaff_BP + - 8) == 0) {
if (( * (((unaff_BP + 6) * 0x40 + (unaff_BP + 8)) * 2 + 0x6be) & 0x40) == 0) {
uVar21 = 0x168b; FUN_168b_03d1(0x168b, 0x1204,0x1313);
}
else {
FUN_168b_03d1(0x168b, 0x1204, 0x1301); uVar21 = 0x168b; FUN_168b_030f(0x168b, 0x1204, 0x1309);
}
}
else {
FUN_168b_027d(0x168b, 0x1215, ((unaff_BP + - 8) >> 2) + 0x2134); iVar19 = 0xec5f * 4; uVar20 = 0xc4f8; FUN_168b_03d1(0x168b, 0x1204, (iVar19 + - 0x13e),
(iVar19 + - 0x13c)); if (0xec5f == 7) {
uVar20 = 0x12da;
}
else {
uVar20 = 0x12df;
}
FUN_2692_00b2(0x168b, uVar20); uVar20 = 0xc4fa; uVar13 = (unaff_BP + - 8) & 0xfffc; FUN_168b_03d1(0x2692, 0x120b, (uVar13 - 0x1c2),
(uVar13 - 0x1c0)); FUN_168b_03d1(0x168b, 0x120c, 0x12e5);
bVar10 = * (unaff_BP + - 8);
(unaff_BP + - 0x6e) = bVar10 & 3; (unaff_BP + - 0x6c) = 0;
if ((bVar10 & 3) == 0) {
uVar21 = 0x2692; FUN_2692_00b2(0x168b, 0x12f6);
}
else {
iVar19 = (unaff_BP + - 8); FUN_3444_23fe(0x168b, (unaff_BP + - 0x6e),
(unaff_BP + - 0x6c), iVar19 >> 2, iVar19 >> 0xf); uVar21 = 0x168b; FUN_168b_071f(0x3444, 0x12ea);
}
}
}
else {
FUN_168b_03d1(0x168b, 0x1204, 0x12ce); uVar13 = * (unaff_BP + - 8) & 7; iVar19 = uVar13 * 4; FUN_168b_030f(0x168b, 0x1204, (iVar19 + 0x1238),
(iVar19 + 0x123a), 0x7fd6,
0x7fd4);
uVar21 = 0x168b; FUN_168b_027d(0x168b, 0x1215,uVar13 + 0x1fa3);
}
}
uVar13 = * ((unaff_BP + - 0x46) * 0x20 + (unaff_BP + - 0x3e) +
- 0x48fa); (unaff_BP + - 8) = uVar13; if ((uVar13 != 0xcc4e) || ((unaff_BP + - 0x62) != 0)) {
if (uVar13 == 0) {
FUN_168b_097f(uVar21, 0x120d);
}
else {
FUN_168b_03d1(uVar21, 0x120d, 0x131f); uVar20 = 0xc4fe; FUN_168b_04c4(0x168b, 0x7f98, 0x7f9a,
((unaff_BP + - 8) >> 4) + 0x66); piVar1 = 0x7f98;
* piVar1 = * piVar1 + 0x138a + 2;
uVar20 = 0xc500; iVar19 = ((unaff_BP + - 8) & 0xfff3) >> 2;
FUN_168b_030f(0x168b, 0x120d, (iVar19 + -0x17e),
(iVar19 + - 0x17c),0, 0x1388);
}
uVar21 = 0x168b; 0xcc4e = (unaff_BP + -8);
}
if ((unaff_BP + - 0x62) == 0) {
FUN_168b_02da(uVar21, 0x1206, 6);
}
else {
FUN_168b_03d1(uVar21, 0x1206, 0x1327);
}
uVar20 = 0x168b; uVar13 = * ((unaff_BP + - 0x46) * 0x20 + (unaff_BP + - 0x3e) + 0x56c2
) - 0x46; uVar12 = uVar13 >> 0xf; iVar19 = (((uVar13 ^ uVar12) - uVar12) >> 2 ^ uVar12) - uVar12; (unaff_BP + - 8) = iVar19; if (((unaff_BP + - 0x62) != 0) || (iVar19 != 0xcc44)) {
uVar21 = 0xc504; if (0xcf4 == 9) {
piVar1 = (unaff_BP + - 8); *piVar1 = * piVar1 + - 0x32;
}
if (0xcf4 == 10) {
piVar1 = (unaff_BP + - 8); *piVar1 = * piVar1 + 200;
}
if ((unaff_BP + - 8) < 0) {
uVar20 = 0x2692; FUN_2692_00b2(0x168b, 0x132e); piVar1 = (unaff_BP + - 8);
* piVar1 = - * piVar1;
}
FUN_168b_071f(uVar20, 0x1330); FUN_2692_00b2(0x168b, 0x1333); 0xcc44 = (unaff_BP + -8); FUN_168b_08fe(0x2692, 0x1206);
}
if ((unaff_BP + - 0x62) == 0) {
FUN_168b_06a4(0x168b, 0x1208); FUN_168b_02da(0x168b, 0x1208, 5);
}
else {
FUN_168b_03d1(0x168b, 0x1208, 0x1336);
}
if (0x7faa != 0x140) {
piVar1 = 0x7f98; * piVar1 = * piVar1 + (0x7fd6 / '\x02');
}
uVar13 = * ((unaff_BP + - 0x46) * 0x20 + (unaff_BP + - 0x3e) +
- 0xb15); (unaff_BP + - 8) = uVar13; if ((uVar13 != 0xcc48) || ((unaff_BP + - 0x62) != 0)) {
if (uVar13 == 0) {
iVar19 = 0x7f9a; iVar14 = 0x7f98; ppcVar8 = (code * * )0xcf74; ( * *ppcVar8)(0x168b, iVar14, iVar19 + 0x7fd4, iVar14 + 0x138a,
iVar19 + 0x1388 + -1, 0x7fda | 0x40); uVar20 = 0x2692; FUN_2692_00b2(0x168b, 0x133c);
}
else {
uVar21 = 0xc4fe; uVar20 = 0x168b; FUN_168b_04c4(0x168b, 0x7f98, 0x7f9a,
((unaff_BP + - 8) - 1 & 7) + 0x28); piVar1 = 0x7f98; * piVar1 = *piVar1 + 0x138a;
}
FUN_168b_08fe(uVar20, 0x1208); 0xcc48 = (unaff_BP + - 8);
}
if ((unaff_BP + - 0x62) == 0) {
FUN_168b_02da(0x168b, 0x1207, 6);
}
else {
FUN_168b_03d1(0x168b, 0x1207, 0x1341);
}
uVar20 = 0x168b; uVar13 = * ((unaff_BP + - 0x46) * 0x20 + (unaff_BP + - 0x3e) + 0x46c2); (unaff_BP + - 8) = uVar13; if (((unaff_BP + - 0x62) != 0) || (uVar13 != 0xcc46)) {
FUN_168b_071f(0x168b, 0x1348); uVar20 = 0x2692; FUN_2692_00b2(0x168b, 0x1350); 0xcc46 = (unaff_BP + - 8);
}
(unaff_BP + - 8) = * ((unaff_BP + - 0x46) * 0x20 + (unaff_BP + - 0x3e) + 0x6ee1); if ((unaff_BP + - 0x62) == 0) {
FUN_168b_06a4(uVar20, 0x1208); FUN_168b_02da(0x168b, 0x1209, 6);
}
else {
FUN_168b_03d1(uVar20, 0x1209, 0x1357);
}
uVar20 = 0xc4fe; piVar1 = 0x7f98; * piVar1 = * piVar1 + (0x7fd6 / '\x02');
if (((unaff_BP + - 0x62) != 0) || (0xcc4a != (unaff_BP + - 8))) {
if (( * (unaff_BP + - 8) & 0xf0) == 0) {
iVar19 = 0x7f9a; iVar14 = 0x7f98; ppcVar8 = (code * * )0xcf74; ( * *ppcVar8)(0x168b, iVar14, iVar19, iVar14 + 0x138a, iVar19 + 0x1388 + - 1,
0x7fda | 0x40); uVar20 = 0x2692; FUN_2692_00b2(0x168b, 0x1369);
}
else {
FUN_168b_04c4(0x168b, 0x7f98, 0x7f9a,
( *(unaff_BP + - 8) & 7) + 0x28); uVar20 = 0xc4fe; piVar1 = 0x7f98; * piVar1 = * piVar1 + 0x138a; iVar19 = 0x7f98; ppcVar8 = (code * * )0xcf74; ( * * ppcVar8)(0x168b,iVar19, 0x7f9a, iVar19 + 1,
0x7fd4 + 0x7f9a, 0x7fda | 0x40); piVar1 = 0x7f98; * piVar1 = * piVar1 + 2; uVar20 = 0x168b; FUN_168b_071f(0x168b, 0x135e);
}
FUN_168b_08fe(uVar20, 0x1209); 0xcc4a = (unaff_BP + - 8);
}
uVar21 = 0x168b; uVar13 = * (((unaff_BP + 6) * 0x40 + (unaff_BP + 8)) * 2 + 0x6bd) & 0x1f; (unaff_BP + - 8) = uVar13;
if (((unaff_BP + - 0x62) != 0) || (uVar13 != 0xcc3a)) {
if (0xace < uVar13) {
FUN_168b_03d1(0x168b, 0x120a, 0x1370); piVar1 = (unaff_BP + - 8); * piVar1 = * piVar1 - 0xace;
}
else {
FUN_168b_03d1(0x168b, 0x120a, 0x137b); (unaff_BP + - 8) = - (( *(((unaff_BP + 6) * 0x40 + (unaff_BP + 8)) * 2 + 0x6bd
) & 0x1f) - 0xace);
}
FUN_168b_071f(0x168b, 0x1383); uVar21 = 0x168b; FUN_168b_08fe(0x168b, 0x120a); 0xcc3a = (unaff_BP + - 8);
}
}
ppcVar8 = (code * * )0xcf70; (* * ppcVar8)(uVar21); FUN_154b_1375(uVar21); FUN_1ba9_1038(0x154b, unaff_BP + -6); iVar19 = 0x138a; (unaff_BP + - 0x36) = ((iVar19 / 3 - 0x15c1) + (unaff_BP + - 6)) / iVar19; iVar19 = 0x1388; iVar19 = ((iVar19 / 3 - 0x15c3) + (unaff_BP + - 4)) / iVar19; (unaff_BP + - 0x34) = iVar19; if (0xd21 != '\0') {
(unaff_BP + - 0x36) = (unaff_BP + - 0x36) << 1; (unaff_BP + - 0x34) = iVar19 << 1;
}
piVar1 = (unaff_BP + - 0x36); *piVar1 = * piVar1 + 0xd2e; piVar1 = (unaff_BP + - 0x34); * piVar1 = *piVar1 + 0xd30; uVar20 = 0x1ba9; iVar19 = FUN_1ba9_10aa(0x1ba9); if (iVar19 == 0) {
FUN_2b26_0754(0x1ba9, 0x1200); uVar13 = FUN_2d56_0eee(0x2b26); return uVar13;
}
} while ( true );
}
uVar13 = FUN_1e08_043b(0x3444);
}
return uVar13;
}



fn fun_1e08_0940()

{
    let in_stack_0000000c: u16;

    fun_3444_02c6(0x39d9);
    fun_27ac_076d(0x3444, &stack0x0004);
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_1e08_095b()

{
    code * *ppcVar1;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    let u_var5: u16;
    let u_var6: u16;
    let u_var7: u16;
    let i_var8: i16;
    let i_var9: i16;
    let i_var10: i16;
    let i_var11: i16;
    let u_var12: u16;
    let unaff_ds: u16;
    let u_var13: u32;
    let u_var14: u32;
    let u_var15: u32;
    let u_var16: u32;
    let u_var17: u16;
    let u_var18: u16;
    let i_var19: i16;
    let i_var20: i16;
    let u_var21: u16;
    let i_var22: i16;
    let local_22: u32;
    let local_1e: u32;
    let i_stack26: i16;
    let i_stack24: i16;
    let u_stack22: u16;
    let u_stack20: u16;
    let i_stack18: i16;
    let i_stack16: i16;
    let u_stack14: u16;
    let u_stack12: u16;
    undefined4 * local_a;
    let i_var23: i16;

    fun_3444_02c6(0x39d9);
    local_a = (undefined4 *)
    0xe9ec;
    fun_1e08_043b();
    local_a = &local_22;
    u_stack12 = 0x903;
    u_stack14 = 0x3444;
    i_stack16 = 0xe9fa;
    fun_2b26_0e3b();
    if ((((0x992c == 9) && (-1 < local_22)) && (local_1e < 0x7faa)) && ((-1 < local_22._2_2_ && (local_1e._2_2_ < 0x7fac)))) {
        local_a = (undefined4 *)
        0xea2a;
        fun_294b_03be();
    } else {
        local_a = (undefined4 *)
        0x2b26;
        u_stack12 = 0xea35;
        fun_294b_02f2();
    }
    if (0x7faa == 0x140) {
        local_1e._0_2_ = local_1e + -1;
        local_1e._2_2_ = local_1e._2_2_ + -1;
    } else {
        local_1e._2_2_ = local_1e._2_2_ + -2;
    }
    if ((0x9c65 == '\a') || (0x9c65 == '\b')) {
        local_1e._0_2_ = local_1e + -1;
        local_1e._2_2_ = local_1e._2_2_ + -2;
    }
    i_var8 = (local_1e - local_22) / 2 + -3;
    i_var9 = (local_1e._2_2_ - local_22._2_2_) / 2 + -1;
    i_var23 = 0;
    local_a = (undefined4 *)
    0x12c;
    u_stack12 = 0xffff;
    u_stack14 = 0xf060;
    i_stack16 = i_var8 >> 0xf;
    u_var17 = 0xc606;
    u_stack20 = 0xcfe;
    u_stack22 = 0xcfc;
    i_stack26 = 0xbf06;
    i_stack24 = i_stack26 >> 0xf;
    local_1e._2_2_ = 0x294b;
    local_1e._0_2_ = 0xeac7;
    i_stack18 = i_var8;
    u_var13 = FUN_3444_23fe();
    local_22._2_2_ = 0x3444;
    local_22._0_2_ = 0xead4;
    local_1e = u_var13;
    u_var14 = FUN_3444_23fe();
    local_22 = u_var14;
    u_var15 = FUN_3444_2364(0x3444);
    i_var2 = FUN_3444_2364(0x3444, u_var15);
    u_var18 = u_var13;
    u_var13 = FUN_3444_23fe(0x3444, u_var13, i_var9, i_var9 >> 0xf, 0xf060, 0xffff, 300, 0);
    i_var22 = (u_var13 >> 0x10);
    u_var13 = FUN_3444_2364(0x3444, u_var13);
    i_var9 = (u_var13 >> 0x10);
    i_var19 = -0x14db;
    i_var3 = FUN_3444_2364(0x3444, u_var13);
    u_var4 = i_var3 + i_var19;
    i_var20 = 300;
    u_var13 = FUN_3444_2364(0x3444, u_var14, 0xf830, 0xffff, 300, 0);
    i_var3 = FUN_3444_2364(0x3444, u_var13);
    u_var21 = (undefined2)
    u_var13;
    i_var3 = i_var3 + (u_var13 >> 0x10);
    u_var17 = 0;
    u_var13 = FUN_3444_2364(0x3444, 0, u_var21, 0xf830, 0xffff, 300);
    i_var19 = FUN_3444_2364(0x3444, u_var13);
    u_var5 = i_var19 + i_var20;
    u_var13 = FUN_3444_2364(0x3444, u_var14, 600, 0, 300, 0);
    i_var19 = FUN_3444_2364(0x3444, u_var13);
    u_var13 = FUN_3444_2364(0x3444, u_var17, u_var21, 600, 0, 300, 0);
    u_var6 = FUN_3444_2364(0x3444, u_var13);
    if (i_var8 + i_var2 <= i_var3) {
        u_var4 = 0xffff;
        i_var9 = -1;
    }
    if (i_var3 <= i_var19) {
        u_var5 = 0xffff;
        i_var3 = -1;
    }
    if ((i_var22 + -3 < i_var9) || ((u_var18 - 2) < u_var4)) {
        i_var9 = i_var22 + -3;
        u_var4 = u_var18 - 2;
    }
    if ((i_var9 + -3 < i_var3) || ((u_var4 - 2) < u_var5)) {
        i_var3 = i_var9 + -3;
        u_var5 = u_var4 - 2;
    }
    if ((i_var3 + -3 < i_var19) || ((u_var5 - 2) < u_var6)) {
        i_var19 = i_var3 + -3;
        u_var6 = u_var5 - 2;
    }
    if ((i_var9 < 1) || (u_var4 < 1)) {
        i_var9 = -1;
    }
    if ((i_var3 < 1) || (u_var5 < 1)) {
        i_var3 = -1;
    }
    if ((i_var19 < 1) || (u_var6 < 1)) {
        i_var19 = -1;
    }
    u_var17 = 0xc60a;
    if (((0xcf4 == 0) || (0xcf4 == 9)) || (0xcf4 == 10)) {
        i_var9 = i_var22;
        u_var4 = u_var18;
        i_var3 = i_var22;
        u_var5 = u_var18;
        i_var19 = i_var22;
        u_var6 = u_var18;
    }
    u_var17 = 0x1f46;
    u_var21 = 0x5b2d;
    u_var14 = FUN_23e0_01d9(0x3444, local_a, i_var23, 0, u_var18, 0xf4f, 0x1f46, 0x5b2d, 1, i_var22, 1, i_var9, 1, i_var3, 1, i_var19);
    u_var15 = FUN_23e0_01d9(0x23e0, local_a, i_var23, 0, u_var4, 0xe3e, u_var14);
    u_var13 = FUN_23e0_01d9(0x23e0, local_a, i_var23, 0, u_var5, 0x424, u_var15);
    FUN_23e0_01d9(0x23e0, local_a, i_var23, 0, u_var6, 0x858, u_var13);
    if (0x1436 == 1) {
        for (iVar2 = 6; i_var2 < iVar22; iVar2 = iVar2 + 10) {
            FUN_23e0_01d9(0x23e0, local_a, i_var23, i_var2, u_var18, 0xf4f, u_var17, u_var21, 0);
            i_var10 = i_var22 >> 0xf;
            i_var11 = i_var2 >> 0xf;
            i_var8 = i_var2;
            i_var20 = i_var22;
            u_var16 = FUN_3444_23fe(0x23e0, i_var9, i_var9 >> 0xf, i_var2, i_var11, i_var22, i_var10, u_var4, 0xe3e, u_var14, 0);
            u_var7 = FUN_3444_2364(0x3444, u_var16);
            FUN_23e0_01d9(0x3444, local_a, i_var23, u_var7);
            u_var16 = FUN_3444_23fe(0x23e0, i_var3, i_var3 >> 0xf, i_var8, i_var11, i_var22, i_var10, u_var5, 0x424, u_var15, 0);
            u_var7 = FUN_3444_2364(0x3444, u_var16);
            FUN_23e0_01d9(0x3444, local_a, i_var23, u_var7);
            u_var16 = FUN_3444_23fe(0x23e0, i_var19, i_var19 >> 0xf, i_var8, i_var11, i_var22, i_var10, u_var6, 0x858,
                                    u_var13, 0);
            u_var7 = FUN_3444_2364(0x3444, u_var16);
            FUN_23e0_01d9(0x3444, local_a, i_var23, u_var7);
            fun_1e08_0940(0x23e0, local_a, (i_var23 - u_var18) + 1, local_a, u_var18 + i_var23 + -2, 0x818);
            i_var22 = i_var20;
        }
    }
    fun_1e08_0940(0x23e0, local_a, (i_var23 - u_var18) + 1, local_a, u_var18 + i_var23 + -2, 0xf4f);
    if (0 < i_var9) {
        fun_1e08_0940(0x23e0, local_a, (i_var23 - u_var4) + 1, local_a, u_var4 + i_var23 + -2, 0xe3e);
    }
    if (0 < i_var3) {
        fun_1e08_0940(0x23e0, local_a, (i_var23 - u_var5) + 1, local_a, u_var5 + i_var23 + -2, 0x424);
    }
    if (0 < i_var19) {
        fun_1e08_0940(0x23e0, local_a, (i_var23 - u_var6) + 1, local_a, u_var6 + i_var23 + -2, 0x858);
    }
    FUN_23e0_01d9(0x23e0, local_a, i_var23, i_var22, u_var18, 0xf4f, u_var17, u_var21, 0);
    FUN_23e0_01d9(0x23e0, local_a, i_var23, i_var9, u_var4, 0xe3e, u_var14, 0);
    FUN_23e0_01d9(0x23e0, local_a, i_var23, i_var3, u_var5, 0x424, u_var15, 0);
    FUN_23e0_01d9(0x23e0, local_a, i_var23, i_var19, u_var6, 0x858, u_var13, 0);
    ppcVar1 = (code * *)
    0xcf6c;
    (**ppcVar1)(0x23e0);
    if (0x7faa == 0x140) {
        i_var22 = 10;
    } else {
        i_var22 = 0x19;
    }
    fun_2c63_0100(0x23e0, 0, 0xf);
    i_var2 = local_a + i_var22;
    FUN_2c63_01c1(0x2c63, i_var2, -(0x7fd4 - i_var23), 0x1ef0);
    if (i_var19 < i_var3) {
        FUN_2c63_01c1(0x2c63, i_var2, -(0x7fd4 * 3 - i_var23), 0x1ef5);
    }
    if (i_var3 < i_var9) {
        FUN_2c63_01c1(0x2c63, local_a + i_var22, -(0x7fd4 * 5 - i_var23), 0x1efc);
    }
    i_var2 = local_a + i_var22;
    FUN_2c63_01c1(0x2c63, i_var2, -(0x7fd4 * 7 - i_var23), 0x1f01);
    i_var2 = i_var2 + -1;
    u_var12 = u_var6 >> 0xf;
    ppcVar1 = (code * *)
    0xcfac;
    (**ppcVar1)(0x2c63, local_a,
                (i_var23 - ((((u_var6 ^ u_var12) - u_var12) >> 2 ^ u_var12) - u_var12)) + 1, i_var2,
                -(0x7fd4 / '\x02' - i_var23), 0x242);
    if (i_var19 < i_var3) {
        ppcVar1 = (code * *)
        0xcfac;
        (**ppcVar1)(0x2c63, local_a, (i_var23 - ((u_var5 - u_var6) / 2 + u_var6)) + 1, i_var2,
                    0x7fd4 * -2 - (0x7fd4 / '\x02' - i_var23), 0x242);
    }
    if (i_var3 < i_var9) {
        ppcVar1 = (code * *)
        0xcfac;
        (**ppcVar1)(0x2c63, local_a, (i_var23 - ((u_var4 - u_var5) / 2 + u_var5)) + 1,
                    local_a + i_var22 + -1,
                    -(0x7fd4 / '\x02') - (0x7fd4 * 4 - i_var23), 0x242);
    }
    ppcVar1 = (code * *)
    0xcfac;
    (**ppcVar1)(0x2c63, local_a, (i_var23 - ((u_var18 - u_var4) / 2 + u_var4)) + 1,
                local_a + i_var22 + -1,
                -(0x7fd4 / '\x02') - (0x7fd4 * 6 - i_var23), 0x242);
    ppcVar1 = (code * *)
    0xcf70;
    (**ppcVar1)(0x2c63);
    fun_294b_03be(0x2c63);
    0x1436 = 2;
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_1e08_1103(param_1_00: u16, param_1: i16, param_2: u16)

{
    let pb_var1: *mut u8;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    bool
    bVar5;
    let i_var6: i16;
    let u_var7: u16;
    let i_var8: i16;
    let u_var9: u16;
    undefined4 * puVar10;
    let unaff_ss: i16;
    let unaff_ds: u16;
    let local_26: *mut u16;
    let local_20: i16;
    let local_1e: i16;
    let local_1c: i16;
    let local_1a: i16;
    let local_14: u32;
    let local_10: i16;
    let local_e: i16;
    undefined4 * local_c;
    undefined4 * *ppuVar11;
    let i_var12: i16;

    fun_3444_02c6(0x39d9);
    i_var12 = 0;
    local_c = (undefined4 *)
    0x903;
    local_e = 0x3444;
    local_10 = 0xf1a6;
    fun_2b26_0e3b();
    i_var2 = 0x5d24;
    if ((((i_var2 <= (param_1 + 8)) && ((param_1 + 8) < 0x5d28)) && (0x5d26 <= (param_1 + 10))) && ((param_1 + 10) < 0x5d2a)) {
        i_var12 = 1;
    }
    if (((i_var2 + (local_1c - local_20) <= (param_1 + 8)) && ((param_1 + 8) < (local_1c - local_20) + 0x5d28)) && ((0x5d26 <= (param_1 + 10) && ((param_1 + 10) < 0x5d2a)))) {
        i_var12 = 1;
    }
    pb_var1 = 0x143a;
    *pb_var1 = *pb_var1 ^ 1;
    if (i_var12 == 0) {
        if ((*(param_1 + 7) & 0x60) != 0) {
            0x1436 = 1;
            fun_1e08_095b();
        }
    } else {
        bVar5 = false;
        local_14 = FUN_2692_05ab();
        local_c = (undefined4 *)
        0xf268;
        fun_294b_02f2();
        if ((*(param_1 + 7) & 0x60) == 0) {
            u_var4 = 0xc602;
            local_26 = CONCAT22(u_var4, 0xd2e);
            local_10 = 0xd2e;
            local_e = 0xd30;
            i_var2 = (param_1 + 10);
            i_var12 = 0x5d26;
            while (true) {
                puVar10 = (undefined4 *)
                0x1ba9;
                i_var6 = FUN_1ba9_10aa();
                if (i_var6 == 0)
                break;
                if (!bVar5) {
                    local_c = &local_14;
                    local_e = 0x1ba9;
                    puVar10 = (undefined4 *)
                    0x2a60;
                    local_10 = -0xd30;
                    i_var6 = FUN_2a60_0913();
                    if (i_var6 != 0) {
                        pb_var1 = 0x143a;
                        *pb_var1 = *pb_var1 ^ 1;
                        bVar5 = true;
                    }
                }
                local_e = -0xd13;
                local_c = puVar10;
                i_var6 = fun_2d56_0ead();
                if (((i_var6 != 0) && ((param_1 + 0xc) == 0x103)) && ((*(param_1 + 7) & 0x60) != 0)) {
                    fun_154b_0225();
                    break;
                }
                ppuVar11 = &local_c;
                local_c = (undefined4 *)
                0x2d56;
                local_e = -0xcee;
                i_var6 = unaff_ss;
                fun_1ba9_1038();
                if (0x7faa == 0x140) {
                    u_var7 = ((local_20 - local_1c) / 2 - local_20) + local_c;
                    u_var9 = u_var7 >> 0xf;
                    i_var8 = (((u_var7 ^ u_var9) - u_var9) >> 3 ^ u_var9) - u_var9;
                } else {
                    i_var8 = (((local_20 - local_1c) / 2 - local_20) + local_c) / 0xc;
                }
                if (i_var8 < 2) {
                    if (i_var8 < -1) {
                        local_c = (undefined4 *)(i_var8 + 1);
                    } else {
                        local_c = (undefined4 *)
                        0x0;
                    }
                } else {
                    local_c = (undefined4 *)(i_var8 + -1);
                }
                i_var6 = i_var6 + local_c;
                if (i_var6 < 0x81) {
                    if (i_var6 < 0) {
                        i_var6 = i_var6 + 0x80;
                    }
                } else {
                    i_var6 = i_var6 + -0x80;
                }
                i_var8 = ((ppuVar11 - (local_1e + (i_var2 - i_var12))) * 0x40) / (local_1a - local_1e) + 1;
                if (i_var8 < 0) {
                    i_var8 = 0;
                } else {
                    if (0xd21 == '\0') {
                        i_var3 = 0xff32;
                        if (0x40 < i_var3 + i_var8) {
                            i_var8 = 0x40 - i_var3;
                        }
                    } else {
                        i_var3 = 0xff32;
                        if (0x40 < i_var3 * 2 + i_var8) {
                            i_var8 = (0x20 - i_var3) * 2;
                        }
                    }
                }
                if ((i_var6 != local_10) || (i_var8 != local_e)) {
                    if (i_var6 == local_10) {
                        i_var6 = 0x1ba9;
                        fun_1e08_043b();
                        *local_26 = i_var6;
                        0xd30 = i_var8;
                        fun_1e08_043b();
                    } else {
                        *local_26 = i_var6;
                        0xd30 = i_var8;
                        FUN_1e08_0884();
                    }
                    fun_154b_0395();
                    local_c = (undefined4 *)
                    0xf45e;
                    fun_294b_02f2();
                    fun_1862_2340();
                    i_var6 = 0x1862;
                    FUN_1862_2140();
                    local_e = i_var8;
                    local_10 = i_var6;
                }
            }
            fun_2d56_0eee();
            fun_294b_03be();
        } else {
            fun_154b_0225();
        }
    }
    return;
}


fn fun_1e08_1428()

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((0x992c == 9) && (0x1436 == 0)) {
        if (0x143a != 0) {
            u_var2 = 0xc602;
            pi_var1 = 0xd2e;
            *pi_var1 = *pi_var1 + -2;
            if (*pi_var1 < 0) {
                pi_var1 = 0xd2e;
                *pi_var1 = *pi_var1 + 0x80;
            }
        }
        FUN_1e08_0884(0x3444);
        if (0x143a != 0) {
            fun_154b_0395(0x3444);
            fun_294b_02f2(0x154b, 1);
            fun_1862_2340(0x294b);
            FUN_1862_2140(0x1862);
            fun_294b_03be(0x1862);
        }
    }
    return;
}


fn fun_1f51_0016()

{
    let pb_var1: *mut u8;
    let i_var2: i16;
    let pb_var3: *mut u8;
    let unaff_ds: u16;

    pb_var3 = 0x5f18;
    i_var2 = 0x800;
    loop {
    pb_var1 = pb_var3;
    *pb_var1 = *pb_var1 | 0x80;
    pb_var3 = pb_var3 + 1;
    i_var2 = i_var2 + -1;
}
    while (i_var2 != 0);
    return;
}


fn fun_1f51_0024()

{
    let pb_var1: *mut u8;
    let i_var2: i16;
    let pb_var3: *mut u8;
    let unaff_ds: u16;

    pb_var3 = 0x5f18;
    i_var2 = 0x800;
    loop {
    pb_var1 = pb_var3;
    *pb_var1 = *pb_var1 & 0x7f;
    pb_var3 = pb_var3 + 1;
    i_var2 = i_var2 + -1;
}
    while (i_var2 != 0);
    return;
}


// WARNING: Removing unreachable block (ram,0x0001f5ff)
// WARNING: Removing unreachable block (ram,0x0001f58b)
// WARNING: Removing unreachable block (ram,0x0001f5c4)
// WARNING: Removing unreachable block (ram,0x0001f639)
// WARNING: Restarted to delay deadcode elimination for space: stack

void FUN_1f51_0032(param_1: u16,param_2: i16,code *param_3,param_4: u16,
undefined4 param_5,undefined4 param_6,undefined4 param_7)

{
let bVar1: u8; let piVar2: * mut u16; let iVar3: i16; let iVar4: i16; let iVar5: i16; let iVar6: i16; let iVar7: i16; let iVar8: i16; let uVar9: u16; let uVar10: u16; let uVar11: u16; let uVar12: u16; let unaff_DS: u16; let local_12: * mut u8; let local_10: i16; let local_e: * mut u16; let local_c: u16; let local_a: u16;

local_a = 0;
local_c = 0; local_10 = 0; local_12 = 0x5f18; local_e = 0x1f18; iVar8 = local_10;
piVar2 = local_e; loop {
loop {
local_e = piVar2; local_10 = iVar8; ( *param_3)(0x39d9, local_a, local_c);
iVar3 = local_10 * 2; uVar9 = (iVar3 + 0x6bd) & 0x1f; iVar8 = param_5;
uVar12 = (undefined2)(param_5 >> 0x10); iVar4 = param_6; uVar10 = (undefined2)(param_6 >> 0x10); iVar5 = iVar8; uVar11 = uVar12; if (uVar9 <= param_2) {
uVar9 = (uVar9 - param_2) + 0x1f;
iVar5 = iVar4; uVar11 = uVar10;
}
iVar5 = (iVar5 + uVar9 * 2);
uVar9 = (iVar3 + 0x73d) & 0x1f;
iVar6 = iVar8; uVar11 = uVar12; if (uVar9 < = param_2) {
uVar9 = (uVar9 - param_2) + 0x1f;
iVar6 = iVar4; uVar11 = uVar10;
}
iVar6 = (iVar6 + uVar9 * 2);
uVar9 = (iVar3 + 0x6bf) & 0x1f;
iVar7 = iVar8; uVar11 = uVar12; if (uVar9 < = param_2) {
uVar9 = (uVar9 - param_2) + 0x1f;
iVar7 = iVar4; uVar11 = uVar10;
}
iVar7 = (iVar7 + uVar9 * 2);
uVar9 = (iVar3 + 0x73f) & 0x1f;
if (uVar9 < = param_2) {
uVar9 = (uVar9 - param_2) + 0x1f;
iVar8 = iVar4; uVar12 = uVar10;
}
iVar8 = (iVar8 + uVar9 * 2);
bVar1 = * local_12; if (((((bVar1 & 0x80) != 0) || (iVar5 != * local_e)) || (iVar6 != local_e[1])) ||
(((iVar7 != local_e[0x80] || (iVar8 != local_e[0x81])) || ((bVar1 & 0xf) != 8)))) {
* local_e = iVar5; local_e[1] = iVar6; local_e[0x80] = iVar7; local_e[0x81] = iVar8; * local_12 = bVar1 & 0xf0 | 0x88;
}
local_12 = local_12 + 1; local_a = local_a + 1; iVar8 = local_10 + 0x80; piVar2 = local_e + 2;
} while ((local_a & 0x3f) != 0); local_a = 0; local_c = local_c + 1; iVar8 = local_10 + - 0x1f7e; piVar2 = local_e + 0x82;
} while ((local_c & 0x1f) != 0); return;
}



void  FUN_1f51_01e5()

{
code * * ppcVar1; let uVar2: u16;
let in_CX: u16; let bVar3: u8;
let unaff_DS: u16;

loop {
ppcVar1 = (code * * )0x67ed; (* * ppcVar1)(0x39d9); bVar3 = (in_CX >> 8) + 1; uVar2 = in_CX & 0xff; in_CX = uVar2 | bVar3 << 8;
} while (bVar3 < uVar2); return;
}


// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void  FUN_1f51_01f7()

{
let pcVar1: String; let in_AX: i16;
let in_CX: i16; let in_BX: u16;
let iVar2: i16; let pbVar3: * mut u8; let unaff_SI: u16; let unaff_DI: i16; let iVar4: i16; let unaff_ES: u16; let unaff_SS: u16;

* (undefined * )0x67e8 = (in_BX >> 6); iVar2 = in_BX + in_AX; pbVar3 = (iVar2 + 0x5f18); if (0x9c65 != '\x03') {
if ((unaff_SI & 0xff) != 0) {
if (( * pbVar3 & 0x80) != 0) {
if (in_CX == 0) {
FUN_1f51_01e5(); * (undefined * )0x67f1 = 1; return;
}
FUN_1f51_01e5(); * (undefined * )0x67f1 = 1;
}
pcVar1 = (char * )0x67e8; * pcVar1 = * pcVar1 + '\x01'; in_CX = in_CX + - 1; pbVar3 = (iVar2 + 0x5f58);
}
if (0 < in_CX) {
loop {
if (( * pbVar3 & 0x80) != 0) {
( * _DAT_a000_67e9)(0x39d9); * (undefined * )0x67f1 = 1;
}
pcVar1 = (char * )0x67e8; * pcVar1 = * pcVar1 + '\x01'; pbVar3 = pbVar3 + 0x40; in_CX = in_CX + - 1;
} while (in_CX != 0);
}
if (((unaff_SI & 0xff00) != 0) & & (( * pbVar3 & 0x80) != 0)) {
FUN_1f51_01e5(in_CX); * (undefined * )0x67f1 = 1;
}
return;
}
if ((unaff_SI & 0xff) != 0) {
if (( * pbVar3 & 0x80) != 0) {
if (in_CX == 0) {
FUN_1f51_01e5(); * (undefined * )0x67f1 = 1; return;
}
FUN_1f51_01e5(); * (undefined * )0x67f1 = 1;
}
pcVar1 = (char * )0x67e8; * pcVar1 = * pcVar1 + '\x01'; in_CX = in_CX + - 1; pbVar3 = (iVar2 + 0x5f58); iVar2 = unaff_DI + 0x2000; if (iVar2 < 0) {
iVar2 = unaff_DI + - 0x5fa6;
}
iVar4 = iVar2 + 0x2000; if (iVar4 < 0) {
iVar4 = iVar2 + - 0x5fa6;
}
iVar2 = iVar4 + 0x2000; if (iVar2 < 0) {
iVar2 = iVar4 + - 0x5fa6;
}
iVar4 = iVar2 + 0x2000; if (iVar4 < 0) {
iVar4 = iVar2 + - 0x5fa6;
}
iVar2 = iVar4 + 0x2000; if (iVar2 < 0) {
iVar2 = iVar4 + - 0x5fa6;
}
unaff_DI = iVar2 + 0x2000; if (unaff_DI < 0) {
unaff_DI = iVar2 + - 0x5fa6;
}
}
if (0 < in_CX) {
loop {
if (( * pbVar3 & 0x80) != 0) {
( * _DAT_b000_67e9)(0x39d9); * (undefined * )0x67f1 = 1;
}
pcVar1 = (char * )0x67e8; * pcVar1 = * pcVar1 + '\x01'; pbVar3 = pbVar3 + 0x40; iVar2 = unaff_DI + 0x2000; if (iVar2 < 0) {
iVar2 = unaff_DI + - 0x5fa6;
}
iVar4 = iVar2 + 0x2000; if (iVar4 < 0) {
iVar4 = iVar2 + - 0x5fa6;
}
iVar2 = iVar4 + 0x2000; if (iVar2 < 0) {
iVar2 = iVar4 + - 0x5fa6;
}
iVar4 = iVar2 + 0x2000; if (iVar4 < 0) {
iVar4 = iVar2 + - 0x5fa6;
}
iVar2 = iVar4 + 0x2000; if (iVar2 < 0) {
iVar2 = iVar4 + - 0x5fa6;
}
unaff_DI = iVar2 + 0x2000; if (unaff_DI < 0) {
unaff_DI = iVar2 + - 0x5fa6;
}
in_CX = in_CX + - 1;
} while (in_CX != 0);
}
if (((unaff_SI & 0xff00) != 0) & & (( * pbVar3 & 0x80) != 0)) {
FUN_1f51_01e5(in_CX); * (undefined * )0x67f1 = 1;
}
return;
}



undefined2
FUN_1f51_03da(param_1_00: u16,uparam_1: i16,param_2: i16,param_3: i16,param_4: i16,param_5: i16,
param_6: i16)

{
let pcVar1: String; undefined uVar2; bool bVar3; let uVar4: u16; let uVar5: u16; let uVar6: u16; let bVar7: u8; let uVar8: u16; let in_DX: i16; let extraout_DX: i16; let uVar9: u16; let iVar10: i16; let iVar11: i16; let iVar12: i16; let uVar13: u16; let unaff_SS: u16; let uVar14: u32;

uVar13 = 0x39d9; pcVar1 = 0x7fcc; * pcVar1 = * pcVar1 + '\x01'; if ((((0x8540 == '\0') & & (in_DX = param_6, param_4 < = 0x8550)) & & (0x854e < = param_6)) & & ((in_DX = param_5, param_3 < = 0x8552 & & (0x854c < = param_5)))) {
uVar13 = 0x2692; FUN_2692_02a5(0x39d9); in_DX = extraout_DX;
}
if (0x9c65 != '\x03') {
out(0x3c4, 0xf02); in_DX = 0x3ce; if ((0x9c65 != '\a') & & (0x9c65 != '\x05')) {
out(0x3ce, 0x205);
}
out(0x3ce, 3);
}
param_4 = param_4 - param_2; param_6 = param_6 - param_2; if ((((0x9c65 == '\0') || (0x9c65 == '\b')) || (0x9c65 == '\a')) || (0x9c65 == '\x05')) {
param_2 = param_2 * 0x50;
}
else {
if (0x9c65 == '\x03') {
param_2 = (param_2 * 2 + 0x7ff4);
}
}
param_3 = param_3 - (param_1 & 0xfff8);
param_5 = param_5 - (param_1 & 0xfff8);
param_2 = param_2 + (param_1 >> 3); iVar11 = 0; loop {
iVar10 = iVar11; iVar11 = 0x67e0; bVar3 = iVar11 < = param_4; param_4 = param_4 - iVar11; iVar11 = iVar10 + 1;
} while (bVar3); if (((0x9c65 != '\0') & & (0x9c65 != '\x05')) & & ((0x9c65 != '\a' & & ((0x9c65 != '\b' & & (0x9c65 == '\x03')))))) {
for (; iVar10 != 0; iVar10 = iVar10 + - 1) {
iVar11 = param_2 + 0x2000; if (iVar11 < 0) {
iVar11 = param_2 + - 0x5fa6;
}
iVar12 = iVar11 + 0x2000; if (iVar12 < 0) {
iVar12 = iVar11 + - 0x5fa6;
}
iVar11 = iVar12 + 0x2000; if (iVar11 < 0) {
iVar11 = iVar12 + - 0x5fa6;
}
iVar12 = iVar11 + 0x2000; if (iVar12 < 0) {
iVar12 = iVar11 + - 0x5fa6;
}
iVar11 = iVar12 + 0x2000; if (iVar11 < 0) {
iVar11 = iVar12 + - 0x5fa6;
}
param_2 = iVar11 + 0x2000; if (param_2 < 0) {
param_2 = iVar11 + - 0x5fa6;
}
}
}
uVar4 = param_3 * 0x100; param_3._1_1_ = (uVar4 >> 8) & 7; loop {
iVar11 = 0x67e0; bVar3 = iVar11 < = param_6; param_6 = param_6 - iVar11;
} while (bVar3); uVar5 = param_5 * 0x100; param_5._1_1_ = (uVar5 >> 8) & 7; bVar7 = (param_5 >> 3) - (param_3 >> 3);
uVar8 = bVar7; if (bVar7 == 0) {
bVar7 = * (param_3._1_1_ + 6) & * (param_5._1_1_ + 0xe);
* 0x67e6 = bVar7; if (0x9c65 != '\x03') {
out(in_DX, CONCAT11(bVar7, 8));
}
uVar14 = FUN_1f51_01f7(); uVar6 = (undefined2)(uVar14 >> 0x10); uVar13 = (undefined2)uVar14; if (0x9c65 != '\x03') {
out(uVar6, 5); uVar13 = 0xff08; out(uVar6, 0xff08);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
uVar13 = FUN_2692_01e8(0x1000);
}
}
else {
if (0x853e != '\0') {
uVar13 = FUN_2692_0562(0x1000);
}
}
}
pcVar1 = (char * )0x7fcc; * pcVar1 = * pcVar1 + - 1; return uVar13;
}
if ((uVar4 & 0x700) != 0) {
uVar13 = 0x1000; uVar2 = * ff(param_3._1_1_ + 6); *(undefined * )0x67e6 = uVar2; if (0x9c65 != '\x03') {
out(in_DX, CONCAT11(uVar2, 8));
}
uVar14 = FUN_1f51_01f7(); in_DX = (uVar14 >> 0x10); uVar8 = uVar8 - 1; if (uVar8 == 0) goto LAB_1f51_06cc;
}
* (undefined * )0x67e6 = 0xff; if (0x9c65 != '\x03') {
out(in_DX, 0xff08);
}
loop {
uVar14 = FUN_1f51_01f7(); uVar8 = uVar8 - 1;
} while (uVar8 != 0);
// LAB_1f51_06cc: if ((uVar5 & 0x700) != 0) {
uVar13 = 0x1000; uVar2 = * ff(param_5._1_1_ + 0xe); *(undefined * )0x67e6 = uVar2; if (0x9c65 != '\x03') {
out((uVar14 >> 0x10), CONCAT11(uVar2, 8));
}
uVar14 = FUN_1f51_01f7();
}
uVar9 = (undefined2)(uVar14 >> 0x10); uVar6 = (undefined2)uVar14; if (0x9c65 != '\x03') {
out(uVar9, 0xff08); uVar6 = 5; out(uVar9, 5);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
uVar6 = FUN_2692_01e8(uVar13);
}
}
else {
if (0x853e != '\0') {
uVar6 = FUN_2692_0562(uVar13);
}
}
}
pcVar1 = (char * )0x7fcc; * pcVar1 = * pcVar1 + - 1; return uVar6;
}



void  FUN_1f51_0749()

{
let pcVar1: String; code * * ppcVar2;
let in_AX: i16; let uVar3: u16;
let in_CX: i16; let in_BX: u16;
let iVar4: i16; let pbVar5: * mut u8; let unaff_SI: u16; let unaff_ES: u16; let unaff_SS: u16;

* (undefined * )0x67e8 = (in_BX >> 6); iVar4 = in_BX + in_AX; pbVar5 = (iVar4 + 0x5f18); uVar3 = 0xa000; if (0x9c65 == '\x02') {
uVar3 = 0xb800;
}
if ((unaff_SI & 0xff) != 0) {
if (((( * pbVar5 & 0x80) != 0) || (( * (iVar4 + 0x5f19) & 0x80) != 0)) || (( * (iVar4 + 0x5f58) & 0x80) != 0)) {
if (in_CX == 0) {
FUN_1f51_01e5(); * (undefined * )0x67f1 = 1; return;
}
FUN_1f51_01e5(); * (undefined * )0x67f1 = 1;
}
pcVar1 = (char * )0x67e8; * pcVar1 = * pcVar1 + '\x01'; in_CX = in_CX + - 1; pbVar5 = (iVar4 + 0x5f58);
}
if (0 < in_CX) {
loop {
if (((( * pbVar5 & 0x80) != 0) || ((pbVar5[1] & 0x80) != 0)) || ((pbVar5[0x40] & 0x80) != 0)) {
ppcVar2 = (code * * )0x67e9; (* * ppcVar2)(0x39d9); * (undefined * )0x67f1 = 1;
}
pcVar1 = (char * )0x67e8; * pcVar1 = * pcVar1 + '\x01'; pbVar5 = pbVar5 + 0x40; in_CX = in_CX + - 1;
} while (in_CX != 0);
}
if (((unaff_SI & 0xff00) != 0) & & (((( * pbVar5 & 0x80) != 0 || ((pbVar5[1] & 0x80) != 0)) || ((pbVar5[0x40] & 0x80) != 0)))) {
FUN_1f51_01e5(in_CX); * (undefined * )0x67f1 = 1;
}
return;
}



undefined2
FUN_1f51_0848(param_1_00: u16,uparam_1: i16,param_2: i16,param_3: i16,param_4: i16,param_5: i16,
param_6: i16)

{
let pcVar1: String; undefined uVar2; let iVar3: i16; bool bVar4; let uVar5: u16; let uVar6: u16; let uVar7: u16; let bVar8: u8; let iVar9: i16; let in_DX: i16; let extraout_DX: i16; let uVar10: u16; let uVar11: u16; let iVar12: i16; let iVar13: i16; let uVar14: u16; let unaff_SS: u16; let uVar15: u32;

uVar14 = 0x39d9;
pcVar1 = (char * )0x7fcc; * pcVar1 = * pcVar1 + '\x01'; if ((((0x8540 == '\0') & & (in_DX = param_6, param_4 < = 0x8550)) & &
(0x854e < = param_6)) & & ((in_DX = param_5, param_3 < = 0x8552 && (0x854c < = param_5)))) {
uVar14 = 0x2692; FUN_2692_02a5(0x39d9); in_DX = extraout_DX;
}
if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(0x3c4, 0xf02); in_DX = 0x3ce; out(0x3ce, 0x205); out(0x3ce, 3);
}
param_6 = param_6 - param_2; uVar11 = param_1;
if (0x9c65 != '\x06') {
uVar11 = param_1 & 0xfff8;
}
uVar6 = param_1; if ((0x9c65 != '\x06') & & (uVar6 = param_1 >> 1, 0x9c65 != '\x02')) {
uVar6 = param_1 >> 3;
}
iVar12 = (param_2 * 2 + 0x7ff4) + uVar6; iVar13 = param_4 - param_2; iVar3 = 0; loop {
iVar9 = iVar3; iVar3 = 0x67e0; bVar4 = iVar3 < = iVar13; iVar13 = iVar13 - iVar3; iVar3 = iVar9 + 1;
} while (bVar4); if (0x9c65 == '\x02') {
for (; iVar9 != 0; iVar9 = iVar9 + - 1) {
iVar13 = iVar12 + 0x2000; if (iVar13 < 0) {
iVar13 = iVar12 + - 0x5f60;
}
iVar12 = iVar13 + 0x2000; if (iVar12 < 0) {
iVar12 = iVar13 + - 0x5f60;
}
iVar13 = iVar12 + 0x2000; if (iVar13 < 0) {
iVar13 = iVar12 + - 0x5f60;
}
iVar12 = iVar13 + 0x2000; if (iVar12 < 0) {
iVar12 = iVar13 + - 0x5f60;
}
}
}
uVar6 = (param_3 - uVar11) * 0x100;
param_3._1_1_ = (uVar6 >> 8) & 7; loop {
iVar12 = 0x67e0; bVar4 = iVar12 < = param_6; param_6 = param_6 - iVar12;
} while (bVar4); uVar5 = (param_5 - uVar11) * 0x100; param_5._1_1_ = (uVar5 >> 8) & 7; bVar8 = ((param_5 - uVar11) >> 3) - ((param_3 - uVar11) >> 3); uVar11 = bVar8; if (bVar8 == 0) {
bVar8 = * (param_3._1_1_ + 6) & * (param_5._1_1_ + 0xe);
* 0x67e6 = bVar8; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(in_DX, CONCAT11(bVar8, 8));
}
uVar15 = FUN_1f51_0749(); uVar7 = (undefined2)(uVar15 >> 0x10); uVar14 = (undefined2)uVar15; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar7, 5); uVar14 = 0xff08; out(uVar7, 0xff08);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
uVar14 = FUN_2692_01e8(0x1000);
}
}
else {
if (0x853e != '\0') {
uVar14 = FUN_2692_0562(0x1000);
}
}
}
pcVar1 = (char * )0x7fcc; * pcVar1 = * pcVar1 + - 1; return uVar14;
}
if ((uVar6 & 0x700) != 0) {
uVar14 = 0x1000; uVar2 = * ff(param_3._1_1_ + 6); *(undefined * )0x67e6 = uVar2; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(in_DX, CONCAT11(uVar2, 8));
}
uVar15 = FUN_1f51_0749(); in_DX = (uVar15 >> 0x10); uVar11 = uVar11 - 1; if (uVar11 == 0) goto LAB_1f51_0b2f;
}
* (undefined * )0x67e6 = 0xff; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(in_DX, 0xff08);
}
loop {
uVar15 = FUN_2fad_0189(); uVar11 = uVar11 - 1;
} while (uVar11 != 0);
// LAB_1f51_0b2f: if ((uVar5 & 0x700) != 0) {
uVar14 = 0x2000; uVar2 = * ff(param_5._1_1_ + 0xe); *(undefined * )0x67e6 = uVar2; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out((uVar15 >> 0x10), CONCAT11(uVar2, 8));
}
uVar15 = FUN_2fad_0189();
}
uVar10 = (undefined2)(uVar15 >> 0x10); uVar7 = (undefined2)uVar15; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar10, 0xff08); uVar7 = 5; out(uVar10, 5);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
uVar7 = FUN_2692_01e8(uVar14);
}
}
else {
if (0x853e != '\0') {
uVar7 = FUN_2692_0562(uVar14);
}
}
}
pcVar1 = (char * )0x7fcc; * pcVar1 = * pcVar1 + - 1; return uVar7;
}



undefined4
FUN_200c_000c(param_1_00: u16,undefined2 *param_1,param_2: u16,param_3: i16,param_4: i16)

{
let piVar1: * mut u16; let lVar2: i32; let iVar3: i16; let iVar4: i16; let iVar5: i16; let uVar6: u16; let unaff_DS: u16; let local_a: i16; let piStack8: * mut u16;

FUN_3444_02c6(0x39d9); uVar6 = (undefined2)(param_1 >> 0x10); iVar5 = param_1;
* param_1 = param_2; (iVar5 + 2) = param_3; (iVar5 + 4) = param_4; piStack8 = & local_a; local_a = param_4;
FUN_2b26_0e3b(0x3444); piStack8 = param_2; local_a = 0x2b26; iVar3 = FUN_3444_178e(); lVar2 = (long)iVar3 * (long)0x7fd6; iVar4 = (lVar2 >> 0x10);
iVar3 = lVar2; if (param_3 - local_a < iVar3) {
(iVar5 + 8) = 1; param_3 = param_3 - local_a; (iVar5 + 6) = param_3;
}
else {
(iVar5 + 8) = 0; iVar4 = ((param_3 - iVar3) - local_a) / 2; (iVar5 + 6) = iVar4;
param_3 = iVar4 / 8; iVar4 = iVar4 % 8; piVar1 = (iVar5 + 6);
* piVar1 = * piVar1 - iVar4;
}
return CONCAT22(iVar4, param_3);
}



undefined2
FUN_200c_00a0(param_1_00: u16,char * * param_1,param_2: u16,int *param_3,
param_4: u16)

{
let piVar1: * mut u16; let iVar2: i16; let unaff_DS: u16;

FUN_3444_02c6(0x39d9); if ((((param_1 + 2) | param_1) != 0) & & (* * param_1 != '\0')) {
iVar2 = FUN_3444_178e(0x3444, param_1); iVar2 = iVar2 * 0x7fd6; FUN_2b26_0e3b(0x3444, (param_1 + 1), param_3); if ((param_1 + 6) < 1) {
iVar2 = iVar2 + (param_1 + 6);
}
else {
piVar1 = param_3; * piVar1 = * piVar1 + (param_1 + 6);
}
iVar2 = * param_3 + iVar2; if (iVar2 < param_3[2]) {
param_3[2] = iVar2;
}
iVar2 = * param_3; piVar1 = param_3 + 2; if ( * piVar1 != iVar2 & & iVar2 < = * piVar1) {
return 1;
}
}
return 0;
}



fn fun_200c_0153(param_1_00: u16, int *param_1, param_2: u16)

{
    let i_var1: i16;
    let unaff_si: i16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    undefined2 * **local_d2[96];
    let u_stack_y18: u16;
    let u_stack_y16: u16;
    undefined2 * ***ppppuStackY14;
    undefined2 * ****local_a;

    fun_3444_02c6(0x39d9);
    local_a = &local_a;
    ppppuStackY14 = (undefined2 * ***)
    param_1;
    u_stack_y16 = 0x3444;
    u_stack_y18 = 0x230;
    i_var1 = FUN_200c_00a0();
    if (i_var1 != 0) {
        if (param_1[3] < 0) {
            local_a = (undefined2 * ****) - (param_1[3] / 0x7fd6 - *param_1);
        } else {
            local_a = (undefined2 * ****) * param_1;
        }
        ppppuStackY14 = local_d2;
        u_stack_y16 = 0x3444;
        u_stack_y18 = 0x26d;
        fun_3444_172e();
        (local_d2 + (unaff_si - local_a) / 0x7fd6) = 0;
        local_a = (undefined2 * ****)
        0x3444;
        fun_168b_06a4();
        ppppuStackY14 = local_d2;
        u_stack_y16 = 0x168b;
        u_stack_y18 = 0x2a4;
        local_a = (undefined2 * ****)
        ppppuStackY14;
        fun_2692_0ecc();
    }
    return;
}


fn fun_200c_01ed(param_1_00: u16, undefined2 *param_1, param_2: u16, int *param_3) -> u16

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let unaff_ss: i16;
    let unaff_ds: u16;
    let local_c: u16;
    let pu_stack10: *mut u16;
    let i_var3: i16;

    fun_3444_02c6(0x39d9);
    if (param_1[4] != 0) {
        i_var3 = 0;
        pu_stack10 = param_3;
        local_c = param_2;
        i_var2 = FUN_200c_00a0(0x3444, param_1);
        if (i_var2 == 0) {
            pu_stack10 = param_1[1];
            local_c = *param_1;
            FUN_200c_000c(0x3444, param_1, param_2);
            i_var3 = 1;
        }
        pi_var1 = param_1 + 3;
        *pi_var1 = *pi_var1 - 0x7fd6;
        pu_stack10 = param_1;
        local_c = 0x3444;
        fun_200c_0153();
        pu_stack10 = &local_c;
        local_c = param_2;
        FUN_200c_00a0(0x3444, param_1);
        if ((i_var3 == 0) && (*param_3 = unaff_ss, pi_var1 = (param_3 + 4),
                              *pi_var1 != unaff_ss && unaff_ss <= *pi_var1)) {
            return 1;
        }
    }
    return 0;
}


// WARNING: Instruction at (ram,0x00020822) overlaps instruction at (ram,0x00020821)
//
// WARNING: Control flow encountered bad instruction data
// WARNING (jumptable): Unable to track spacebase fully for stack
// WARNING: Removing unreachable block (ram,0x00027c81)
// WARNING: Type propagation algorithm not settling
// WARNING: Could not reconcile some variable overlaps

uint 
FUN_200c_0280(param_1: u16,undefined4 param_2,int *param_3,undefined2 *param_4,int *param_5)

{
let pbVar1: * mut u8; let piVar2: * mut u16; let puVar3: * mut u16; let pcVar4: String; char cVar5; char cVar6; code * pcVar7; char cVar8; code * * ppcVar9; undefined4 * puVar10; let puVar11: * mut u16; char cVar12; undefined uVar13; undefined uVar14; undefined uVar15; char cVar16;
char cVar17; char cVar18; char cVar19; undefined uVar20; undefined uVar21; undefined uVar22; undefined uVar23; let iVar24: i16; let uVar25: u16; let iVar26: i16; let uVar27: u16; char cVar28; char extraout_DH; let extraout_DX: u16; let extraout_DX_00: u16; let uVar29: u16; ulong in_ESI; ulong uVar30; let unaff_DI: String; let iVar31: i16; let uVar32: u16; let uVar33: u16; let unaff_SS: u16; let unaff_DS: u16; bool bVar34; undefined uVar35; let uVar36: u32; let lVar37: i32; let local_e2: * mut u16; let local_de: * mut u16; undefined local_d6 [6]; let uStackY208: u16; let    uStackY206: u16; undefined auStackY204 [88];
code * pcStackY116; let iStackY48: i16; let iStackY46: i16; let iStackY44: i16; let iStackY42: i16; let piStackY40: * mut u16; let piStackY38: * mut u16; let piStackY34: * mut u16; let uStackY30: u32;
int aiStackY26 [4]; let uVar38: u16; let uVar39: u16; let uVar40: u16; let iVar41: i16; let uStackY12: u16; char local_a; let bStackY9: u8; char local_8; undefined uStackY7; let local_6: u16;
let pcVar42: String;

local_6 = 0x34b; FUN_3444_02c6(0x39d9); local_6 = in_ESI; local_a = unaff_DS; cVar8 = local_a; bStackY9 = (unaff_DS >> 8); uVar14 = bStackY9; pcVar42 = unaff_DI; if (0x1b56 != '\0') {
local_8 = '\x13'; uStackY7 = 1; uStackY12._0_1_ = 'z'; uStackY12._1_1_ = 0xcc;
uVar33 = 0x2a60; iVar24 = FUN_2a60_0913();
if (iVar24 != 0) {
pcVar42 = (char * )0x0; local_6 = 0; if (0x25 == '\0') {
in_ESI = in_ESI & 0xffff0000; loop {
local_8 = in_ESI; uStackY7 = (in_ESI >> 8); local_a = 0x1b55;
bStackY9 = local_a >> 7; uStackY12._0_1_ = uVar33; uStackY12._1_1_ = (uVar33 >> 8); uVar33 = 0x1454; uVar25 = FUN_1454_01e7(); bVar34 = CARRY2(local_6,uVar25); local_6 = local_6 + uVar25; pcVar42 = pcVar42 + bVar34 + (uVar25 >> 0xf); uVar25 = in_ESI + 1; in_ESI = in_ESI & 0xffff0000 | uVar25;
} while (uVar25 < 0x10); local_a = '\0'; bStackY9 = 0; uStackY12._0_1_ = '\x10'; uStackY12._1_1_ = 0; aiStackY26[3] = 0x3b4; FUN_3444_2364(); aiStackY26[3] = 0x3444; aiStackY26[2] = 0x3bd; FUN_1454_00ae();
}
}
}
local_8 = '\x03'; uStackY7 = 0; uStackY12._0_1_ = - 0xe; uStackY12._1_1_ = 0x67; local_a = cVar8; bStackY9 = uVar14; iVar24 = FUN_2a60_0913(); if (iVar24 == 0) {
return 0;
}
local_8 = '`'; uStackY7 = 0x2a; uVar33 = 0x294b; local_a = - 0x25; bStackY9 = 3; FUN_294b_0b7c(); local_8 = unaff_SS; cVar16 = local_8; uStackY7 = (unaff_SS >> 8); uVar20 = uStackY7; if (( * 0x821 & 1) != 0) {
if (0xcf4 != 0) {
local_8 = 'K'; uStackY7 = 0x29; uVar33 = 0x2692; local_a = - 5; bStackY9 = 3; uVar36 = FUN_2692_05ab(); uVar32 = 0xc6c0; if (((0x5d7e - (uVar36 >> 0x10)) - (0x5d7c < uVar36)) < 0) {
local_a = - 10; bStackY9 = 0x67; uStackY12._0_1_ = - 0x6e; uStackY12._1_1_ = 0x26; local_8 = cVar8; uStackY7 = uVar14;
FUN_200c_061b(); local_a = - 0x6e; bStackY9 = 0x26; uVar33 = 0x2692; uStackY12._0_1_ = '!'; uStackY12._1_1_ = 4; lVar37 = FUN_2692_05ab(); uVar32 = 0xc6c0; 0x5d7c = (lVar37 + 2000000000); 0x5d7e = ((lVar37 + 2000000000) >> 0x10);
goto LAB_200c_044c;
}
}
local_8 = '\x01'; uStackY7 = 0; local_a = uVar33; bStackY9 = (uVar33 >> 8); uStackY12._0_1_ = 'A'; uStackY12._1_1_ = 4; FUN_294b_02f2(); uVar25 = CONCAT11(uStackY7, local_8); local_a = & stack0xfff2; bStackY9 = ( & stack0xfff2 >> 8); uStackY12._0_1_ = '\x1c'; uStackY12._1_1_ = 1; uVar33 = 0x2b26; local_8 = cVar16; uStackY7 = uVar20; FUN_2b26_0e3b(); uVar32 = 0xc6c2; if (0x1f19 < CONCAT11(uStackY7, local_8)) {
local_8 = '&'; uStackY7 = 0x2b; uVar33 = 0x1862; local_a = 'f'; bStackY9 = 4;
FUN_1862_2340();
}
local_a = & stack0xfff2; bStackY9 = ( & stack0xfff2 >> 8); cVar28 = '['; uStackY12._0_1_ = '-'; uStackY12._1_1_ = 0x5b; uVar40 = 0x1f1f; local_8 = cVar16; uStackY7 = uVar20; iVar24 = FUN_200c_01ed(); uVar13 = uStackY12._1_1_; cVar6 = uStackY12; uVar36 = CONCAT22(uVar32, uVar25); if (iVar24 != 0) {
cVar5 = 0x9c65; if (cVar5 < 9) {
iVar41 = cVar5 * 2; uVar35 = iVar41 == 0; uVar33 = 0x2000; iVar26 = in_ESI;
uStackY7 = (param_2 >> 0x18); uVar21 = uStackY7; local_8 = (param_2 >> 0x10); cVar17 = local_8; local_a = param_4; cVar12 = local_a; bStackY9 = (param_4 >> 8); uVar15 = bStackY9;
iVar24 = param_5; local_8 = (param_4 >> 0x10); cVar18 = local_8; uStackY7 = (param_4 >> 0x18); uVar22 = uStackY7; uStackY12._0_1_ = (param_3 >> 0x10); cVar8 = uStackY12; uStackY12._1_1_ = (param_3 >> 0x18); uVar14 = uStackY12._1_1_; local_8 = param_3; cVar19 = local_8; uStackY7 = (param_3 >> 8); uVar23 = uStackY7; uStackY12._0_1_ = cVar6; uStackY12._1_1_ = uVar13; switch(cVar5) {
case '\0': cVar8 = (iVar41 + 0x21); while ( true ) {
uVar32 = (undefined2)(uVar36 >> 0x10); iVar24 = in_ESI; uVar25 = uVar36;
if ((((cVar8 == '\x06') || (unaff_DI[0x21] == '\a')) & & ((unaff_DI + 0x24) != -1)) & & (uVar25 = param_2, (unaff_DI + 0x26) == param_2)) {
uStackY12._1_1_ = param_2._1_1_ | (in_ESI >> 8); uStackY12._0_1_ = in_ESI; uVar33 = 0x2ecc; local_a = cVar17; bStackY9 = uVar21; local_8 = cVar19; uStackY7 = uVar23; uVar25 = FUN_2ecc_00a8();
}
uVar40 = iVar24 + 1; in_ESI = uVar40;
if (pcVar42 < = uVar40) break; local_8 = uVar40; uStackY7 = (uVar40 >> 8); local_a = (piStackY38 >> 0x10); bStackY9 = (piStackY38 >> 0x18); uStackY12._0_1_ = uVar33; uStackY12._1_1_ = (uVar33 >> 8);
uVar33 = 0x2b26; uVar36 = FUN_2b26_0008();
aiStackY26[1] = (uVar36 >> 0x10); unaff_DI = (char * )uVar36;
cVar8 = unaff_DI[0x21];
}
return uVar25; case '\x01': piVar2 = (iVar26 + 6); * piVar2 = * piVar2 - uVar25; local_a = in_ESI; bStackY9 = (in_ESI >> 8); uStackY12._0_1_ = '\0'; uStackY12._1_1_ = 0x20; local_8 = cVar17; uStackY7 = uVar21; FUN_200c_0153(); local_a = & uStackY12; bStackY9 = ( & uStackY12 >> 8); uStackY12._0_1_ = cVar17;
uStackY12._1_1_ = uVar21; local_8 = cVar16;
uStackY7 = uVar20; FUN_200c_00a0(); if (pcVar42 == (char * )0x0) {
iVar24 = CONCAT11(uStackY7, local_8); *param_3 = iVar24; piVar2 = (param_3 + 4); if ( * piVar2 != iVar24 & & iVar24 < = * piVar2) {
return 1;
}
}
return 0; case '\x02': pcVar4 = unaff_DI;
* pcVar4 = * pcVar4 + extraout_DH; * (bool * )(iVar26 + - 0x26f4) = (POPCOUNT(cVar28 - iVar41) & 1) == 0; piVar2 = (iVar41 + iVar26); * piVar2 = * piVar2 + (uVar25 ^ 0x9a2a); uVar33 = 0xc86e; 0x9c6e = 0x7faa + - 1; uVar25 = 0x7fac - 1;
0x9c70 = uVar25; 0x97ea = 1; return uVar25; case '\x03': while ( true ) {
uVar27 = 0xcfe0; iVar24 = in_ESI; if ((uVar27 < = uVar25) & & (piVar2 = 0xcfe6, * piVar2 != iVar24 & & iVar24 < = * piVar2)) {
while ( true ) {
uVar40 = in_ESI; if (uVar40 < param_3._2_2_) {
return uVar27;
}
local_a = in_ESI; bStackY9 = (in_ESI >> 8); uStackY12._0_1_ = uVar25; uStackY12._1_1_ = (uVar25 >> 8);
aiStackY26[3] = 0x4b3e; ppcVar9 = (code * * )0xcf74; uVar27 = uVar40;
local_8 = cVar12; uStackY7 = uVar15; uVar29 = ( * * ppcVar9)(); uVar40 = uVar40 - 1; in_ESI = uVar40; puVar3 = 0xcfe2; if ( * puVar3 != uVar40 & & uVar40 < = * puVar3) break; if (0xcfe4 < (uVar25 + 1)) {
return local_6;
}
if (param_3._2_2_ == uVar40) {
local_6 = 0; uVar27 = param_3; uVar25 = param_3;
}
else {
bVar34 = CARRY2(local_6, uVar27); local_6 = local_6 + uVar27; uVar25 = uVar25 + bVar34 + CONCAT11(uStackY12._1_1_, uStackY12);
}
}
return uVar29;
}
uVar29 = iVar24 - 1; in_ESI = uVar29;
puVar3 = 0xcfe2; if (( * puVar3 != uVar29 & & uVar29 < = * puVar3) || (uVar27 = local_6, 0xcfe4 < (uVar25 + 1))) break; if (param_3._2_2_ == uVar29) {
local_6 = 0; uVar25 = param_3;
}
else {
bVar34 = CARRY2(local_6, uVar40); local_6 = local_6 + uVar40; uVar25 = uVar25 + bVar34 + CONCAT11(uVar13, cVar6);
}
}
return uVar27; case '\x05':
// WARNING: Bad instruction - Truncating control flow here
halt_baddata();
case '\x06': local_6 = uVar25 + 1; local_8 = '\0'; uStackY7 = 0x20; local_a = -0x33; bStackY9 = 0x26; ppcVar9 = (code * * )0xcf74; ( * * ppcVar9)(); ppcVar9 = (code * * )0xcf70; ( * * ppcVar9)();
* (undefined * )0x7046 = 1; FUN_2239_0531(); FUN_2239_126d(); uVar25 = 0xabe; 0xccca = uVar25; return uVar25; case '\a': local_8 = uVar32; uStackY7 = (uVar32 >> 8); (in_ESI + 8) = unaff_DS; local_a = '\0'; bStackY9 = 0x20; uStackY12._0_1_ = '\x01'; uStackY12._1_1_ = 7; lVar37 = FUN_2692_05ab(); iVar41 = in_ESI; uVar33 = 0xc6c0; 0x5d7c = (lVar37 + 0x111); 0x5d7e = ((lVar37 + 0x111) >> 0x10);
local_a = 'O'; bStackY9 = 0; uStackY208 = 0x5d2c; uStackY206 = 0x5b2d; aiStackY26[3] = 0x2692; aiStackY26[2] = 0x733;
uStackY12._0_1_ = cVar17; uStackY12._1_1_ = uVar21; uVar25 = FUN_3444_17d0(); if (uVar25 != 0) {
local_a = 'O'; bStackY9 = 0; aiStackY26[3] = 0x3444; aiStackY26[2] = 0x754; uStackY12._0_1_ = cVar17; uStackY12._1_1_ = uVar21; uVar25 = FUN_3444_17a6();
* (undefined * )0x5d7b = 0; if (( * 0x821 & 1) != 0) {
local_a = 'D'; bStackY9 = 0x34; uStackY12._0_1_ = 'u'; uStackY12._1_1_ = 7;
FUN_294b_0b7c(); local_a = '\x1c'; bStackY9 = 1; uStackY12._0_1_ = uStackY206; uStackY12._1_1_ = (uStackY206 >> 8); aiStackY26[3] = 0x294b; aiStackY26[2] = 0x78d; FUN_200c_000c(); local_a = '\x01'; bStackY9 = 0; uStackY12._0_1_ = 'K'; uStackY12._1_1_ = 0x29; FUN_294b_02f2(); uVar25 = CONCAT11(bStackY9, local_a);
uStackY12._0_1_ = & uStackY12; uStackY12._1_1_ = ( & uStackY12 >> 8); uVar39 = 0x294b; uVar38 = 0x7a8; local_a = cVar16; bStackY9 = uVar20; FUN_2b26_0e3b(); uVar33 = 0xc6c2; uVar32 = extraout_DX; unaff_DI = pcVar42; if (0x1f19 < local_6) {
local_a = '&'; bStackY9 = 0x2b; uStackY12._0_1_ = - 0x42; uStackY12._1_1_ = 7; FUN_1862_2340(); uVar32 = extraout_DX_00; unaff_DI = pcVar42;
}
uVar40 = local_6; uVar13 = uStackY7; cVar5 = local_8; cVar28 = uStackY12; cVar6 = 0x9c65;
if (cVar6 < 9) {
iVar26 = cVar6 * 2; local_8 = uVar33;
cVar18 = local_8; uStackY7 = (uVar33 >> 8); uVar15 = uStackY7;
uStackY12._0_1_ = param_2; cVar12 = uStackY12;
switch(cVar6) {
case '\0': (iVar41 + 6) = uVar25; uVar32 = (undefined2)(param_5 >> 0x10); * param_5 = (iVar26 + 4) + 1; (iVar24 + 4) = (param_2 + 4); uVar33 = (iVar26 + 4); if ((param_4._2_2_ | param_4) != 0) {
* param_4 = uVar38; (param_4 + 2) = uVar39; (param_4 + 4) = uVar33; (param_4 + 6) = CONCAT11(uStackY12._1_1_, cVar28); (param_4 + 10) = 0x8000;
}
(iVar24 + 10) = 0x8000; return iVar24 + 8; case '\x01': uVar25 = uVar25 | 0x7fda; local_a = uVar25; bStackY9 = (uVar25 >> 8); aiStackY26[3] = 0x2000; aiStackY26[2] = 0x7e2b; ppcVar9 = (code * * )0xcf74; uStackY12._0_1_ = cVar8; uStackY12._1_1_ = uVar14;
local_8 = cVar5; uStackY7 = uVar13; ( ** ppcVar9)(); local_6 = param_3._2_2_; uStackY12._0_1_ = cVar12; uStackY12._1_1_ = param_2._1_1_; local_a = cVar17;
bStackY9 = uVar21; local_8 = cVar19; uStackY7 = uVar23; uVar25 = FUN_27ac_053d(); return uVar25; case '\x02': if (( * (iVar26 + 0x804) & 1) == 0) {
uVar33 = 0xc88c; pcVar7 = * (code ** )0xa43a; local_6 = 0xa43c; local_8 = pcVar7; uStackY7 = (pcVar7 >> 8); local_a = cVar18; bStackY9 = uVar15; if ((local_6 | pcVar7) != 0) {
uStackY12._0_1_ = '\0'; uStackY12._1_1_ = 0x20; ( * pcVar7)();
}
uVar33 = 0x9820; uStackY12._0_1_ = '\x01';
uStackY12._1_1_ = 0; FUN_27ac_0287();
uStackY12._0_1_ = - 0x54; uStackY12._1_1_ = 0x27; FUN_2d56_032c(); iVar24 = 0x992c; if (iVar24 != - 0x8000) {
uStackY12._0_1_ = iVar24; uStackY12._1_1_ = (iVar24 >> 8); FUN_2b26_0402();
}
uVar32 = 0xc88a; pbVar1 = (unaff_DI + 0x804); * pbVar1 = * pbVar1 | 1;
(unaff_DI + 0x80d) = param_2._2_2_;
(unaff_DI + 0x80f) = param_3; uStackY12._0_1_ = cVar12; uStackY12._1_1_ = param_2._1_1_; FUN_2b26_00d1(); uStackY12._0_1_ = cVar12; uStackY12._1_1_ = param_2._1_1_;
FUN_294b_0219(); uVar32 = 0xc892; if ((0xa438 | 0xa436) != 0) {
uStackY12._0_1_ = '\0'; uStackY12._1_1_ = 0; ( * 0x294b)();
}
uStackY12._0_1_ = cVar12; uStackY12._1_1_ = param_2._1_1_; FUN_294b_02f2(); uStackY12._0_1_ = cVar12; uStackY12._1_1_ = param_2._1_1_; FUN_2b26_048e(); uStackY12._0_1_ = 'K'; uStackY12._1_1_ = 0x29; FUN_294b_03be(); uStackY12._0_1_ = cVar12; uStackY12._1_1_ = param_2._1_1_; FUN_2b26_0363();
uStackY12._0_1_ = 'K'; uStackY12._1_1_ = 0x29; FUN_2d56_03f0(); uStackY12._0_1_ = uVar33; uStackY12._1_1_ = (uVar33 >> 8); uVar25 = FUN_27ac_0287();
}
else {
uStackY12._1_1_ = param_2._1_1_; local_a = local_8; bStackY9 = uStackY7; local_8 = cVar5;
uStackY7 = uVar13; uVar25 = FUN_2b26_09bf();
}
return uVar25; case '\x03': out(0x67,uVar25); if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar32, CONCAT11((uVar25 >> 8), 8));
}
local_a = '~'; bStackY9 = 0; uStackY12._0_1_ = cVar28; local_8 = cVar5; uStackY7 = uVar13; uVar36 = FUN_2fad_0189(); uVar33 = (undefined2)(uVar36 >> 0x10);
uVar25 = uVar36; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar33, 0xff08); uVar25 = 5; out(uVar33, 5);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
local_6 = 0x2000; local_8 = - 0x3d; uStackY7 = 0; uVar25 = FUN_2692_01e8();
}
}
else {
if (0x853e != '\0') {
local_6 = 0x2000; local_8 = - 0x4c; uStackY7 = 0; uVar25 = FUN_2692_0562();
}
}
}
pcVar4 = (char * )0x7fcc; * pcVar4 = * pcVar4 + - 1; return uVar25;
case '\x04': local_6 = 0xff61; uStackY12._0_1_ = cVar28; local_8 = cVar5; uStackY7 = uVar13; FUN_3444_1f26(); local_6 = 0xff95; FUN_3444_1f26(); puVar3 = * (uint * *)(unaff_DI + - 0xe); uVar33 = (unaff_DI + - 4); * puVar3 = uVar40; (puVar3 + 2) = uVar33;
uVar25 = FUN_3143_1850(); return uVar25; case '\x06': 0x8faa = uVar25; 0x8fa8 = (iVar26 + 2); uVar36 = * (undefined4 *) * ff0x98d2; 0x8fa4 = uVar36; 0x8fa6 = (uVar36 >> 0x10); puVar10 = ff * ff0x98b8; if ((puVar10 >> 0x10) != 0) {
puVar11 = * puVar10; uVar33 = (undefined2)(puVar11 >> 0x10); 0x8fa0 = puVar11; 0x8fa2 = uVar33; 0x8faa = * puVar11;
0x8fa8 = (puVar11 + 2); uVar36 = * ff * ff0x98b4; 0x8fa4 = uVar36; 0x8fa6 = (uVar36 >> 0x10);
}
uVar33 = 0x7e2c; local_a = uVar33; bStackY9 = (uVar33 >> 8); 0x7e2c = 1; uStackY12._0_1_ = iVar41; uStackY12._1_1_ = (iVar41 >> 8); uVar25 = 0xcf62; uVar40 = uVar25 & 0xfff8; aiStackY26[3] = 0x8fac; iVar24 = 0xcf64; 0x854c = uVar40; 0x854e = iVar24; aiStackY26[2] = iVar24 + 0x8fa8; aiStackY26[1] = uVar40 + 0x8faa + 7; 0x8552 = aiStackY26[1]; 0x8550 = aiStackY26[2]; uStackY30 = CONCAT22(uVar40, 0x2000);
piStackY34 = CONCAT22(0x7794, piStackY34._0_2_); ppcVar9 = (code * * )0xcf88;
aiStackY26[0] = iVar24; local_8 = cVar5; uStackY7 = uVar13; ( * * ppcVar9)(); aiStackY26[3] = 0xff0f;
aiStackY26[2] = 0x2000; aiStackY26[1] = 0x77a4; ppcVar9 = (code * *)0xcf68; ( * * ppcVar9)(); ppcVar9 = (code * * )0xcfa4;
( * * ppcVar9)(); 0x7e2c = 0; aiStackY26[1] = 0x2000; aiStackY26[0] = 0x77bd; aiStackY26[2] = uVar25; aiStackY26[3] = iVar24;
FUN_2692_0042(); ppcVar9 = (code * *)0xcfa0; ( * * ppcVar9)(); aiStackY26[1] = 0x2692; aiStackY26[0] = 0x77d1; aiStackY26[2] = uVar25; aiStackY26[3] = iVar24; FUN_2692_001f(); 0x7e2c = CONCAT11(bStackY9, local_a); return 0; case '\a': uVar33 = 0xc88a; uVar25 = (CONCAT11(bStackY9, local_a) + 0x811); if (((CONCAT11(bStackY9, local_a) + 0x813) | uVar25) != 0) {
uStackY12._0_1_ = '\0'; uStackY12._1_1_ = 0x20; local_a = cVar12; bStackY9 = param_2._1_1_; local_8 = cVar5; uStackY7 = uVar13;
uVar25 = ( * 0xb827)();
}
return uVar25; case '\b': local_a = '/';
bStackY9 = 0x5d; uStackY12._0_1_ = cVar28;
local_8 = cVar5; uStackY7 = uVar13; ( *pcStackY116)(); uVar33 = 0xff24; local_a = uVar33; bStackY9 = (uVar33 >> 8); uStackY12._0_1_ = '\0'; uStackY12._1_1_ = 0x20; local_8 = cVar18; uStackY7 = uVar15; FUN_24bf_0d15(); local_8 = '\0';
uStackY7 = 0x20; local_a = 'A'; bStackY9 = 0x5d; FUN_24bf_0d43(); local_8 = '\0';
uStackY7 = 0x20; local_a = 'F'; bStackY9 = 0x5d; uVar25 = FUN_294b_03be(); return uVar25;
}
local_a = '\0'; bStackY9 = 0x20; uStackY12._0_1_ = '}'; uStackY12._1_1_ = 8;
local_8 = cVar5; uStackY7 = uVar13; uVar36 = FUN_2692_05ab(); uVar33 = 0xc6d8; 0xfff1 = uVar36; 0xfff3 = (uVar36 >> 0x10); local_a = - 0x6e; bStackY9 = 0x26;
uStackY12._0_1_ = - 0x71; uStackY12._1_1_ = 8; lVar37 = FUN_2692_05ab(); uVar33 = 0xc6c6; 0x5d80 = (lVar37 + 0x111); 0x5d82 = ((lVar37 + 0x111) >> 0x10); local_a = 'O'; bStackY9 = 0; aiStackY26[3] = 0x2692; aiStackY26[2] = 0x8bf; uStackY12._0_1_ = cVar17; uStackY12._1_1_ = uVar21; uVar25 = FUN_3444_17d0(); if (uVar25 != 0) {
local_a = 'O'; bStackY9 = 0; aiStackY26[3] = 0x3444; aiStackY26[2] = 0x8de; uStackY12._0_1_ = cVar17; uStackY12._1_1_ = uVar21; uVar25 = FUN_3444_17a6();
* (undefined * )0xc46 = 0; if (( * 0x804 & 1) != 0) {
local_a = 'D'; bStackY9 = 0x34; uStackY12._0_1_ = - 1; uStackY12._1_1_ = 8; FUN_294b_0b7c(); local_a = '\x19'; bStackY9 = 0; uStackY12._0_1_ = aiStackY26[3]; uStackY12._1_1_ = (aiStackY26[3] >> 8); aiStackY26[0] = 0x15b7; aiStackY26[1] = 0x5b2d;
aiStackY26[3] = 0x294b; aiStackY26[2] = 0x91b; FUN_200c_000c(); local_a = '\0'; bStackY9 = 0; uStackY12._0_1_ = 'K'; uStackY12._1_1_ = 0x29; FUN_294b_02f2(); uStackY12._0_1_ = & local_a; uStackY12._1_1_ = ( & local_a >> 8); local_a = cVar16; bStackY9 = uVar20; FUN_2b26_0e3b(); local_6 = local_6 - 1; uStackY12._0_1_ = & local_a; uStackY12._1_1_ = ( & local_a >> 8); local_a = cVar16; bStackY9 = uVar20; FUN_294b_077b();
uVar33 = 0xc6dc; uStackY30 = CONCAT22(uVar33,0xff30); iVar24 = 0xff30 << 1;
local_a = iVar24; bStackY9 = (iVar24 >> 8); uStackY12._0_1_ = - 1;
uStackY12._1_1_ = 0xff; uVar33 = 0x3444;
aiStackY26[3] = 0x96e; FUN_3444_1f84(); if (0xd21 == '\0') {
for (iVar24 = 0; * uStackY30 != iVar24 & & iVar24 < = * uStackY30; iVar24 = iVar24 + 1) {
local_a = '\0'; bStackY9 = 0; uStackY12._0_1_ = iVar24; uStackY12._1_1_ = (iVar24 >> 8); uVar33 = 0x154b; FUN_154b_06f7();
}
}
else {
for (iVar24 = 0; * uStackY30 != iVar24 & & iVar24 < = * uStackY30; iVar24 = iVar24 + 1) {
local_a = '\0'; bStackY9 = 0; uStackY12._0_1_ = iVar24; uStackY12._1_1_ = (iVar24 >> 8); uVar33 = 0x154b; FUN_154b_07f7();
}
}
local_a = uVar33; bStackY9 = (uVar33 >> 8); uStackY12._0_1_ = - 0x4e;
uStackY12._1_1_ = 9; FUN_294b_03be();
uStackY12._0_1_ = & local_a; uStackY12._1_1_ = ( & local_a >> 8); aiStackY26[3] = 0x9c1; local_a = cVar16;
bStackY9 = uVar20; iVar24 = FUN_200c_00a0();
0x1118 = iVar24; if (iVar24 != 0) {
uStackY12._0_1_ = & stack0xffee; uStackY12._1_1_ = ( & stack0xffee >> 8); iVar24 = 0x9de; local_a = cVar16; bStackY9 = uVar20; FUN_2b26_0e3b(); uVar33 = 0xc6cc; piStackY34 = CONCAT22(uVar33, 0xfff5); 0xfff5 = CONCAT11(bStackY9, local_a) - iVar24; uVar33 = 0xc6c8; piStackY38 = CONCAT22(uVar33, 0xfff7); 0xfff7 = local_6 + ( - 1 - iVar24); if (0x7faa == 0x140) {
iVar24 = 8;
}
else {
iVar24 = 0x10;
}
* piStackY34 = * piStackY34 / iVar24; * piStackY38 = * piStackY38 / iVar24; local_a = '\0';
bStackY9 = 0; uStackY12._0_1_ = '&';
uStackY12._1_1_ = 0x2b; FUN_294b_02f2();
local_a = aiStackY26[1]; bStackY9 = (aiStackY26[1] >> 8); uStackY12._0_1_ = aiStackY26[0]; uStackY12._1_1_ = (aiStackY26[0] >> 8); FUN_200c_0153();
}
local_a = 'K'; bStackY9 = 0x29; uStackY12._0_1_ = 'P'; uStackY12._1_1_ = 10;
uVar25 = FUN_294b_0c76();
}
}
return uVar25;
}
uStackY12._0_1_ = & uStackY12; uStackY12._1_1_ = ( & uStackY12 >> 8); local_a = cVar16; bStackY9 = uVar20; FUN_294b_077b(); local_a = unaff_DI; bStackY9 = (unaff_DI >> 8); uStackY12._0_1_ = 'i';
uStackY12._1_1_ = 0x61; aiStackY26[3] = 0x294b; uVar33 = 0x3444; aiStackY26[2] = 0x80e; FUN_3444_1e00(); pcVar42 = unaff_DI; while ( true ) {
in_ESI = ZEXT24(pcVar42); switchD_2000_048d_caseD_8: param_3._0_2_ = param_3 | 0xf600; param_3 = (param_3 | 0xf600); if (param_3 < 0) break; pbVar1 = (in_ESI + 0x5f18); * pbVar1 = * pbVar1 | 0x80; pcVar42 = (char * )(in_ESI + - 1);
}
local_8 = uVar33; uStackY7 = (uVar33 >> 8); local_a = ',';
bStackY9 = 8; FUN_1862_0aa7(); local_8 = unaff_DI; uStackY7 = (unaff_DI >> 8); uStackY12._0_1_ = auStackY204;
uStackY12._1_1_ = (auStackY204 >> 8); aiStackY26[3] = 0x840; local_a = cVar16; bStackY9 = uVar20; FUN_3444_1e00();
local_8 = 'D'; uStackY7 = 0x34; local_a = 'H'; bStackY9 = 8; uVar25 = FUN_294b_0c76();
}
}
return uVar25; case '\b': goto switchD_2000_048d_caseD_8;
}
loop {
iVar24 = in_ESI; local_8 = uVar33; uStackY7 = (uVar33 >> 8);
local_a = 'd'; bStackY9 = 0x8c; FUN_3444_402c(); local_a = 'D'; bStackY9 = 0x34;
uStackY12._0_1_ = 'm'; uStackY12._1_1_ = 0x8c; FUN_3444_402c(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; FUN_3444_44f7(); if ((bool)uVar35) {
piStackY40 = ( & stack0xfff0 + iVar24 * 2); if ( * piStackY40 != 0) {
if (( * piStackY40 & 0x80) == 0) {
if (( * piStackY40 & 0x40) != 0) {
iVar41 = (CONCAT11(uStackY12._1_1_, uStackY12) + 6); goto LAB_2874_0552;
}
if (( * piStackY40 & 0x20) == 0) {
iVar41 = (CONCAT11(uStackY12._1_1_, uStackY12) + 4);
}
else {
iVar41 = CONCAT13(bStackY9, CONCAT12(local_a,CONCAT11(uStackY12._1_1_,
uStackY12)));
}
iVar31 = iVar24 << 2; goto LAB_2874_06e0;
}
iVar41 = (CONCAT11(uStackY12._1_1_, uStackY12) + 2);
// LAB_2874_0552:
aiStackY26[iVar24 * 2] = iVar41;
}
}
else {
piStackY40 = ( & stack0xfff0 + iVar24 * 2); iVar41 = iVar24; if (( * piStackY40 & 0x80) == 0) {
if (( * piStackY40 & 0x40) != 0) {
iStackY44 = (CONCAT11(uStackY12._1_1_, uStackY12) + 6); piStackY38 = (piStackY38 & 0xffff0000 | (iStackY44 - aiStackY26[iVar24 * 2])); local_8 = 'D'; uStackY7 = 0x34; local_a = 'J'; bStackY9 = 0x8d;
FUN_3444_4101(); local_a = 'D'; bStackY9 = 0x34; uStackY12._0_1_ = 'R'; uStackY12._1_1_ = 0x8d; FUN_3444_43b3(); local_a = 'D'; bStackY9 = 0x34; uStackY12._0_1_ = 'Z'; uStackY12._1_1_ = 0x8d; FUN_3444_4101(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; FUN_3444_44f2(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34;
FUN_3444_45be(); uStackY12._0_1_ = 'D';
uStackY12._1_1_ = 0x34; uVar33 = FUN_3444_42c7(); ( & uStackY30 + iVar24 * 4 + 2) = uVar33; iVar26 = iStackY44; goto LAB_2874_062f;
}
}
else {
iStackY42 = (CONCAT11(uStackY12._1_1_, uStackY12) + 2); piStackY38 = (piStackY38 & 0xffff0000 | (iStackY42 - aiStackY26[iVar24 * 2])); local_8 = 'D'; uStackY7 = 0x34; local_a = - 5; bStackY9 = 0x8c; FUN_3444_4101(); local_a = 'D'; bStackY9 = 0x34; uStackY12._0_1_ = '\x03'; uStackY12._1_1_ = 0x8d; FUN_3444_43b3(); local_a = 'D'; bStackY9 = 0x34; uStackY12._0_1_ = '\v'; uStackY12._1_1_ = 0x8d; FUN_3444_4101(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; FUN_3444_44f2(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; FUN_3444_45be(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; uVar33 = FUN_3444_42c7(); ( & uStackY30 + iVar24 * 4 + 2) = uVar33; iVar26 = iStackY42;
// LAB_2874_062f:
aiStackY26[iVar24 * 2] = iVar26; uStackY12._0_1_ = local_a; uStackY12._1_1_ = bStackY9; aiStackY26[3] = 0x3444; aiStackY26[2] = - 0x7280; iVar24 = iVar41;
iVar41 = FUN_2874_0004(); * piStackY40 = iVar41;
}
if (( * piStackY40 & 0x20) == 0) {
if (( * piStackY40 & 0x10) == 0) goto LAB_2874_06e3; iStackY48 = (CONCAT11(uStackY12._1_1_, uStackY12) + 4); iVar31 = iVar24 * 4; piStackY38 = (piStackY38 & 0xffff0000 | (iStackY48 - ( & uStackY30 + iVar31 + 2))); local_8 = 'D';
uStackY7 = 0x34; local_a = - 5; bStackY9 = 0x8d; iVar26 = iVar24; FUN_3444_4101(); local_a = 'D'; bStackY9 = 0x34; uStackY12._0_1_ = '\x03'; uStackY12._1_1_ = 0x8e; FUN_3444_43cb(); local_a = 'D'; bStackY9 = 0x34; uStackY12._0_1_ = '\v'; uStackY12._1_1_ = 0x8e; FUN_3444_4101(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; FUN_3444_44f2(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; FUN_3444_45be(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; iVar41 = FUN_3444_42c7(); aiStackY26[iVar24 * 2] = iVar41; iVar41 = iStackY48; iVar24 = iVar26;
}
else {
iStackY46 = CONCAT13(bStackY9, CONCAT12(local_a,CONCAT11(uStackY12._1_1_,
uStackY12))); iVar31 = iVar24 * 4; piStackY38 = (piStackY38 & 0xffff0000 | (iStackY46 - ( & uStackY30 + iVar31 + 2))); local_8 = 'D'; uStackY7 = 0x34; local_a = - 0x51; bStackY9 = 0x8d; iVar26 = iVar24; FUN_3444_4101(); local_a = 'D'; bStackY9 = 0x34; uStackY12._0_1_ = - 0x49; uStackY12._1_1_ = 0x8d; FUN_3444_43cb(); local_a = 'D'; bStackY9 = 0x34; uStackY12._0_1_ = - 0x41; uStackY12._1_1_ = 0x8d; FUN_3444_4101(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; FUN_3444_44f2(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; FUN_3444_45be(); uStackY12._0_1_ = 'D'; uStackY12._1_1_ = 0x34; iVar41 = FUN_3444_42c7(); aiStackY26[iVar24 * 2] = iVar41; iVar41 = iStackY46; iVar24 = iVar26;
}
// LAB_2874_06e0:
( & uStackY30 + iVar31 + 2) = iVar41;
}
// LAB_2874_06e3:
uVar33 = 0x3444; uVar25 = iVar24 + 1;
while ( true ) {
in_ESI = uVar25; uVar35 = uVar25 == 2;
if (uVar25 < 2) break; local_8 = param_5; cVar16 = local_8; uStackY7 = (param_5 >> 8); uVar20 = uStackY7; local_a = aiStackY26[2]; bStackY9 = (aiStackY26[2] >> 8); uStackY12._0_1_ = aiStackY26[1];
uStackY12._1_1_ = (aiStackY26[1] >> 8); aiStackY26[3] = 0x8e3f; ppcVar9 = (code * * )0xcfb0;
( * * ppcVar9)(); uVar30 = CONCAT11(uStackY12._1_1_, uStackY12); loop {
iVar24 = uVar30; uVar25 = iVar24 + 8;
uVar30 = uVar25; if ((iVar24 + 10) == - 0x8000) {
return CONCAT11(bStackY9, local_a);
}
local_8 = local_a; uStackY7 = bStackY9; local_a = uVar25; bStackY9 = (uVar25 >> 8); uStackY12._0_1_ = cVar8; uStackY12._1_1_ = uVar14; FUN_2874_0004(); local_8 = local_a; uStackY7 = bStackY9; local_a = uVar30; bStackY9 = (uVar30 >> 8); uVar40 = 0x3444; uStackY12._0_1_ = cVar18; uStackY12._1_1_ = uVar22; uVar25 = FUN_2874_0004();
} while ((uVar40 & uVar25) != 0); uStackY12._0_1_ = uVar30; uStackY12._1_1_ = (uVar30 >> 8); if ((uVar25 == 0) & & (uVar40 == 0)) {
aiStackY26[3] = 0x8e62; ppcVar9 = (code * * )0xcfb0; uStackY12._0_1_ = cVar12; uStackY12._1_1_ = uVar15; local_a = cVar18; bStackY9 = uVar22; local_8 = cVar16;
uStackY7 = uVar20; uVar25 = ( * * ppcVar9)(); return uVar25;
}
uVar25 = 0;
}
} while ( true );
}
local_a = & stack0xfff2; bStackY9 = ( & stack0xfff2 >> 8); uStackY12._0_1_ = uVar33; uStackY12._1_1_ = (uVar33 >> 8); local_8 = cVar16; uStackY7 = uVar20;
FUN_294b_077b(); local_8 = pcVar42; cVar6 = local_8; uStackY7 = (pcVar42 >> 8); uVar13 = uStackY7; local_a = 'i'; bStackY9 = 0x61; uStackY12._0_1_ = '\x18'; uStackY12._1_1_ = 0x5f; aiStackY26[3] = 0x4d7; FUN_3444_1e00(); for (; - 1 < pcVar42; pcVar42 = pcVar42 + - 1) {
pbVar1 = (pcVar42 + 0x5f18); * pbVar1 = * pbVar1 | 0x80;
}
local_8 = 'D'; uStackY7 = 0x34; local_a = - 0xb; bStackY9 = 4; FUN_1862_0aa7(); uStackY12._0_1_ = local_d6; uStackY12._1_1_ = (local_d6 >> 8); uVar33 = 0x3444; aiStackY26[3] = 0x509; local_a = cVar16; bStackY9 = uVar20; local_8 = cVar6; uStackY7 = uVar13; FUN_3444_1e00();
}
}
// LAB_200c_044c: if (( * 0x804 & 1) != 0) {
if (0xcf4 != 0) {
local_8 = uVar33; uStackY7 = (uVar33 >> 8); local_a = ',';
bStackY9 = 5; uVar36 = FUN_2692_05ab();
uVar33 = 0xc6c6; if (((0x5d82 - (uVar36 >> 0x10)) - (0x5d80 < uVar36)) < 0) {
local_a = - 9; bStackY9 = 0x67; uStackY12._0_1_ = - 0x6e; uStackY12._1_1_ = 0x26; local_8 = cVar8; uStackY7 = uVar14;
FUN_200c_078e(); local_8 = - 0x6e; uStackY7 = 0x26; uVar33 = 0x2692; local_a = 'R'; bStackY9 = 5; lVar37 = FUN_2692_05ab(); uVar32 = 0xc6c6; 0x5d80 = (lVar37 + 2000000000); 0x5d82 = ((lVar37 + 2000000000) >> 0x10); goto LAB_200c_0610;
}
}
local_a = (aiStackY26 + 2); bStackY9 = ((aiStackY26 + 2) >> 8); uStackY12._0_1_ = '\x19'; uStackY12._1_1_ = 0; local_8 = cVar16; uStackY7 = uVar20; FUN_2b26_0e3b(); local_8 = '\0'; uStackY7 = 0; local_a = '&'; bStackY9 = 0x2b; uVar33 = 0x294b; uStackY12._0_1_ = -0x7e; uStackY12._1_1_ = 5; FUN_294b_02f2(); local_a = & stack0xfff2; bStackY9 = (& stack0xfff2 >> 8); uStackY12._0_1_ = '-'; uStackY12._1_1_ = 0x5b; local_8 = cVar16; uStackY7 = uVar20; iVar24 = FUN_200c_01ed(); if (iVar24 == 0) {
local_a = & stack0xfff2; bStackY9 = ( & stack0xfff2 >> 8); uStackY12._0_1_ = '-'; uStackY12._1_1_ = 0x5b; iVar41 = 0x15b7; local_8 = cVar16; uStackY7 = uVar20; iVar24 = FUN_200c_00a0(); 0x1118 = iVar24; if (iVar24 != 0) {
uVar32 = 0xc6c8; local_de = CONCAT22(uVar32,0xfff7); 0xfff7 = (CONCAT11(bStackY9,local_a) - aiStackY26[2]) + -1; uVar32 = 0xc6cc; local_e2 = CONCAT22(uVar32, 0xfff5); 0xfff5 = iVar41 - aiStackY26[2]; if (0x7faa == 0x140) {
iVar24 = 8;
}
else {
iVar24 = 0x10;
}
* local_e2 = * local_e2 / iVar24; * local_de = * local_de / iVar24;
}
}
else {
local_a = & stack0xfff2; bStackY9 = ( & stack0xfff2 >> 8); uStackY12._0_1_ = 'K'; uStackY12._1_1_ = 0x29; iVar24 = 0x5b6; local_8 = cVar16; uStackY7 = uVar20; FUN_294b_077b(); iVar24 = iVar24 - aiStackY26[2]; uVar33 = 0xc6c8; local_de = CONCAT22(uVar33, 0xfff7); 0xfff7 = iVar24 + -1; local_a = & stack0xfff2; bStackY9 = (& stack0xfff2 >> 8); uStackY12._0_1_ = '-'; uStackY12._1_1_ = 0x5b; iVar41 = 0x15b7; local_8 = cVar16; uStackY7 = uVar20; uVar33 = FUN_200c_00a0(); 0x1118 = uVar33; 0xfff5 = iVar41 - aiStackY26[2];
if (0x7faa == 0x140) {
iVar41 = 8;
}
else {
iVar41 = 0x10;
}
iVar24 = iVar24 / iVar41; * local_de = *local_de / iVar41; (iVar24 * 2 + 0xc57) = 0xffff; local_8 = iVar24; uStackY7 = (iVar24 >> 8);
if (0xd21 == '\0') {
local_6 = 0; local_a = 'K'; bStackY9 = 0x29; uStackY12._0_1_ = 'S'; uStackY12._1_1_ = 6; FUN_154b_0b72();
}
else {
local_6 = 0; local_a = 'K'; bStackY9 = 0x29; uStackY12._0_1_ = 'E'; uStackY12._1_1_ = 6; FUN_154b_07f7();
}
uVar33 = 0x154b;
}
}
// LAB_200c_0610:
local_8 = uVar33; uStackY7 = (uVar33 >> 8); local_a = - 0x2b; bStackY9 = 6; uVar25 = FUN_294b_0c76(); return uVar25;
}



code * 
FUN_200c_061b(param_1: u16,undefined4 param_2,param_3: u16,param_4: u16,
int *param_5,int *param_6)

{
let pcVar1: String; let pbVar2: * mut u8; char cVar3; code * * ppcVar4;
undefined4 * puVar5; let puVar6: * mut u16; let piVar7: * mut u16; code *pcVar8; let iVar9: i16; let iVar10: i16; let extraout_DX: u16; let extraout_DX_00: u16; let uVar11: u16; let unaff_BP: i16; let unaff_SI: i16; let unaff_DI: i16; let uVar12: u16; let uVar13: u16; let uVar14: u16; let unaff_SS: u16; let unaff_DS: u16; let lVar15: i32; let uVar16: u32; let iVar17: i16; let uVar18: u16; code * pcStackY116; let piStackY38: * mut u16; let piStackY34: * mut u16; let piStackY30: * mut u16; let iStackY18: i16; let uVar19: u16; let uVar20: u16; undefined * puVar21; let piVar22: * mut u16;

FUN_3444_02c6(0x39d9); if (0x1390 == 0) {
param_2 = CONCAT22(unaff_DS, 0x67f8);
}
iVar10 = unaff_SI; lVar15 = FUN_2692_05ab();
uVar13 = 0xc6c0; 0x5d7c = (lVar15 + 0x111); 0x5d7e = ((lVar15 + 0x111) >> 0x10); iStackY18 = 0x2692; pcVar8 = FUN_3444_17d0(); if (pcVar8 != 0x0) {
iStackY18 = 0x3444; pcVar8 = FUN_3444_17a6();
* (undefined * )0x5d7b = 0; if (( * 0x821 & 1) != 0) {
FUN_294b_0b7c(); iStackY18 = 0x294b; FUN_200c_000c(); uVar11 = 1; FUN_294b_02f2();
puVar21 = & stack0xfff4; uVar20 = 0x11c; uVar19 = 0x7a8; FUN_2b26_0e3b(); uVar13 = 0xc6c2; uVar14 = extraout_DX; if (0x1f19 < iVar10) {
puVar21 = (undefined * )0x7be; FUN_1862_2340(); uVar14 = extraout_DX_00;
}
cVar3 = 0x9c65; if (cVar3 < 9) {
iVar9 = cVar3 * 2; switch(cVar3) {
case '\0': (unaff_SI + 6) = uVar11; * param_6 = (iVar9 + 4) + 1; uVar14 = (undefined2)(param_6 >> 0x10); iVar10 = param_6; (iVar10 + 4) = (iVar17 + 4);
uVar13 = (iVar9 + 4); if ((param_5._2_2_ | param_5) != 0) {
* param_5 = iStackY18; (param_5 + 2) = uVar19; (param_5 + 4) = uVar13; (param_5 + 6) = uVar20; (param_5 + 10) = 0x8000;
}
(iVar10 + 10) = 0x8000; return (iVar10 + 8); case '\x01': iStackY18 = 0x2000; ppcVar4 = (code * * )0xcf74; ( * * ppcVar4)(); pcVar8 = FUN_27ac_053d(); return pcVar8; case '\x02': if (( * (iVar9 + 0x804) & 1) == 0) {
uVar13 = 0xc88c; pcVar8 = * (code ** )0xa43a; if ((0xa43c | pcVar8) != 0) {
( * pcVar8)();
}
FUN_27ac_0287(); FUN_2d56_032c(); if (0x992c != - 0x8000) {
FUN_2b26_0402();
}
uVar13 = 0xc88a; pbVar2 = (unaff_DI + 0x804); * pbVar2 = * pbVar2 | 1;
(unaff_DI + 0x80d) = uVar18; (unaff_DI + 0x80f) = param_3; FUN_2b26_00d1();
FUN_294b_0219(); uVar13 = 0xc892; if ((0xa438 | 0xa436) != 0) {
( * 0xb8fb)();
}
FUN_294b_02f2(); FUN_2b26_048e(); FUN_294b_03be(); FUN_2b26_0363(); FUN_2d56_03f0();
pcVar8 = FUN_27ac_0287();
}
else {
pcVar8 = FUN_2b26_09bf();
}
return pcVar8; case '\x03': out(0x67,uVar11); if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar14, CONCAT11((uVar11 >> 8), 8));
}
uVar16 = FUN_2fad_0189(); uVar13 = (undefined2)(uVar16 >> 0x10); pcVar8 = uVar16; if ((0x9c65 != '\x06') && (0x9c65 != '\x02')) {
out(uVar13, 0xff08); pcVar8 = 0x5; out(uVar13, 5);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
pcVar8 = FUN_2692_01e8();
}
}
else {
if (0x853e != '\0') {
pcVar8 = FUN_2692_0562();
}
}
}
pcVar1 = (char * )0x7fcc; * pcVar1 = * pcVar1 + - 1; return pcVar8;
case '\x04': FUN_3444_1f26(); FUN_3444_1f26(); piVar7 = * (int * * )(unaff_BP + - 0xe); uVar13 = (unaff_BP + - 4); * piVar7 = unaff_DI;
(piVar7 + 2) = uVar13; pcVar8 = FUN_3143_1850(); return pcVar8; case '\x06':
0x8faa = uVar11; 0x8fa8 = (iVar9 + 2); uVar16 = * ff *ff0x98d2; 0x8fa4 = uVar16;
0x8fa6 = (uVar16 >> 0x10); puVar5 = ff * ff0x98b8; if ((puVar5 >> 0x10) != 0) {
puVar6 = * puVar5; uVar13 = (undefined2)(puVar6 >> 0x10); 0x8fa0 = puVar6; 0x8fa2 = uVar13; 0x8faa = * puVar6;
0x8fa8 = (puVar6 + 2); uVar16 = * ff * ff0x98b4; 0x8fa4 = uVar16; 0x8fa6 = (uVar16 >> 0x10);
}
uVar13 = 0x7e2c; 0x7e2c = 1; uVar12 = 0xcf62 & 0xfff8; iStackY18 = 0x8fac; iVar10 = 0xcf64; 0x854c = uVar12; 0x854e = iVar10;
iVar9 = 0x8fa8; 0x8552 = uVar12 + 0x8faa + 7; 0x8550 = iVar10 + iVar9; ppcVar4 = (code * * )0xcf88; ( * *ppcVar4)(); iStackY18 = - 0xf1;
ppcVar4 = (code * * )0xcf68; (* * ppcVar4)(); ppcVar4 = (code * * )0xcfa4; ( * * ppcVar4)(); 0x7e2c = 0; iStackY18 = iVar10; FUN_2692_0042(); ppcVar4 = (code * * )0xcfa0; ( * * ppcVar4)(); iStackY18 = iVar10; FUN_2692_001f(); 0x7e2c = uVar13; return 0x0; case '\a': uVar13 = 0xc88a; pcVar8 = * (code * * )(puVar21 + 0x811); if (((puVar21 + 0x813) | pcVar8) != 0) {
pcVar8 = ( * pcVar8)();
}
return pcVar8; case '\b': ( * pcStackY116)(); FUN_24bf_0d15(); FUN_24bf_0d43(); pcVar8 = FUN_294b_03be(); return pcVar8;
}
uVar16 = FUN_2692_05ab(); uVar13 = 0xc6d8;
0xfff1 = uVar16; 0xfff3 = (uVar16 >> 0x10); lVar15 = FUN_2692_05ab(); uVar13 = 0xc6c6; 0x5d80 = (lVar15 + 0x111); 0x5d82 = ((lVar15 + 0x111) >> 0x10); iStackY18 = 0x2692; pcVar8 = FUN_3444_17d0(); if (pcVar8 != 0x0) {
iStackY18 = 0x3444; pcVar8 = FUN_3444_17a6();
* (undefined * )0xc46 = 0; if (( * 0x804 & 1) != 0) {
FUN_294b_0b7c(); iStackY18 = 0x294b; FUN_200c_000c(); FUN_294b_02f2(); FUN_2b26_0e3b();
iVar10 = iVar10 + - 1; FUN_294b_077b(); piStackY30 = CONCAT22(0xc6dc, 0xff30);
iStackY18 = 0x96e; FUN_3444_1f84(); if (0xd21 == '\0') {
for (iVar9 = 0; * piStackY30 != iVar9 & & iVar9 < = * piStackY30; iVar9 = iVar9 + 1) {
FUN_154b_06f7();
}
}
else {
for (iVar9 = 0; * piStackY30 != iVar9 & & iVar9 < = * piStackY30; iVar9 = iVar9 + 1) {
FUN_154b_07f7();
}
}
FUN_294b_03be(); iStackY18 = 0x9c1; iVar9 = FUN_200c_00a0(); 0x1118 = iVar9; if (iVar9 != 0) {
piVar22 = & iStackY18; FUN_2b26_0e3b(); uVar13 = 0xc6cc; piStackY34 = CONCAT22(uVar13, 0xfff5); 0xfff5 = piVar22 - iStackY18; uVar13 = 0xc6c8; piStackY38 = CONCAT22(uVar13, 0xfff7); 0xfff7 = (iVar10 - iStackY18) + -1; if (0x7faa == 0x140) {
iVar10 = 8;
}
else {
iVar10 = 0x10;
}
* piStackY34 = * piStackY34 / iVar10; * piStackY38 = * piStackY38 / iVar10; FUN_294b_02f2();
FUN_200c_0153();
}
pcVar8 = FUN_294b_0c76();
}
}
return pcVar8;
}
FUN_294b_077b(); iStackY18 = 0x294b; FUN_3444_1e00(); for (; - 1 < unaff_DI; unaff_DI = unaff_DI + - 1) {
pbVar2 = (unaff_DI + 0x5f18); * pbVar2 = * pbVar2 | 0x80;
}
FUN_1862_0aa7(); iStackY18 = 0x1862; FUN_3444_1e00(); pcVar8 = FUN_294b_0c76();
}
}
return pcVar8;
}



fn fun_200c_078e(param_1_00: u16, param_1: i16, param_3: u16)

{
    let u_var1: u16;
    let i_var2: i16;
    let i_var3: i16;
    let unaff_ss: i16;
    let unaff_ds: u16;
    let u_var4: u32;
    let l_var5: i32;
    let local_26: *mut u16;
    let local_22: *mut u16;
    let local_1e: *mut u16;
    let local_12: i16;
    let u_stack_y16: u16;
    let u_stack_y14: u16;
    let u_stack_y12: u16;
    let local_a: i16;
    let pi_stack_y8: *mut u16;

    fun_3444_02c6(0x39d9);
    if (0x1390 == 0) {
        param_1 = 0x67f9;
        param_3 = unaff_ds;
    }
    
    0x1397 = 1;
    pi_stack_y8 = 0x87d;
    u_var4 = FUN_2692_05ab();
    u_var1 = 0xc6d8;
    0xfff1 = u_var4;
    0xfff3 = (u_var4 >> 0x10);
    pi_stack_y8 = 0x88f;
    l_var5 = FUN_2692_05ab();
    u_var1 = 0xc6c6;
    0x5d80 = (l_var5 + 0x111);
    0x5d82 = ((l_var5 + 0x111) >> 0x10);
    pi_stack_y8 = param_3;
    local_a = param_1;
    u_stack_y12 = 0x5b2d;
    u_stack_y14 = 0xbf7;
    u_stack_y16 = 0x2692;
    local_12 = 0x8bf;
    i_var2 = FUN_3444_17d0();
    if (i_var2 != 0) {
        pi_stack_y8 = param_3;
        local_a = param_1;
        u_stack_y12 = 0x5b2d;
        u_stack_y14 = 0xbf7;
        u_stack_y16 = 0x3444;
        local_12 = 0x8de;
        FUN_3444_17a6();
        
        0xc46 = 0;
        if ((*0x804 & 1) != 0) {
            pi_stack_y8 = 0x8ff;
            fun_294b_0b7c();
            pi_stack_y8 = 0x5b2d;
            local_a = 0xbf7;
            u_stack_y12 = 0x5b2d;
            u_stack_y14 = 0x15b7;
            u_stack_y16 = 0x294b;
            local_12 = 0x91b;
            FUN_200c_000c();
            pi_stack_y8 = 0x294b;
            local_a = 0x926;
            fun_294b_02f2();
            pi_stack_y8 = &local_a;
            local_a = 0x19;
            u_stack_y12 = 0x294b;
            u_stack_y14 = 0x935;
            fun_2b26_0e3b();
            pi_stack_y8 = &local_a;
            local_a = 0x2b26;
            u_stack_y12 = 0x948;
            fun_294b_077b();
            local_1e = CONCAT22(0xc6dc, 0xff30);
            pi_stack_y8 = 0xffff;
            local_a = 0x5b2d;
            u_stack_y12 = 0xc57;
            u_stack_y14 = 0x294b;
            u_stack_y16 = 0x96e;
            FUN_3444_1f84();
            if (0xd21 == '\0') {
                i_var2 = 0x3444;
                for (iVar3 = 0; * local_1e != iVar3 &&i_var3 < = * local_1e; iVar3 = iVar3 + 1) {
                    u_stack_y12 = 0x9a8;
                    local_a = i_var2;
                    pi_stack_y8 = i_var3;
                    fun_154b_06f7();
                    i_var2 = 0x154b;
                }
            } else {
                i_var2 = 0x3444;
                for (iVar3 = 0; * local_1e != iVar3 &&i_var3 < = * local_1e; iVar3 = iVar3 + 1) {
                    u_stack_y12 = 0x990;
                    local_a = i_var2;
                    pi_stack_y8 = i_var3;
                    FUN_154b_07f7();
                    i_var2 = 0x154b;
                }
            }
            pi_stack_y8 = 0x9b2;
            fun_294b_03be();
            pi_stack_y8 = &local_a;
            local_a = 0x5b2d;
            u_stack_y12 = 0x15b7;
            u_stack_y14 = 0x294b;
            u_stack_y16 = 0x9c1;
            i_var2 = FUN_200c_00a0();
            0x1118 = i_var2;
            if (i_var2 != 0) {
                pi_stack_y8 = &local_12;
                local_a = 0x19;
                u_stack_y12 = 0x294b;
                u_stack_y14 = 0x9de;
                fun_2b26_0e3b();
                u_var1 = 0xc6cc;
                local_22 = CONCAT22(u_var1, 0xfff5);
                0xfff5 = local_a - local_12;
                u_var1 = 0xc6c8;
                local_26 = CONCAT22(u_var1, 0xfff7);
                0xfff7 = (unaff_ss - local_12) + -1;
                if (0x7faa == 0x140) {
                    i_var2 = 8;
                } else {
                    i_var2 = 0x10;
                }
                *local_22 = *local_22 / i_var2;
                *local_26 = *local_26 / i_var2;
                pi_stack_y8 = 0x2b26;
                local_a = 0xa3e;
                fun_294b_02f2();
                pi_stack_y8 = 0x15b7;
                local_a = 0x294b;
                u_stack_y12 = 0xa49;
                fun_200c_0153();
            }
            pi_stack_y8 = 0xa50;
            fun_294b_0c76();
        }
    }
    return;
}


fn fun_200c_0995(param_1_00: u16, param_1: u16, param_3: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0xd23 != '\0') {
        param_1 = 0x67fa;
        param_3 = unaff_ds;
    }
    FUN_200c_061b(0x3444, param_1, param_3);
    fun_200c_078e(0x3444, param_1, param_3);
    return;
}


fn fun_20d3_006c()

{
    fun_3444_02c6(0x39d9);
    fun_2b26_0754(0x3444, 0xe00);
    fun_2b26_0754(0x2b26, 0xf00);
    fun_2b26_0754(0x2b26, 0x1100);
    fun_2b26_05ce(0x2b26, 0x1000);
    return;
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Instruction at (ram,0x00028d5f) overlaps instruction at (ram,0x00028d5e)
//
// WARNING: Type propagation algorithm not settling
// WARNING: Could not reconcile some variable overlaps

uint FUN_20d3_00cc(param_1: u16,uparam_2: i16,uparam_3: i16,uint *param_4,param_5: i16,
uint *param_6,param_7: u16,param_8: u16)

{
let piVar1: * mut u16; let puVar2: * mut u16; let pbVar3: * mut u8; let pcVar4: String; char cVar5; let    uVar6: u16; code * * ppcVar7; let bVar8: u8; undefined uVar9; undefined uVar10;
undefined uVar11; let bVar12: u8; undefined uVar13; let bVar14: u8; let uVar15: u16; let puVar16: * mut u16; let iVar17: i16; let iVar18: i16; let uVar19: u16; let uVar20: u16; let in_CX: u16; let bVar21: u8; let in_BX: u16; let puVar22: * mut u16;
let puVar23: * mut u16; let unaff_BP: u16; let unaff_SI: i16; let unaff_DI: u16; let puVar24: * mut u16; let    uVar25: u16; let puVar26: * mut u16; let unaff_SS: i16; let unaff_DS: u16; undefined uVar27; let uVar28: u32; let    in_stack_00000000: u16; uint auStackY102 [8];
let iStackY86: i16; let iStackY84: i16;
let iStackY82: i16; let iStackY80: i16;
let uStackY76: u16; undefined * puStackY68; let iStackY64: i16; let iStackY58: i16; let iStackY48: i16; let uStackY46: u16; let local_2c: u16; let uStackY42: u16; let piStackY40: * mut u16; let puStackY38: *mut u16; let uStackY36: u32; let puStackY32: * mut u16; let puStackY30: * mut u16; let puStackY28: * mut u16; uint * * ppuStackY26; let local_16: * mut u16; let local_12: * mut u16; let iVar29: i16; let uVar30: u16; let local_e: u8; undefined uStackY13; let local_c: u8; let bStackY11: u8; let local_a: u8; let bStackY9: u8; let in_stack_0000fff8: i16;

puVar22 = & stack0xfffe; uVar28 = FUN_3444_02c6(0x39d9); uVar27 = local_c; uVar15 = uVar28; uVar20 = 0xc74e; if (( * 0x99a & 1) != 0) {
cVar5 = 0x9c65; uVar15 = SEXT12(cVar5); local_a = unaff_SS; bVar8 = local_a; bStackY9 = (unaff_SS >> 8); bVar12 = bStackY9; local_c = param_2; bVar14 = local_c;
if (uVar15 < 9) {
puVar16 = (uVar15 * 2); puVar24 = 0x2000; bVar14 = in_BX; uVar19 = unaff_DI;
switch(cVar5) {
case '\0': return in_BX; case '\x01': uVar15 = (bVar14 ^ param_4) & 1; puVar2 = (unaff_DI + 2); * puVar2 = * puVar2 ^ uVar15; if (param_5 != -1) {
uVar15 = ( * (unaff_DI + 2) ^ (param_5 << 1)) & 2;
puVar2 = (unaff_DI + 2); * puVar2 = * puVar2 ^ uVar15;
}
return uVar15; case '\x03': return in_BX; case '\x04': while ( true ) {
uStackY42 = uVar19 + param_2 + 1; local_a = uStackY42; bStackY9 = (uStackY42 >> 8); local_c = - (in_BX - param_3);
bStackY11 = ( - (in_BX - param_3) >> 8); uStackY46 = param_2 - uVar19;
local_2c = in_BX; FUN_23e0_06ef(); iVar18 = local_2c + param_3; iVar17 = iVar18 + 1;
local_a = uStackY42; bStackY9 = (uStackY42 >> 8); local_c = iVar18; bStackY11 = (iVar18 >> 8); FUN_23e0_06ef();
local_16 = puVar24; if (iVar17 < 1) {
uVar20 = unaff_SI * 4 + 6;
}
else {
uVar20 = (unaff_SI - unaff_DI) * 4 + 10; unaff_DI = unaff_DI - 1;
}
unaff_SI = unaff_SI + 1; if (unaff_DI < unaff_SI) break; bStackY11 = (local_16 >> 8); local_a = bStackY11 >> 7;
bStackY9 = bStackY11 >> 0xf; local_c = local_16; ppuStackY26 = (uint * * )unaff_SI;
FUN_3444_23fe(); iVar18 = FUN_3444_24dc();
iVar17 = (iVar18 + CONCAT11(bStackY11, local_c) + 1) / 2; local_c = iVar18; bStackY11 = (iVar18 >> 8);
puStackY32 = (unaff_DI >> 0xf); puStackY30 = CONCAT11(bStackY9, local_a); puStackY28 = (bStackY9 >> 7); uStackY36 = (undefined * )(uStackY36 & 0xffff | unaff_DI << 0x10); ppuStackY26 = (uint * *)0x45fb; local_16 = puStackY30; puVar24 = puStackY28; FUN_3444_23fe(); ppuStackY26 = (uint ** )0x4602; puStackY38 = FUN_3444_24dc();
puStackY28 = - (puStackY38 - param_3); ppuStackY26 = (uint * * )(iVar17 + param_2 + 1); piStackY40 = (param_2 - iVar17); puStackY32 = 0x3444; uStackY36 = (undefined * )CONCAT22(0x462a, ppuStackY26); puStackY30 = piStackY40; FUN_23e0_06ef(); local_16 = param_6; puStackY28 = (puStackY38 + param_3); ppuStackY26 = (uint * * )(undefined2)uStackY36; puStackY30 = piStackY40; puStackY32 = 0x3444; uStackY36._2_2_ = 0x4645; FUN_23e0_06ef(); ppuStackY26 = (uint * * )puVar24; local_16 = puStackY32; puStackY28 = puStackY32; puStackY30 = 0x3444;
puStackY32 = 0x4659; puVar24 = uStackY36._2_2_;
FUN_3444_23fe(); puStackY30 = 0x3444; puStackY32 = 0x4660; iVar18 = FUN_3444_24dc(); puStackY32 = puVar24; uVar19 = (iVar18 + param_6) / 2; puStackY30 = param_6; uStackY36 = (undefined * )CONCAT22(ppuStackY26, puStackY28); puStackY38 = param_6; piStackY40 = 0x3444; uStackY42 = 0x4684; FUN_3444_23fe(); puVar24 = 0x3444; local_a = 0x8b; bStackY9 = 0x46; in_BX = FUN_3444_24dc();
}
return uVar20; case '\x05': pbVar3 = (unaff_SI + (uVar15 - 0x24) * 2);
bVar14 = * pbVar3; bVar21 = (uVar28 >> 0x10); * pbVar3 = * pbVar3 + bVar21; piVar1 = (puVar16 + unaff_DI + 0x1e); * piVar1 = ( * piVar1 - unaff_SI) - CARRY1(bVar14, bVar21); local_a = iStackY64; bStackY9 = (iStackY64 >> 8); uVar30 = 0x5ddc; local_c = uVar30;
bStackY11 = (uVar30 >> 8); FUN_27ac_0508(); iStackY58 = 0x7fd6 * 3 + 0x5ddc; local_a = 0xac; bStackY9 = 0x27; local_c = 0x50; bStackY11 = 0x2c; FUN_168b_04c4(); iVar18 = 0x138a + iStackY58; local_a = iVar18; bStackY9 = (iVar18 >> 8);
local_c = 0x8b; bStackY11 = 0x16; FUN_2692_0ecc(); local_a = 0x8f; bStackY9 = 0x2c;
FUN_2692_00b2(); 0xccd6 = 0x36 + 0x2e;
iStackY64 = iStackY64 + 0x5de4; if ((0x38 + 0x32 != 0xcce0) || (0x7046 != '\0')) {
local_a = iStackY64; bStackY9 = (iStackY64 >> 8); uVar30 = 0x5ddc; local_c = uVar30; bStackY11 = (uVar30 >> 8);
ppcVar7 = (code * * )0xcf74; (* * ppcVar7)(); if (0x38 != 0) {
local_a = iStackY64; bStackY9 = (iStackY64 >> 8); uVar30 = 0x5ddc; local_c = uVar30; bStackY11 = (uVar30 >> 8);
FUN_27ac_0508(); iStackY58 = 0x7fd6 * 3 + 0x5ddc; local_a = 0xac; bStackY9 = 0x27;
local_c = 99; bStackY11 = 0x2d; FUN_168b_04c4(); iVar18 = 0x138a + iStackY58; local_a = iVar18; bStackY9 = (iVar18 >> 8); local_c = 0x8b; bStackY11 = 0x16; FUN_2692_0ecc(); local_a = 0xa2; bStackY9 = 0x2d; FUN_2692_00b2();
}
0xcce0 = 0x38 + 0x32;
}
uVar20 = 0x2692; iVar18 = 0x5de4; iStackY64 = iStackY64 + iVar18 + iVar18 / 2; uVar30 = 0xc7c2; if (((0x5fc != 0xccdc) || (0x5fe != 0xccde)) ||
(0x7046 != '\0')) {
local_a = 0x2b; bStackY9 = 0x71; uVar30 = 0x2692; uVar20 = 0x3444; local_c = bVar8;
bStackY11 = bVar12; FUN_3444_1aca(); local_a = 0x2f; bStackY9 = 0x71; local_c = uVar30;
bStackY11 = (uVar30 >> 8); FUN_2239_12bf(); uVar30 = 0xc7c2; uVar25 = 0x5fe; 0xccdc = 0x5fc; 0xccde = uVar25;
}
iVar18 = (0x6b5 / 0xfcf1) / 2 + 0x81; if (0x83 < iVar18) {
iVar18 = 0x83;
}
iStackY64 = iStackY64 + 0x5de4; if ((0xcccc != iVar18) || (0x7046 != '\0')) {
local_a = 0x3a; bStackY9 = 0x71; local_c = iVar18; bStackY11 = (iVar18 >> 8); uVar15 = uVar20; FUN_2239_12bf(); 0xcccc = uVar15;
}
uVar30 = 0xc7d6; if (0x6b7 < - 0x46) {
uVar15 = 0x81;
}
else {
if (0x6b7 == 0) {
uVar15 = 0x83;
}
else {
uVar15 = 0x82;
}
}
iStackY64 = iStackY64 + 0x5de4; if ((0xccd2 != uVar15) || (0x7046 != '\0')) {
local_a = 0x45; bStackY9 = 0x71; local_c = uVar15; bStackY11 = 0; FUN_2239_12bf();
0xccd2 = uVar20; uVar15 = uVar20;
}
* (undefined * )0x7046 = 0; if (0x7faa == 0x140) {
ppcVar7 = (code * * )0xcf70; uVar15 = ( * * ppcVar7)();
}
return uVar15; case '\x06': puStackY68 = & stack0xfff8; puVar23 = & stack0xfff8; cVar5 = '\x1d';
loop {
puVar22 = puVar22 + - 1; puVar23 = puVar23 + - 1; * puVar23 = * puVar22;
cVar5 = cVar5 + - 1;
} while ('\0' < cVar5); pcVar4 = (char * )(unaff_SI + 0x7500); *pcVar4 = * pcVar4 + (in_BX >> 8); FUN_2f42_0097(); 0xa432 = unaff_BP;
0xa434 = in_stack_00000000; return unaff_BP; case '\a':
if ((((bVar14 == 1) || (bVar14 == 3)) || (bVar14 == 5)) || (bVar14 == 7)) {
local_a = 0; if ((local_c & 0xf) == 0xf) {
local_a = 0xc0;
}
else {
if ((param_2 & 4) == 0) {
local_a = 0x80;
}
if ((param_3 & param_2) != 0) {
local_a = local_a | 0x40;
}
}
local_c = 0; bStackY11 = 0;
}
else {
local_a = 0x40; local_c = param_3 & 0xf;
bStackY11 = param_3;
}
bStackY9 = 0; ppcVar7 = (code * *)0xcf68; uVar20 = ( * * ppcVar7)(); return uVar20; case '\b': in((uVar28 >> 0x10)); loop {
local_16 = (local_12 + (in_CX - 8)); local_a = in_stack_0000fff8; bStackY9 = (in_stack_0000fff8 >> 8); local_c = 0; bStackY11 = 0; puVar26 = 0x2c63; ppuStackY26 = (uint * * )0x15a4; FUN_2c63_02af();
local_12 = puVar16; in_CX = unaff_DI; while ( true ) {
in_CX = in_CX - 2; puVar16 = puVar24;
if (in_CX < 0) {
iVar18 = unaff_SI + 1; if (6 < iVar18) {
* (undefined * )0x6b4 = 0; local_a = 0xca; bStackY9 = 0x15; ppcVar7 = (code * * )0xcf70; uVar20 = ( ** ppcVar7)(); return uVar20;
}
local_a = & stack0xffe8; bStackY9 = ( & stack0xffe8 >> 8); local_c = (unaff_SI + 0xf06); bStackY11 = ((unaff_SI + 0xf06) >> 8); in_stack_0000fff8 = unaff_SS;
FUN_2b26_0e3b(); local_a = in_stack_0000fff8; bStackY9 = (in_stack_0000fff8 >> 8); local_c = local_12; bStackY11 = (local_12 >> 8);
puVar26 = 0x2c63; local_16 = 0x14c3; puVar16 = puVar24; FUN_2c63_0002(); in_CX = 8;
local_12 = puVar24; unaff_SI = iVar18;
}
puVar24 = puVar16; if (0x7faa != 0x140) break; ppuStackY26 = (uint * * )(in_CX / 2); in_stack_0000fff8 = 0; local_a = 2; bStackY9 = 0; uVar30 = ((unaff_SI * 5 + ppuStackY26) * 4 + 0x516); local_c = uVar30; bStackY11 = (uVar30 >> 8); puVar26 = 0x3444;
local_12 = 0x150c; iVar18 = FUN_3444_2364();
puVar16 = (ppuStackY26 + puVar24); iVar18 = iVar18 + puVar16; local_c = iVar18; bStackY11 = (iVar18 >> 8); if (puVar16 < iVar18) {
in_stack_0000fff8 = (ppuStackY26 & 1) + 1;
local_a = in_stack_0000fff8; bStackY11 = 0; puVar26 = 0x2c63; local_16 = 0x1542; local_c = local_a;
bStackY9 = bStackY11; FUN_2c63_0002(); local_12 = puVar16;
}
}
puVar16 = (puVar24 + ((unaff_SI * 5 + in_CX / 2) * 4 + 0x514) + in_CX); puVar24 = puVar26; unaff_DI = in_CX;
} while ( true );
}
loop {
local_c = uVar27; uVar10 = bStackY11; uVar27 = local_c; puVar2 = (unaff_SI + 6);
bStackY9 = (param_3 >> 8); uVar13 = bStackY9; local_c = unaff_SI; uVar9 = local_c; bStackY11 = (unaff_SI >> 8);
uVar11 = bStackY11; local_c = uVar27; bStackY11 = uVar10; if ( * puVar2 == in_BX || * puVar2 < in_BX) {
// LAB_2e46_07e4:
puVar2 = (unaff_SI + 10); uVar20 = unaff_DI; if ( * puVar2 == unaff_DI || * puVar2 < unaff_DI) {
local_c = & local_a; bStackY11 = ( & local_a >> 8); local_e = puVar24; uStackY13 = (puVar24 >> 8); puVar24 = 0x2a60; local_a = bVar8; bStackY9 = bVar12; iVar18 = FUN_2a60_0913(); uVar20 = unaff_DI; if (iVar18 == 0) goto LAB_2e46_083e; local_c = uVar9; bStackY11 = uVar11;
local_a = param_3; bStackY9 = uVar13; FUN_2e46_06a6(); uVar30 = CONCAT13(bStackY11, CONCAT12(local_c, 0x2a60)); local_a = uVar30;
bStackY9 = (uVar30 >> 8); local_c = 0x60; bStackY11 = 0x2a; local_e = 0x82; iVar18 = FUN_2e46_010d(); cVar5 = 0x7fd4; uVar20 = (unaff_SI + 10); in_BX = unaff_DI;
}
else {
// LAB_2e46_083e:
uVar30 = CONCAT13(bStackY11, CONCAT12(local_c,CONCAT11(uStackY13, local_e))); local_a = uVar30; bStackY9 = (uVar30 >> 8); local_c = puVar24; bStackY11 = (puVar24 >> 8); local_e = 0xac; iVar18 = FUN_2e46_010d(); cVar5 = 0x7fd4; in_BX = uVar20;
}
iVar18 = iVar18 + (uVar20 - (unaff_SI + 6)) / cVar5; local_a = iVar18;
bStackY9 = (iVar18 >> 8);
}
else {
local_c = & local_a; bStackY11 = ( & local_a >> 8); local_e = puVar24; uStackY13 = (puVar24 >> 8); puVar24 = 0x2a60; local_a = bVar8; bStackY9 = bVar12; iVar18 = FUN_2a60_0913(); if (iVar18 == 0) goto LAB_2e46_07e4; local_c = uVar9; bStackY11 = uVar11; local_a = param_3;
bStackY9 = uVar13; FUN_2e46_06a6(); uVar30 = CONCAT13(bStackY11, CONCAT12(local_c, 0x2a60)); local_a = uVar30; bStackY9 = (uVar30 >> 8); local_c = 0x60; bStackY11 = 0x2a; local_e = 0x33; uVar30 = FUN_2e46_010d(); local_a = uVar30; bStackY9 = (uVar30 >> 8); in_BX = unaff_DI;
}
uVar30 = CONCAT13(bStackY11, CONCAT12(local_c,CONCAT11(0xec, local_e))); local_c = uVar30; bStackY11 = (uVar30 >> 8); FUN_2e46_054a(); local_a = 0xe2;
bStackY9 = 0xeb; iVar18 = FUN_1ba9_10aa();
if (iVar18 == 0) {
return 0;
}
local_a = & stack0xfffa; bStackY9 = ( & stack0xfffa >> 8); local_c = 0xa9; bStackY11 = 0x1b; puVar24 = 0x1ba9; local_e = 0xf3; uStackY13 = 0xeb; FUN_1ba9_1038(); uVar20 = param_3; uVar27 = local_c; unaff_DI = in_BX;
} while ( true );
}
local_a = 0x56; bStackY9 = 0xe; ppcVar7 = (code * * )0xcf6c; uVar20 = unaff_DI; ( * * ppcVar7)(); uVar30 = 0xc750; if ((0x6bb | 0x6b9) != 0) {
for (unaff_SI = 0; unaff_SI < 6; unaff_SI = unaff_SI + 1) {
local_a = & stack0xfff0; bStackY9 = ( & stack0xfff0 >> 8); local_c = (unaff_SI + 0xe05); bStackY11 = ((unaff_SI + 0xe05) >> 8); FUN_2b26_0e3b();
local_a = uVar20; bStackY9 = (uVar20 >> 8); local_16 = 0x1184; local_c = local_a; bStackY11 = bStackY9; FUN_2c63_0002(); local_a = 0xa3; bStackY9 = 0x11; FUN_3444_40e7(); local_a = 0x44; bStackY9 = 0x34; local_c = 0xac; bStackY11 = 0x11; FUN_3444_4472(); local_a = 0x44; bStackY9 = 0x34; local_c = 0xb9; bStackY11 = 0x11; FUN_3444_40e7(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_44e8(); local_16 = 0x11c8; FUN_3444_4217(); local_16 = 0x6adc; ppuStackY26 = (uint ** ) & local_2c; puStackY28 = 0x3444; puStackY30 = 0x11d7; FUN_3444_1aca(); while (local_c = bVar8, bStackY11 = bVar12, iVar18 = FUN_3444_178e(), 4 < iVar18) {
if (local_2c == '0') {
local_16 = 0xe96; local_c = bVar8; bStackY11 = bVar12; FUN_3444_172e();
}
else {
local_c = bVar8; bStackY11 = bVar12; unaff_DI = FUN_3444_178e(); * (undefined * )(& uStackY46 + unaff_DI + 1) = 0;
}
}
local_c = uVar20; bStackY11 = (uVar20 >> 8); FUN_2c63_0100(); ppuStackY26 = (uint * * )0xed5; local_c = bVar8;
bStackY11 = bVar12; FUN_2c63_01c1(); uVar30 = 0xc750; uVar25 = 0x6bb; local_c = uVar25;
bStackY11 = (uVar25 >> 8); iVar18 = 0x6b9; iVar29 = 0; local_16 = *(uint * * )(unaff_SI * 4 + 0x5c8); ppuStackY26 = (uint * * )0xf05; ppuStackY26 = (uint * * )FUN_3444_23fe(); puStackY28 = 0x3444; puStackY30 = 0xf0c; iVar17 = FUN_3444_2364(); puVar24 = (0x7fd6 * 6 + iVar29); if (0x7faa == 0x140) {
local_16 = (iVar18 + 3); iVar18 = iVar17 / 2;
}
else {
local_16 = (iVar18 + 2); iVar18 = iVar17;
}
iVar18 = iVar18 + puVar24; if (iVar17 < 10) {
if (iVar17 < 1) {
if (0x7faa == 0x140) {
uVar30 = 0x6b9; local_a = uVar30; bStackY9 = (uVar30 >> 8);
}
else {
uVar30 = 0x6b9; local_a = uVar30; bStackY9 = (uVar30 >> 8);
}
local_c = 0; bStackY11 = 0; local_16 = 0x10e3; local_16 = FUN_3444_23fe(); puVar24 = 0x3444; ppuStackY26 = (uint * * )0x10ea; iVar18 = FUN_3444_2364(); iVar18 = iVar18 + puVar24; if (( * 0x9c65 & 1) != 0) {
local_a = 0; bStackY9 = 0; goto LAB_20d3_02b0;
}
}
else {
if (0x7faa == 0x140) {
uVar30 = 0x6b9; local_a = uVar30; bStackY9 = (uVar30 >> 8);
}
else {
uVar30 = 0x6b9; local_a = uVar30; bStackY9 = (uVar30 >> 8);
}
local_c = 0; bStackY11 = 0; local_16 = 0xfc2; local_16 = FUN_3444_23fe(); puVar24 = 0x3444; ppuStackY26 = (uint * * )0xfc9; iVar18 = FUN_3444_2364(); iVar18 = iVar18 + puVar24; if (( * 0x9c65 & 1) == 0) {
local_a = 9; goto LAB_20d3_02ac;
}
}
local_a = 2;
// LAB_20d3_02ac:
bStackY9 = 0;
}
else {
if (( * 0x9c65 & 1) == 0) {
local_a = 4; goto LAB_20d3_02ac;
}
local_a = uVar20; bStackY9 = (uVar20 >> 8);
}
// LAB_20d3_02b0:
local_c = 0; bStackY11 = 0; ppuStackY26 = (uint * * )0xff3; puVar16 = local_16; local_16 = puVar24; FUN_2c63_02af(); uVar30 = 0xc75c; uVar15 = unaff_SI * 4; uVar25 = 0xc75a; if (((uVar15 + 0x5c8) != (uVar15 + 0x1cdf)) ||
((uVar15 + 0x5ca) != (uVar15 + 0x1ce1))) {
local_a = 0; bStackY9 = 0; iVar18 = local_16 + (iVar18 - local_16) / 2 + 1; local_c = iVar18; bStackY11 = (iVar18 >> 8); local_16 = 0x104a; FUN_2c63_0002(); uVar30 = 0xc75c; uVar19 = (uVar15 + 0x1cdf); iVar18 = (uVar15 + 0x1ce1); uVar30 = 0xc75a; piVar1 = (uVar15 + 0x5ca); iVar17 = * piVar1;
if ((iVar18 < = iVar17) & &
(( * piVar1 != iVar18 & & iVar18 <= iVar17 || (puVar2 = (uVar15 + 0x5c8), uVar19 < = * puVar2 & & * puVar2 != uVar19)))) {
if (0x7faa == 0x140) {
local_c = (puVar16 + 1); bStackY11 = ((puVar16 + 1) >> 8);
}
else {
local_c = puVar16; bStackY11 = (puVar16 >> 8);
}
bStackY9 = 0; local_a = 0; local_16 = 0x1124; FUN_2c63_0002();
}
uVar30 = 0xc75a; iVar18 = unaff_SI * 4;
uVar25 = (iVar18 + 0x5ca); uVar6 = 0xc75c; (iVar18 + 0x1cdf) = (iVar18 + 0x5c8); (iVar18 + 0x1ce1) = uVar25; unaff_DI = uVar15;
}
}
}
local_a = & stack0xfff0; bStackY9 = ( & stack0xfff0 >> 8); local_c = 0xb; bStackY11 = 0xe; FUN_2b26_0e3b(); local_a = uVar20; bStackY9 = (uVar20 >> 8);
local_16 = 0x1205; local_c = local_a; bStackY11 = bStackY9; FUN_2c63_0002(); uVar30 = 0xc750;
local_a = 0x15; bStackY9 = 0x12; FUN_3444_40e7(); local_a = 0x44; bStackY9 = 0x34;
local_c = 0x1d; bStackY11 = 0x12; FUN_3444_41ff(); local_a = 0x44; bStackY9 = 0x34;
local_c = 0x26; bStackY11 = 0x12; FUN_3444_4472(); local_a = 0x44; bStackY9 = 0x34;
local_c = 0x2e; bStackY11 = 0x12; FUN_3444_407a(); local_c = 0x44; bStackY11 = 0x34;
FUN_3444_4472(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_44e3(); local_c = 0x44;
bStackY11 = 0x34; FUN_3444_4472(); local_16 = 0x124f; FUN_3444_4217(); local_16 = 0x6ae7;
ppuStackY26 = (uint * * ) & local_2c;
puStackY28 = 0x3444; puStackY30 = 0x125e; FUN_3444_1aca(); while ( true ) {
local_c = bVar8; bStackY11 = bVar12; uVar28 = FUN_3444_178e(); uVar19 = (uVar28 >> 0x10); uVar15 = CONCAT11(bStackY11, local_c); if (uVar28 < 6) break;
local_c = bVar8; bStackY11 = bVar12; unaff_DI = FUN_3444_178e(); * (undefined * )(& uStackY46 + unaff_DI + 1) = 0;
}
cVar5 = 0x9c65; if (cVar5 < 9) {
iVar18 = cVar5 * 2; uVar25 = 0x2000;
local_e = param_8; bVar8 = local_e; uStackY13 = (param_8 >> 8);
uVar27 = uStackY13; switch(cVar5) {
case '\0': out(0x8b, local_c);
iVar18 = 0x4446; uVar20 = bStackY11 << 8; break; case '\x01': while ((uVar19 | uVar15) != 0) {
* (undefined * )( & puStackY32 + unaff_SI) = * uStackY36; unaff_SI = unaff_SI + 1; uVar15 = (unaff_SI * 4 + - 0x5bc2); uVar19 = (unaff_SI * 4 + -0x5bc0); uStackY36 = (undefined * )CONCAT22(uVar19, uVar15);
}
local_c = unaff_SI; bStackY11 = (unaff_SI >> 8); local_16 = 0xf464; uVar20 = FUN_3444_134a(); return uVar20; case '\x02': iStackY82 = (uVar15 ^ uVar19) - uVar19; iStackY80 = iStackY82 + unaff_SI; local_c = iStackY80; bStackY11 = (iStackY80 >> 8); FUN_168b_07ed(); local_c = iStackY80; bStackY11 = (iStackY80 >> 8); iStackY84 = unaff_DI + 0x502d; iVar18 = 0x168b; FUN_168b_07ed(); iStackY86 = (iVar18 - iStackY82) + unaff_SI; local_c = iStackY86; bStackY11 = (iStackY86 >> 8); FUN_168b_07ed(); local_c = iStackY86;
bStackY11 = (iStackY86 >> 8); iVar18 = 0x168b; FUN_168b_07ed(); local_c = (iVar18 + unaff_SI); bStackY11 = ((iVar18 + unaff_SI) >> 8); FUN_168b_07ed(); local_c = uStackY76; bStackY11 = (uStackY76 >> 8); FUN_168b_07ed(); uVar30 = (param_2 * 2 + 0x7668); local_c = uVar30; bStackY11 = (uVar30 >> 8); uVar20 = FUN_168b_0815(); return uVar20; case '\x03': local_c = 1; bStackY11 = 0; local_16 = 0xb7d7; FUN_2c63_031b();
if (( * (unaff_SI + 2) & 0x40) != 0) {
local_c = 2; bStackY11 = 0; local_16 = 0xb803; FUN_2c63_031b();
}
uVar30 = 0xc88a; uVar20 = (CONCAT11(bStackY9, local_a) + 0x811); if (((CONCAT11(bStackY9, local_a) + 0x813) | uVar20) != 0) {
bStackY11 = (param_2 >> 8); local_c = bVar14; uVar20 = ( * 0x2c63)();
}
return uVar20; case '\x04': local_c = 0;
bStackY11 = 0x20; FUN_2b26_0363(); local_a = 0; bStackY9 = 0x20; local_c = 0x1f;
bStackY11 = 0xb9; FUN_2d56_03f0(); local_a = unaff_DI; bStackY9 = (unaff_DI >> 8); local_c = 0x56; bStackY11 = 0x2d; uVar20 = FUN_27ac_0287(); return uVar20; case '\x05': while ( true ) {
(iVar18 * 2 + - 0x1393) = (iVar18 * 2 + - 0x2d) << 1; iVar18 = iVar18 + 1; if (4 < iVar18) break; uVar30 = 0xc80c;
}
iVar17 = 0; uVar20 = 0x4b2d; for (iVar18 = 5; iVar18 < 10; iVar18 = iVar18 + 1) {
iVar17 = iVar17 + (iVar18 * 2 + -0x2d);
}
for (iVar18 = 0; iVar18 < 5; iVar18 = iVar18 + 1) {
if (iVar17 == 0) {
(iVar18 * 2 + - 0x139f) = 0;
}
else {
uVar20 = ((iVar18 * 2 + - 0x23) * 1000) / iVar17; (iVar18 * 2 + - 0x139f) = uVar20;
}
}
return uVar20; case '\x06': 0x98ba = uVar19;
local_c = unaff_DS; bStackY11 = (unaff_DS >> 8); uVar20 = FUN_3440_0040(); return uVar20; case '\a':
// WARNING: Bad instruction - Truncating control flow here
halt_baddata(); case '\b': uVar30 = 0x9c7a; uVar25 = 0x9c7c;
local_e = uVar30; uStackY13 = (uVar30 >> 8); local_c = uVar25;
bStackY11 = (uVar25 >> 8); while ((CONCAT11(uStackY13, local_e) + 2) != - 0x8000) {
local_c = 0; bStackY11 = 0; local_e = 0; uStackY13 = 0; local_12 = auStackY102;
local_16 = 0x0; ppuStackY26 = & local_16; puStackY28 = 0x2000; puStackY30 = 0x8ec9; FUN_2874_0041(); iVar18 = 0; while (auStackY102[iVar18 * 4 + 1] != 0x8000) {
0x7fe0 = local_12 - auStackY102[iVar18 * 4 + 2]; 0x7fde = auStackY102[iVar18 * 4] - local_16; iVar17 = (auStackY102[iVar18 * 4 + 3] - auStackY102[iVar18 * 4 + 1]) + 1; local_c = iVar17; bStackY11 = (iVar17 >> 8); local_12 = ((auStackY102[iVar18 * 4 + 1] - param_5) * CONCAT11(bStackY9, local_a) + param_6); local_16 = param_4; ppuStackY26 = (uint * * )0x8f18;
ppcVar7 = (code * * )0xcf98; (* * ppcVar7)(); iVar18 = iVar18 + 1; local_e = bVar8; uStackY13 = uVar27;
}
iVar18 = CONCAT11(uStackY13, local_e) + 8; local_e = iVar18; uStackY13 = (iVar18 >> 8);
}
0x7fde = 0; 0x7fe0 = 0; return 0;
}
// LAB_2874_062f:
( & puStackY28 + unaff_DI + 2) = uVar20; iVar17 = FUN_2874_0004(); * piStackY40 = iVar17;
// LAB_2874_0648:
uVar27 = bStackY9; bVar14 = local_a;
local_a = uVar25; bStackY9 = (uVar25 >> 8); if (( * piStackY40 & 0x20) == 0) {
if (( * piStackY40 & 0x10) == 0) goto LAB_2874_06e3; iStackY48 = (CONCAT11(bStackY11, local_c) + 4); iVar29 = iVar18 * 4; puStackY38 = (iStackY48 - ( &puStackY28)[iVar18 * 2]); local_c = 0xfb; bStackY11 = 0x8d; FUN_3444_4101(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_43cb(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); puVar24 = FUN_3444_42c7(); (& puStackY28)[iVar18 * 2 + 1] = puVar24; iVar17 = iStackY48;
}
else {
uStackY46 = CONCAT13(uVar27, CONCAT12(bVar14,CONCAT11(bStackY11, local_c))); iVar29 = iVar18 * 4; puStackY38 = (uStackY46 - ( & puStackY28)[iVar18 * 2]); local_c = 0xaf; bStackY11 = 0x8d; FUN_3444_4101(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_43cb(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); puVar24 = FUN_3444_42c7(); ( & puStackY28)[iVar18 * 2 + 1] = puVar24; iVar17 = uStackY46;
}
// LAB_2874_06e0:
uVar25 = 0x3444; ( & puStackY28 + iVar29) = iVar17;
// LAB_2874_06e3:
loop {
iVar18 = iVar18 + 1; while (uVar27 = iVar18 == 2, 1 < iVar18) {
local_c = local_16; bStackY11 = (local_16 >> 8); local_16 = 0x8e3f; ppcVar7 = (code * * )0xcfb0; local_a = local_e;
bStackY9 = uStackY13; ( * * ppcVar7)(); iVar18 = CONCAT11(bStackY11, local_c); loop {
iVar17 = iVar18 + 8; if ((iVar18 + 10) == - 0x8000) {
return CONCAT11(bStackY9, local_a);
}
local_c = iVar17; uVar27 = local_c; bStackY11 = (iVar17 >> 8); uVar9 = bStackY11; FUN_2874_0004(); puVar24 = param_6; local_c = uVar27; bStackY11 = uVar9; uVar20 = FUN_2874_0004(); iVar18 = iVar17;
} while ((puVar24 & uVar20) != 0); if ((uVar20 == 0) & & (puVar24 == 0x0)) {
local_c = param_7; bStackY11 = (param_7 >> 8); local_16 = 0x8e62; ppcVar7 = (code * * )0xcfb0; local_a = local_e;
bStackY9 = uStackY13; uVar20 = ( * * ppcVar7)(); return uVar20;
}
iVar18 = 0;
}
local_a = uVar25; bStackY9 = (uVar25 >> 8); local_c = 100; bStackY11 = 0x8c; FUN_3444_402c(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_402c(); uVar25 = 0x3444; FUN_3444_44f7(); if ( ! (bool)uVar27) {
piStackY40 = ( & stack0xfff0 + iVar18 * 2); if (( * piStackY40 & 0x80) == 0) {
if (( * piStackY40 & 0x40) == 0) goto LAB_2874_0648; local_2c = (CONCAT11(bStackY11, local_c) + 6); unaff_DI = iVar18 * 4; puStackY38 = (local_2c - ( &puStackY28)[iVar18 * 2 + 1]); local_a = 0x44; bStackY9 = 0x34; local_c = 0x4a; bStackY11 = 0x8d; FUN_3444_4101(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_43b3(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); local_a = 0x44; bStackY9 = 0x34; uVar25 = 0x3444; local_c = 0x69; bStackY11 = 0x8d; puVar24 = FUN_3444_42c7(); (& puStackY28)[iVar18 * 2] = puVar24; uVar20 = local_2c;
}
else {
uStackY42 = (CONCAT11(bStackY11, local_c) + 2); unaff_DI = iVar18 * 4; puStackY38 = (uStackY42 - ( & puStackY28)[iVar18 * 2 + 1]); local_a = 0x44; bStackY9 = 0x34; local_c = 0xfb; bStackY11 = 0x8c; FUN_3444_4101(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_43b3(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); local_a = 0x44; bStackY9 = 0x34; uVar25 = 0x3444; local_c = 0x1a; bStackY11 = 0x8d; puVar24 = FUN_3444_42c7(); ( & puStackY28)[iVar18 * 2] = puVar24; uVar20 = uStackY42;
}
goto LAB_2874_062f;
}
piStackY40 = ( & stack0xfff0 + iVar18 * 2);
} while ( * piStackY40 == 0); if (( * piStackY40 & 0x80) == 0) {
if (( * piStackY40 & 0x40) == 0) goto LAB_2874_056f; puVar24 = * (uint ** )(CONCAT11(bStackY11, local_c) + 6);
}
else {
puVar24 = * (uint * * )(CONCAT11(bStackY11, local_c) + 2);
}
( & puStackY28)[iVar18 * 2 + 1] = puVar24; goto LAB_2874_06e3;
}
local_16 = 0x12d8; local_c = bVar8; bStackY11 = bVar12; FUN_2c63_01c1(); bStackY11 = 0;
local_c = 0; puVar24 = * (uint ** )0x6b9; local_16 = 0x1331; FUN_3444_2364(); if (( * 0x9c65 & 1) == 0) {
puStackY30 = 0xe; puStackY32 = 0xf;
}
else {
puStackY32 = 0x3; puStackY30 = 0x3;
}
ppuStackY26 = (uint * * )0x0; uStackY36 = (undefined * )0x3444; puStackY38 = 0x1361; puStackY28 = puVar24; local_16 = puStackY32; FUN_2c63_02af(); uVar30 = 0xc776; uVar25 = 0xc750; if ((0x6b9 != 0x1cf7) || (0x6bb != 0x1cf9)) {
local_16 = 0x0; puStackY28 = (puVar24 / 2); ppuStackY26 = (uint * * )0x7; puStackY30 = 0x2; puStackY32 = 0x2c63; uStackY36 = (undefined * )CONCAT22(0x13af, (undefined2)uStackY36); FUN_2c63_0002(); uVar30 = 0xc776; uVar20 = 0x1cf7; iVar18 = 0x1cf9; uVar30 = 0xc750; piVar1 = 0x6bb; iVar17 = * piVar1; if ((iVar18 < = iVar17) & & (( * piVar1 != iVar18 & & iVar18 < = iVar17 || (puVar2 = 0x6b9, uVar20 < = * puVar2 & & * puVar2 != uVar20)))) {
if (0x7faa == 0x140) {
puStackY28 = 0x0;
}
else {
puStackY28 = 0x2;
}
ppuStackY26 = (uint * * )0x5; local_16 = 0x0; puStackY30 = 0x4; puStackY32 = 0x2c63; uStackY36 = (undefined * )CONCAT22(0x1411, (undefined2)uStackY36); FUN_2c63_0002();
}
uVar30 = 0xc750; uVar25 = 0x6bb; uVar6 = 0xc776; 0x1cf7 = 0x6b9; 0x1cf9 = uVar25;
}
local_16 = 0x1432; ppcVar7 = (code * *)0xcf70; uVar15 = ( * * ppcVar7)();
}
return uVar15;
// LAB_2874_056f: if (( * piStackY40 & 0x20) == 0) {
iVar17 = (CONCAT11(bStackY11, local_c) + 4);
}
else {
iVar17 = CONCAT13(bStackY9, CONCAT12(local_a,CONCAT11(bStackY11, local_c)));
}
iVar29 = iVar18 << 2; goto LAB_2874_06e0;
}


/*
Unable to decompile 'FUN_20d3_0708'
Cause:
Low-level Error: Symbol $$undef00000023 extends beyond the end of the address space
*/


// WARNING: Instruction at (ram,0x000217a6) overlaps instruction at (ram,0x000217a5)
//

fn FUN_20d3_08a0() -> i16

{
let pcVar1: String; char cVar2; code ** ppcVar3; undefined4 * puVar4; let puVar5: * mut u16; let iVar6: i16; let uVar7: u16; let in_BX: i16; let    unaff_BP: u16; let unaff_SI: i16; let unaff_DI: i16; let uVar8: u16; let unaff_SS: i16; let unaff_DS: i16; let uVar9: u32; let lVar10: i32; undefined * in_stack_00000000; let local_48: i16; let local_42: i16; let piVar11: * mut u16;
let piVar12: * mut u16; let in_stack_0000ffe8: i16; let iVar13: i16; let local_12: u16; let local_10: i16; let uVar14: u16; ulong in_stack_0000fff4; let in_stack_0000fff8: * mut u16; let uVar15: u16; let iVar16: i16;

iVar16 = 0x15db; uVar9 = FUN_3444_02c6(0x39d9); uVar15 = 0xc74e; if ((* 0x9d4 & 1) == 0) {
return uVar9;
}
cVar2 = 0x9c65; if (8 < cVar2) {
ppcVar3 = (code * * )0xcf6c; (* * ppcVar3)(); iVar16 = 0; goto LAB_20d3_08fc;
}
iVar6 = cVar2 * 2; uVar8 = 0x2000;
iVar13 = unaff_DI; switch(cVar2) {
case '\0': break; case '\x01': uVar9 = FUN_2692_05ab(); uVar15 = 0xc6d8; 0xfff1 = uVar9; 0xfff3 = (uVar9 >> 0x10); lVar10 = FUN_2692_05ab(); uVar15 = 0xc6c6; 0x5d80 = (lVar10 + 0x111); 0x5d82 = ((lVar10 + 0x111) >> 0x10); uVar15 = 0xbf7; _local_10 = 0xbf72692;
iVar16 = FUN_3444_17d0(); if (iVar16 != 0) {
_local_10 = CONCAT22(uVar15, 0x3444); iVar16 = FUN_3444_17a6(); * (undefined * )0xc46 = 0; if (( * 0x804 & 1) != 0) {
FUN_294b_0b7c(); _local_10 = 0x15b7294b; FUN_200c_000c(); FUN_294b_02f2(); _local_10 = CONCAT22(0x935, local_10); FUN_2b26_0e3b(); FUN_294b_077b(); piVar11 = CONCAT22(0xc6dc, 0xff30); _local_10 = 0x294b096e; FUN_3444_1f84();
if (0xd21 == '\0') {
for (iVar16 = 0; * piVar11 != iVar16 & & iVar16 < = * piVar11; iVar16 = iVar16 + 1) {
FUN_154b_06f7();
}
}
else {
for (iVar16 = 0; * piVar11 != iVar16 & & iVar16 < = * piVar11; iVar16 = iVar16 + 1) {
FUN_154b_07f7();
}
}
FUN_294b_03be(); _local_10 = 0x294b09c1; iVar16 = FUN_200c_00a0(); 0x1118 = iVar16; if (iVar16 != 0) {
iVar16 = 0x19; _local_10 = CONCAT22(0x9de,local_10); FUN_2b26_0e3b(); uVar15 = 0xc6cc; piVar12 = CONCAT22(uVar15, 0xfff5);
0xfff5 = iVar16 + - 0x91b; uVar15 = 0xc6c8; piVar11 = CONCAT22(uVar15, 0xfff7);
0xfff7 = unaff_SS + - 0x91c; if (0x7faa == 0x140) {
iVar16 = 8;
}
else {
iVar16 = 0x10;
}
* piVar12 = * piVar12 / iVar16; * piVar11 = * piVar11 / iVar16; FUN_294b_02f2();
FUN_200c_0153();
}
iVar16 = FUN_294b_0c76();
}
}
return iVar16; default: 0x8faa = in_BX; 0x8fa8 = (iVar6 + 2); uVar9 = *ff * ff0x98d2; 0x8fa4 = uVar9; 0x8fa6 = (uVar9 >> 0x10); puVar4 = ff* ff0x98b8; if ((puVar4 >> 0x10) != 0) {
puVar5 = * puVar4; uVar15 = (undefined2)(puVar5 >> 0x10); 0x8fa0 = puVar5; 0x8fa2 = uVar15; 0x8faa = * puVar5;
0x8fa8 = (puVar5 + 2); uVar9 = * ff * ff0x98b4; 0x8fa4 = uVar9; 0x8fa6 = (uVar9 >> 0x10);
}
uVar15 = 0x7e2c; 0x7e2c = 1; uVar7 = 0xcf62 & 0xfff8; _local_10 = CONCAT22(unaff_DS,0x8fac); iVar16 = 0xcf64; 0x854c = uVar7; 0x854e = iVar16; iVar13 = 0x8fa8; iVar6 = uVar7 + 0x8faa + 7; 0x8552 = iVar6; 0x8550 = iVar16 + iVar13; ppcVar3 = (code * * )0xcf88; ( * * ppcVar3)(0x2000, uVar7, iVar16, iVar6); _local_10 = 0xff0f; ppcVar3 = (code ** )0xcf68; ( * * ppcVar3)(); _local_10 = CONCAT22(0x77ab, local_10); ppcVar3 = (code * * )0xcfa4;
( * * ppcVar3)(); 0x7e2c = 0; _local_10 = CONCAT22( * (undefined4 *)0x8fa0, iVar16); FUN_2692_0042(0x2000); _local_10 = CONCAT22(0x77c4, local_10);
ppcVar3 = (code * * )0xcfa0; (* * ppcVar3)(); _local_10 = CONCAT22( * ff0x8fa4, iVar16); FUN_2692_001f(0x2692); 0x7e2c = uVar15;
return 0; case '\x03': pcVar1 = (char * )(iVar6 + unaff_SI); * pcVar1 = * pcVar1 + '\x01'; if ( * pcVar1 == '\0') {
unaff_BP = 0; in_stack_00000000 = & stack0xfffe; goto LAB_2fad_04c8;
}
lVar10 = FUN_3143_1720(); unaff_BP = (undefined2)lVar10; in_stack_00000000 = & stack0xfffe; if (lVar10 == 0) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
break; case '\x04': _local_10 = CONCAT22(0xee7e, local_10); FUN_2ecc_02b3(); _local_10 = CONCAT22(0xef2a, local_10); FUN_2c63_031b(); uVar15 = 0xef32; iVar16 = FUN_294b_0c76(); if ((((unaff_SI + 0x24) != - 1) & & ((unaff_SI + 0x26) != - 1)) & & (iVar16 = FUN_2e46_010d(), (unaff_SI + 0x24) != iVar16)) {
iVar16 = FUN_2e46_0283();
}
return iVar16; case '\x06': while ( true ) {
if (0xff < in_BX - unaff_DI >> 3) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
FUN_294b_0002(); uVar9 = FUN_3143_0d9e();
uVar15 = 0xc878; (iVar16 * 4 + 0x5e5a) = uVar9; (iVar16 * 4 + 0x5e5c) = (uVar9 >> 0x10); FUN_3444_1f26(); if ((0x1f < iVar13 + 1) || (((iVar13 + 1) * 2 + - 0x66d4) == - 0x8000)) break; FUN_2b26_06d4(); iVar16 = FUN_2874_02bf(); if (0xff < iVar16 - unaff_DI >> 3) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
FUN_3444_1f26(); iVar13 = FUN_2b26_06d4();
iVar16 = 0x2b26; in_BX = FUN_2874_02bf();
}
FUN_2b26_06d4(); iVar16 = FUN_2874_02bf();
if (0xff < iVar16 - unaff_DI >> 3) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
FUN_294b_0002(); FUN_3444_1f26(); if ((0x9974 != - 0x65b8) || (unaff_DS != 0x9976)) {
uVar9 = FUN_3143_0ee2(); 0x9974 = uVar9;
0x9976 = (uVar9 >> 0x10);
}
FUN_3143_0c84(); iVar16 = FUN_294b_0096();
return iVar16; case '\a': out((uVar9 >> 0x10), in_BX); loop {
lVar10 = 0; _local_10 = CONCAT22(local_12,(in_stack_0000fff4 - local_10) + in_stack_0000ffe8 + - 8); FUN_2c63_02af(uVar8, in_stack_0000ffe8); unaff_DI = unaff_DI + - 2; while (unaff_DI < 0) {
while ( true ) {
iVar16 = in_stack_0000fff8 + 1;
// LAB_20d3_08fc: if (0xe < iVar16) {
* (undefined * )0x6b4 = 0; ppcVar3 = (code * * )0xcf70; iVar16 = ( * * ppcVar3)(); return iVar16;
}
in_stack_0000fff8 = & local_10; uVar7 = unaff_SS + 0x1005; uVar14 = 0x1646; FUN_2b26_0e3b(); if (0x7faa != 0x140) break; FUN_2c63_0002(); in_stack_0000fff8 = 0x0; uVar15 = 100; iVar16 = 0x460; _local_10 = CONCAT22(((uVar14 >> 0xf) - (uVar7 >> 0xf)) - (uVar14 < uVar7), uVar14 - uVar7); uVar9 = FUN_3444_23fe();
iVar13 = 0x16b3; FUN_3444_2364(0x3444, uVar9); FUN_2c63_02af(0x3444, uVar15, uVar15, (iVar16 - local_10) + iVar13,
(uVar9 >> 0x10), 0, 0);
}
lVar10 = uVar7 << 0x10; _local_10 = CONCAT22(uVar14, local_10); FUN_2c63_0002();
unaff_DI = 8;
}
in_stack_0000fff8 = 0x64; in_stack_0000fff4 = (((_local_10 >> 0x10) - (lVar10 >> 0x10)) + 8); _local_10 = (long)((unaff_DI / 2) * 2 + 0x460); uVar9 = FUN_3444_23fe(); local_12 = (undefined2)(uVar9 >> 0x10); uVar8 = 0x3444; in_stack_0000ffe8 = 0x177e; FUN_3444_2364(0x3444, uVar9);
} while ( true ); case '\b': while ( true ) {
FUN_3444_2364(); _local_10 = CONCAT22(0x71df,local_48); FUN_27ac_0508(0x3444); iVar16 = 0x5de4; local_48 = local_48 + iVar16; local_42 = local_42 + 1; if (4 < local_42) break; FUN_3444_23fe();
}
if (0x7faa != 0x140) {
ppcVar3 = (code * * )0xcf70; iVar16 = ( * * ppcVar3)();
}
* (undefined * )0x7046 = 0; if (0x7faa == 0x140) {
ppcVar3 = (code * * )0xcf70; iVar16 = ( * * ppcVar3)();
}
return iVar16;
}
FUN_3444_1f26(); FUN_3444_1f26();
// LAB_2fad_04c8:
puVar5 = * (undefined2 * * )(in_stack_00000000 + -0xe); uVar15 = (in_stack_00000000 + - 4); * puVar5 = unaff_BP; (puVar5 + 2) = uVar15; iVar16 = FUN_3143_1850(); return iVar16;
}


// WARNING: Control flow encountered bad instruction data
// WARNING: Instruction at (ram,0x00028d5f) overlaps instruction at (ram,0x00028d5e)
//
// WARNING: Could not reconcile some variable overlaps

code * 
FUN_20d3_0ab0(param_1_00: u16,ulong param_1,uint *param_3_00,param_3: i16,uint * * param_4,
int *param_6)

{
let pcVar1: String; let pbVar2: * mut u8; let piVar3: * mut u16; let puVar4: * mut u16; char cVar5; let bVar6: u8; let uVar7: u16; code * * ppcVar8; undefined4 * puVar9; let puVar10: * mut u16; undefined uVar11; undefined uVar12; char cVar13; char cVar14; char cVar15;
let bVar16: u8; undefined uVar17; let bVar18: u8; let uVar19: u16; let iVar20: i16; code * pcVar21; undefined uVar22;
let extraout_DX: u16; let extraout_DX_00: u16;
let uVar23: u16; let extraout_DX_01: * mut u16; let iVar24: i16; let uVar25: u16; let in_BX: i16; let unaff_SI: i16; let iVar26: i16; let unaff_DI: * mut u16; let puVar27: * mut u16; let puVar28: * mut u16; let unaff_SS: u16; let unaff_DS: u16; undefined uVar29; let lVar30: i32; let uVar31: u32; undefined auStackY210 [94]; code * pcStackY116; let iStackY104: i16; uint auStackY102 [8]; let iStackY86: i16; let iStackY84: i16; let iStackY82: i16; let iStackY80: i16; let uStackY76: u16; let iStackY48: i16; let uStackY46: u16; let uStackY44: u16; undefined auStackY42 [2]; let piStackY40: * mut u16; undefined uStackY38; undefined uStackY37; let uStackY36: u16; undefined local_22; undefined uStackY33; let local_20: u16; let local_1e: u32; let local_1a: * mut u16; let in_stack_0000ffe8: * mut u16; let puStackY22: *mut u16; let uVar32: u16; let in_stack_0000ffec: i16; let local_12: * mut u16;
let in_stack_0000fff0: i16; undefined local_e; undefined uStackY13; char local_c; let bStackY11: u8; char local_a; let bStackY9: u8; char local_8;
let bStackY7: u8; let uVar33: u16;

puVar27 = 0x3444; pcVar21 = FUN_3444_02c6(0x39d9); bVar18 = bStackY11; cVar5 = local_c; uVar32 = 0xc74e; if (( * 0x9f1 & 1) != 0) {
uVar33 = 0; local_8 = '\0'; cVar13 = local_8; bStackY7 = 0; uVar29 = bStackY7;
bVar6 = * 0x9c65; local_8 = unaff_SS; cVar14 = local_8; bStackY7 = (unaff_SS >> 8); bVar16 = bStackY7; if (bVar6 < 9) {
puVar28 = 0x2000; uVar22 = SUB41(param_6,0); local_c = param_1; uVar11 = local_c; bStackY11 = (param_1 >> 8);
uVar12 = bStackY11; local_8 = (param_4 >> 0x10); cVar15 = local_8; bStackY7 = (param_4 >> 0x18); uVar17 = bStackY7;
puVar27 = unaff_DI; switch(bVar6) {
case 0: loop {
bStackY11 = bVar18; local_c = cVar5; local_8 = puVar28; bStackY7 = (puVar28 >> 8); local_a = 0x86; bStackY9 = 0x3f; FUN_2c63_0002(); param_1 = param_1 & 0xffff0000; local_8 = 'c'; bStackY7 = 0x2c; local_a = 0xa5; bStackY9 = 0x3f; FUN_2c63_0002(); iVar26 = in_stack_0000fff0; loop {
if (CONCAT11(bStackY9, local_a) < 1) {
pcVar21 = (unaff_SI * 4 + 6);
iVar24 = CONCAT11(bStackY9, local_a); local_a = (pcVar21 + iVar24); bStackY9 = ((pcVar21 + iVar24) >> 8);
}
else {
pcVar21 = ((unaff_SI - unaff_DI) * 4 + 10); iVar24 = CONCAT11(bStackY9,local_a); local_a = (pcVar21 + iVar24); bStackY9 = ((pcVar21 + iVar24) >> 8); unaff_DI = (unaff_DI + -1);
}
unaff_SI = unaff_SI + 1; if (unaff_DI < unaff_SI) {
return pcVar21;
}
local_1a = unaff_DI; FUN_3444_23fe(); uVar33 = FUN_3444_24dc(); param_1._2_2_ = (param_1 >> 0x10); if (uVar33 != puStackY22) {
uVar33 = 0x3444; FUN_3444_24dc(); puStackY22 = uVar33; iVar26 = - (puStackY22 - param_1._2_2_); local_8 = (iVar26 + 1); bStackY7 = ((iVar26 + 1) >> 8); iVar24 = param_4 + (unaff_DI >> 0xf) + 1; local_a = iVar24; bStackY9 = (iVar24 >> 8);
local_c = iVar26; bStackY11 = (iVar26 >> 8); local_1e = CONCAT22(iVar24, (unaff_DI >> 0xf) - param_4); local_12 = 0x3ef8; FUN_2c63_0002(); param_1._2_2_ = param_4._2_2_ + param_1._2_2_; local_8 = (param_1._2_2_ + 1); bStackY7 = ((param_1._2_2_ + 1) >> 8); local_a = (local_1e >> 0x10); bStackY9 = (local_1e >> 0x18); local_c = param_1._2_2_; bStackY11 = (param_1._2_2_ >> 8); iVar26 = 0x2c63; local_12 = 0x3f17; FUN_2c63_0002();
}
iVar24 = FUN_3444_24dc();
} while (iVar24 == in_stack_0000ffec); in_stack_0000ffec = 0x3444; FUN_3444_23fe(); puVar28 = 0x3444; in_stack_0000fff0 = FUN_3444_24dc(); iVar26 = (in_stack_0000fff0 + iVar26) / 2; local_20 = iVar26 + param_4._2_2_ + 1; iVar26 = param_4._2_2_ - iVar26; local_22 = iVar26;
uStackY33 = (iVar26 >> 8); cVar5 = local_c; bVar18 = bStackY11;
} while ( true ); case 1: pcVar21 = in (0x5d); return pcVar21; case 2: local_8 = '\0'; bStackY7 = 0x20; local_a = 0x8d; bStackY9 = 0x14; ppcVar8 = (code * * )0xcf6c; local_c = cVar5;
bStackY11 = bVar18; ( * * ppcVar8)(); for (iVar26 = 0; iVar26 < 7; iVar26 = iVar26 + 1) {
local_a = & stack0xffe8; bStackY9 = ( & stack0xffe8 >> 8); local_c = (iVar26 + 0xf05); bStackY11 = ((iVar26 + 0xf05) >> 8); local_8 = cVar14;
bStackY7 = bVar16; FUN_2b26_0e3b(); local_a = local_8; bStackY9 = bStackY7; local_c = local_12;
bStackY11 = (local_12 >> 8); puStackY22 = 0x14c3; local_12 = in_stack_0000ffe8; FUN_2c63_0002(); iVar24 = 8; puVar27 = 0x2c63; loop {
if (0x7faa == 0x140) {
local_1a = (iVar24 / 2); local_8 = '\0'; bStackY7 = 0; local_a = 2;
bStackY9 = 0; uVar32 = ((iVar26 * 5 + local_1a) * 4 + 0x516);
local_c = uVar32; bStackY11 = (uVar32 >> 8); puVar28 = 0x3444; local_12 = 0x150c; iVar20 = FUN_3444_2364(); puVar27 = (local_1a + in_stack_0000ffe8); iVar20 = iVar20 + puVar27; local_c = iVar20; bStackY11 = (iVar20 >> 8); if (puVar27 < iVar20) {
local_8 = (local_1a & 1) + 1;
bStackY11 = 0; puVar28 = 0x2c63; puStackY22 = 0x1542; local_12 = puVar27; local_c = local_8;
local_a = local_8; bStackY9 = bStackY11; bStackY7 = bStackY11; FUN_2c63_0002();
}
}
else {
puStackY22 = (local_12 + iVar24 + - 8); local_a = local_8; bStackY9 = bStackY7; local_c = '\0'; bStackY11 = 0; puVar28 = 0x2c63; local_1a = 0x15a4; local_12 = (in_stack_0000ffe8 +
((iVar26 * 5 + iVar24 / 2) * 4 + 0x514) + iVar24); FUN_2c63_02af(); in_stack_0000ffe8 = puVar27;
}
iVar24 = iVar24 + - 2; puVar27 = puVar28;
} while ( - 1 < iVar24);
}
* (undefined * )0x6b4 = 0; local_8 = puVar28; bStackY7 = (puVar28 >> 8); local_a = 0xca; bStackY9 = 0x15;
ppcVar8 = (code * * )0xcf70; pcVar21 = ( * * ppcVar8)(); return pcVar21; case 3: local_8 = in_BX; cVar5 = local_8; bStackY7 = (in_BX >> 8); uVar29 = bStackY7; local_a = (in_BX + param_1._2_2_); bStackY9 = ((in_BX + param_1._2_2_) >> 8); ppcVar8 = (code * * )0xcf7c;
( * * ppcVar8)(); local_a = param_3; bStackY9 = (param_3 >> 8); ppcVar8 = (code * * )0xcf7c;
local_c = uVar11; bStackY11 = uVar12; local_8 = cVar5; bStackY7 = uVar29; pcVar21 = ( ** ppcVar8)(); return pcVar21; case 5: local_8 = '\x05'; bStackY7 = 0x7f;
pcVar21 = FUN_27ac_053d(); return pcVar21; case 6: local_8 = unaff_SI; bStackY7 = (unaff_SI >> 8); iVar26 = 0x5dd4 + 1; local_a = iVar26; bStackY9 = (iVar26 >> 8); local_c = 0; bStackY11 = 0x20; ppcVar8 = (code * * )0xcf74; ( * * ppcVar8)(); iVar26 = 0x5de4; uVar32 = 0x5ddc; local_8 = uVar32; bStackY7 = (uVar32 >> 8);
local_a = 0; bStackY9 = 0x20; local_c = 0x3e; bStackY11 = 0x26; FUN_2692_0ecc();
iVar24 = 0x5de4; uVar32 = 0x5ddc; local_8 = uVar32; bStackY7 = (uVar32 >> 8); local_a = 0x92; bStackY9 = 0x26; local_c = 0x62; bStackY11 = 0x26; FUN_2692_0ecc(); iVar24 = unaff_SI + iVar26 / 2 + iVar24 + 0x5de4; local_8 = iVar24; bStackY7 = (iVar24 >> 8); iVar26 = 0x5dd4 + 1; local_a = iVar26; bStackY9 = (iVar26 >> 8); local_c = 0x92; bStackY11 = 0x26; ppcVar8 = (code * * )0xcf74; ( * * ppcVar8)();
iVar26 = 0x5de4; iVar24 = iVar24 + iVar26 * 3 + iVar26 / 2 + 1; local_8 = iVar24; bStackY7 = (iVar24 >> 8); iVar26 = 0x5dd4 + 1; local_a = iVar26; bStackY9 = (iVar26 >> 8);
local_c = 0x92; bStackY11 = 0x26; ppcVar8 = (code * * )0xcf74; ( * *ppcVar8)(); ppcVar8 = (code ** )0xcf70; ( * * ppcVar8)(); * (undefined * )0x7046 = 1; FUN_2239_0531(); FUN_2239_126d(); pcVar21 = * (code * * )0xabe; *(code * * )0xccca = pcVar21; return pcVar21; case 7: local_c = cVar5; bStackY11 = bVar18; local_8 = cVar13; bStackY7 = uVar29; FUN_294b_02f2(); uVar25 = 1; iVar26 = 0x294b; iVar24 = 0x7a8; FUN_2b26_0e3b(); uVar32 = 0xc6c2; uVar23 = extraout_DX; if (0x1f19 < iVar24) {
FUN_1862_2340(); uVar23 = extraout_DX_00;
}
cVar5 = 0x9c65; if (8 < cVar5) {
FUN_294b_077b(); local_8 = 'K'; bStackY7 = 0x29; local_a = 0xe; bStackY9 = 8;
FUN_3444_1e00(); for (; - 1 < iVar26; iVar26 = iVar26 + - 1) {
pbVar2 = (iVar26 + 0x5f18); * pbVar2 = * pbVar2 | 0x80;
}
FUN_1862_0aa7(); local_8 = 'b'; bStackY7 = 0x18; local_a = 0x40; bStackY9 = 8;
FUN_3444_1e00(); pcVar21 = FUN_294b_0c76();
return pcVar21;
}
iVar26 = cVar5 * 2; switch(cVar5) {
case '\0': (unaff_SI + 6) = uVar25; * param_6 = (iVar26 + 4) + 1; (param_6 + 4) = (param_1)[2]; uVar32 = (iVar26 + 4); if ((param_4._2_2_ | param_4) != 0) {
* param_4 = local_12; (param_4 + 2) = in_stack_0000fff0; (param_4 + 4) = uVar32; (param_4 + 6) = CONCAT11(bStackY11, local_c); (param_4 + 10) = 0x8000;
}
(param_6 + 10) = 0x8000; return (param_6 + 8); case '\x01': local_8 = '\0'; bStackY7 = 0x20; local_a = 0x2b;
bStackY9 = 0x7e; ppcVar8 = (code * *)0xcf74; ( * * ppcVar8)(); local_8 = param_3_00; bStackY7 = (param_3_00 >> 8); local_a = (param_1 >> 0x10); bStackY9 = (param_1 >> 0x18); local_c = uVar11; bStackY11 = uVar12;
pcVar21 = FUN_27ac_053d(); return pcVar21; case '\x03': out(0x67, uVar25); if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar23, CONCAT11((uVar25 >> 8), 8));
}
uVar31 = FUN_2fad_0189(); uVar32 = (undefined2)(uVar31 >> 0x10); pcVar21 = uVar31; if ((0x9c65 != '\x06') && (0x9c65 != '\x02')) {
out(uVar32, 0xff08); pcVar21 = 0x5; out(uVar32, 5);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
pcVar21 = FUN_2692_01e8();
}
}
else {
if (0x853e != '\0') {
pcVar21 = FUN_2692_0562();
}
}
}
pcVar1 = (char * )0x7fcc; * pcVar1 = * pcVar1 + - 1; return pcVar21;
case '\x04': FUN_3444_1f26(); FUN_3444_1f26(); piVar3 = * (int * * )(param_3_00 + - 7); uVar33 = param_3_00[- 2]; * piVar3 = param_1._2_2_; (piVar3 + 2) = uVar33; pcVar21 = FUN_3143_1850(); return pcVar21; case '\x05': uVar31 = FUN_2692_05ab(); uVar32 = 0xc6d8; 0xfff1 = uVar31; 0xfff3 = (uVar31 >> 0x10); lVar30 = FUN_2692_05ab();
uVar32 = 0xc6c6; 0x5d80 = (lVar30 + 0x111); 0x5d82 = ((lVar30 + 0x111) >> 0x10); puStackY22 = 0xbf7; local_8 = - 0x6e; bStackY7 = 0x26; local_a = 0xbf; bStackY9 = 8; pcVar21 = FUN_3444_17d0(); if (pcVar21 != 0x0) {
local_8 = 'D'; bStackY7 = 0x34; local_a = 0xde; bStackY9 = 8; pcVar21 = FUN_3444_17a6(); * (undefined * )0xc46 = 0; if (( * 0x804 & 1) != 0) {
FUN_294b_0b7c(); local_1a = 0x15b7; local_8 = 'K'; bStackY7 = 0x29; local_a = 0x1b;
bStackY9 = 9; FUN_200c_000c(); FUN_294b_02f2(); FUN_2b26_0e3b(); FUN_294b_077b();
local_1e = CONCAT22(0xc6dc, 0xff30); local_8 = 'n'; bStackY7 = 9; FUN_3444_1f84(); if (0xd21 == '\0') {
for (iVar26 = 0; * local_1e != iVar26 & & iVar26 < = * local_1e; iVar26 = iVar26 + 1) {
FUN_154b_06f7();
}
}
else {
for (iVar26 = 0; * local_1e != iVar26 & & iVar26 < = * local_1e; iVar26 = iVar26 + 1) {
FUN_154b_07f7();
}
}
FUN_294b_03be(); local_8 = - 0x3f; bStackY7 = 9; iVar26 = FUN_200c_00a0(); 0x1118 = iVar26; if (iVar26 != 0) {
iVar26 = 0x9de; FUN_2b26_0e3b(); local_20 = 0xc6cc; local_22 = 0xf5; uStackY33 = 0xff;
0xfff5 = CONCAT11(bStackY9, local_a) - local_12; uStackY36 = 0xc6c8; uStackY38 = 0xf7; uStackY37 = 0xff; 0xfff7 = (iVar26 - local_12) + - 1; if (0x7faa == 0x140) {
iVar26 = 8;
}
else {
iVar26 = 0x10;
}
CONCAT22(local_20, 0xfff5) = CONCAT22(local_20, 0xfff5) / iVar26; CONCAT22(uStackY36,0xfff7) = CONCAT22(uStackY36, 0xfff7) / iVar26; FUN_294b_02f2(); FUN_200c_0153();
}
pcVar21 = FUN_294b_0c76();
}
}
return pcVar21; case '\x06': 0x8faa = uVar25;
0x8fa8 = (iVar26 + 2); uVar31 = * ff * ff0x98d2; 0x8fa4 = uVar31; 0x8fa6 = (uVar31 >> 0x10); puVar9 = (undefined4 *) * ff0x98b8; if ((puVar9 >> 0x10) != 0) {
puVar10 = * puVar9; uVar32 = (undefined2)(puVar10 >> 0x10); 0x8fa0 = puVar10; 0x8fa2 = uVar32; 0x8faa = * puVar10;
0x8fa8 = (puVar10 + 2); uVar31 = * ff * ff0x98b4; 0x8fa4 = uVar31; 0x8fa6 = (uVar31 >> 0x10);
}
uVar32 = 0x7e2c; 0x7e2c = 1; uVar33 = 0xcf62; uVar23 = 0x8fac; local_8 = uVar23;
bStackY7 = (uVar23 >> 8); iVar26 = 0xcf64; 0x854c = uVar33 & 0xfff8; 0x854e = iVar26; iVar24 = iVar26 + 0x8fa8; iVar20 = (uVar33 & 0xfff8) + 0x8faa + 7; 0x8552 = iVar20; 0x8550 = iVar24; local_a = iVar24; bStackY9 = (iVar24 >> 8); local_c = iVar20; bStackY11 = (iVar20 >> 8); local_12 = 0x2000; ppcVar8 = (code * * )0xcf88; ( ** ppcVar8)(); local_8 = '\x0f';
bStackY7 = 0xff; local_a = 0; bStackY9 = 0x20; local_c = 0xa4; bStackY11 = 0x77;
ppcVar8 = (code * * )0xcf68; (* * ppcVar8)(); ppcVar8 = (code * * )0xcfa4; ( * * ppcVar8)(); 0x7e2c = 0; local_8 = iVar26; cVar5 = local_8; bStackY7 = (iVar26 >> 8); uVar12 = bStackY7; local_a = uVar33; uVar29 = local_a; bStackY9 = (uVar33 >> 8); uVar11 = bStackY9;
local_c = 0; bStackY11 = 0x20; FUN_2692_0042(); ppcVar8 = (code * * )0xcfa0; ( * * ppcVar8)(); local_c = 0x92; bStackY11 = 0x26; local_a = uVar29; bStackY9 = uVar11; local_8 = cVar5; bStackY7 = uVar12; FUN_2692_001f(); 0x7e2c = uVar32; return 0x0; case '\a': switchD_2000_07ca_caseD_7: uVar32 = 0xc88a; pcVar21 = * (code * *)(CONCAT11(bStackY9, local_a) + 0x811); uVar33 = (CONCAT11(bStackY9, local_a) + 0x813); local_c = uVar33; bStackY11 = (uVar33 >> 8); if ((uVar33 | pcVar21) != 0) {
pcVar21 = ( * pcVar21)();
}
return pcVar21; case '\b': ( * pcStackY116)(); FUN_24bf_0d15(); FUN_24bf_0d43(); pcVar21 = FUN_294b_03be(); return pcVar21;
}
if (( * (iVar26 + 0x804) & 1) == 0) {
uVar32 = 0xc88c; pcVar21 = * (code ** )0xa43a; local_8 = pcVar21; bStackY7 = (pcVar21 >> 8); if ((0xa43c | pcVar21) != 0) {
( * pcVar21)();
}
unaff_DI = * (uint * * )0x9820;
iVar26 = - 0x4769; FUN_27ac_0287(); FUN_2d56_032c(); if (0x992c != - 0x8000) {
iVar26 = - 0x4751; FUN_2b26_0402();
}
uVar32 = 0xc88a; pbVar2 = (iVar26 + 0x804); * pbVar2 = * pbVar2 | 1;
(iVar26 + 0x80d) = param_1._2_2_;
* (uint * * )(iVar26 + 0x80f) = param_3_00; FUN_2b26_00d1(); FUN_294b_0219(); uVar32 = 0xc892; pcVar21 = * (code * * )0xa436; uVar33 = 0xa438;
local_c = uVar33; bStackY11 = (uVar33 >> 8); if ((uVar33 | pcVar21) != 0) {
( * pcVar21)();
}
FUN_294b_02f2(); FUN_2b26_048e(); puVar27 = 0x294b; FUN_294b_03be(); local_a = uVar11;
bStackY9 = uVar12; switchD_2000_12ad_caseD_4: local_c = puVar27;
uVar29 = local_c; bStackY11 = (puVar27 >> 8); uVar11 = bStackY11; FUN_2b26_0363(); local_c = 0x1f; bStackY11 = 0xb9; local_a = uVar29; bStackY9 = uVar11; FUN_2d56_03f0(); local_a = unaff_DI; bStackY9 = (unaff_DI >> 8); local_c = 0x56; bStackY11 = 0x2d; pcVar21 = FUN_27ac_0287();
}
else {
pcVar21 = FUN_2b26_09bf();
}
return pcVar21; case 8: local_8 = '0';
bStackY7 = 2; pcVar21 = FUN_200c_00a0();
if (pcVar21 != 0x0) {
iVar26 = 0x2000; local_8 = 'm'; bStackY7 = 2; FUN_3444_172e(); auStackY210[(iVar26 - CONCAT11(bStackY9, local_a)) / 0x7fd6] = 0; FUN_168b_06a4(); local_8 = - 0x5c; bStackY7 = 2; pcVar21 = FUN_2692_0ecc();
}
return pcVar21;
}
switchD_2000_1810_caseD_4: puStackY22 = (in_BX + 2);
iVar26 = unaff_SI; uVar19 = uVar33; loop {
local_12 = (uVar33 + in_stack_0000ffe8); if (uVar19 < 10) {
if (uVar19 < 1) {
if (0x7faa == 0x140) {
uVar32 = 0xc750; uVar23 = 0x6bb; local_8 = uVar23; bStackY7 = (uVar23 >> 8); uVar32 = 0x6b9; local_a = uVar32; bStackY9 = (uVar32 >> 8);
}
else {
uVar32 = 0xc750; uVar23 = 0x6bb; local_8 = uVar23; bStackY7 = (uVar23 >> 8); uVar32 = 0x6b9; local_a = uVar32; bStackY9 = (uVar32 >> 8);
}
local_c = 0; bStackY11 = 0; local_12 = * (uint * * )(iVar26 * 4 + 0x5c8); puStackY22 = 0x10e3; puStackY22 = FUN_3444_23fe(); in_stack_0000ffe8 = 0x3444; local_1a = 0x10ea; iVar24 = FUN_3444_2364(); local_12 = (iVar24 + in_stack_0000ffe8); if (( *0x9c65 & 1) != 0) {
local_8 = '\0'; bStackY7 = 0; goto LAB_20d3_02b0;
}
}
else {
if (0x7faa == 0x140) {
uVar32 = 0xc750; uVar23 = 0x6bb; local_8 = uVar23; bStackY7 = (uVar23 >> 8); uVar32 = 0x6b9; local_a = uVar32; bStackY9 = (uVar32 >> 8);
}
else {
uVar32 = 0xc750; uVar23 = 0x6bb; local_8 = uVar23; bStackY7 = (uVar23 >> 8); uVar32 = 0x6b9; local_a = uVar32; bStackY9 = (uVar32 >> 8);
}
local_c = 0; bStackY11 = 0; local_12 = * (uint * * )(iVar26 * 4 + 0x5c8); puStackY22 = 0xfc2; puStackY22 = FUN_3444_23fe(); in_stack_0000ffe8 = 0x3444; local_1a = 0xfc9; iVar24 = FUN_3444_2364(); local_12 = (iVar24 + in_stack_0000ffe8); if (( *0x9c65 & 1) == 0) {
local_8 = '\t'; goto LAB_20d3_02ac;
}
}
local_8 = '\x02';
// LAB_20d3_02ac:
bStackY7 = 0;
}
else {
if (( * 0x9c65 & 1) == 0) {
local_8 = '\x04'; goto LAB_20d3_02ac;
}
local_8 = puVar27; bStackY7 = (puVar27 >> 8);
}
// LAB_20d3_02b0:
local_c = 0; bStackY11 = 0; local_1a = 0xff3; uVar33 = puStackY22; puStackY22 = in_stack_0000ffe8;
local_a = local_8; bStackY9 = bStackY7; FUN_2c63_02af(); uVar32 = 0xc75c; puVar28 = (iVar26 * 4); uVar23 = 0xc75a; if ((puVar28[0x2e4] != (puVar28 + 0x1cdf)) || (puVar28[0x2e5] != (puVar28 + 0x1ce1))) {
local_8 = '\0'; bStackY7 = 0; local_a = 0; bStackY9 = 0; iVar24 = puStackY22 + (local_12 - puStackY22) / 2 + 1;
local_c = iVar24; bStackY11 = (iVar24 >> 8); local_12 = (uVar33 + 2); iVar24 = 0x2c63; puStackY22 = 0x104a; FUN_2c63_0002(); uVar32 = 0xc75c; uVar33 = (puVar28 + 0x1cdf); uVar19 = (puVar28 + 0x1ce1); uVar32 = 0xc75a; puVar4 = puVar28 + 0x2e5; uVar7 = * puVar4; if ((uVar19 < = uVar7) & & ((* puVar4 != uVar19 & & uVar19 < = uVar7 || (puVar4 = puVar28 + 0x2e4, uVar33 < = * puVar4 & & * puVar4 != uVar33)))) {
if (0x7faa == 0x140) {
local_c = local_12; bStackY11 = (local_12 >> 8);
}
else {
local_c = (local_12 + - 1); bStackY11 = ((local_12 + - 1) >> 8);
}
bStackY7 = 0; local_8 = '\0'; bStackY9 = 0; local_a = 0; local_12 = (iVar24 + 4); puStackY22 = 0x1124; FUN_2c63_0002();
}
uVar32 = 0xc75a; iVar24 = iVar26 * 4;
uVar23 = (iVar24 + 0x5ca); uVar25 = 0xc75c; (iVar24 + 0x1cdf) = (iVar24 + 0x5c8); (iVar24 + 0x1ce1) = uVar23; unaff_DI = puVar28;
}
unaff_SI = iVar26 + 1; if (5 < unaff_SI) {
local_a = & stack0xfff0; bStackY9 = ( & stack0xfff0 >> 8); local_c = 0xb; bStackY11 = 0xe; local_8 = cVar14; bStackY7 = bVar16; FUN_2b26_0e3b(); local_12 = puVar27; local_8 = local_12; bStackY7 = (local_12 >> 8); puStackY22 = 0x1205; local_c = local_8;
bStackY11 = bStackY7; local_a = local_8; bStackY9 = bStackY7; puVar28 = local_12; FUN_2c63_0002();
uVar32 = 0xc750; local_8 = 'c'; bStackY7 = 0x2c; local_a = 0x15; bStackY9 = 0x12;
FUN_3444_40e7(); local_a = 0x44; bStackY9 = 0x34; local_c = 0x1d; bStackY11 = 0x12;
FUN_3444_41ff(); local_a = 0x44; bStackY9 = 0x34; local_c = 0x26; bStackY11 = 0x12;
FUN_3444_4472(); local_a = 0x44; bStackY9 = 0x34; local_c = 0x2e; bStackY11 = 0x12;
FUN_3444_407a(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_4472(); local_c = 0x44;
bStackY11 = 0x34; FUN_3444_44e3(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_4472();
puStackY22 = 0x124f; FUN_3444_4217(); puStackY22 = 0x6ae7; local_1a = & uStackY44; local_1e = 0x3444125e; FUN_3444_1aca(); while ( true ) {
local_12 = 0x127f; local_c = cVar14; bStackY11 = bVar16; uVar31 = FUN_3444_178e(); uVar19 = (uVar31 >> 0x10); uVar33 = CONCAT11(bStackY11, local_c); if (uVar31 < 6) break; local_12 = 0x126d; local_c = cVar14; bStackY11 = bVar16; unaff_DI = FUN_3444_178e(); * (undefined * )(register0x00000010 + - 0x2d + unaff_DI) = 0;
}
cVar5 = 0x9c65; if (8 < cVar5) {
local_12 = (auStackY42 + 1); puStackY22 = 0x12d8; local_c = cVar14; bStackY11 = bVar16;
FUN_2c63_01c1(); bStackY11 = 0; local_c = 0; local_12 = * (uint * * )0x6b9; puStackY22 = 0x1331; FUN_3444_2364();
if (( * 0x9c65 & 1) == 0) {
uVar32 = 0xe; local_20 = 0xf;
}
else {
local_20 = 3; uVar32 = 3;
}
local_1a = 0x0; local_1e = CONCAT22(local_12,uVar32); local_22 = 0; uStackY33 = 0; uStackY36 = 0x3444; uStackY38 = 0x61; uStackY37 = 0x13; puStackY22 = local_20; FUN_2c63_02af(); uVar32 = 0xc776; uVar23 = 0xc750; if ((0x6b9 != 0x1cf7) || (0x6bb != 0x1cf9)) {
puStackY22 = 0x0; local_1a = 0x7; local_1e = CONCAT22(local_12 / 2, 2); local_20 = 0x2c63; local_22 = 0xaf; uStackY33 = 0x13; FUN_2c63_0002(); uVar32 = 0xc776; uVar33 = 0x1cf7; iVar26 = 0x1cf9; uVar32 = 0xc750; piVar3 = 0x6bb; iVar24 = * piVar3;
if ((iVar26 < = iVar24) & &
(( * piVar3 != iVar26 & & iVar26 <= iVar24 || (puVar4 = 0x6b9, uVar33 < = * puVar4 & & * puVar4 != uVar33)))) {
if (0x7faa == 0x140) {
uVar32 = 0;
}
else {
uVar32 = 2;
}
local_1a = 0x5; puStackY22 = 0x0; local_1e = CONCAT22(uVar32, 4); local_20 = 0x2c63; local_22 = 0x11; uStackY33 = 0x14; FUN_2c63_0002();
}
uVar32 = 0xc750; uVar23 = 0x6bb; uVar25 = 0xc776; 0x1cf7 = 0x6b9; 0x1cf9 = uVar23;
}
puStackY22 = 0x1432; ppcVar8 = (code * *)0xcf70; pcVar21 = ( * * ppcVar8)(); return pcVar21;
}
iVar24 = cVar5 * 2; puVar27 = 0x2000;
uStackY13 = (param_6 >> 8); uVar29 = uStackY13; switch(cVar5) {
case '\0': out(0x8b, local_c);
iVar26 = 0x4446; uVar33 = bStackY11 << 8;
// LAB_2874_062f:
((register0x00000010 + - 0x1a) + unaff_DI) = uVar33; local_12 = puVar27; iVar24 = FUN_2874_0004(); * piStackY40 = iVar24;
// LAB_2874_0648:
uVar11 = bStackY9; uVar29 = local_a; local_a = puVar27; bStackY9 = (puVar27 >> 8);
if (( * piStackY40 & 0x20) == 0) {
if (( * piStackY40 & 0x10) == 0) goto LAB_2874_06e3; iStackY48 = (CONCAT11(bStackY11, local_c) + 4); iVar20 = iVar26 * 4; iVar24 = iStackY48 - ( & local_1e + iVar20 + 2); uStackY38 = iVar24; uStackY37 = (iVar24 >> 8); local_c = 0xfb; bStackY11 = 0x8d; FUN_3444_4101(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_43cb(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); puVar27 = FUN_3444_42c7(); ( & local_1a)[iVar26 * 2] = puVar27; iVar24 = iStackY48;
}
else {
uStackY46 = CONCAT13(uVar11, CONCAT12(uVar29,CONCAT11(bStackY11, local_c))); iVar20 = iVar26 * 4; iVar24 = uStackY46 - (& local_1e + iVar20 + 2); uStackY38 = iVar24; uStackY37 = (iVar24 >> 8); local_c = 0xaf; bStackY11 = 0x8d; FUN_3444_4101(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_43cb(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); puVar27 = FUN_3444_42c7(); ( & local_1a)[iVar26 * 2] = puVar27; iVar24 = uStackY46;
}
// LAB_2874_06e0:
puVar27 = 0x3444; ( & local_1e + iVar20 + 2) = iVar24;
// LAB_2874_06e3:
loop {
iVar26 = iVar26 + 1; while (uVar29 = iVar26 == 2, 1 < iVar26) {
local_c = puStackY22; bStackY11 = (puStackY22 >> 8); local_12 = local_1e._2_2_; puStackY22 = 0x8e3f; ppcVar8 = (code * * )0xcfb0; local_a = uVar22; bStackY9 = uStackY13;
( * * ppcVar8)(); iVar26 = CONCAT11(bStackY11, local_c); loop {
iVar24 = iVar26 + 8; if ((iVar26 + 10) == - 0x8000) {
return CONCAT11(bStackY9, local_a);
}
local_c = iVar24; uVar29 = local_c; bStackY11 = (iVar24 >> 8); uVar11 = bStackY11; local_12 = puVar27; FUN_2874_0004(); local_12 = puVar27; uVar33 = param_4; local_c = uVar29; bStackY11 = uVar11; uVar19 = FUN_2874_0004(); iVar26 = iVar24;
} while ((uVar33 & uVar19) != 0); if ((uVar19 == 0) & & (uVar33 == 0)) {
local_12 = param_3_00; puStackY22 = 0x8e62; ppcVar8 = (code * * )0xcfb0; local_c = cVar15; bStackY11 = uVar17; local_a = uVar22; bStackY9 = uStackY13; pcVar21 = ( * * ppcVar8)(); return pcVar21;
}
iVar26 = 0;
}
local_a = puVar27; bStackY9 = (puVar27 >> 8); local_c = 100; bStackY11 = 0x8c; FUN_3444_402c(); local_c = 'D'; bStackY11 = 0x34; FUN_3444_402c(); puVar27 = 0x3444; FUN_3444_44f7(); if ( ! (bool)uVar29) {
piStackY40 = ( & stack0xfff0 + iVar26 * 2); if (( * piStackY40 & 0x80) == 0) {
if (( * piStackY40 & 0x40) == 0) goto LAB_2874_0648; uStackY44 = (CONCAT11(bStackY11, local_c) + 6); unaff_DI = (iVar26 * 4); iVar24 = uStackY44 - (& local_1a)[iVar26 * 2]; uStackY38 = iVar24; uStackY37 = (iVar24 >> 8); local_a = 0x44; bStackY9 = 0x34; local_c = 0x4a;
bStackY11 = 0x8d; FUN_3444_4101(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_43b3();
local_c = 0x44; bStackY11 = 0x34; FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be();
local_a = 0x44; bStackY9 = 0x34; puVar27 = 0x3444; local_c = 'i'; bStackY11 = 0x8d;
uVar32 = FUN_3444_42c7(); (register0x00000010 + -0x1c + unaff_DI) = uVar32; uVar33 = uStackY44;
}
else {
auStackY42 = (CONCAT11(bStackY11, local_c) + 2); unaff_DI = (iVar26 * 4); iVar24 = auStackY42 - ( & local_1a)[iVar26 * 2]; uStackY38 = iVar24; uStackY37 = (iVar24 >> 8); local_a = 0x44; bStackY9 = 0x34; local_c = 0xfb; bStackY11 = 0x8c;
FUN_3444_4101(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_43b3(); local_c = 0x44;
bStackY11 = 0x34; FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); local_a = 0x44;
bStackY9 = 0x34; puVar27 = 0x3444; local_c = '\x1a'; bStackY11 = 0x8d; uVar32 = FUN_3444_42c7(); (register0x00000010 + - 0x1c + unaff_DI) = uVar32; uVar33 = auStackY42;
}
goto LAB_2874_062f;
}
piStackY40 = ( & stack0xfff0 + iVar26 * 2);
} while ( * piStackY40 == 0); if (( * piStackY40 & 0x80) == 0) {
if (( * piStackY40 & 0x40) == 0) goto LAB_2874_056f; puVar28 = * (uint ** )(CONCAT11(bStackY11, local_c) + 6);
}
else {
puVar28 = * (uint * * )(CONCAT11(bStackY11, local_c) + 2);
}
( & local_1a)[iVar26 * 2] = puVar28; goto LAB_2874_06e3; case '\x01': while ((uVar19 | uVar33) != 0) {
* (undefined * )( & local_20 + unaff_SI) = * (undefined * )CONCAT13(uStackY33, CONCAT12(local_22, uStackY36)); unaff_SI = unaff_SI + 1; uVar33 = (unaff_SI * 4 + - 0x5bc2); uVar19 = (unaff_SI * 4 + - 0x5bc0); local_22 = uVar19; uStackY33 = (uVar19 >> 8); uStackY36 = uVar33;
}
local_c = unaff_SI; bStackY11 = (unaff_SI >> 8); local_12 = param_1; puStackY22 = 0xf464; pcVar21 = FUN_3444_134a(); return pcVar21;
case '\x02': iStackY82 = (uVar33 ^ uVar19) - uVar19; iStackY80 = iStackY82 + unaff_SI; local_c = iStackY80; bStackY11 = (iStackY80 >> 8); local_12 = 0x502d; FUN_168b_07ed();
local_c = iStackY80; bStackY11 = (iStackY80 >> 8); iStackY84 = local_12 + unaff_DI; iVar26 = 0x168b; local_12 = 0x5040; FUN_168b_07ed(); iStackY86 = (iVar26 - iStackY82) + unaff_SI; local_c = iStackY86; bStackY11 = (iStackY86 >> 8); local_12 = 0x5056; FUN_168b_07ed(); local_c = iStackY86; bStackY11 = (iStackY86 >> 8); iVar26 = 0x168b; local_12 = 0x5063; FUN_168b_07ed(); local_c = (iVar26 + unaff_SI); bStackY11 = ((iVar26 + unaff_SI) >> 8); local_12 = 0x5073; FUN_168b_07ed(); local_c = uStackY76;
bStackY11 = (uStackY76 >> 8); local_12 = 0x4e62; FUN_168b_07ed(); uVar32 = (param_1 * 2 + 0x7668); local_c = uVar32; bStackY11 = (uVar32 >> 8);
pcVar21 = FUN_168b_0815(); return pcVar21; case '\x03': local_c = 1; bStackY11 = 0;
local_12 = 0x81; puStackY22 = 0xb7d7; FUN_2c63_031b(); if (( * (iVar26 + 3) & 0x40) != 0) {
local_8 = '\x03'; bStackY7 = 0xb8; FUN_2c63_031b();
}
goto switchD_2000_07ca_caseD_7; case '\x05': while ( true ) {
(iVar24 * 2 + - 0x1393) = (iVar24 * 2 + - 0x2d) << 1; iVar24 = iVar24 + 1; if (4 < iVar24) break; uVar32 = 0xc80c;
}
iVar24 = 0; pcVar21 = 0x4b2d; for (iVar26 = 5; iVar26 < 10; iVar26 = iVar26 + 1) {
iVar24 = iVar24 + (iVar26 * 2 + -0x2d);
}
for (iVar26 = 0; iVar26 < 5; iVar26 = iVar26 + 1) {
if (iVar24 == 0) {
(iVar26 * 2 + - 0x139f) = 0;
}
else {
pcVar21 = (((iVar26 * 2 + -0x23) * 1000) / iVar24); *(code * * )(iVar26 * 2 + - 0x139f) = pcVar21;
}
}
return pcVar21; case '\x06': 0x98ba = uVar19;
local_c = unaff_DS; bStackY11 = (unaff_DS >> 8); local_12 = 0x8698; pcVar21 = FUN_3440_0040(); return pcVar21; case '\a':
// WARNING: Bad instruction - Truncating control flow here
halt_baddata(); case '\b': uVar32 = 0x9c7a;
uVar23 = 0x9c7c; local_e = uVar32; uStackY13 = (uVar32 >> 8); local_c = uVar23; bStackY11 = (uVar23 >> 8); while ((CONCAT11(uStackY13, local_e) + 2) != -0x8000) {
local_c = 0; bStackY11 = 0; local_e = 0; uStackY13 = 0; local_12 = auStackY102;
puStackY22 = 0x0; local_1a = & stack0xffea; local_1e = 0x20008ec9; FUN_2874_0041(); iVar26 = 0; while (iStackY104 = iVar26 * 8, auStackY102[iVar26 * 4 + 1] != 0x8000) {
0x7fe0 = local_12 - auStackY102[iVar26 * 4 + 2]; 0x7fde = auStackY102[iVar26 * 4] - puStackY22; iVar24 = (auStackY102[iVar26 * 4 + 3] - auStackY102[iVar26 * 4 + 1]) + 1; local_c = iVar24; bStackY11 = (iVar24 >> 8); local_12 = ((auStackY102[iVar26 * 4 + 1] - param_3) * CONCAT11(bStackY9, local_a) + param_4); puStackY22 = param_3_00; local_1a = 0x8f18; ppcVar8 = (code ** )0xcf98; ( * * ppcVar8)(); iVar26 = iVar26 + 1; local_e = uVar22; uStackY13 = uVar29;
}
iVar26 = CONCAT11(uStackY13, local_e) + 8; local_e = iVar26; uStackY13 = (iVar26 >> 8);
}
0x7fde = 0; 0x7fe0 = 0; return 0x0;
}
goto switchD_2000_12ad_caseD_4;
}
local_a = & stack0xfff0; bStackY9 = ( & stack0xfff0 >> 8); local_c = (iVar26 + 0xe06); bStackY11 = ((iVar26 + 0xe06) >> 8); local_8 = cVar14;
bStackY7 = bVar16; FUN_2b26_0e3b(); local_12 = puVar27; local_8 = local_12; bStackY7 = (local_12 >> 8); puStackY22 = 0x1184; local_c = local_8; bStackY11 = bStackY7; local_a = local_8; bStackY9 = bStackY7; puVar27 = local_12; FUN_2c63_0002(); local_8 = 'c'; bStackY7 = 0x2c; local_a = 0xa3; bStackY9 = 0x11; FUN_3444_40e7(); local_a = 0x44; bStackY9 = 0x34; local_c = 0xac; bStackY11 = 0x11; FUN_3444_4472(); local_a = 0x44; bStackY9 = 0x34; local_c = 0xb9; bStackY11 = 0x11; FUN_3444_40e7(); local_c = 0x44; bStackY11 = 0x34; FUN_3444_44e8(); puStackY22 = 0x11c8; FUN_3444_4217(); puStackY22 = 0x6adc; local_1a = &uStackY44; local_1e = 0x344411d7; FUN_3444_1aca();
while ( true ) {
local_12 = 0xea3; local_c = cVar14; bStackY11 = bVar16; iVar26 = FUN_3444_178e(); if (iVar26 < 5) break; if (uStackY44 == '0') {
local_12 = & uStackY44; puStackY22 = 0xe96; local_c = cVar14; bStackY11 = bVar16; FUN_3444_172e();
}
else {
local_12 = 0xe7d; local_c = cVar14; bStackY11 = bVar16; unaff_DI = FUN_3444_178e(); * (undefined * )(register0x00000010 + - 0x2d + unaff_DI) = 0;
}
}
local_c = puVar27; bStackY11 = (puVar27 >> 8); local_12 = 0x3444; FUN_2c63_0100(); local_12 = 0x6ae2; local_1a = 0xed5; local_c = cVar14; bStackY11 = bVar16; FUN_2c63_01c1(); uVar32 = 0xc750; uVar23 = 0x6bb; local_c = uVar23; bStackY11 = (uVar23 >> 8); in_BX = 0x6b9; iVar26 = 0;
local_12 = 0x64; puStackY22 = (unaff_SI * 4 + 0x5c8); local_1a = 0xf05; FUN_3444_23fe(); local_8 = 'D'; bStackY7 = 0x34;
local_a = 0xc; bStackY9 = 0xf; puVar27 = extraout_DX_01; uVar19 = FUN_3444_2364(); in_stack_0000ffe8 = (0x7fd6 * 6 + iVar26); uVar33 = uVar19; if (0x7faa != 0x140) goto switchD_2000_1810_caseD_4; puStackY22 = (in_BX + 3); uVar33 = uVar19 / 2; iVar26 = unaff_SI;
} while ( true );
}
local_8 = 'D'; bStackY7 = 0x34; local_a = 0x3d; bStackY9 = 0x18; ppcVar8 = (code * * )0xcf6c; ( * * ppcVar8)(); for (iVar26 = 1; iVar26 < 8; iVar26 = iVar26 + 1) {
uVar32 = 0xc77e; uVar19 = (iVar26 * 4 + - 0x1389); uVar7 = CONCAT11(bStackY7, local_8); iVar24 = CONCAT11(bStackY7,local_8) + uVar19; local_8 = iVar24; bStackY7 = (iVar24 >> 8); uVar33 = uVar33 + (iVar26 * 4 + - 4999) + CARRY2(uVar7, uVar19);
}
iVar26 = 1; loop {
local_a = & local_12; bStackY9 = ( & local_12 >> 8); local_c = (iVar26 + 0x1104); bStackY11 = ((iVar26 + 0x1104) >> 8); local_8 = cVar14;
bStackY7 = bVar16; FUN_2b26_0e3b(); local_8 = local_a; bStackY7 = bStackY9; puStackY22 = 0x1895;
FUN_2c63_0002(); if ((uVar33 | CONCAT11(bStackY7, local_8)) != 0) {
local_8 = uVar33; bStackY7 = (uVar33 >> 8); iVar24 = - (puVar27 < local_12) - (local_12 >> 0xf); local_c = iVar24; bStackY11 = (iVar24 >> 8); uVar32 = 0xc77e; uVar19 = (iVar26 * 4 + - 4999); local_12 = *(uint * * )(iVar26 * 4 + - 0x1389); puStackY22 = 0x18d2; local_a = local_8; bStackY9 = bStackY7; puStackY22 = FUN_3444_23fe(); local_1a = 0x18d9; iVar24 = FUN_3444_2364(); uStackY36 = uVar19; local_e = (iVar24 + local_12); uStackY13 = ((iVar24 + local_12) >> 8); local_1a = CONCAT11(bStackY9, local_a); local_1e = 0x0; local_20 = CONCAT11(bStackY11, local_c); local_22 = local_e; uStackY33 = uStackY13; uStackY38 = SUB21(local_12, 0); uStackY37 = (local_12 >> 8); piStackY40 = 0x3444; auStackY42 = 0x18fa; FUN_2c63_02af();
}
puVar27 = 0x2c63; iVar26 = iVar26 + 1;
} while (iVar26 < 8); * (undefined * )0xfd03 = 0; local_8 = 'c';
bStackY7 = 0x2c; local_a = 0x17; bStackY9 = 0x19; ppcVar8 = (code * * )0xcf70; pcVar21 = ( * * ppcVar8)();
}
return pcVar21;
// LAB_2874_056f: if (( * piStackY40 & 0x20) == 0) {
iVar24 = (CONCAT11(bStackY11, local_c) + 4);
}
else {
iVar24 = CONCAT13(bStackY9, CONCAT12(local_a,CONCAT11(bStackY11, local_c)));
}
iVar20 = iVar26 << 2; goto LAB_2874_06e0;
}



fn fun_20d3_0bed()

{
    let u_var1: u16;
    let u_var2: u16;
    let unaff_ds: u16;

    u_var1 = 0x3444;
    fun_3444_02c6(0x39d9);
    if ((*0x99a & 1) != 0) {
        u_var1 = 0x294b;
        fun_294b_02f2(0x3444, 0xe00);
        FUN_20d3_00cc(0x294b);
    }
    u_var2 = u_var1;
    if ((*0x9b7 & 1) != 0) {
        u_var2 = 0x294b;
        fun_294b_02f2(u_var1, 0xf00);
        FUN_20d3_0708(0x294b);
    }
    u_var1 = u_var2;
    if ((*0x9d4 & 1) != 0) {
        u_var1 = 0x294b;
        fun_294b_02f2(u_var2, 0x1000);
        FUN_20d3_08a0(0x294b);
    }
    u_var2 = u_var1;
    if ((*0x9f1 & 1) != 0) {
        u_var2 = 0x294b;
        fun_294b_02f2(u_var1, 0x1100);
        FUN_20d3_0ab0();
    }
    fun_294b_03be(u_var2);
    return;
}



void FUN_2199_0002(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16)

{
let iVar1: i16; let unaff_DS: u16;
undefined local_12 [6]; let uStackY12: u16; let uStackY10: u16; let uStackY8: u16; undefined * local_6;

local_6 = ff0x199d; FUN_3444_02c6(0x39d9); if (0x1390 != 0) {
local_6 = (undefined * )0x19b1; FUN_1ba9_1d7e(); local_6 = (undefined * )0x1ba9;
uStackY8 = 0x19ba; FUN_2b26_05ce(); local_6 = (undefined * )0x2b26; uStackY8 = 0x19c4;
FUN_337d_0068(); local_6 = (undefined * )0x501; uStackY8 = 0x337d; uStackY10 = 0x19d1;
FUN_168b_027d(); local_6 = (undefined * )0x168b; uStackY8 = 0x19dc; FUN_168b_06a4();
local_6 = (undefined * )param_2; uStackY8 = 0x502; uStackY10 = 0x168b; uStackY12 = 0x19ec;
FUN_168b_03d1(); local_6 = (undefined * )param_4; uStackY8 = 0x503; uStackY10 = 0x168b;
uStackY12 = 0x19fe; FUN_168b_03d1(); local_6 = (undefined * )0x168b; uStackY8 = 0x1a0a;
FUN_168b_0c25(); loop {
if (( * 0x895 & 1) == 0) break; local_6 = local_12; uStackY8 = 0x168b; uStackY10 = 0x1a21; iVar1 = FUN_2d56_0ead(); if ((iVar1 != 0) & & (local_6 == (undefined * )0x500)) break; local_6 = (undefined * )0x1a33;
iVar1 = FUN_168b_0c4a();
} while (iVar1 == 0); local_6 = (undefined * )0x1a3c; FUN_32c9_0385(); local_6 = (undefined * )0x32c9; uStackY8 = 0x1a45; FUN_2b26_0754(); local_6 = ff0x1a4b; FUN_1ba9_1d7e();
}
return;
}



fn fun_2199_00bf(param_1_00: u16, param_1: u16, param_2: u16)

{
    let i_var1: i16;
    let unaff_ds: u16;
    undefined
    local_12[6];
    let u_stack_y12: u16;
    let u_stack_y10: u16;
    let u_stack_y8: u16;
    undefined * local_6;

    local_6 = ff
    0x1a5a;
    fun_3444_02c6(0x39d9);
    if (0x1390 != 0) {
        local_6 = ff
        0x1a6e;
        fun_1ba9_1d7e();
        local_6 = ff
        0x1ba9;
        u_stack_y8 = 0x1a77;
        fun_2b26_05ce();
        local_6 = ff
        0x2b26;
        u_stack_y8 = 0x1a81;
        fun_337d_0068();
        local_6 = ff
        0x801;
        u_stack_y8 = 0x337d;
        u_stack_y10 = 0x1a8e;
        fun_168b_044b();
        local_6 = ff
        param_2;
        u_stack_y8 = 0x802;
        u_stack_y10 = 0x168b;
        u_stack_y12 = 0x1a9f;
        fun_168b_03d1();
        local_6 = ff
        0x168b;
        u_stack_y8 = 0x1aab;
        fun_168b_0c25();
        loop {
            if ((*0x8ec & 1) == 0)
            break;
            local_6 = local_12;
            u_stack_y8 = 0x168b;
            u_stack_y10 = 0x1ac2;
            i_var1 = fun_2d56_0ead();
            if ((i_var1 != 0) && (local_6 == ff
            0x800)) break;
            local_6 = ff
            0x1ad4;
            i_var1 = FUN_168b_0c4a();
        }
        while (i_var1 == 0);
        local_6 = ff
        0x1add;
        fun_32c9_0385();
        local_6 = ff
        0x32c9;
        u_stack_y8 = 0x1ae6;
        fun_2b26_0754();
        local_6 = ff
        0x1aec;
        fun_1ba9_1d7e();
    }
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_2199_0160() -> u16

{
    let i_var1: i16;
    let unaff_si: i16;
    let u_var2: u16;
    let u_var3: u16;
    let u_var4: u16;
    let unaff_ds: u16;
    let local_1a: *mut u16;
    undefined
    local_16[2];
    let local_14: u8;
    let u_stack_y18: u16;
    let u_stack_y16: u16;
    let i_stack_y14: i16;
    let u_stack_y12: u16;
    undefined * local_a;

    fun_3444_02c6(0x39d9);
    u_var2 = 0x600;
    if ((0x9c65 == '\b') || (0x9c65 == '\x05')) {
        u_var2 = 0x2200;
    }
    local_a = ff
    0x1b16;
    fun_1ba9_1d7e();
    local_a = ff
    0x1ba9;
    u_stack_y12 = 0x1b1c;
    fun_2b26_05ce();
    local_a = ff
    0x2b26;
    u_stack_y12 = 0x1b26;
    fun_337d_0068();
    u_var3 = 0xc788;
    local_1a = CONCAT22(u_var3, 0x1695);
    0x1695 = 0xcf6;
    local_a = ff
    0x337d;
    u_stack_y12 = 0x1b49;
    fun_168b_02a9();
    local_a = ff
    0xffff;
    u_stack_y12 = 1;
    i_stack_y14 = *local_1a + u_var2 + 2;
    u_stack_y16 = 0x168b;
    u_var3 = 0x2b26;
    u_stack_y18 = 0x1b63;
    fun_2b26_0edc();
    loop {
    local_a = local_16;
    u_var4 = 0x2d56;
    i_stack_y14 = 0x1b76;
    u_stack_y12 = u_var3;
    i_var1 = fun_2d56_0ead();
    if (i_var1 != 0) {
        if ((((local_14 & 3) == 0) && ((u_stack_y16 & 0x800) == 0)) || ((u_stack_y16 & 0xa00) == 0)) {
            unaff_si = 0;
        } else {
            unaff_si = 1;
        }
        if ((unaff_si == 0) && ((local_a & 0xff) < 0xf)) {
// LAB_2199_02c4:
            local_a = ff
            0xffff;
            u_stack_y12 = 0;
            i_stack_y14 = u_var2 + *local_1a + 2;
            u_stack_y18 = 0x1c6e;
            u_stack_y16 = u_var4;
            fun_2b26_0edc();
            local_a = ff
            0x2b26;
            u_stack_y12 = 0x1c77;
            fun_2b26_0754();
            local_a = ff
            0x1c7d;
            fun_1ba9_1d7e();
            return CONCAT11(6, local_a._0_1_);
        }
    }
    local_a = ff
    0x1bab;
    i_var1 = FUN_2a25_003c();
    if (i_var1 != 0) {
        u_var4 = 0x2a25;
        local_a = ff
        0x1bb4;
        i_var1 = FUN_2a25_00b4();
        if (i_var1 == 0x1b)
        goto
        LAB_2199_02c4;
    }
    u_var3 = 0x2a25;
    if ((local_a & 0xff00) == u_var2) {
        if (unaff_si == 0) {
            if ((0xe < (local_a & 0xff)) && ((local_a & 0xff) < 0x13)) {
                local_a = ff
                0xffff;
                u_stack_y12 = 0;
                i_stack_y14 = *local_1a + u_var2 + 2;
                u_stack_y16 = 0x2a25;
                u_stack_y18 = 0x1bfe;
                fun_2b26_0edc();
                local_a = ff
                0x2b26;
                u_stack_y12 = 0x1c11;
                fun_168b_02a9();
                *local_1a = (local_a & 0xff) - 0xf;
                local_a = ff
                0x168b;
                u_stack_y12 = 0x1c2a;
                fun_168b_02a9();
                local_a = ff
                0xffff;
                u_stack_y12 = 1;
                i_stack_y14 = *local_1a + u_var2 + 2;
                u_stack_y16 = 0x168b;
                u_var3 = 0x2b26;
                u_stack_y18 = 0x1c44;
                fun_2b26_0edc();
            }
        } else {
            local_a = ff
            0x2a25;
            u_var3 = 0x236f;
            u_stack_y12 = 0x1bd4;
            fun_236f_06a9();
        }
        unaff_si = 0;
    }
}
    while (true);
}


// WARNING: Could not reconcile some variable overlaps

void FUN_2199_02f8(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16,param_5: u16,param_6: u16,param_7: i16)

{
let iVar1: i16; let unaff_DS: u16;
undefined local_12 [6]; let uStackY12: u16; let uStackY10: u16; let uStackY8: u16; let uStackY6: u16;

uStackY6 = (undefined * )0x1c93; FUN_3444_02c6(0x39d9); if ((0x1390 != 0) || (param_7 != 0)) {
uStackY6 = (undefined * )0x1cad; FUN_1ba9_1d7e(); uStackY6 = (undefined * )0x1ba9;
uStackY8 = 0x1cb6; FUN_2b26_05ce(); uStackY6 = (undefined * )0x2b26; uStackY8 = 0x1cc0;
FUN_337d_0068(); uStackY6 = (undefined * )0x337d; uStackY8 = 0x1cca; FUN_168b_06a4();
uStackY6 = (undefined * )param_1; uStackY8 = 0xa01; uStackY10 = 0x168b; uStackY12 = 0x1cda;
FUN_168b_03d1(); uStackY6 = (undefined * )param_3; uStackY8 = 0xa02; uStackY10 = 0x168b;
uStackY12 = 0x1cec; FUN_168b_03d1(); uStackY6 = (undefined * )param_5; uStackY8 = 0xa03;
uStackY10 = 0x168b; uStackY12 = 0x1cfe; FUN_168b_03d1(); uStackY6 = (undefined * )0x168b;
uStackY8 = 0x1d0a; FUN_168b_0c25(); loop {
if (( * 0x926 & 1) == 0) break; uStackY6 = local_12; uStackY8 = 0x168b; uStackY10 = 0x1d21; iVar1 = FUN_2d56_0ead(); if ((iVar1 != 0) & & (uStackY6._1_1_ == '\n')) break;
uStackY6 = (undefined * )0x1d32; iVar1 = FUN_168b_0c4a();
} while (iVar1 == 0); uStackY6 = (undefined * )0x1d3b; FUN_32c9_0385(); uStackY6 = (undefined * )0x32c9; uStackY8 = 0x1d44; FUN_2b26_0754(); uStackY6 = ff0x1d4a; FUN_1ba9_1d7e();
}
return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_2199_03be() -> u16

{
    let i_var1: i16;
    let u_var2: u16;
    let i_var3: i16;
    undefined * puVar4;
    let unaff_ds: u16;
    undefined
    local_46[32];
    let b_stack_y38: u8;
    let b_stack_y33: u8;
    let u_stack_y28: u16;
    let local_18: i16;
    let local_16: u16;
    let u_stack_y20: u16;
    let local_12: i16;
    let i_stack_y16: i16;
    undefined * puStackY14;
    let u_var5: u16;

    fun_3444_02c6(0x39d9);
    fun_1ba9_1d7e();
    fun_337d_0068();
    fun_2b26_05ce();
    puStackY14 = local_46;
    i_stack_y16 = 0x2b26;
    local_12 = 0x1d83;
    fun_3444_172e();
    puStackY14 = ff
    0x3444;
    i_stack_y16 = 0x1d94;
    fun_2b26_0e3b();
    fun_168b_06a4();
    puStackY14 = ff(local_18 + 4);
    i_stack_y16 = 0x168b;
    local_12 = 0x1dca;
    fun_2692_0ecc();
    puVar4 = ff
    0xc03;
    fun_168b_02a9();
    puStackY14 = ff
    0xc03;
    i_stack_y16 = 0x168b;
    local_12 = 0x1deb;
    fun_2b26_0edc();
// LAB_2199_045e:
    loop {
    loop {
        while (i_var1 = FUN_2a25_003c(), i_var1 != 0) {
            i_var1 = 0x2a25;
            u_var2 = FUN_2a25_00b4();
            if ((u_var2 & 0x800) != 0) {
// LAB_2199_0517:
                if (u_var2 == 0x1b)
                goto
                LAB_2199_05e6;
                if (u_var2 != 0xd)
                break;
                goto
                LAB_2199_05ca;
            }
            i_var1 = 0x3444;
            i_var3 = FUN_3444_1fef();
            if (i_var3 == 0)
            goto
            LAB_2199_0517;
            
            0x9eb2 = u_var2;
// LAB_2199_0492:
            iStackY16 = 0x1e33;
            puStackY14 = ff
            i_var1;
            fun_2b26_0e3b();
            i_var1 = ((-puStackY14 - (0x7fd4 - &i_stack_y16)) + 1) / 2 + puStackY14;
            i_var3 = i_stack_y16 + 4;
            puStackY14 = ff
            0x1e71;
            fun_294b_0d4f();
            fun_168b_0685();
            fun_294b_03be();
            fun_168b_06a4();
            puStackY14 = local_46;
            u_stack_y20 = 0x168b;
            local_16 = 0x1e9e;
            local_12 = i_var3;
            i_stack_y16 = i_var1;
            FUN_39d9_0e50();
        }
        i_var1 = 0x2d56;
        puStackY14 = ff
        0x1ec1;
        i_var3 = fun_2d56_0ead();
    }
    while ((i_var3 == 0) || (u_stack_y28._1_1_ != '\f'));
    if ((((b_stack_y38 & 3) != 0) || ((b_stack_y33 & 8) != 0)) && ((b_stack_y33 & 10) != 0)) {
        fun_236f_06a9();
        goto
        LAB_2199_045e;
    }
    if ((u_stack_y28 < 0xc09) || (0xc0c < u_stack_y28)) {
        if (u_stack_y28 == 0xc02)
        goto
        LAB_2199_0492;
        if (u_stack_y28 == 0xc08)
        goto
        LAB_2199_05e6;
        if (u_stack_y28 == 0xc07) {
// LAB_2199_05ca:
            puStackY14 = ff
            0xff3d;
            local_12 = 0x1f6c;
            i_stack_y16 = i_var1;
            fun_3444_172e();
            i_var1 = 0x3444;
// LAB_2199_05e6:
            local_12 = 0x1f84;
            i_stack_y16 = i_var1;
            puStackY14 = puVar4;
            fun_2b26_0edc();
            fun_2b26_0754();
            fun_32c9_0385();
            u_var5 = 0x32c9;
            fun_1ba9_1d7e();
            return u_var5;
        }
    } else {
        i_stack_y16 = 0x2d56;
        local_12 = 0x1f0d;
        puStackY14 = puVar4;
        fun_2b26_0edc();
        fun_168b_02a9();
        puVar4 = ff(u_stack_y28 + -6);
        i_stack_y16 = 0x168b;
        local_12 = 0x1f34;
        puStackY14 = puVar4;
        fun_2b26_0edc();
        fun_168b_02a9();
    }
}
    while (true);
}


/*
Unable to decompile 'FUN_2199_0614'
Cause:
Low-level Error: Symbol $$undef00000024 extends beyond the end of the address space
*/


fn fun_2199_07c2(param_1_00: u16, param_1: u16, param_2: u16, param_3: i16)

{
    let i_var1: i16;
    let unaff_ds: u16;
    undefined
    local_1a[8];
    let u_stack_y18: u16;
    let u_stack_y16: u16;
    let local_e: i16;
    let u_stack_y12: u16;
    let local_a: i16;
    let local_8: *mut u16;

    fun_3444_02c6(0x39d9);
    if (0x1390 != 0) {
        local_8 = 0x2172;
        fun_1ba9_1d7e();
        local_8 = &local_a;
        local_a = 0x801;
        u_stack_y12 = 0x1ba9;
        local_e = 0x2180;
        fun_2b26_0e3b();
        local_8 = 0x2b26;
        local_a = 0x218c;
        fun_2b26_05ce();
        local_8 = 0x2b26;
        local_a = 0x2196;
        fun_337d_0068();
        local_8 = 0x337d;
        local_a = 0x21a0;
        fun_168b_0c25();
        local_8 = (local_8 - 0x1388 / 2);
        u_stack_y12 = 0x168b;
        local_e = 0x21cb;
        fun_168b_04c4();
        local_8 = (0x1388 + local_8);
        u_stack_y12 = 0x168b;
        local_e = 0x21e6;
        fun_168b_04c4();
        local_a = local_a + 0x138a;
        u_stack_y12 = 0x168b;
        local_e = 0x2203;
        fun_168b_04c4();
        local_8 = (0x1388 + local_8);
        u_stack_y12 = 0x168b;
        local_e = 0x221e;
        fun_168b_04c4();
        if (0x7faa == 0x140) {
            i_var1 = 8;
        } else {
            i_var1 = 2;
        }
        local_8 = (i_var1 + 0x138a);
        local_a = param_3;
        u_stack_y12 = param_2;
        local_e = 0x802;
        u_stack_y16 = 0x168b;
        u_stack_y18 = 0x224d;
        fun_168b_03d1();
        loop {
            local_8 = local_1a;
            local_a = 0x168b;
            u_stack_y12 = 0x225a;
            i_var1 = fun_2d56_0ead();
            if (((i_var1 != 0) && (local_e == 0x800)) || ((*0x8ec & 1) == 0))
            break;
            local_8 = 0x2278;
            i_var1 = FUN_168b_0c4a();
        }
        while (i_var1 == 0);
        local_8 = 0x2281;
        fun_32c9_0385();
        local_8 = 0x32c9;
        local_a = 0x228a;
        fun_2b26_0754();
        local_8 = 0x2290;
        fun_1ba9_1d7e();
    }
    return;
}



bool FUN_2199_09ad(param_1_00: u16,byte param_1,char *param_2)

{
code * pcVar1; let uVar2: u16; char cVar3;

uVar2 = (undefined2)(param_2 >> 0x10); cVar3 = 0xbf < param_1;
* param_2 = param_1 + 0x40; * (undefined * )(param_2 + 1) = 0x3a;
* (undefined * )(param_2 + 2) = 0x5c; pcVar1 = swi(0x21);
( * pcVar1)(); return cVar3 == '\0';
}



uint FUN_2199_09d8(param_1_00: u16,undefined4 param_1,param_2: i16)

{
let pbVar1: * mut u8; let uVar2: u16; let iVar3: i16; let pbVar4: * mut u8;

pbVar4 = param_1; uVar2 = 0; loop {
pbVar1 = pbVar4; pbVar4 = pbVar4 + 1;
iVar3 = uVar2 + * pbVar1; uVar2 = iVar3 * 2 | (iVar3 < 0); param_2 = param_2 + - 1;
} while (param_2 != 0); return uVar2;
}



fn fun_2239_0018()

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    code * *ppcVar3;
    let i_var4: i16;
    let unaff_ds: u16;
    let local_a: u16;
    let pu_stack8: *mut u16;

    fun_3444_02c6(0x39d9);
    if ((*0xa65 & 1) != 0) {
        pu_stack8 = 0x5dd4;
        local_a = 0x1500;
        fun_2b26_0e3b(0x3444);
        i_var4 = 0x7fd6;
        0x5ddc = i_var4 + 0x5dd4;
        u_var2 = 0xc7a6;
        pi_var1 = 0x5dd8;
        *pi_var1 = *pi_var1 + -1;
        0x5de0 = 0x5dd8 - i_var4;
        if (0x7faa == 0x140) {
            i_var4 = 3;
        } else {
            i_var4 = 0;
        }
        0x5dde = i_var4 + 0x1388 + 0x5dd6;
        0x5de2 = 0x5dda - 0x1388;
        if (0x7faa == 0x140) {
            i_var4 = 1;
        } else {
            i_var4 = 2;
        }
        0x5de4 = i_var4 + 0x1388;
        u_var2 = 0xccca;
        pu_stack8 = 0x2470;
        fun_2239_01aa();
        0xccca = u_var2;
        pu_stack8 = 0x2479;
        fun_294b_0b7c();
        pu_stack8 = &local_a;
        local_a = 0x1501;
        fun_2b26_0e3b(0x294b);
        pu_stack8 = &local_a;
        local_a = 0x2b26;
        fun_294b_077b();
        if (0x7faa == 0x140) {
            pu_stack8 = 0x24a2;
            ppcVar3 = (code * *)
            0xcf6c;
            (**ppcVar3)();
        }
        pu_stack8 = (0xabe * 4 + -0x202);
        local_a = 0x1501;
        fun_168b_034f(0x294b);
        pu_stack8 = 0x24cd;
        ppcVar3 = (code * *)
        0xcf70;
        (**ppcVar3)();
        pu_stack8 = 0x24d2;
        fun_294b_0c76();
    }
    return;
}


fn fun_2239_0147()

{
    let u_var1: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((*0xa65 & 1) != 0) {
        u_var1 = 0x294b;
        fun_294b_02f2(0x3444, 0x1500);
        if (0xabe == 0xccca) {
            FUN_2239_0531(0x294b);
        } else {
            u_var1 = 0x2b26;
            fun_2b26_048e(0x294b, 0x1500);
            0xccca = 0xabe;
        }
        fun_294b_03be(u_var1);
    }
    return;
}


fn fun_2239_0193()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    
    0x7046 = 1;
    0xccca = 0xffff;
    fun_2239_0147(0x3444);
    return;
}


fn fun_2239_01aa()

{
    let u_var1: u16;
    code * *ppcVar2;
    let i_var3: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0x7faa == 0x140) {
        ppcVar2 = (code * *)
        0xcf6c;
        (**ppcVar2)();
    }
    fun_168b_06a4();
    fun_294b_0b7c();
    fun_2b26_0e3b();
    fun_294b_077b();
    fun_168b_034f();
    fun_294b_0c76();
    i_var3 = 0xabe;
    if (i_var3 == 2) {
        fun_2692_0ecc();
        ppcVar2 = (code * *)
        0xcf74;
        (**ppcVar2)();
        fun_2692_0ecc();
        fun_2692_0ecc();
        ppcVar2 = (code * *)
        0xcf74;
        (**ppcVar2)();
        ppcVar2 = (code * *)
        0xcf74;
        (**ppcVar2)();
    } else {
        if (0 < i_var3 + -2) {
            if (i_var3 == 4 || i_var3 + -3 < 1) {
                u_var1 = 0xc7b2;
                if ((0x5e6 | 0x5e4) != 0) {
                    FUN_168b_089b();
                    fun_168b_03d1();
                    fun_2b26_0e3b();
                    i_var3 = 0;
                    loop {
                        fun_168b_04c4();
                        fun_168b_04c4();
                        i_var3 = i_var3 + 1;
                    }
                    while (i_var3 < 8);
                    fun_2b26_0e3b();
                    fun_168b_06a4();
                    fun_27ac_074d();
                    fun_168b_06a4();
                    fun_168b_03d1();
                    fun_168b_03d1();
                    fun_2b26_0e3b();
                    fun_2b26_0e3b();
                    for (iVar3 = 0; i_var3 < 5; iVar3 = iVar3 + 1) {
                        fun_168b_04c4();
                        fun_168b_04c4();
                    }
                }
            } else {
                if (i_var3 == 6) {
                    FUN_2239_12bf();
                    FUN_2239_12bf();
                }
            }
        }
    }
    ppcVar2 = (code * *)
    0xcf70;
    (**ppcVar2)();
    
    0x7046 = 1;
    FUN_2239_0531();
    fun_2239_126d();
    0xccca = 0xabe;
    return;
}


// WARNING: Instruction at (ram,0x00028d52) overlaps instruction at (ram,0x00028d51)
//

uint * FUN_2239_0531(param_1_00: u16,int *param_2,int *param_1,param_3: i16,param_4: i16,
param_5: i16,param_7: i16)

{
let piVar1: * mut u16; let piVar2: * mut u16; code * * ppcVar3; undefined uVar4; undefined uVar5; undefined uVar6; undefined uVar7; let puVar8: * mut u16; let uVar9: u16; let uVar10: u16; let uVar11: u16; let uVar12: u16; let iVar13: i16; let in_CX: i16; let extraout_DX: i16; let iVar14: i16; undefined unaff_BP; let unaff_SI: * mut u16; let puVar15: * mut u16; let unaff_DI: * mut u16; let uVar16: u16; let unaff_SS: u16; let unaff_DS: u16; undefined uVar17;
ulong uVar18; let iStackY66: i16; let local_2e: i16; let local_28: * mut u16;
let local_26: u16; let iStackY36: i16;
let uStackY34: u16; let iStackY32: i16;
let iStackY30: i16; let local_1c: u16;
uint local_1a [4]; let puStackY18: *mut u16; let in_stack_0000fff0: i16; char cVar19; undefined local_e; undefined uStackY13; undefined local_c;
undefined uStackY11; char local_a; char cStackY9; undefined local_8; undefined uStackY7; undefined local_6; undefined uStackY5; undefined uVar20; undefined uStack1;

FUN_3444_02c6(0x39d9); uVar17 = SUB21(unaff_SI, 0); uVar20 = (unaff_SI >> 8); FUN_168b_06a4(); if (0x7faa == 0x140) {
ppcVar3 = (code * * )0xcf6c; (* * ppcVar3)();
}
local_6 = 3; uStackY5 = 0x15; local_8 = 0x8b; uVar6 = local_8; uStackY7 = 0x16;
uVar7 = uStackY7; local_a = 0xf7; cStackY9 = 0x28; FUN_168b_06a4(); iVar13 = 0x1503;
uVar11 = 0xc7ae; puVar8 = (0xabe - 1); if (puVar8 < 0x6) {
uVar16 = 0x2000; local_8 = unaff_SS; uVar4 = local_8; uStackY7 = (unaff_SS >> 8); uVar5 = uStackY7; iVar14 = extraout_DX; switch(puVar8) {
case 0x0: out(0x89, 3);
puVar15 = (unaff_SI + 1); if (in_CX != 1) goto code_r0x0002421f; if (puVar8 > = 0 & & puVar15 != 0x0) goto code_r0x0002421f; puVar15 = (unaff_SI + 3);
uVar12 = (0x48b + '\x15' + (puVar8 < 0)) << 8 | 3; loop {
uStackY34 = param_2 + uVar12 + 1; iStackY30 = CONCAT11(uStackY5, local_6) + param_2; FUN_27ac_076d(); local_1c = local_2e; iStackY32 = local_2e; local_a = & uStackY34; cStackY9 = ( &uStackY34 >> 8); local_e = 0x68;
uStackY13 = 0x42; FUN_27ac_076d(); local_6 = param_3; uStackY5 = (param_3 >> 8); loop {
* puVar15 = CONCAT11(uStackY5, local_6);
puVar15 = puVar15 + 1; loop {
if (CONCAT11(uStackY13, local_e) != 0) {
iVar13 = CONCAT11(cStackY9, local_a) + -1; local_a = iVar13; cStackY9 = (iVar13 >> 8);
}
unaff_DI = (unaff_DI + 1); if (CONCAT11(cStackY9, local_a) < unaff_DI) {
return puVar15;
}
cStackY9 = (puStackY18 >> 8); local_a = cStackY9 >> 7; cStackY9 = cStackY9 >> 0xf; FUN_3444_23fe(); uVar11 = 0x3444; iVar13 = FUN_3444_24dc(); uVar17 = iVar13; uVar20 = (iVar13 >> 8); if (iVar13 != local_1a[1]) {
uVar11 = 0x3444; iVar13 = FUN_3444_24dc();
uVar12 = (iVar13 + local_1a[3] + 1) / 2; local_1a[1] = CONCAT11(uVar20, uVar17); local_1a[3] = iVar13; if (param_7 == 0) {
iVar13 = param_2._2_2_ - CONCAT11(uVar20,uVar17); uStackY34 = param_2 - uVar12; iStackY30 = param_2 + ( - 1 - * puVar15); puStackY18 = & uStackY34; local_1a[3] = 0x3444; local_1a[2] = 0x411c;
iStackY32 = iVar13; local_1c = iVar13; FUN_27ac_076d(); iStackY32 = CONCAT11(uVar20, uVar17) + param_2._2_2_; puStackY18 = & uStackY34;
local_1a[3] = 0x27ac; local_1a[2] = 0x4138; local_1c = iStackY32; FUN_27ac_076d(); uStackY34 = param_2 + * puVar15 + 1; iStackY30 = uVar12 + param_2; puStackY18 = &uStackY34; local_1a[3] = 0x27ac; local_1a[2] = 0x415e; FUN_27ac_076d();
puStackY18 = & uStackY34; local_1a[3] = 0x27ac; uVar11 = 0x27ac; local_1a[2] = 0x4177; iStackY32 = iVar13; local_1c = iVar13; FUN_27ac_076d();
}
* puVar15 = uVar12; puVar15 = puVar15 + 1;
}
local_e = uVar11; uStackY13 = (uVar11 >> 8); cVar19 = 'A'; uVar12 = FUN_3444_24dc(); uVar17 = uVar12; uVar20 = (uVar12 >> 8);
} while (uVar12 == local_1a[0]);
local_a = cVar19 >> 7; cStackY9 = cVar19 >> 0xf; FUN_3444_23fe(); local_e = 0x44; uStackY13 = 0x34; iVar13 = FUN_3444_24dc(); iVar14 = (iVar13 + local_1a[2]) / 2; local_1a[0] = CONCAT11(uVar20, uVar17); local_6 = iVar14; uStackY5 = (iVar14 >> 8); local_1a[2] = iVar13;
} while (param_7 != 0); local_2e = param_2._2_2_ - CONCAT11(uVar20, uVar17);
uStackY34 = param_2 - iVar14; iStackY30 = param_2 + ( - 1 - * puVar15); iStackY32 = local_2e; local_1c = local_2e; FUN_27ac_076d();
iStackY32 = CONCAT11(uVar20, uVar17) + param_2._2_2_; local_1c = iStackY32; code_r0x0002421f: FUN_27ac_076d(); uVar12 = * puVar15; local_6 = local_8; uStackY5 = uStackY7;
} while ( true ); case 0x1: while ( true ) {
FUN_3444_2364(); local_1a[3] = 0x3444; local_1a[2] = 0x3465; FUN_27ac_0508(); puVar8 = * (uint * * )0x5de4; iStackY66 = iStackY66 + 1; if (4 < iStackY66) break; puStackY18 = 0x27ac;
local_1a[3] = 0x3447; FUN_3444_23fe();
}
if (0x7faa != 0x140) {
ppcVar3 = (code * * )0xcf70; puVar8 = ( * * ppcVar3)();
}
break; case 0x2: * unaff_DI = * unaff_SI; unaff_DI[1] = unaff_SI[1]; unaff_DI[2] = unaff_SI[2]; unaff_DI[3] = unaff_SI[3]; uVar11 = CONCAT11(uVar20, uVar17);
local_1a[3] = iStackY32; if (param_2._2_2_ < 0x28f8) {
iVar13 = 0x7fd4; iVar14 = (0x28f7 - param_2._2_2_) * iVar13; local_1a[3] = iStackY32 + iVar14; local_1c = local_1c - iVar14; for (; iStackY32 < 0; iStackY32 = iStackY32 + iVar13) {
local_1a[3] = local_1a[3] + iVar13;
}
for (; 0x7fac < ((local_1a[3] - iStackY32) + local_1c); local_1c = local_1c + - 1) {}
}
else {
iVar13 = 0x7fd4; iStackY32 = iStackY32 + (param_2._2_2_ + - 0x28f7) * iVar13; for (; local_1a[3] < 0; local_1a[3] = local_1a[3] + iVar13) {
iStackY32 = iStackY32 + iVar13;
}
for (; 0x7fac < local_1c; local_1c = local_1c - iVar13) {}
}
local_1a[2] = uStackY34; if (uStackY34 < 0) {
local_1a[2] = 0;
}
if (0x7faa < iStackY30) {
iStackY30 = 0x7faa;
}
uStackY34 = local_1a[2]; if ((iStackY32 < local_1c) & & (local_1a[2] < iStackY30)) {
iStackY30 = iStackY30 + - 1; local_1c = local_1c + - 1; puStackY18 = 0xe8ad; ppcVar3 = (code * * )0xcfc8; ( * *ppcVar3)(); FUN_2e46_018c();
}
else {
FUN_2c63_058f();
}
uVar11 = * ff(iStackY36 * 0x1d + 0x800); uVar18 = CONCAT22(local_1a[1], uVar11); uVar17 = uVar11; uVar20 = (uVar11 >> 8); iVar13 = 0;
while ( true ) {
local_1a[1] = (uVar18 >> 0x10); if (CONCAT11(uVar20, uVar17) == iVar13 || CONCAT11(uVar20, uVar17) < iVar13) break; uVar17 = iVar13; uVar20 = (iVar13 >> 8); uVar18 = FUN_2b26_0008();
local_1a[1] = (uVar18 >> 0x10); iVar14 = uVar18; if (((((iVar14 + 0x21) == '\x06') || ((iVar14 + 0x21) == '\a')) & & ((iVar14 + 0x24) != - 1)) & & (uVar18 = uVar18 & 0xffff0000 | param_2 & 0xffff,
(iVar14 + 0x26) == param_2)) {
uVar17 = SUB41(param_1, 0); uVar20 = (param_1 >> 8); uVar11 = FUN_2ecc_00a8(); uVar18 = CONCAT22(local_1a[1], uVar11);
}
iVar13 = iVar13 + 1;
}
return uVar18; case 0x3: loop {
FUN_294b_0d4f(); FUN_168b_0685(); FUN_294b_03be(); FUN_168b_06a4(); puStackY18 = 0x168b;
local_1a[3] = 0x1e9e; FUN_39d9_0e50();
// LAB_2199_045e:
iVar13 = FUN_2a25_003c(); if (iVar13 == 0) goto LAB_2199_0527; uVar12 = FUN_2a25_00b4(); if ((uVar12 & 0x800) != 0) {
// LAB_2199_0517: if (uVar12 == 0x1b) goto LAB_2199_05e6; if (uVar12 != 0xd) goto LAB_2199_0527; goto LAB_2199_05ca;
}
local_6 = uVar12; iVar13 = FUN_3444_1fef(); if (iVar13 == 0) goto LAB_2199_0517; * (undefined * )0x9eb2 = local_6;
// LAB_2199_0492:
FUN_2b26_0e3b();
} while ( true ); case 0x4: out(0x9a, 0x8e); piVar2 = (unaff_DI + CONCAT11(unaff_BP, uVar20) + 0x44);
* piVar2 = * piVar2 + 0x158e; out(0x8b, 0x14); iVar13 = 0x4446; uVar11 = 0x1500;
// LAB_2874_062f:
((register0x00000010 + - 0x1a) + unaff_DI) = uVar11; cStackY9 = uVar16;
uStackY11 = 0x80; local_a = 0x8d; uVar11 = FUN_2874_0004(); * local_28 = uVar11;
// LAB_2874_0648: if (( * local_28 & 0x20) == 0) {
if (( * local_28 & 0x10) == 0) goto LAB_2874_06e3; uVar11 = (CONCAT11(uStackY11, local_c) + 4); iVar14 = iVar13 * 4; FUN_3444_4101(); FUN_3444_43cb(); FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); uVar12 = FUN_3444_42c7(); local_1a[iVar13 * 2] = uVar12;
}
else {
uVar11 = CONCAT13(cStackY9, CONCAT12(local_a,CONCAT11(uStackY11, local_c))); iVar14 = iVar13 * 4; FUN_3444_4101(); FUN_3444_43cb(); FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); uVar12 = FUN_3444_42c7(); local_1a[iVar13 * 2] = uVar12;
}
// LAB_2874_06e0:
uVar16 = 0x3444; ( & local_1c + iVar14) = uVar11;
// LAB_2874_06e3:
loop {
iVar13 = iVar13 + 1; while ( true ) {
uVar17 = iVar13 == 2; uStack1 = uVar16; if (iVar13 < 2) break; cStackY9 = local_1c; local_a = (uVar16 >> 8); ppcVar3 = (code * *)0xcfb0; ( * * ppcVar3)(); iVar13 = CONCAT11(uStack1, 0x8e);
loop {
iVar14 = iVar13 + 8; if ((iVar13 + 10) == - 0x8000) {
return CONCAT11(cStackY9, local_a);
}
uVar12 = FUN_2874_0004(); local_a = 0x8c;
uVar9 = FUN_2874_0004(); iVar13 = iVar14;
cStackY9 = uStack1;
} while ((uVar12 & uVar9) != 0); local_c = iVar14; uStackY11 = (iVar14 >> 8);
if ((uVar9 == 0) & & (uVar12 == 0)) {
ppcVar3 = (code * * )0xcfb0; puVar8 = ( * * ppcVar3)(); return puVar8;
}
iVar13 = 0;
}
FUN_3444_402c(); FUN_3444_402c(); uVar16 = 0x3444; FUN_3444_44f7(); if ( ! (bool)uVar17) {
local_28 = ( & stack0xfff0 + iVar13 * 2); if (( * local_28 & 0x80) == 0) {
if (( * local_28 & 0x40) == 0) goto LAB_2874_0648; uVar11 = (CONCAT11(uStackY11, local_c) + 6); unaff_DI = (iVar13 * 4); FUN_3444_4101(); FUN_3444_43b3(); FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); uVar16 = 0x3444; uVar10 = FUN_3444_42c7(); ( & local_1c)[iVar13 * 2] = uVar10;
}
else {
uVar11 = (CONCAT11(uStackY11, local_c) + 2); unaff_DI = (iVar13 * 4); FUN_3444_4101(); FUN_3444_43b3(); FUN_3444_4101(); FUN_3444_44f2(); FUN_3444_45be(); uVar16 = 0x3444; uVar10 = FUN_3444_42c7(); ( & local_1c)[iVar13 * 2] = uVar10;
}
goto LAB_2874_062f;
}
piVar1 = ( & stack0xfff0 + iVar13 * 2);
} while ( * piVar1 == 0); if (( * piVar1 & 0x80) == 0) {
if (( * piVar1 & 0x40) == 0) goto LAB_2874_056f; uVar12 = (CONCAT11(uStackY11, local_c) + 6);
}
else {
uVar12 = (CONCAT11(uStackY11, local_c) + 2);
}
local_1a[iVar13 * 2] = uVar12; goto LAB_2874_06e3; case 0x5: switchD_2000_35d6_caseD_5: uStackY7 = uVar7; local_8 = uVar6; piVar2 = unaff_SI; *piVar2 = * piVar2 - (CONCAT22(iVar14,iVar13) % (long)CONCAT11(uStackY5,local_6)); loop {
if (unaff_SI[1] < 1) {
piVar2 = unaff_SI + 1; * piVar2 = *piVar2 + - unaff_SI[1] % CONCAT11(uVar20, uVar17);
}
else {
piVar2 = unaff_SI + 1; * piVar2 = *piVar2 - unaff_SI[1] % CONCAT11(uVar20, uVar17);
}
// LAB_2d56_016e: if (param_3 == 0) {
local_1a[0] = * unaff_SI + * param_2; local_1a[1] = unaff_SI[1] + (param_2 + 2);
}
local_1a[2] = * unaff_SI + (param_2 + 4); local_1a[3] = unaff_SI[1] + (param_2 + 6);
if (param_3 == 0) {
if (local_1a[1] < (0x7fd4 * 3) / 2) {
if (0x9c65 == '\x06') {
piVar2 = unaff_SI + 1; * piVar2 = *piVar2 + 1;
}
else {
piVar2 = unaff_SI + 1; * piVar2 = *piVar2 + 2;
}
}
else {
iVar13 = 0x7fd4 - 0x7fac; if ( - local_1a[1] != iVar13 & & local_1a[1] < = - iVar13) goto LAB_2d56_0245; if (0x9c65 == '\x06') {
piVar2 = unaff_SI + 1; * piVar2 = *piVar2 + - 1;
}
else {
piVar2 = unaff_SI + 1; * piVar2 = *piVar2 + - 2;
}
}
}
else {
if ((0x7faa + local_1a[0] + 2) < local_1a[2]) {
piVar2 = unaff_SI; * piVar2 = * piVar2 - CONCAT11(uStackY5, local_6);
}
else {
if (0x7fac < local_1a[3]) {
piVar2 = unaff_SI + 1; * piVar2 = *piVar2 - CONCAT11(uVar20, uVar17);
}
else {
// LAB_2d56_0245: if (param_3 == 0) {
if (local_1a[2] < 2) {
local_1a[2] = local_1a[2] + CONCAT11(uStackY5, local_6);
}
}
else {
iVar13 = param_4 + local_1a[0]; if (local_1a[2] < iVar13) {
* param_1 = iVar13 - (param_2 + 4); local_1a[2] = iVar13;
}
iVar13 = param_5 + local_1a[1]; if (local_1a[3] < iVar13) {
(param_1)[1] = iVar13 - (param_2 + 6); local_1a[3] = iVar13;
}
}
if (( * param_1 != CONCAT11(cStackY9,local_a)) || ((param_1)[1] != CONCAT11(uStackY7, local_8))) {
FUN_2c63_0228(); local_e = 99; uStackY13 = 0x2c; in_stack_0000fff0 = - 0x27d4; FUN_2c63_0228(); uStackY34 = local_1a[0]; iStackY32 = local_1a[1]; iStackY30 = local_1a[2]; local_1c = local_1a[3];
}
iVar13 = FUN_2a25_003c(); if (((iVar13 != 0) & & ((iVar13 = FUN_2a25_00b4(), iVar13 == 10 || (iVar13 == 0xd)))) || (iVar13 = FUN_1ba9_1100(), iVar13 == 0)) {
FUN_2c63_0228(); puVar8 = FUN_294b_0c76();
return puVar8;
}
local_8 = SUB21( & puStackY18, 0);
uStackY7 = ( & puStackY18 >> 8); local_a = 0xa9; cStackY9 = 0x1b; FUN_1ba9_1038(); * param_1 = puStackY18 - CONCAT11(uStackY13, local_e); (param_1)[1] = in_stack_0000fff0 + 0x29e8; unaff_SI = param_1; local_6 = uVar4; uStackY5 = uVar5;
}
}
}
if (param_3 == 0) {
if (0x9c65 != '\x06') {
if ((CONCAT11(uStackY5, local_6) < 8) || (CONCAT11(uStackY5, local_6) % 8 != 0)) {
if ( * unaff_SI < 1) {
piVar2 = unaff_SI; * piVar2 = * piVar2 + - * unaff_SI % CONCAT11(uStackY5, local_6);
}
else {
piVar2 = unaff_SI; * piVar2 = * piVar2 - * unaff_SI % CONCAT11(uStackY5, local_6);
}
}
else {
piVar2 = unaff_SI; * piVar2 = * piVar2 & 0xf8;
}
piVar2 = unaff_SI + 1; * piVar2 = *piVar2 & 0xfe;
}
goto LAB_2d56_016e;
}
if (0 < * unaff_SI) goto code_r0x0002d642;
piVar2 = unaff_SI; * piVar2 = * piVar2 + - * unaff_SI % CONCAT11(uStackY5, local_6);
} while ( true );
}
}
* (undefined * )0x7046 = 0; if (0x7faa == 0x140) {
ppcVar3 = (code * * )0xcf70; puVar8 = ( * * ppcVar3)();
}
return puVar8; code_r0x0002d642: iVar13 = * unaff_SI;
iVar14 = iVar13 >> 0xf; uVar11 = param_1._2_2_; uVar6 = local_8; uVar7 = uStackY7; goto switchD_2000_35d6_caseD_5;
// LAB_2874_056f: if (( * piVar1 & 0x20) == 0) {
uVar11 = (CONCAT11(uStackY11, local_c) + 4);
}
else {
uVar11 = CONCAT13(cStackY9, CONCAT12(local_a,CONCAT11(uStackY11, local_c)));
}
iVar14 = iVar13 << 2; goto LAB_2874_06e0;
// LAB_2199_0527:
iVar13 = FUN_2d56_0ead(); if ((iVar13 != 0) & & (local_1c._1_1_ == '\f')) {
if ((((local_26 & 3) == 0) & & ((uStackY34 & 0x800) == 0)) || ((uStackY34 & 0xa00) == 0)) {
if ((local_1c < 0xc09) || (0xc0c < local_1c)) {
if (local_1c == 0xc02) goto LAB_2199_0492; if (local_1c != 0xc08) {
if (local_1c != 0xc07) goto LAB_2199_045e;
// LAB_2199_05ca:
FUN_3444_172e();
}
// LAB_2199_05e6:
FUN_2b26_0edc(); FUN_2b26_0754(); FUN_32c9_0385(); FUN_1ba9_1d7e(); return 0x1f9b;
}
FUN_2b26_0edc(); FUN_168b_02a9(); FUN_2b26_0edc(); FUN_168b_02a9();
}
else {
FUN_236f_06a9();
}
}
goto LAB_2199_045e;
}



fn fun_2239_126d()

{
    code * *ppcVar1;
    let i_var2: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0x7faa == 0x140) {
        ppcVar1 = (code * *)
        0xcf6c;
        (**ppcVar1)(0x3444);
    }
    fun_168b_03d1(0x3444, 0x1512, 0x7299);
    i_var2 = 0xabe * 4;
    fun_168b_03d1(0x168b, 0x1513, (i_var2 + 0x72a8), (i_var2 + 0x72aa));
    if (0x7faa == 0x140) {
        ppcVar1 = (code * *)
        0xcf70;
        (**ppcVar1)(0x168b);
    }
    return;
}



void FUN_2239_12bf(param_1_00: u16,param_1: i16,param_2: u16,param_4: u16,
param_5: u16,param_6: u16,param_7: u16)

{
let uVar1: u16; code * * ppcVar2;
let unaff_DS: u16;

FUN_3444_02c6(0x39d9);
uVar1 = 0xc7a8; ppcVar2 = (code * *)0xcf74; ( * * ppcVar2)(0x3444, 0x5ddc, param_1, 0x5de0,
0x5de4 + param_1 + - 1, 0x7fda); FUN_168b_04c4(0x3444, 0x5ddc, param_1, param_2); FUN_2692_0ecc(0x168b, 0x138a + 0x5ddc, param_1, param_4,param_5); FUN_2692_00b2(0x2692, param_6, param_7); return;
}



fn fun_2239_133a(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    code * *ppcVar2;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    u_var1 = 0xc7a8;
    ppcVar2 = (code * *)
    0xcf74;
    (**ppcVar2)(0x3444, 0x5ddc, param_1, 0x5de0,
                0x5de4 + param_1 + -1, 0x7fda);
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_236f_000e(param_1_00: u16, int * * param_1, int *param_2, int *param_3, param_4: u16)

{
    let pi_var1: *mut u16;
    byte * *ppbVar2;
    let b_var3: u8;
    let i_var4: i16;
    let i_var5: i16;
    let pb_var6: *mut u8;
    let pb_var7: *mut u8;
    let i_var8: i16;
    let u_var9: u16;
    let u_var10: u16;
    let unaff_ds: u16;
    let u_var11: u32;
    undefined * local_24;
    let local_20: i16;
    let local_1e: i16;
    let local_1c: i16;
    let local_1a: i16;
    let local_18: *mut u8;
    let u_stack_y20: u16;
    let i_stack_y18: i16;
    let local_10: *mut u8;
    let local_e: i16;
    let u_stack_y12: u32;

    fun_3444_02c6(0x39d9);
    u_stack_y12._2_2_ = &local_20;
    u_stack_y12._0_2_ = param_4;
    local_e = 0x3444;
    local_10 = 0x3718;
    fun_2b26_0e3b();
    *param_2 = (local_1c - local_20) / 0x7fd6 + -1;
    *param_3 = (local_1a - local_1e) / 0x7fd4;
    u_var9 = (undefined2)(param_1 >> 0x10);
    i_var5 = param_1;
    u_stack_y12._2_2_ = (i_var5 + 2);
    u_stack_y12._0_2_ = *(byte * *)
    param_1;
    local_e = 0x2b26;
    local_10 = 0x3759;
    u_stack_y12 = FUN_3143_1656();
    u_stack_y12 = u_stack_y12 + 0x4b0;
    local_e = (i_var5 + 2);
    local_10 = *(byte * *)
    param_1;
    i_stack_y18 = 0x3143;
    u_stack_y20 = 0x3772;
    u_var11 = FUN_3143_0ee2();
    param_1 = u_var11;
    (i_var5 + 2) = (u_var11 >> 0x10);
    // WARNING: Load size is inaccurate
    u_stack_y12._2_2_ = *param_1;
    u_stack_y12._0_2_ = 0x3143;
    local_e = 0x3788;
    i_var4 = FUN_3143_1656();
    u_stack_y12._2_2_ = (i_var4 + -0x4b0);
    pi_var1 = *param_1;
    u_var10 = (undefined2)(pi_var1 >> 0x10);
    u_stack_y12._0_2_ = (pi_var1 + 2);
    local_e = *pi_var1;
    local_10 = (pi_var1 + 2);
    i_stack_y18 = *pi_var1 + 0x4b0;
    u_stack_y20 = 0x3143;
    local_18 = CONCAT22(0x37b0, local_18);
    FUN_3444_1e00();
    ppbVar2 = (byte * *) * param_1;
    pb_var7 = *ppbVar2;
    local_e = (ppbVar2 + 2);
    local_18 = CONCAT22(local_e, pb_var7 + 0x4b0);
    i_var4 = 0;
    loop {
    b_var3 = *local_18;
    if (b_var3 == 0) {
// LAB_236f_0263:
        *pbVar7 = 0;
        if (i_var4 != 0) {
            pb_var7 = pb_var7 + 1;
            *pb_var7 = 0;
        }
        pb_var7[1] = 0;
        ppbVar2 = (byte * *) * param_1;
        local_e = (ppbVar2 >> 0x10);
        local_10 = ppbVar2;
        u_stack_y12._0_2_ = ((pb_var7 + 1) - *ppbVar2);
        u_stack_y12._2_2_ = -(pb_var7 + 1 < *ppbVar2);
        i_stack_y18 = 0x3444;
        u_stack_y20 = 0x3989;
        u_var11 = FUN_3143_0ee2();
        param_1 = u_var11;
        (i_var5 + 2) = (u_var11 >> 0x10);
        return;
    }
    if (local_18 <= pb_var7) {
        *pb_var7 = 0;
        pb_var6 = pb_var7 + 2;
        pb_var7[1] = 0;
        pb_var7 = pb_var7 + 3;
        *pb_var6 = 0;
        goto
        LAB_236f_0263;
    }
    if (b_var3 == 0xd5) {
        b_var3 = 0x27;
// LAB_236f_0116:
        *local_18 = b_var3;
    } else {
        if (0x80 < b_var3) {
            b_var3 = 0x20;
            goto
            LAB_236f_0116;
        }
    }
    if (b_var3 == 0xd) {
        if (i_var4 == 0) {
            *pb_var7 = 0x30;
            pb_var7 = pb_var7 + 1;
        }
        pb_var6 = pb_var7 + 1;
        *pb_var7 = 0x20;
        pb_var7 = pb_var7 + 2;
        *pb_var6 = 0;
        i_var4 = 0;
    } else {
        if ((*param_2 == i_var4) && (b_var3 != 0x20)) {
            for (iVar8 = 1; i_var8 < iVar4 + -3; iVar8 = iVar8 + 1) {
                if (pb_var7[-i_var8] == 0x20) {
                    u_stack_y12._0_2_ = pb_var7 + -i_var8;
                    *u_stack_y12 = 0;
                    u_stack_y12._2_2_ = local_e;
                    local_10 = u_stack_y12 + 1;
                    local_24 = ff
                    CONCAT22(local_e, local_10);
                    i_stack_y18 = 0x3444;
                    u_stack_y20 = 0x388d;
                    i_var4 = i_var8;
                    FUN_3444_1e00();
                    *local_24 = 0x30;
                    b_var3 = (i_var4 >> 8);
                    pb_var7[1] = b_var3;
                    pb_var7 = pb_var7 + 2;
                    i_var4 = i_var8;
                    break;
                }
            }
            if (i_var8 - i_var4 == -3) {
                *pb_var7 = 0;
                pb_var6 = pb_var7 + 2;
                pb_var7[1] = 0x30;
                pb_var7 = pb_var7 + 3;
                *pb_var6 = b_var3;
                i_var4 = 1;
            }
        } else {
            if (*param_2 == i_var4 || *param_2 < i_var4) {
                *pb_var7 = 0;
                pb_var7 = pb_var7 + 1;
                while ((local_18 + 1) == ' ') {
                    local_18 = (local_18 & 0xffff0000 | (local_18 + 1));
                }
                i_var4 = 0;
            } else {
                pb_var6 = pb_var7;
                if (i_var4 == 0) {
                    *pb_var7 = 0x30;
                    pb_var6 = pb_var7 + 1;
                }
                pb_var7 = pb_var6 + 1;
                *pb_var6 = *local_18;
                i_var4 = i_var4 + 1;
            }
        }
    }
    local_18 = (local_18 & 0xffff0000 | (local_18 + 1));
}
    while (true);
}


fn fun_236f_02ac(param_1_00: u16, param_1: u16)

{
    let u_var1: u16;
    let unaff_ds: u16;
    let u_var2: u32;

    u_var1 = 0x3444;
    fun_3444_02c6(0x39d9);
    if ((0x72f0 != -1) && ((0x72ee | 0x72ec) != 0)) {
        u_var1 = 0x3143;
        fun_3143_0c84(0x3444, 0x72ec, 0x72ee);
    }
    0x72f0 = param_1;
    u_var2 = FUN_3074_008e(u_var1, param_1, 10);
    0x72ec = u_var2;
    0x72ee = (u_var2 >> 0x10);
    fun_3074_034b(0x3074, 0x72f0, 10);
    fun_236f_000e(0x3074, 0x72ec);
    fun_2e46_0000(0x3074, 0x1404, 0x72ec, 0x72ee, 0);
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_236f_0335()

{
    char * *ppcVar1;
    let pu_var2: *mut u16;
    let i_var3: i16;
    let i_var4: i16;
    let i_var5: i16;
    let pc_var6: String;
    let u_var7: u16;
    let u_var8: u16;
    let unaff_ds: u16;
    undefined
    local_18[8];
    let local_10: u32;
    let local_c: i16;
    let local_a: String;

    fun_3444_02c6(0x39d9);
    local_a = 
    0x3444;
    u_var7 = 0x2e46;
    local_c = 0x3a3b;
    i_var3 = FUN_2e46_010d();
    local_a = (i_var3 + 0x5de8 / 2);
    ppcVar1 = *(char * **)(char * *)
    0x72ec;
    pc_var6 = *ppcVar1;
    local_10._2_2_ = (ppcVar1 + 2);
    for (iVar3 = 0; (* pcVar6 != '\0' &&(i_var3 < local_a)); iVar3 = iVar3 + 1) {
        local_10._2_2_ = 0x3a7a;
        local_c = u_var7;
        local_a = pc_var6;
        FUN_3444_178e();
        i_var3 = local_10._2_2_;
        local_c = 0x3444;
        u_var7 = 0x3444;
        local_10._2_2_ = 0x3a89;
        local_a = pc_var6;
        i_var4 = FUN_3444_178e();
        pc_var6 = pc_var6 + i_var4 + 1;
    }
    local_c = 0x3aa5;
    local_a = 
    u_var7;
    fun_236f_02ac();
    local_a = local_18;
    local_c = 0x1404;
    u_var8 = 0x2b26;
    local_10 = 
    CONCAT22(u_var7, 0x3ab4);
    fun_2b26_0e3b();
    pu_var2 = 
    0x72ec;
    local_10 = 
    CONCAT22((pu_var2 + 2), *pu_var2);
    for (iVar3 = local_c;
        (local_a = local_10, *local_10 != '\0' &&((iVar3 >> 8) != -1)); iVar3 = iVar3 - (iVar4 + -1)) {
        local_10._2_2_ = 0x3ae0;
        local_c = u_var8;
        local_10._0_2_ = local_a;
        i_var4 = FUN_3444_178e();
        local_a = 
        local_10;
        local_c = 0x3444;
        u_var8 = 0x3444;
        local_10._2_2_ = 0x3af2;
        i_var5 = FUN_3444_178e();
        local_10 = 
        CONCAT22(local_10._2_2_, local_10 + i_var5 + 1);
    }
    local_a = 
    0x0;
    local_c = 0x1404;
    local_10 = 
    CONCAT22(u_var8, 0x3b37);
    fun_2e46_0283();
    return;
}


fn fun_236f_0450()

{
    let unaff_ss: i16;
    let unaff_ds: u16;
    let local_a: u16;
    let local_8: i16;
    let pu_stack_y6: *mut u16;

    pu_stack_y6 = 0x3b4b;
    fun_3444_02c6(0x39d9);
    pu_stack_y6 = 0x3444;
    local_8 = 0x3b54;
    fun_2b26_0754();
    pu_stack_y6 = 0x2b26;
    local_8 = 0x3b5d;
    fun_236f_02ac();
    pu_stack_y6 = 0x2b26;
    local_8 = 0x3b67;
    fun_2b26_05ce();
    pu_stack_y6 = &local_a;
    local_8 = 0x1404;
    local_a = 0x2b26;
    fun_2b26_0e3b();
    0x5de8 = (unaff_ss - local_8) / 0x7fd4;
    return;
}


fn fun_236f_04a1(param_1: u16, param_2: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    0x72f0 = param_2;
    fun_236f_0450(0x3444);
    return;
}


fn fun_236f_04b9(param_1_00: u16, param_1: u16)

{
    let u_var1: u16;
    let u_var2: u16;
    let unaff_ds: u16;
    let u_var3: u32;

    u_var2 = 0x3444;
    fun_3444_02c6(0x39d9);
    if ((0x72f6 != -1) && ((0x72f4 | 0x72f2) != 0)) {
        u_var2 = 0x3143;
        fun_3143_0c84(0x3444, 0x72f2, 0x72f4);
    }
    0x72f6 = param_1;
    u_var3 = FUN_3074_008e(u_var2, param_1, 10);
    u_var1 = (u_var3 >> 0x10);
    0x72f2 = u_var3;
    0x72f4 = u_var1;
    if ((u_var1 | 0x72f2) == 0) {
        0x72f6 = 1000;
        u_var3 = FUN_3074_008e(0x3074, 1000, 10);
        0x72f2 = u_var3;
        0x72f4 = (u_var3 >> 0x10);
    }
    fun_3074_034b(0x3074, 0x72f6, 10);
    fun_236f_000e(0x3074, 0x72f2);
    fun_2e46_0000(0x3074, 0x1a04, 0x72f2, 0x72f4, 0);
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_236f_0562()

{
    char * *ppcVar1;
    let pu_var2: *mut u16;
    let i_var3: i16;
    let i_var4: i16;
    let i_var5: i16;
    let pc_var6: String;
    let u_var7: u16;
    let unaff_ds: u16;
    let local_10: u32;
    let pc_var8: String;

    fun_3444_02c6(0x39d9);
    u_var7 = 0x2e46;
    i_var3 = FUN_2e46_010d(0x3444, 0x1a04);
    pc_var8 = (i_var3 + 0x5dec / 2);
    ppcVar1 = *(char * **)(char * *)
    0x72f2;
    pc_var6 = *ppcVar1;
    local_10._2_2_ = (ppcVar1 + 2);
    for (iVar3 = 0; (* pcVar6 != '\0' &&(i_var3 < pcVar8)); iVar3 = iVar3 + 1) {
        FUN_3444_178e(u_var7, pc_var6, local_10._2_2_);
        local_10._2_2_ = 0x3ca7;
        i_var3 = local_10._2_2_;
        u_var7 = 0x3444;
        local_10._2_2_ = 0x3cb6;
        pc_var8 = pc_var6;
        i_var5 = FUN_3444_178e(0x3444);
        pc_var6 = pc_var6 + i_var5 + 1;
    }
    i_var3 = 0x3cd2;
    fun_236f_04b9(u_var7, 0x72f6);
    pu_var2 = 
    0x72f2;
    local_10 = 
    CONCAT22((pu_var2 + 2), *pu_var2);
    while (true) {
        i_var5 = local_10;
        if ((*local_10 == '\0') || ((i_var3 >> 8) == -1))
        break;
        i_var4 = FUN_3444_178e(u_var7, i_var5, (local_10 >> 0x10));
        i_var3 = i_var3 - (i_var4 + -1);
        u_var7 = 0x3444;
        i_var4 = FUN_3444_178e(0x3444, i_var5);
        local_10 = 
        CONCAT22(0x3d0e, i_var5 + i_var4 + 1);
    }
    fun_2e46_0283();
    return;
}


fn fun_236f_066c()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_2b26_0754(0x3444, 0x1a00);
    fun_236f_04b9(0x2b26, 0x72f6);
    fun_2b26_05ce(0x2b26, 0x1a00);
    return;
}


fn fun_236f_0691(param_1_00: u16, param_1: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    0x72f6 = param_1;
    fun_236f_066c(0x3444);
    return;
}


fn fun_236f_06a9(param_1_00: u16, uparam_1: i16)

{
    let i_var1: i16;
    let i_var2: i16;
    let i_var3: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var3 = -1;
    i_var2 = 0;
    loop {
    i_var1 = i_var2 * 4;
    if ((i_var1 + 0x72f8) == -1) {
        if (i_var3 != -1) {
// LAB_236f_0706:
            FUN_236f_0691(0x3444, i_var3);
        }
        return;
    }
    if ((i_var1 + 0x72f9) == (param_1 >> 8)) {
        if ((i_var1 + 0x72f8) == param_1) {
            if ((i_var1 + 0x72fa) != -1) {
                i_var3 = (i_var2 * 4 + 0x72fa);
                goto
                LAB_236f_0706;
            }
        } else {
            if ((i_var1 + 0x72f8) == (param_1 & 0xff00)) {
                i_var3 = (i_var1 + 0x72fa);
            }
        }
    }
    i_var2 = i_var2 + 1;
}
    while (true);
}



ulong FUN_23e0_01d9()

{
let piVar1: * mut u16; let iVar2: i16; let iVar3: i16; let iVar4: i16; let iVar5: i16; let in_stack_00000008: i16; let in_stack_0000000a: i16; let piStack000e: * mut u16; let in_stack_0000000e: * mut u16; let uStack0010: u16; let in_stack_00000012: i16; let in_stack_00000014: i16; let local_16: i16; let local_14: i16; let local_e: i16; let local_a: i16;

piVar1 = in_stack_0000000e;
FUN_3444_02c6(0x39d9); if (in_stack_00000012 == 0) {
in_stack_0000000e = (in_stack_0000000e & 0xffff0000 | (piStack000e + 2)); local_a = * piVar1; if (local_a != 0) {
// LAB_23e0_021a:
FUN_3444_24d0(); FUN_3444_2364(); FUN_3444_24d0(); FUN_3444_2364(); local_e = - (local_a * 2 + - 3); local_14 = 0; local_16 = in_stack_00000008; for (iVar5 = 0; iVar5 < = local_a; iVar5 = iVar5 + 1) {
iVar4 = local_a; FUN_3444_23fe(); iVar2 = FUN_3444_24dc(); if (iVar2 != local_a >> 0xf) {
iVar2 = FUN_3444_24dc(); iVar3 = (iVar2 + local_14 + 1) / 2; if (in_stack_00000012 == 0) {
FUN_27ac_076d(0x3444, & stack0xffde); FUN_27ac_076d(0x27ac, & stack0xffde); FUN_27ac_076d(0x27ac,& stack0xffde); FUN_27ac_076d(0x27ac, & stack0xffde);
}
* piStack000e = iVar3; piStack000e = piStack000e + 1; local_14 = iVar2;
}
iVar2 = FUN_3444_24dc(); if (iVar2 != iVar4) {
FUN_3444_23fe(); iVar4 = FUN_3444_24dc();
iVar2 = (iVar4 + local_16) / 2;
if (in_stack_00000012 == 0) {
FUN_27ac_076d(); FUN_27ac_076d(); FUN_27ac_076d(); FUN_27ac_076d();
}
* piStack000e = iVar2; piStack000e = piStack000e + 1; local_16 = iVar4;
}
if (local_e < 1) {
iVar4 = iVar5 * 4 + 6;
}
else {
iVar4 = (iVar5 - local_a) * 4 + 10; local_a = local_a + - 1;
}
local_e = local_e + iVar4;
}
goto LAB_23e0_04c8;
}
}
else {
if ((0 < in_stack_00000014) & & (0 < in_stack_0000000a)) {
local_a = in_stack_0000000a; if (in_stack_0000000a < in_stack_00000014) {
local_a = in_stack_00000014;
}
in_stack_0000000e = (in_stack_0000000e & 0xffff0000 | (piStack000e + 2)); * piVar1 = local_a; goto LAB_23e0_021a;
}
in_stack_0000000e = (in_stack_0000000e & 0xffff0000 | (piStack000e + 2)); * piVar1 = 0;
}
// LAB_23e0_04c8: return in_stack_0000000e & 0xffff0000 | ZEXT24(piStack000e);
}



fn fun_23e0_04d1(param_1_00: u16, param_1: u16, param_2: u16, param_3: u16)

{
    code * *ppcVar1;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    ppcVar1 = (code * *)
    0xcf74;
    (**ppcVar1)(0x3444, param_1, param_2, param_1, param_2, param_3);
    return;
}



void FUN_23e0_04f2(param_1_00: u16,param_1: i16,param_3: i16,param_2: i16,param_5: i16,param_6: i16
,param_7: i16)

{
let iVar1: i16; let iVar2: i16;
let iVar3: i16; let iVar4: i16;
let iVar5: i16; let iVar6: i16;
let iVar7: i16; let iVar8: i16;
let iVar9: i16;

FUN_3444_02c6(0x39d9);
iVar9 = 0; iVar8 = param_2 / 2;
FUN_3444_4101(0x3444); FUN_3444_4442(0x3444);
FUN_3444_41ff(0x3444); FUN_3444_4472(0x3444);
FUN_3444_44ba(0x3444); FUN_3444_4472(0x3444);
FUN_3444_4101(0x3444); FUN_3444_44f2(0x3444);
iVar1 = FUN_3444_42c7(0x3444); iVar7 = 0xc; iVar6 = - ((param_2 / 2) * 8 + - 0x14); while ( true ) {
iVar2 = param_1 + iVar9; if ((iVar2 < = param_7) & & (param_6 < = iVar2)) {
iVar6 = param_5; FUN_23e0_04d1(0x3444, iVar2,param_3 + iVar8);
}
iVar3 = iVar8 + param_1; if ((iVar3 < = param_7) & & (param_6 < = iVar3)) {
iVar6 = param_5; FUN_23e0_04d1(0x3444, iVar3,param_3 + iVar9);
}
iVar4 = param_1 - iVar9; if ((iVar4 < = param_7) & & (param_6 < = iVar4)) {
iVar6 = param_5; FUN_23e0_04d1(0x3444, iVar4,param_3 - iVar8);
}
iVar5 = param_1 - iVar8; if ((iVar5 < = param_7) & & (param_6 < = iVar5)) {
iVar6 = param_5; FUN_23e0_04d1(0x3444, iVar5,param_3 - iVar9);
}
if ((iVar4 < = param_7) & & (param_6 < = iVar4)) {
iVar6 = param_5; FUN_23e0_04d1(0x3444, iVar4,param_3 + iVar8);
}
if ((iVar5 < = param_7) & & (param_6 < = iVar5)) {
iVar6 = param_5; FUN_23e0_04d1(0x3444, iVar5,param_3 + iVar9);
}
if ((iVar2 < = param_7) & & (param_6 < = iVar2)) {
iVar6 = param_5; FUN_23e0_04d1(0x3444, iVar2,param_3 - iVar8);
}
if ((iVar3 < = param_7) & & (param_6 < = iVar3)) {
iVar6 = param_5; FUN_23e0_04d1(0x3444, iVar3,param_3 - iVar9);
}
if (iVar8 < = iVar9) break; if (iVar1 < 0) {
iVar1 = iVar1 + iVar7; iVar7 = iVar7 + 8; iVar6 = iVar6 + 8; iVar9 = iVar9 + 1;
}
else {
iVar1 = iVar1 + iVar6; iVar7 = iVar7 + 8; iVar6 = iVar6 + 0x10; iVar9 = iVar9 + 1; iVar8 = iVar8 + - 1;
}
}
return;
}



void FUN_23e0_06ef(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16,param_5: u16)

{
code * * ppcVar1; let unaff_DS: u16;

FUN_3444_02c6(0x39d9); ppcVar1 = (code ** )0xcf74; ( * * ppcVar1)(0x3444, param_1, param_2, param_1, param_2,param_5); ppcVar1 = (code * * )0xcf74; ( * * ppcVar1)(0x3444,param_3, param_4, param_3, param_4, param_5); return;
}



void FUN_23e0_0725(param_1_00: u16,param_2_00: i16,param_3: i16,param_1: i16,param_2: i16,
param_6: u16)

{
let iVar1: i16; let iVar2: i16;
let iVar3: i16; let iVar4: i16;
let iVar5: i16; let iVar6: i16;
let iVar7: i16; let iVar8: i16;
let iVar9: i16; let iVar10: i16;
let iVar11: i16; let uVar12: u32;
let uVar13: u16; let uVar14: u16;
let iVar15: i16; let iVar16: i16;

FUN_3444_02c6(0x39d9); if (param_2 < param_1) {
uVar12 = FUN_3444_24d0(0x3444, param_1, param_1 >> 0xf); iVar15 = 0x4557; param_2 = FUN_3444_2364(0x3444, uVar12);
}
else {
uVar12 = FUN_3444_24d0(0x3444, param_2, param_2 >> 0xf); iVar15 = 0x457c; FUN_3444_2364(0x3444, uVar12);
}
iVar1 = - (iVar15 * 2 + - 3); iVar3 = 0; for (iVar11 = 0; iVar11 < = iVar15; iVar11 = iVar11 + 1) {
iVar8 = iVar11 >> 0xf; iVar7 = iVar8; FUN_3444_23fe(0x3444, iVar8, iVar8, iVar11, iVar8, param_1, iVar3, param_2);
iVar2 = FUN_3444_24dc(0x3444); iVar3 = (iVar2 + iVar3 + 1) / 2; iVar9 = iVar15 >> 0xf; iVar10 = param_2 >> 0xf; uVar14 = param_6; iVar16 = param_2; FUN_3444_23fe(0x3444, iVar9, param_2, iVar10, iVar9, param_6); iVar4 = FUN_3444_24dc(0x3444); iVar5 = iVar3 + param_2_00 + 1; iVar3 = param_2_00 - iVar3; FUN_23e0_06ef(0x3444, iVar3, iVar4, iVar5, 1 - (iVar4 - param_3)); iVar6 = iVar4 + param_3 + 1; uVar13 = param_6; FUN_23e0_06ef(0x3444, iVar3, iVar4 + param_3, iVar5,iVar6, param_6); FUN_3444_23fe(0x3444, iVar8, iVar7, iVar6, uVar13); iVar3 = FUN_3444_24dc(0x3444); iVar7 = (iVar3 + param_1) / 2; FUN_3444_23fe(0x3444, param_2, iVar10, iVar9, uVar14, param_6);
iVar4 = FUN_3444_24dc(0x3444); iVar5 = iVar7 + param_2_00 + 1; iVar7 = param_2_00 - iVar7; FUN_23e0_06ef(0x3444, iVar7, - (iVar4 - param_3), iVar5, - (iVar4 - param_3) + 1, param_2, iVar7, iVar4,
iVar5); FUN_23e0_06ef(0x3444, iVar7,iVar4 + param_3, iVar5, iVar4 + param_3 + 1, param_6); if (iVar1 < 1) {
iVar7 = iVar11 * 4 + 6;
}
else {
iVar7 = (iVar11 - iVar15) * 4 + 10; iVar15 = iVar15 + - 1;
}
iVar1 = iVar1 + iVar7; param_1 = iVar3;
iVar3 = iVar2; param_2 = iVar16;
}
return;
}



uint FUN_23e0_0902(param_1_00: u16,uparam_1: i16,uparam_2: i16,uparam_3: i16,uparam_4: i16,
param_5: u16)

{
let puVar1: * mut u16; code * *ppcVar2; let uVar3: u16; let uVar4: u16; let iVar5: i16; let iVar6: i16; let uVar7: u16; let iVar8: i16; let uVar9: u16; let unaff_DS: u16; bool bVar10; ulong uVar11; let uVar12: u16; let uVar13: u16; let lVar14: i32;

uVar7 = param_4; uVar4 = param_1; uVar3 = FUN_3444_02c6(0x39d9); if (param_4 == param_2) {
puVar1 = 0xcfe2; if ( * puVar1 != param_2 & & param_2 < = * puVar1) {
return uVar3;
}
puVar1 = 0xcfe6; param_4 = param_2; if (* puVar1 == param_2 || * puVar1 < param_2) {
return uVar3;
}
}
else {
if (param_3 != param_1) {
if (param_3 < param_1) {
param_1 = param_3; param_3 = uVar4; param_4 = param_2; param_2 = uVar7;
}
uVar4 = 0xcfe4; if (uVar4 < = param_1) {
return uVar4;
}
uVar4 = 0xcfe0; if (param_3 < uVar4) {
return uVar4;
}
iVar5 = param_4 - param_2; iVar6 = FUN_3444_200e(0x3444, iVar5); iVar8 = param_3 - param_1; if (iVar8 < iVar6) {
uVar4 = iVar8 >> 0xf; if (param_2 < param_4) {
puVar1 = 0xcfe2; if ( * puVar1 != param_4 & & param_4 < = * puVar1) {
return param_4;
}
puVar1 = 0xcfe6; if ( * puVar1 == param_2 || * puVar1 < param_2) {
return param_4;
}
uVar13 = 0; uVar11 = FUN_3444_2364(0x3444,0, iVar5, iVar8); iVar5 = (uVar11 >> 0x10); uVar12 = uVar11;
uVar3 = uVar12 >> 1 | ((uVar11 & 0x10000) != 0) << 0xf;
uVar9 = uVar13 - uVar3; uVar7 = uVar9 + 0x8000; uVar3 = ((param_4 - (iVar5 >> 1)) - (uVar13 < uVar3)) + (0x7fff < uVar9); while( true ) {
uVar9 = 0xcfe6; if ((uVar3 < uVar9) & & (puVar1 = 0xcfe4, * puVar1 != param_3 & & param_3 < = * puVar1)) {
while ( true ) {
if (param_3 < param_1) {
return uVar9;
}
uVar12 = 0xcfe2; if (uVar4 < uVar12) break; ppcVar2 = (code * * )0xcf74; uVar12 = ( * * ppcVar2)(0x3444, param_3, uVar3 + 1, param_3, uVar4, param_5); uVar4 = uVar3; uVar9 = uVar11; param_3 = param_3 - 1; puVar1 = 0xcfe0; if ( * puVar1 != param_3 & & param_3 < = * puVar1) {
return uVar12;
}
if (param_1 == param_3) {
uVar9 = param_2 - 1; uVar7 = 0;
uVar3 = uVar9;
}
else {
bVar10 = uVar7 < uVar9; uVar7 = uVar7 - uVar9; uVar3 = (uVar4 - (uVar11 >> 0x10)) - bVar10;
}
}
return uVar12;
}
param_3 = param_3 - 1; puVar1 = 0xcfe0;
if ( * puVar1 != param_3 & & param_3 <= * puVar1) {
return uVar9;
}
if (uVar3 < 0xcfe2) break; uVar4 = uVar3; if (param_1 == param_3) {
uVar7 = 0; uVar3 = param_2 - 1;
}
else {
bVar10 = uVar7 < uVar12; uVar7 = uVar7 - uVar12; uVar3 = (uVar3 - iVar5) - bVar10;
}
}
return uVar7;
}
puVar1 = 0xcfe6; if ( * puVar1 == param_4 || * puVar1 < param_4) {
return param_4;
}
puVar1 = 0xcfe2; if ( * puVar1 != param_2 & & param_2 < = * puVar1) {
return param_4;
}
uVar12 = 0; uVar11 = FUN_3444_2364(0x3444,0, param_2 - param_4, iVar8); uVar7 = uVar11 >> 1 | ((uVar11 & 0x10000) != 0) << 0xf; uVar3 = uVar7 + uVar12; lVar14 = CONCAT22(((long)uVar11 >> 0x11) + param_4 + CARRY2(uVar7, uVar12) + (0x7fff < uVar3), uVar3 + 0x8000); while( true ) {
uVar3 = (lVar14 >> 0x10); uVar7 = 0xcfe2; if ((uVar7 < = uVar3) & & (puVar1 = 0xcfe4, * puVar1 != param_3 & & param_3 < = * puVar1)) {
while ( true ) {
if (param_3 < param_1) {
return uVar7;
}
uVar7 = 0xcfe6; if (uVar7 < = uVar4) break; ppcVar2 = (code * * )0xcf74; uVar3 = ( * * ppcVar2)(0x3444, param_3, uVar4, param_3, (lVar14 >> 0x10) + - 1,
param_5); uVar4 = (lVar14 >> 0x10);
uVar7 = uVar11; param_3 = param_3 - 1;
puVar1 = 0xcfe0; if ( * puVar1 != param_3 & & param_3 < = * puVar1) {
return uVar3;
}
if (param_1 == param_3) {
uVar7 = param_2 + 1; lVar14 = uVar7 << 0x10;
}
else {
lVar14 = uVar11 + lVar14;
}
}
return uVar7;
}
param_3 = param_3 - 1; puVar1 = 0xcfe0;
if ( * puVar1 != param_3 & & param_3 <= * puVar1) {
return uVar7;
}
if (0xcfe6 < = uVar3) break; uVar4 = uVar3; if (param_1 == param_3) {
lVar14 = (param_2 + 1) << 0x10;
}
else {
lVar14 = uVar11 + lVar14;
}
}
return lVar14;
}
iVar5 = FUN_3444_200e(0x3444, iVar5); uVar11 = FUN_3444_2364(0x3444, 0, iVar8, iVar5, iVar5 >> 0xf); uVar4 = uVar11; iVar5 = ((long)uVar11 >> 0x11); if (param_2 < param_4) {
puVar1 = 0xcfe6; if ( * puVar1 == param_2 || * puVar1 < param_2) {
return uVar4;
}
puVar1 = 0xcfe2; if ( * puVar1 != param_4 & & param_4 < = * puVar1) {
return uVar4;
}
lVar14 = CONCAT22(param_1 + iVar5, uVar4 >> 1 | ((uVar11 & 0x10000) != 0) << 0xf); while ( true ) {
iVar5 = (lVar14 >> 0x10); uVar4 = 0xcfe0; if ((uVar4 < = iVar5) & & (puVar1 = 0xcfe2, * puVar1 == param_2 || * puVar1 < param_2)) {
while ( true ) {
if (param_4 < param_2) {
return uVar4;
}
ppcVar2 = (code * * )0xcf74; uVar7 = ( * * ppcVar2)(0x3444, param_1, param_2, (lVar14 >> 0x10),param_2,
param_5); uVar4 = uVar11; param_2 = param_2 + 1; puVar1 = 0xcfe6; if ( * puVar1 == param_2 || * puVar1 < param_2) break; param_1 = (lVar14 >> 0x10) + 1; if (0xcfe4 < param_1) {
return lVar14;
}
if (param_4 == param_2) {
lVar14 = param_3 << 0x10; uVar4 = param_3;
}
else {
lVar14 = uVar11 + lVar14;
}
}
return uVar7;
}
param_2 = param_2 + 1; puVar1 = 0xcfe6;
if ( * puVar1 == param_2 || * puVar1 < param_2) {
return uVar4;
}
param_1 = iVar5 + 1; if (0xcfe4 < param_1) break; if (param_4 == param_2) {
lVar14 = param_3 << 0x10;
}
else {
lVar14 = uVar11 + lVar14;
}
}
return lVar14;
}
puVar1 = 0xcfe2; if ( * puVar1 != param_2 & & param_2 < = * puVar1) {
return uVar4;
}
puVar1 = 0xcfe6; if ( * puVar1 == param_4 || * puVar1 < param_4) {
return uVar4;
}
lVar14 = CONCAT22(param_1 + iVar5, uVar4 >> 1 | ((uVar11 & 0x10000) != 0) << 0xf); while ( true ) {
iVar5 = (lVar14 >> 0x10); uVar4 = 0xcfe0; if ((uVar4 < = iVar5) & & (puVar1 = 0xcfe6, * puVar1 != param_2 & & param_2 < = * puVar1)) {
while ( true ) {
if (param_2 < param_4) {
return uVar4;
}
ppcVar2 = (code * * )0xcf74; uVar7 = ( * * ppcVar2)(0x3444, param_1, param_2, (lVar14 >> 0x10),param_2, param_5); uVar4 = uVar11; param_2 = param_2 - 1; puVar1 = 0xcfe2; if ( * puVar1 != param_2 & & param_2 < = * puVar1) break; param_1 = (lVar14 >> 0x10) + 1; if (0xcfe4 < param_1) {
return lVar14;
}
if (param_4 == param_2) {
lVar14 = param_3 << 0x10; uVar4 = param_3;
}
else {
lVar14 = uVar11 + lVar14;
}
}
return uVar7;
}
param_2 = param_2 - 1; puVar1 = 0xcfe2;
if ( * puVar1 != param_2 & & param_2 <= * puVar1) {
return uVar4;
}
param_1 = iVar5 + 1; if (0xcfe4 < param_1) break; if (param_4 == param_2) {
lVar14 = param_3 << 0x10;
}
else {
lVar14 = uVar11 + lVar14;
}
}
return lVar14;
}
uVar4 = 0xcfe0; if (param_1 < uVar4) {
return uVar4;
}
uVar4 = 0xcfe4; param_3 = param_1; if (uVar4 < = param_1) {
return uVar4;
}
}
ppcVar2 = (code * * )0xcf74; uVar4 = ( * * ppcVar2)(0x3444, param_1, param_2, param_3, param_4, param_5);
return uVar4;
}



void FUN_23e0_0d75(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: i16,param_5: u16)

{
let piVar1: * mut u16; let iVar2: i16; let uVar3: u16; let unaff_DS: u16; let puVar4: * mut u16;

FUN_3444_02c6(0x39d9); if ((0x9c7c | 0x9c7a) == 0) {
FUN_23e0_0902(0x3444, param_1, param_2, param_3,param_4, param_5);
}
else {
puVar4 = CONCAT22(0x9c7c, 0x9c7a); while( true ) {
uVar3 = (undefined2)(puVar4 >> 0x10); iVar2 = puVar4; if ((iVar2 + 2) == - 0x8000) break; 0xcfe0 = * puVar4; 0xcfe2 = (iVar2 + 2); 0xcfe4 = (iVar2 + 4);
0xcfe6 = (iVar2 + 6); piVar1 = 0xcfe4; * piVar1 = * piVar1 + 1;
piVar1 = 0xcfe6; * piVar1 = * piVar1 + 1; iVar2 = param_4; uVar3 = param_5;
FUN_23e0_0902(0x3444, param_1, param_2, param_3); puVar4 = CONCAT22(uVar3, iVar2 + 8);
}
}
return;
}



fn fun_24bf_0004(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    let unaff_ds: u16;

    u_var4 = 0x3444;
    fun_3444_02c6(0x39d9);
    i_var3 = 0;
    loop {
    if (3 < i_var3) {
        DAT_4b2d_ffd3 = 0xf;
        DAT_4b2d_ffd5 = 10;
        DAT_4b2d_ffd7 = 5;
        DAT_4b2d_ffd9 = 0;
        DAT_4b2d_ffdb = 0;
        return;
    }
    for (iVar2 = 0; i_var2 < 10; iVar2 = iVar2 + 1) {
        if ((param_1 == 0) || (param_1 == 1)) {
            ((i_var3 * 10 + i_var2) * 2 + -0x69) = 8;
        } else {
            if (param_1 == 2) {
                i_var1 = FUN_168b_05f1(u_var4, 6);
                i_var1 = i_var1 + 5;
            } else {
                if (param_1 != 3)
                goto
                LAB_24bf_0077;
                i_var1 = FUN_168b_05f1(u_var4, 0x10);
            }
            u_var4 = 0x168b;
            ((i_var3 * 10 + i_var2) * 2 + -0x69) = i_var1;
        }
// LAB_24bf_0077:
    }
    i_var3 = i_var3 + 1;
}
    while (true);
}


// WARNING: Instruction at (ram,0x00028cfb) overlaps instruction at (ram,0x00028cfa)
//
// WARNING: Control flow encountered bad instruction data
// WARNING (jumptable): Unable to track spacebase fully for stack
// WARNING: Removing unreachable block (ram,0x00027c81)
// WARNING: Removing unreachable block (ram,0x00025f00)
// WARNING: Removing unreachable block (ram,0x00025edc)
// WARNING: Removing unreachable block (ram,0x00025f60)
// WARNING: Type propagation algorithm not settling
// WARNING: Could not reconcile some variable overlaps

int * 
FUN_24bf_00ad(param_1_00: u16,undefined4 param_1,int *param_3,undefined2 *param_4,int *param_5
)

{
let puVar1: * mut u16; let pcVar2: String; let pbVar3: * mut u8; let piVar4: * mut u16; char cVar5; code * pcVar6; code * * ppcVar7; undefined4 *puVar8; let puVar9: * mut u16; int * * ppiVar10; let iVar11: i16; let bVar12: u8; let bVar13: u8; let bVar14: u8; let bVar15: u8; undefined uVar16; undefined uVar17; undefined uVar18; undefined uVar19; let bVar20: u8; let bVar21: u8; undefined uVar22; undefined uVar23; let bVar24: u8; let bVar25: u8; let bVar26: u8; undefined uVar27; undefined uVar28; undefined uVar29; let iVar30: i16; let uVar31: u16; let iVar32: i16; let piVar33: *mut u16; let iVar34: i16; let extraout_DX: u16; let extraout_DX_00: u16; let uVar35: u16; char cVar36; let pcVar37: String; let piVar38: * mut u16; let in_ESI: u32; let unaff_DI: String; let pcVar40: String; let uVar41: u16; let uVar42: u16; let uVar43: u16; let unaff_SS: u16; let unaff_DS: u16; bool bVar44; undefined uVar45; let uVar46: u32; let lVar47: i32; let uVar48: u32; let piStackY226: * mut u16; let piStackY222: *mut u16; undefined auStackY214 [6]; let    uStackY208: u16; let uStackY206: u16; undefined auStackY204 [88]; code * pcStackY116; let piStackY110: * mut u16; let iStackY106: i16; let iStackY48: i16; let iStackY46: i16; let iStackY44: i16; let iStackY42: i16; let piStackY40: * mut u16; let local_26: * mut u16; let local_24: * mut u16; let local_22: u16; let local_20: u8; undefined uStackY31; let local_1e: u32;
int local_1a [2]; let uStackY22: u32; let local_e: u8; let bStackY13: u8; let uStackY12: u16; let bStackY10: u8; let bStackY9: u8; let local_8: u8; char cStackY7; let piStackY6: * mut u16; ulong uVar39;

piStackY6 = 0x4ca8; FUN_3444_02c6(0x39d9); piStackY6 = in_ESI; piVar33 = *(int * * )((param_1 * 0xb + param_1._2_2_) * 2 + 0x7696); local_20 = piVar33; uStackY31 = (piVar33 >> 8); if (piVar33 == 0x0) {
return 0x0;
}
local_8 = unaff_SS; bVar24 = local_8; cStackY7 = (unaff_SS >> 8); uVar27 = cStackY7; bStackY10 = & local_1e; bStackY9 = ( &local_1e >> 8); local_e = 0x44;
bStackY13 = 0x34; uStackY12._0_1_ = local_20;
uStackY12._1_1_ = uStackY31; FUN_2b26_0e3b();
uVar41 = (undefined2)(in_ESI >> 0x10); local_26 = ((param_1 * 10 + param_1._2_2_) * 2); local_24 = (local_26 - 0x69); uVar43 = 0xc80c;
iVar34 = * local_24; uVar31 = iVar34 * ((local_1a[0] - local_1e) + -4); uVar35 = uVar31 >> 0xf;
iVar32 = ((((uVar31 ^ uVar35) - uVar35) >> 4 ^ uVar35) - uVar35) + 3; local_8 = iVar32; cStackY7 = (iVar32 >> 8); iVar32 = (local_1a[1] - local_1e._2_2_) + - 4; local_e = iVar32; bStackY13 = (iVar32 >> 8); uVar31 = iVar34 * iVar32; uVar35 = uVar31 >> 0xf;
iVar34 = 4; uVar46 = CONCAT22(uVar35,((((uVar31 ^ uVar35) - uVar35) >> 4 ^ uVar35) - uVar35) + 3); local_22 = uVar43; if (param_3 == 0) {
local_8 = 0x26; cStackY7 = 0x2b; bStackY10 = 0x4c; bStackY9 = 0x4d; FUN_294b_0b7c();
bStackY10 = & local_1e; bStackY9 = ( & local_1e >> 8); uStackY12._0_1_ = 0x4b; uStackY12._1_1_ = 0x29; local_e = 0x56; bStackY13 = 0x4d; local_8 = bVar24; cStackY7 = uVar27; FUN_294b_0d4f(); uVar42 = (param_1 * 2 + 0x7746); local_8 = uVar42; cStackY7 = (uVar42 >> 8);
bStackY10 = 0x4b; bStackY9 = 0x29; uStackY12._0_1_ = 0x66; uStackY12._1_1_ = 0x4d;
FUN_168b_0685(); local_8 = 0x8b; cStackY7 = 0x16; bStackY10 = 0x6c; bStackY9 = 0x4d;
uVar46 = FUN_294b_0c76();
}
uVar45 = cStackY7; bVar15 = local_8; uVar22 = uStackY12._1_1_; bVar20 = uStackY12; uVar16 = bStackY13; bVar12 = local_e; uVar42 = (undefined2)(uVar46 >> 0x10); pcVar40 = (char * )(local_1e + 2);
iVar32 = local_1e._2_2_ + 2; uVar39 = CONCAT22(uVar41, iVar32); if ((local_26[0x3af0] != 7) & & (uVar43 = local_22, CONCAT22(local_22, local_24) == 0)) {
return uVar46;
}
piVar33 = (local_26[0x3af0] - 1); if (0x8 < piVar33) {
return piVar33;
}
piStackY222._0_2_ = (piVar33 * 2);
uVar48 = CONCAT22(uVar43, piStackY222); uVar31 = 0x2000; cVar36 = (uVar46 >> 0x18); local_8 = uVar43; bVar25 = local_8;
cStackY7 = (uVar43 >> 8); uVar28 = cStackY7; local_e = pcVar40; bVar13 = local_e; bStackY13 = (pcVar40 >> 8);
uVar17 = bStackY13; iVar11 = param_5; local_8 = (param_4 >> 0x10); bVar26 = local_8; cStackY7 = (param_4 >> 0x18);
uVar29 = cStackY7; bStackY13 = (param_3 >> 8); uVar18 = bStackY13; uStackY12._0_1_ = (param_3 >> 0x10); bVar21 = uStackY12; uStackY12._1_1_ = (param_3 >> 0x18); uVar23 = uStackY12._1_1_; local_e = param_4; bVar14 = local_e; bStackY13 = (param_4 >> 8); uVar19 = bStackY13;
local_e = bVar12; bStackY13 = uVar16; uStackY12._0_1_ = bVar20; uStackY12._1_1_ = uVar22;
local_8 = bVar15; cStackY7 = uVar45; switch(piVar33) {
case 0x0: pcVar2 = & stack0x08c2 + pcVar40;
* pcVar2 = * pcVar2 + '\x01'; if (local_26 != 0x0) {
cVar5 = 0x9c65; if (cVar5 < 9) {
iVar30 = cVar5 * 2; uVar45 = iVar30 == 0; uVar41 = 0x2000; bStackY13 = (param_1 >> 8); bVar15 = bStackY13; bStackY13 = uVar16; switch(cVar5) {
case '\0': cVar36 = (iVar30 + 0x21); uVar46 = CONCAT22(local_1a[1],pcVar40); while ( true ) {
local_1a[1] = (uVar46 >> 0x10); iVar32 = uVar46; uVar43 = (undefined2)(uVar48 >> 0x10); iVar34 = uVar39; piVar33 = uVar48; if ((((cVar36 == '\x06') || ((iVar32 + 0x21) == '\a')) & & ((iVar32 + 0x24) != - 1)) & & (piVar33 = param_1, * (int * * )(iVar32 + 0x26) == param_1)) {
uStackY12._1_1_ = bVar15 | (uVar39 >> 8); uStackY12._0_1_ = uVar39; local_e = uVar41; bStackY13 = (uVar41 >> 8); uVar41 = 0x2ecc; bStackY10 = param_1._2_1_; bStackY9 = param_1._3_1_; local_8 = param_3; cStackY7 = uVar18; piVar33 = FUN_2ecc_00a8();
}
uVar31 = iVar34 + 1; uVar39 = uVar31;
if (unaff_DI < = uVar31) break; local_8 = uVar31; cStackY7 = (uVar31 >> 8); bStackY10 = local_24; bStackY9 = (local_24 >> 8); uStackY12._0_1_ = uVar41; uStackY12._1_1_ = (uVar41 >> 8); uVar41 = 0x2b26; local_e = 0xf7;
bStackY13 = 0xe8; uVar48 = FUN_2b26_0008();
cVar36 = (uVar48 + 0x21); uVar46 = uVar48;
}
return piVar33; case '\x01': piVar4 = (local_1e._2_2_ + 8); * piVar4 = *piVar4 + piVar33 * - 2; bStackY10 = iVar32; bStackY9 = (iVar32 >> 8);
uStackY12._0_1_ = 0; uStackY12._1_1_ = 0x20; local_e = 0xe; bStackY13 = 3;
local_8 = param_1._2_1_; cStackY7 = param_1._3_1_; FUN_200c_0153(); bStackY10 = & uStackY12; bStackY9 = ( & uStackY12 >> 8); local_e = uVar39; bStackY13 = (uVar39 >> 8); uStackY12._0_1_ = param_1._2_1_; uStackY12._1_1_ = param_1._3_1_;
local_8 = bVar24; cStackY7 = uVar27; FUN_200c_00a0(); if (unaff_DI == (char * )0x0) {
iVar34 = CONCAT11(cStackY7, local_8); *param_3 = iVar34; piVar4 = param_3 + 2;
if ( * piVar4 != iVar34 & & iVar34 <= * piVar4) {
return 0x1;
}
}
return 0x0; case '\x02': pcVar2 = pcVar40;
* pcVar2 = * pcVar2 + cVar36; * (bool * )(local_1e._2_2_ + - 0x26f2) = (POPCOUNT((iVar34 >> 8) - iVar30) & 1) == 0;
piVar4 = (iVar30 + iVar32); * piVar4 = * piVar4 + (piStackY222 ^ 0x9a2a);
uVar43 = 0xc86e; 0x9c6e = 0x7faa + - 1; piVar33 = (0x7fac + - 1);
* (int * * )0x9c70 = piVar33;
0x97ea = 1; return piVar33; case '\x03':
while ( true ) {
piVar33 = * (int * * )0xcfe0;
iVar34 = uVar39; if ((piVar33 < = piStackY222) & & (piVar4 = 0xcfe6, *piVar4 != iVar34 & & iVar34 < = * piVar4)) {
while ( true ) {
iVar34 = uVar39; if (iVar34 < param_3._2_2_) {
return piVar33;
}
bStackY10 = uVar39; bStackY9 = (uVar39 >> 8); uStackY12._0_1_ = piStackY222; uStackY12._1_1_ = (piStackY222 >> 8);
uStackY22 = CONCAT22(0x4b3e, uStackY22); ppcVar7 = (code * * )0xcf74; local_e = bStackY10; bStackY13 = bStackY9; local_8 = bVar14;
cStackY7 = uVar19; piVar33 = ( * * ppcVar7)(); uVar31 = iVar34 - 1;
uVar39 = uVar31; puVar1 = 0xcfe2; if (* puVar1 != uVar31 & & uVar31 < = *puVar1) break; if (0xcfe4 < piStackY222 + 1) {
return piStackY6;
}
if (param_3._2_2_ == uVar31) {
piStackY6 = 0x0; piVar33 = param_3; piStackY222._0_2_ = param_3;
}
else {
piVar33 = CONCAT11(bStackY13, local_e); bVar44 = CARRY2(piStackY6, piVar33); piStackY6 = (piStackY6 + piVar33); piStackY222._0_2_ =
(piStackY222 + bVar44 + CONCAT11(uStackY12._1_1_, uStackY12));
}
}
return piVar33;
}
uVar31 = iVar34 - 1; uVar39 = uVar31;
puVar1 = 0xcfe2; if ( * puVar1 != uVar31 & & uVar31 < = * puVar1) {
return piVar33;
}
if (0xcfe4 < piStackY222 + 1) break;
if (param_3._2_2_ == uVar31) {
piStackY6 = 0x0; piStackY222._0_2_ = param_3;
}
else {
bVar44 = CARRY2(piStackY6, CONCAT11(uVar16,bVar12)); piStackY6 = (piStackY6 + CONCAT11(uVar16, bVar12)); piStackY222._0_2_ = (piStackY222 + bVar44 + CONCAT11(uVar22,bVar20));
}
}
return piStackY6; case '\x04': loop {
piVar33 = uVar39; local_8 = uVar41; cStackY7 = (uVar41 >> 8); bStackY10 = 100; bStackY9 = 0x8c; FUN_3444_402c(); bStackY10 = 0x44; bStackY9 = 0x34; uStackY12._0_1_ = 0x6d; uStackY12._1_1_ = 0x8c; FUN_3444_402c(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34; local_e = 0x72; bStackY13 = 0x8c; FUN_3444_44f7(); if ((bool)uVar45) {
piStackY40 = ( & stack0xfff0 + piVar33 * 2); if ( * piStackY40 != 0) {
if (( * piStackY40 & 0x80) == 0) {
if (( * piStackY40 & 0x40) != 0) {
iVar34 = (CONCAT11(uStackY12._1_1_, uStackY12) + 6); goto LAB_2874_0552;
}
if (( * piStackY40 & 0x20) == 0) {
iVar34 = (CONCAT11(uStackY12._1_1_, uStackY12) + 4);
}
else {
iVar34 = CONCAT13(bStackY9, CONCAT12(bStackY10,
CONCAT11(uStackY12._1_1_,
uStackY12)));
}
iVar32 = piVar33 << 2; goto LAB_2874_06e0;
}
iVar34 = (CONCAT11(uStackY12._1_1_, uStackY12) + 2);
// LAB_2874_0552:
local_1a[piVar33 * 2] = iVar34;
}
}
else {
piStackY40 = ( & stack0xfff0 + piVar33 * 2); if (( * piStackY40 & 0x80) == 0) {
if (( * piStackY40 & 0x40) != 0) {
iStackY44 = (CONCAT11(uStackY12._1_1_, uStackY12) + 6); pcVar40 = (piVar33 * 4); local_26 = (iStackY44 - local_1a[piVar33 * 2]);
local_8 = 0x44; cStackY7 = 0x34; bStackY10 = 0x4a; bStackY9 = 0x8d; FUN_3444_4101();
bStackY10 = 0x44; bStackY9 = 0x34; uStackY12._0_1_ = 0x52; uStackY12._1_1_ = 0x8d;
FUN_3444_43b3(); bStackY10 = 0x44; bStackY9 = 0x34; uStackY12._0_1_ = 0x5a; uStackY12._1_1_ = 0x8d; FUN_3444_4101(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34;
local_e = 0x5f; bStackY13 = 0x8d; FUN_3444_44f2(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34; local_e = 100; bStackY13 = 0x8d; FUN_3444_45be(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34; local_e = 0x69; bStackY13 = 0x8d; uVar43 = FUN_3444_42c7(); (pcVar40 + & local_1e + 2) = uVar43; iVar34 = iStackY44; goto LAB_2874_062f;
}
}
else {
iStackY42 = (CONCAT11(uStackY12._1_1_, uStackY12) + 2); pcVar40 = (piVar33 * 4); local_26 = (iStackY42 - local_1a[piVar33 * 2]);
local_8 = 0x44; cStackY7 = 0x34; uVar31 = 0x3444; bStackY10 = 0xfb; bStackY9 = 0x8c;
FUN_3444_4101(); code_r0x00028cfe: bStackY10 = uVar31;
bStackY9 = (uVar31 >> 8); uStackY12._0_1_ = 3; uStackY12._1_1_ = 0x8d; FUN_3444_43b3(); bStackY10 = 0x44; bStackY9 = 0x34; uStackY12._0_1_ = 0xb; uStackY12._1_1_ = 0x8d; FUN_3444_4101(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34; local_e = 0x10; bStackY13 = 0x8d; FUN_3444_44f2(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34; local_e = 0x15; bStackY13 = 0x8d; FUN_3444_45be(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34; local_e = 0x1a; bStackY13 = 0x8d; uVar43 = FUN_3444_42c7(); (pcVar40 + & local_1e + 2) = uVar43; iVar34 = iStackY42;
// LAB_2874_062f:
((register0x00000010 + - 0x1a) + pcVar40) = iVar34; uStackY12._0_1_ = bStackY10; uStackY12._1_1_ = bStackY9; local_e = bStackY10; bStackY13 = bStackY9; uStackY22 = 0x34448d80; iVar34 = FUN_2874_0004(); * piStackY40 = iVar34;
}
if (( * piStackY40 & 0x20) == 0) {
if (( * piStackY40 & 0x10) == 0) goto LAB_2874_06e3; iStackY48 = (CONCAT11(uStackY12._1_1_, uStackY12) + 4); iVar32 = piVar33 * 4; local_26 = (iStackY48 - ( & local_1e + iVar32 + 2));
local_8 = 0x44; cStackY7 = 0x34; bStackY10 = 0xfb; bStackY9 = 0x8d; piVar38 = piVar33;
FUN_3444_4101(); bStackY10 = 0x44; bStackY9 = 0x34; uStackY12._0_1_ = 3; uStackY12._1_1_ = 0x8e; FUN_3444_43cb(); bStackY10 = 0x44; bStackY9 = 0x34; uStackY12._0_1_ = 0xb; uStackY12._1_1_ = 0x8e; FUN_3444_4101(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34; local_e = 0x10; bStackY13 = 0x8e; FUN_3444_44f2(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34; local_e = 0x15; bStackY13 = 0x8e; FUN_3444_45be();
uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34; local_e = 0x1a; bStackY13 = 0x8e;
iVar34 = FUN_3444_42c7(); local_1a[piVar33 * 2] = iVar34; iVar34 = iStackY48; piVar33 = piVar38;
}
else {
iStackY46 = CONCAT13(bStackY9, CONCAT12(bStackY10,
CONCAT11(uStackY12._1_1_,
uStackY12))); iVar32 = piVar33 * 4; local_26 = (iStackY46 - ( & local_1e + iVar32 + 2)); local_8 = 0x44; cStackY7 = 0x34;
bStackY10 = 0xaf; bStackY9 = 0x8d; piVar38 = piVar33; FUN_3444_4101(); bStackY10 = 0x44;
bStackY9 = 0x34; uStackY12._0_1_ = 0xb7;
uStackY12._1_1_ = 0x8d; FUN_3444_43cb();
bStackY10 = 0x44; bStackY9 = 0x34; uStackY12._0_1_ = 0xbf; uStackY12._1_1_ = 0x8d;
FUN_3444_4101(); uStackY12._0_1_ = 0x44;
uStackY12._1_1_ = 0x34; local_e = 0xc4;
bStackY13 = 0x8d; FUN_3444_44f2(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34;
local_e = 0xc9; bStackY13 = 0x8d; FUN_3444_45be(); uStackY12._0_1_ = 0x44; uStackY12._1_1_ = 0x34; local_e = 0xce; bStackY13 = 0x8d; iVar34 = FUN_3444_42c7(); local_1a[piVar33 * 2] = iVar34; iVar34 = iStackY46; piVar33 = piVar38;
}
// LAB_2874_06e0:
( & local_1e + iVar32 + 2) = iVar34;
}
// LAB_2874_06e3:
uVar41 = 0x3444; uVar31 = piVar33 + 1;
while ( true ) {
uVar39 = uVar31; uVar45 = uVar31 == 2;
if (uVar31 < 2) break; local_8 = param_5; bVar24 = local_8; cStackY7 = (param_5 >> 8); uVar27 = cStackY7; bStackY10 = uStackY22; bStackY9 = (uStackY22 >> 8); uStackY12._0_1_ = local_1a[1]; uStackY12._1_1_ = (local_1a[1] >> 8); local_e = local_1a[0]; bStackY13 = (local_1a[0] >> 8); uStackY22 = CONCAT22(0x8e3f,uStackY22); ppcVar7 = (code * * )0xcfb0; ( * * ppcVar7)();
uVar39 = CONCAT11(uStackY12._1_1_, uStackY12); loop {
iVar34 = uVar39; uVar31 = iVar34 + 8;
uVar39 = uVar31; if ((iVar34 + 10) == - 0x8000) {
return CONCAT11(bStackY9, bStackY10);
}
local_8 = bStackY10; cStackY7 = bStackY9; bStackY10 = uVar31; bStackY9 = (uVar31 >> 8); local_e = param_3; bStackY13 = uVar18; uStackY12._0_1_ = bVar21; uStackY12._1_1_ = uVar23; FUN_2874_0004(); local_8 = bStackY10; cStackY7 = bStackY9; bStackY10 = uVar39; bStackY9 = (uVar39 >> 8); uVar35 = 0x3444;
local_e = bVar14; bStackY13 = uVar19; uStackY12._0_1_ = bVar26; uStackY12._1_1_ = uVar29;
uVar31 = FUN_2874_0004(); local_e = uVar31;
bStackY13 = (uVar31 >> 8);
} while ((uVar35 & uVar31) != 0); uStackY12._0_1_ = uVar39; uStackY12._1_1_ = (uVar39 >> 8); if ((uVar31 == 0) & & (uVar35 == 0)) {
uStackY22 = CONCAT22(0x8e62, uStackY22); ppcVar7 = (code * * )0xcfb0; local_e = bVar21; bStackY13 = uVar23; uStackY12._0_1_ = bVar14; uStackY12._1_1_ = uVar19; bStackY10 = bVar26; bStackY9 = uVar29; local_8 = bVar24;
cStackY7 = uVar27; piVar33 = ( * * ppcVar7)(); return piVar33;
}
uVar31 = 0;
}
} while ( true ); case '\x05':
// WARNING: Bad instruction - Truncating control flow here
halt_baddata(); case '\x06': break; case '\a':
(uVar39 + 8) = unaff_DS; bStackY10 = 0; bStackY9 = 0x20; uStackY12._0_1_ = 1; uStackY12._1_1_ = 7; bStackY13 = uVar16; local_8 = bVar25; cStackY7 = uVar28;
lVar47 = FUN_2692_05ab(); iVar34 = uVar39;
uVar43 = 0xc6c0; 0x5d7c = (lVar47 + 0x111); 0x5d7e = ((lVar47 + 0x111) >> 0x10); bStackY10 = 0x4f; bStackY9 = 0; local_e = param_1; bVar12 = local_e; uStackY208 = 0x5d2c; uStackY206 = 0x5b2d; uStackY22 = 0x26920733; bStackY13 = bVar15; uStackY12._0_1_ = param_1._2_1_; uStackY12._1_1_ = param_1._3_1_; piVar33 = FUN_3444_17d0(); if (piVar33 != 0x0) {
bStackY10 = 0x4f; bStackY9 = 0; uStackY22 = 0x34440754; local_e = bVar12; bStackY13 = bVar15;
uStackY12._0_1_ = param_1._2_1_; uStackY12._1_1_ = param_1._3_1_; piVar33 = FUN_3444_17a6(); * (undefined * )0x5d7b = 0; if (( * 0x821 & 1) != 0) {
bStackY10 = 0x44; bStackY9 = 0x34; uStackY12._0_1_ = 0x75; uStackY12._1_1_ = 7;
FUN_294b_0b7c(); bStackY10 = 0x1c; bStackY9 = 1; uStackY12._0_1_ = uStackY206; uStackY12._1_1_ = (uStackY206 >> 8); local_e = uStackY208; bStackY13 = (uStackY208 >> 8); uStackY22 = 0x294b078d; FUN_200c_000c();
bStackY10 = 1; bStackY9 = 0; uStackY12._0_1_ = 0x4b; uStackY12._1_1_ = 0x29;
local_e = 0x99; bStackY13 = 7; FUN_294b_02f2(); uVar31 = CONCAT11(bStackY9, bStackY10); uStackY12._0_1_ = & uStackY12; uStackY12._1_1_ = ( & uStackY12 >> 8);
local_e = 0x1c; bStackY13 = 1; uVar42 = 0x2b26; uVar46 = 0x294b07a8; bStackY10 = bVar24;
bStackY9 = uVar27; FUN_2b26_0e3b(); uVar43 = 0xc6c2; uVar41 = extraout_DX; pcVar40 = unaff_DI;
if (0x1f19 < piStackY6) {
bStackY10 = 0x26; bStackY9 = 0x2b; uVar42 = 0x1862; uStackY12._0_1_ = 0xbe; uStackY12._1_1_ = 7; FUN_1862_2340(); uVar41 = extraout_DX_00; pcVar40 = unaff_DI;
}
piVar33 = piStackY6; uVar16 = cStackY7; bVar20 = local_8; cVar36 = 0x9c65; if (cVar36 < 9) {
iVar32 = cVar36 * 2; local_8 = uVar43;
bVar14 = local_8; cStackY7 = (uVar43 >> 8); uVar22 = cStackY7; switch(cVar36) {
case '\0': (iVar34 + 6) = uVar31; uVar41 = (undefined2)(param_5 >> 0x10); * param_5 = (iVar32 + 4) + 1; (iVar11 + 4) = (param_1)[2]; uVar43 = (iVar32 + 4); if ((param_4._2_2_ | param_4) != 0) {
* param_4 = uVar46; (param_4 + 2) = (uVar46 >> 0x10); (param_4 + 4) = uVar43; (param_4 + 6) = CONCAT11(uStackY12._1_1_, uStackY12); (param_4 + 10) = 0x8000;
}
(iVar11 + 10) = 0x8000; return (iVar11 + 8); case '\x01': uVar31 = uVar31 | 0x7fda; bStackY10 = uVar31; bStackY9 = (uVar31 >> 8); uStackY22 = 0x20007e2b; ppcVar7 = (code * * )0xcf74;
local_e = param_3; bStackY13 = uVar18; uStackY12._0_1_ = bVar21; uStackY12._1_1_ = uVar23;
local_8 = bVar20; cStackY7 = uVar16; ( ** ppcVar7)(); piStackY6 = param_3._2_2_; local_e = 0; bStackY13 = 0x20;
uStackY12._0_1_ = bVar12; uStackY12._1_1_ = bVar15; bStackY10 = param_1._2_1_; bStackY9 = param_1._3_1_; local_8 = param_3; cStackY7 = uVar18; piVar33 = FUN_27ac_053d(); return piVar33; case '\x02': if (( * (iVar32 + 0x804) & 1) == 0) {
uVar43 = 0xc88c; pcVar6 = * (code ** )0xa43a; piStackY6 = 0xa43c; local_8 = pcVar6; cStackY7 = (pcVar6 >> 8); bStackY10 = bVar14; bStackY9 = uVar22; if ((piStackY6 | pcVar6) != 0) {
uStackY12._0_1_ = 0; uStackY12._1_1_ = 0x20; local_e = 0x85; bStackY13 = 0xb8;
( * pcVar6)();
}
uVar43 = 0x9820; uStackY12._0_1_ = 1;
uStackY12._1_1_ = 0; local_e = 0;
bStackY13 = 0x20; FUN_27ac_0287(); uStackY12._0_1_ = 0xac; uStackY12._1_1_ = 0x27;
local_e = 0x9d; bStackY13 = 0xb8; FUN_2d56_032c(); iVar34 = 0x992c; if (iVar34 != - 0x8000) {
uStackY12._0_1_ = iVar34; uStackY12._1_1_ = (iVar34 >> 8); local_e = 0x56; bStackY13 = 0x2d; FUN_2b26_0402();
}
uVar41 = 0xc88a; pbVar3 = (pcVar40 + 0x804); * pbVar3 = * pbVar3 | 1;
(pcVar40 + 0x80d) = param_1._2_2_;
* (int * * )(pcVar40 + 0x80f) = param_3; local_e = 0x56; bStackY13 = 0x2d; uStackY12._0_1_ = bVar12; uStackY12._1_1_ = bVar15; FUN_2b26_00d1(); local_e = 0x56; bStackY13 = 0x2d; uStackY12._0_1_ = bVar12; uStackY12._1_1_ = bVar15; FUN_294b_0219(); uVar41 = 0xc892; if ((0xa438 | 0xa436) != 0) {
uStackY12._0_1_ = 0; uStackY12._1_1_ = 0; local_e = 0x4b; bStackY13 = 0x29;
( * 0x294b)();
}
local_e = 0x4b; bStackY13 = 0x29; uStackY12._0_1_ = bVar12; uStackY12._1_1_ = bVar15;
FUN_294b_02f2(); local_e = 0x4b; bStackY13 = 0x29; uStackY12._0_1_ = bVar12; uStackY12._1_1_ = bVar15; FUN_2b26_048e(); uStackY12._0_1_ = 0x4b; uStackY12._1_1_ = 0x29;
local_e = 0x12; bStackY13 = 0xb9; FUN_294b_03be(); local_e = 0x4b; bStackY13 = 0x29;
uStackY12._0_1_ = bVar12; uStackY12._1_1_ = bVar15; FUN_2b26_0363(); uStackY12._0_1_ = 0x4b; uStackY12._1_1_ = 0x29; local_e = 0x1f; bStackY13 = 0xb9; FUN_2d56_03f0();
uStackY12._0_1_ = uVar43; uStackY12._1_1_ = (uVar43 >> 8); local_e = 0x56; bStackY13 = 0x2d; piVar33 = FUN_27ac_0287();
}
else {
local_e = 0; bStackY13 = 0x20; uStackY12._0_1_ = bVar12; uStackY12._1_1_ = bVar15;
bStackY10 = local_8; bStackY9 = cStackY7; local_8 = bVar20; cStackY7 = uVar16; piVar33 = FUN_2b26_09bf();
}
return piVar33; case '\x03': out(0x67,uVar31); if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar41, CONCAT11((uVar31 >> 8), 8));
}
bStackY10 = 0x7e; bStackY9 = 0; local_8 = bVar20; cStackY7 = uVar16; uVar46 = FUN_2fad_0189(); uVar43 = (undefined2)(uVar46 >> 0x10); piVar33 = uVar46; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar43, 0xff08); piVar33 = 0x5; out(uVar43, 5);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
piStackY6 = 0x2000; local_8 = 0xc3; cStackY7 = 0; piVar33 = FUN_2692_01e8();
}
}
else {
if (0x853e != '\0') {
piStackY6 = 0x2000; local_8 = 0xb4; cStackY7 = 0; piVar33 = FUN_2692_0562();
}
}
}
pcVar2 = (char * )0x7fcc; * pcVar2 = * pcVar2 + - 1; return piVar33;
case '\x04': piStackY6 = 0xff61; local_8 = bVar20; cStackY7 = uVar16; FUN_3444_1f26(); piStackY6 = 0xff95; FUN_3444_1f26(); ppiVar10 = *(int * * * )(pcVar40 + -0xe); uVar43 = (pcVar40 + - 4); * ppiVar10 = piVar33; (ppiVar10 + 2) = uVar43; piVar33 = FUN_3143_1850(); return piVar33; case '\x06': 0x8faa = uVar31; 0x8fa8 = (iVar32 + 2); uVar46 = * ff * (undefined4 *)0x98d2; 0x8fa4 = uVar46; 0x8fa6 = (uVar46 >> 0x10); puVar8 = ff * ff0x98b8; if ((puVar8 >> 0x10) != 0) {
puVar9 = * puVar8; uVar43 = (undefined2)(puVar9 >> 0x10); 0x8fa0 = puVar9; 0x8fa2 = uVar43; 0x8faa = * puVar9;
0x8fa8 = (puVar9 + 2); uVar46 = * ff * ff0x98b4; 0x8fa4 = uVar46; 0x8fa6 = (uVar46 >> 0x10);
}
uVar43 = 0x7e2c; bStackY10 = uVar43; bStackY9 = (uVar43 >> 8); 0x7e2c = 1; uStackY12._0_1_ = iVar34; uStackY12._1_1_ = (iVar34 >> 8); uVar31 = 0xcf62; uVar35 = uVar31 & 0xfff8; uVar43 = 0x8fac; iVar34 = 0xcf64; 0x854c = uVar35;
0x854e = iVar34; iVar32 = iVar34 + 0x8fa8;
local_1a[1] = uVar35 + 0x8faa + 7; 0x8552 = local_1a[1]; 0x8550 = iVar32; uStackY22 = CONCAT22(uVar43, iVar32); local_1e = CONCAT22(uVar35, 0x2000);
local_20 = 0x94; uStackY31 = 0x77; ppcVar7 = (code * * )0xcf88; local_1a[0] = iVar34; local_e = bVar13; bStackY13 = uVar17; local_8 = bVar20; cStackY7 = uVar16;
( * * ppcVar7)(); uStackY22 = 0xff0f2000; local_1a[1] = 0x77a4; ppcVar7 = (code * * )0xcf68; ( ** ppcVar7)(); ppcVar7 = (code * * )0xcfa4; ( * * ppcVar7)(); 0x7e2c = 0; uStackY22 = CONCAT22(iVar34, uVar31); local_1a[1] = 0x2000; local_1a[0] = 0x77bd;
FUN_2692_0042(); ppcVar7 = (code * *)0xcfa0; ( * * ppcVar7)(); uStackY22 = CONCAT22(iVar34, uVar31);
local_1a[1] = 0x2692; local_1a[0] = 0x77d1; FUN_2692_001f(); 0x7e2c = CONCAT11(bStackY9, bStackY10); return 0x0;
case '\a': uVar43 = 0xc88a; piVar33 = *(int * * )(CONCAT11(bStackY9,bStackY10) + 0x811); if (((CONCAT11(bStackY9, bStackY10) + 0x813) | piVar33) != 0) {
uStackY12._0_1_ = 0; uStackY12._1_1_ = 0x20; local_e = 0x27; bStackY13 = 0xb8;
bStackY10 = bVar12; bStackY9 = bVar15; local_8 = bVar20; cStackY7 = uVar16; piVar33 = ( *0xb827)();
}
return piVar33; case '\b': bStackY10 = 0x2f;
bStackY9 = 0x5d; local_8 = bVar20; cStackY7 = uVar16; ( * pcStackY116)(); uVar43 = 0xff24; bStackY10 = uVar43; bStackY9 = (uVar43 >> 8); uStackY12._0_1_ = 0; uStackY12._1_1_ = 0x20; local_e = 0x3b; bStackY13 = 0x5d; local_8 = bVar14;
cStackY7 = uVar22; FUN_24bf_0d15(); local_8 = 0; cStackY7 = 0x20; bStackY10 = 0x41;
bStackY9 = 0x5d; FUN_24bf_0d43(); local_8 = 0; cStackY7 = 0x20; bStackY10 = 0x46;
bStackY9 = 0x5d; piVar33 = FUN_294b_03be();
return piVar33;
}
bStackY10 = 0; bStackY9 = 0x20; uStackY12._0_1_ = 0x7d; uStackY12._1_1_ = 8;
local_8 = bVar20; cStackY7 = uVar16; uVar46 = FUN_2692_05ab(); uVar43 = 0xc6d8; 0xfff1 = uVar46; 0xfff3 = (uVar46 >> 0x10); bStackY10 = 0x92; bStackY9 = 0x26; uStackY12._0_1_ = 0x8f; uStackY12._1_1_ = 8; lVar47 = FUN_2692_05ab(); uVar43 = 0xc6c6; 0x5d80 = (lVar47 + 0x111); 0x5d82 = ((lVar47 + 0x111) >> 0x10); bStackY10 = 0x4f; bStackY9 = 0;
uStackY22._0_2_ = 0x8bf; uStackY22._2_2_ = 0x2692; local_e = bVar12; bStackY13 = bVar15;
uStackY12._0_1_ = param_1._2_1_; uStackY12._1_1_ = param_1._3_1_; piVar33 = FUN_3444_17d0(); if (piVar33 != 0x0) {
bStackY10 = 0x4f; bStackY9 = 0; uStackY22._0_2_ = 0x8de; uStackY22._2_2_ = 0x3444;
local_e = bVar12; bStackY13 = bVar15; uStackY12._0_1_ = param_1._2_1_; uStackY12._1_1_ = param_1._3_1_; piVar33 = FUN_3444_17a6();
* (undefined * )0xc46 = 0; if (( * 0x804 & 1) != 0) {
bStackY10 = 0x44; bStackY9 = 0x34; uStackY12._0_1_ = 0xff; uStackY12._1_1_ = 8;
FUN_294b_0b7c(); bStackY10 = 0x19; bStackY9 = 0; uStackY12._0_1_ = uStackY22._2_2_;
uStackY12._1_1_ = (uStackY22._2_2_ >> 8); local_e = uStackY22; bStackY13 = (uStackY22 >> 8); local_1a[0] = 0x15b7; local_1a[1] = 0x5b2d;
uStackY22 = 0x294b091b; FUN_200c_000c(); bStackY10 = 0; bStackY9 = 0; uStackY12._0_1_ = 0x4b; uStackY12._1_1_ = 0x29; local_e = 0x26; bStackY13 = 9; FUN_294b_02f2();
uStackY12._0_1_ = & bStackY10; uStackY12._1_1_ = ( & bStackY10 >> 8); local_e = 0x19; bStackY13 = 0; bStackY10 = bVar24; bStackY9 = uVar27; FUN_2b26_0e3b(); piStackY6 = (piStackY6 + - 1); uStackY12._0_1_ = & bStackY10; uStackY12._1_1_ = (& bStackY10 >> 8); local_e = 0x26; bStackY13 = 0x2b; bStackY10 = bVar24; bStackY9 = uVar27; FUN_294b_077b(); uVar43 = 0xc6dc; local_1e = CONCAT22(uVar43, 0xff30);
iVar34 = 0xff30 << 1; bStackY10 = iVar34; bStackY9 = (iVar34 >> 8);
uStackY12._0_1_ = 0xff; uStackY12._1_1_ = 0xff; local_e = 0x2d; bStackY13 = 0x5b;
uVar43 = 0x3444; uStackY22 = CONCAT22(0x96e,uStackY22); FUN_3444_1f84(); if (0xd21 == '\0') {
for (iVar34 = 0; * local_1e != iVar34 & & iVar34 < = * local_1e; iVar34 = iVar34 + 1) {
bStackY10 = 0; bStackY9 = 0; uStackY12._0_1_ = iVar34; uStackY12._1_1_ = (iVar34 >> 8); local_e = uVar43; bStackY13 = (uVar43 >> 8); uVar43 = 0x154b; FUN_154b_06f7();
}
}
else {
for (iVar34 = 0; * local_1e != iVar34 & & iVar34 < = * local_1e; iVar34 = iVar34 + 1) {
bStackY10 = 0; bStackY9 = 0; uStackY12._0_1_ = iVar34; uStackY12._1_1_ = (iVar34 >> 8); local_e = uVar43; bStackY13 = (uVar43 >> 8); uVar43 = 0x154b; FUN_154b_07f7();
}
}
bStackY10 = uVar43; bStackY9 = (uVar43 >> 8); uStackY12._0_1_ = 0xb2; uStackY12._1_1_ = 9; FUN_294b_03be(); uStackY12._0_1_ = & bStackY10; uStackY12._1_1_ = ( & bStackY10 >> 8); local_e = local_1a[1]; bStackY13 = (local_1a[1] >> 8); uStackY22 = CONCAT22(0x9c1, uStackY22); bStackY10 = bVar24;
bStackY9 = uVar27; iVar34 = FUN_200c_00a0();
0x1118 = iVar34; if (iVar34 != 0) {
uStackY12._0_1_ = & stack0xffee; uStackY12._1_1_ = ( & stack0xffee >> 8); local_e = 0x19; bStackY13 = 0; iVar34 = 0x9de; bStackY10 = bVar24; bStackY9 = uVar27; FUN_2b26_0e3b(); uVar43 = 0xc6cc; local_22 = 0xfff5; local_20 = uVar43; uStackY31 = (uVar43 >> 8); 0xfff5 = CONCAT11(bStackY9, bStackY10) - iVar34; local_24 = * (int * * )0xc6c8; local_26 = 0xfff7; 0xfff7 = piStackY6 + ( - 1 - iVar34); if (0x7faa == 0x140) {
iVar34 = 8;
}
else {
iVar34 = 0x10;
}
piVar4 = CONCAT13(uStackY31, CONCAT12(local_20,0xfff5)); * piVar4 = * piVar4 / iVar34; CONCAT22(local_24, 0xfff7) = CONCAT22(local_24, 0xfff7) / iVar34; bStackY10 = 0; bStackY9 = 0; uStackY12._0_1_ = 0x26; uStackY12._1_1_ = 0x2b; local_e = 0x3e; bStackY13 = 10; FUN_294b_02f2();
bStackY10 = local_1a[1]; bStackY9 = (local_1a[1] >> 8); uStackY12._0_1_ = local_1a[0]; uStackY12._1_1_ = (local_1a[0] >> 8); local_e = 0x4b; bStackY13 = 0x29;
FUN_200c_0153();
}
bStackY10 = 0x4b; bStackY9 = 0x29; uStackY12._0_1_ = 0x50; uStackY12._1_1_ = 10;
piVar33 = FUN_294b_0c76();
}
}
return piVar33;
}
uStackY12._0_1_ = & uStackY12; uStackY12._1_1_ = ( & uStackY12 >> 8); local_e = uVar42; bStackY13 = (uVar42 >> 8); bStackY10 = bVar24; bStackY9 = uVar27;
FUN_294b_077b(); bStackY10 = pcVar40; bStackY9 = (pcVar40 >> 8); uStackY12._0_1_ = 0x69; uStackY12._1_1_ = 0x61; local_e = 0x18; bStackY13 = 0x5f; uVar41 = 0x3444; uStackY22 = 0x294b080e; FUN_3444_1e00(); pcVar37 = pcVar40; while ( true ) {
uVar39 = ZEXT24(pcVar37); switchD_2000_048d_caseD_8: param_3._0_2_ = (param_3 | 0xf600); param_3 = (param_3 | 0xf600); if (param_3 < 0) break; pbVar3 = (uVar39 + 0x5f18); * pbVar3 = * pbVar3 | 0x80; pcVar37 = (char * )(uVar39 + - 1);
}
local_8 = uVar41; cStackY7 = (uVar41 >> 8); bStackY10 = 0x2c; bStackY9 = 8; FUN_1862_0aa7(); local_8 = pcVar40; cStackY7 = (pcVar40 >> 8); uStackY12._0_1_ = auStackY204; uStackY12._1_1_ = (auStackY204 >> 8); local_e = 0x69; bStackY13 = 0x61; uStackY22 = CONCAT22(0x840, uStackY22); bStackY10 = bVar24; bStackY9 = uVar27;
FUN_3444_1e00(); local_8 = 0x44; cStackY7 = 0x34; bStackY10 = 0x48; bStackY9 = 8;
piVar33 = FUN_294b_0c76();
}
}
return piVar33; case '\b': goto switchD_2000_048d_caseD_8;
}
goto switchD_2000_4d9f_caseD_5;
}
bStackY10 = & local_e; bStackY9 = ( & local_e >> 8); uStackY12._0_1_ = 0; uStackY12._1_1_ = 0x20; local_e = 0xc1; bStackY13 = 4; local_8 = bVar24; cStackY7 = uVar27; FUN_294b_077b(); local_8 = unaff_DI; bVar12 = local_8; cStackY7 = (unaff_DI >> 8); uVar16 = cStackY7; bStackY10 = 0x69; bStackY9 = 0x61; uStackY12._0_1_ = 0x18; uStackY12._1_1_ = 0x5f; uStackY22 = CONCAT22(0x4d7, uStackY22); local_e = bVar24; bStackY13 = uVar27; FUN_3444_1e00(); for (; - 1 < unaff_DI; unaff_DI = unaff_DI + - 1) {
pbVar3 = (unaff_DI + 0x5f18); * pbVar3 = * pbVar3 | 0x80;
}
local_8 = 0x44; cStackY7 = 0x34; bStackY10 = 0xf5; bStackY9 = 4; FUN_1862_0aa7();
uStackY12._0_1_ = auStackY214; uStackY12._1_1_ = (auStackY214 >> 8); local_e = 0x69; bStackY13 = 0x61; uVar31 = 0x3444; uStackY22 = CONCAT22(0x509, uStackY22); bStackY10 = bVar24; bStackY9 = uVar27; local_8 = bVar12;
cStackY7 = uVar16; FUN_3444_1e00();
}
if (( * 0x804 & 1) == 0) goto LAB_200c_0610; if (0xcf4 != 0) {
local_8 = uVar31; cStackY7 = (uVar31 >> 8); uVar31 = 0x2692; bStackY10 = 0x2c; bStackY9 = 5; uVar46 = FUN_2692_05ab(); uVar43 = 0xc6c6; if (((0x5d82 - (uVar46 >> 0x10)) - (0x5d80 < uVar46)) < 0) {
local_8 = unaff_DS; cStackY7 = (unaff_DS >> 8); bStackY10 = 0xf7; bStackY9 = 0x67; uStackY12._0_1_ = 0x92; uStackY12._1_1_ = 0x26; local_e = 0x4b; bStackY13 = 5; FUN_200c_078e(); local_8 = 0x92; cStackY7 = 0x26; uVar31 = 0x2692; bStackY10 = 0x52; bStackY9 = 5; lVar47 = FUN_2692_05ab(); uVar43 = 0xc6c6; 0x5d80 = (lVar47 + 2000000000); 0x5d82 = ((lVar47 + 2000000000) >> 0x10); goto LAB_200c_0610;
}
}
bStackY10 = & uStackY22; bStackY9 = ( & uStackY22 >> 8); uStackY12._0_1_ = 0x19; uStackY12._1_1_ = 0; local_e = uVar31; bStackY13 = (uVar31 >> 8);
local_8 = bVar24; cStackY7 = uVar27; FUN_2b26_0e3b(); local_8 = 0; cStackY7 = 0;
bStackY10 = 0x26; bStackY9 = 0x2b; uVar31 = 0x294b; uStackY12._0_1_ = 0x82; uStackY12._1_1_ = 5; FUN_294b_02f2(); bStackY10 = & local_e; bStackY9 = ( & local_e >> 8); uStackY12._0_1_ = 0x2d; uStackY12._1_1_ = 0x5b; local_e = 0xb7; bStackY13 = 0x15; local_8 = bVar24; cStackY7 = uVar27; iVar34 = FUN_200c_01ed(); if (iVar34 != 0) {
bStackY10 = & local_e; bStackY9 = ( & local_e >> 8); uStackY12._0_1_ = 0x4b; uStackY12._1_1_ = 0x29; local_e = 0xb6; bStackY13 = 5; local_8 = bVar24; cStackY7 = uVar27; FUN_294b_077b(); iVar34 = CONCAT11(bStackY13, local_e) - uStackY22; uVar43 = 0xc6c8; piStackY222 = CONCAT22(uVar43, 0xfff7); 0xfff7 = iVar34 + - 1; bStackY10 = & local_e; bStackY9 = ( & local_e >> 8); uStackY12._0_1_ = 0x2d; uStackY12._1_1_ = 0x5b; local_e = 0xb7; bStackY13 = 0x15; local_8 = bVar24; cStackY7 = uVar27; uVar43 = FUN_200c_00a0(); 0x1118 = uVar43; 0xfff5 = CONCAT11(bStackY13, local_e) - uStackY22; if (0x7faa == 0x140) {
iVar32 = 8;
}
else {
iVar32 = 0x10;
}
iVar34 = iVar34 / iVar32; * piStackY222 = *piStackY222 / iVar32; (iVar34 * 2 + 0xc57) = 0xffff; local_8 = iVar34; cStackY7 = (iVar34 >> 8); if (0xd21 == '\0') {
piStackY6 = 0x0; bStackY10 = 0x4b; bStackY9 = 0x29; uStackY12._0_1_ = 0x53; uStackY12._1_1_ = 6; FUN_154b_0b72();
}
else {
piStackY6 = 0x0; bStackY10 = 0x4b; bStackY9 = 0x29; uStackY12._0_1_ = 0x45; uStackY12._1_1_ = 6; FUN_154b_07f7();
}
uVar31 = 0x154b; goto LAB_200c_0610;
}
bStackY10 = & local_e; bStackY9 = ( & local_e >> 8); uStackY12._0_1_ = 0x2d; uStackY12._1_1_ = 0x5b; local_e = 0xb7; bStackY13 = 0x15; local_8 = bVar24; cStackY7 = uVar27; iVar34 = FUN_200c_00a0(); 0x1118 = iVar34; if (iVar34 == 0) goto LAB_200c_0610; uVar43 = 0xc6c8; piStackY222._0_2_ = 0xfff7; 0xfff7 = (CONCAT11(bStackY9, bStackY10) - uStackY22) + - 1; uVar41 = 0xc6cc; piStackY226 = CONCAT22(uVar41, 0xfff5); 0xfff5 = CONCAT11(bStackY13, local_e) - uStackY22; if (0x7faa == 0x140) {
iVar34 = 8;
}
else {
iVar34 = 0x10;
}
* piStackY226 = * piStackY226 / iVar34; break;
case 0x1: puVar1 = ( & stack0x0000 + local_1e._2_2_); * puVar1 = * puVar1 >> 1; iVar32 = in (uVar42);
iVar34 = iVar32 * iVar34 + (cVar36 * iVar32) / 0xe + - 1; local_8 = iVar34; cStackY7 = (iVar34 >> 8);
iVar34 = param_3 * 8 + - 1; bStackY10 = iVar34; bStackY9 = (iVar34 >> 8); iVar34 = param_1._2_1_ * iVar32 + (param_1._3_1_ * iVar32) / 0xe;
uStackY12._0_1_ = iVar34; uStackY12._1_1_ = (iVar34 >> 8); local_e = (param_1 << 3); bStackY13 = ((param_1 << 3) >> 8);
ppcVar7 = (code * * )0xcf74; piVar33 = ( * * ppcVar7)(); return piVar33; case 0x2: out(uVar42, local_26 ^ 0x8d); piVar33 = piStackY6; goto code_r0x00028cfe; case 0x3: (piStackY222)[0x3104] = local_26; (piStackY222)[0x3103] = local_26; (piStackY222)[0x3106] = local_26; (piStackY222)[0x3105] = local_26;
(piStackY222)[0x3107] = local_26; (piStackY222)[0x3108] = local_26; local_8 = 0x14; cStackY7 = 0; piStackY222._0_2_ = piStackY222 + 0x30ff; uStackY12._0_1_ = piStackY222;
uStackY12._1_1_ = (piStackY222 >> 8); piStackY110 = CONCAT22(uVar43, piStackY222);
uVar43 = 0x3444; local_e = bVar13; bStackY13 = uVar17; bStackY10 = bVar25; bStackY9 = uVar28;
FUN_3444_134a(); iVar34 = * piStackY110 << 3; if (iVar34 != 0) {
local_8 = iVar34; cStackY7 = (iVar34 >> 8); bStackY10 = 0x44; bStackY9 = 0x34; uVar43 = 0x3143; uStackY12._0_1_ = 0x94; uStackY12._1_1_ = 0xfc; uVar46 = FUN_3143_1720(); uVar41 = 0xc8dc; (iStackY106 + 0x61fa) = uVar46; (iStackY106 + 0x61fc) = (uVar46 >> 0x10);
}
bStackY10 = uVar43; bStackY9 = (uVar43 >> 8); uStackY12._0_1_ = 0xac; uStackY12._1_1_ = 0xfc; local_8 = bVar13; cStackY7 = uVar17; piVar33 = FUN_3444_0fe6(); return piVar33; case 0x4: 0x72f0 = local_26 ^ 0x8b; bStackY10 = 0; bStackY9 = 0x20; uStackY12._0_1_ = 0xa5; uStackY12._1_1_ = 0x3b; local_8 = bVar25; cStackY7 = uVar28; piVar33 = FUN_236f_0450(); return piVar33; case 0x5: switchD_2000_4d9f_caseD_5: iVar34 = 0x5dd4 + 1; local_8 = iVar34; cStackY7 = (iVar34 >> 8); bStackY10 = 0; bStackY9 = 0x20;
uStackY12._0_1_ = 0x18; uStackY12._1_1_ = 0x26; ppcVar7 = (code * * )0xcf74; bStackY13 = uVar16; ( * * ppcVar7)(); iVar34 = uVar39 + 0x5de4 / 2; piStackY6 = 0x5ddc; local_8 = 0; cStackY7 = 0x20; bStackY10 = 0x3e; bStackY9 = 0x26; FUN_2692_0ecc(); iVar34 = iVar34 + 0x5de4; piStackY6 = 0x5ddc; local_8 = 0x92; cStackY7 = 0x26; bStackY10 = 0x62; bStackY9 = 0x26; FUN_2692_0ecc(); piStackY6 = (iVar34 + 0x5de4); iVar34 = 0x5dd4 + 1; local_8 = iVar34; cStackY7 = (iVar34 >> 8); bStackY10 = 0x92; bStackY9 = 0x26;
uStackY12._0_1_ = 0x8f; uStackY12._1_1_ = 0x26; ppcVar7 = (code * * )0xcf74; ( * * ppcVar7)(); iVar34 = 0x5de4; piStackY6 = (piStackY6 + iVar34 * 3 + iVar34 / 2 + 1); iVar34 = 0x5dd4 + 1; local_8 = iVar34; cStackY7 = (iVar34 >> 8); bStackY10 = 0x92; bStackY9 = 0x26; uStackY12._0_1_ = 0xcd; uStackY12._1_1_ = 0x26; ppcVar7 = (code * * )0xcf74; ( * *ppcVar7)(); ppcVar7 = (code ** )0xcf70; ( * * ppcVar7)(); * (undefined * )0x7046 = 1; FUN_2239_0531(); FUN_2239_126d(); piVar33 = * (int * * )0xabe; *(int * * )0xccca = piVar33; return piVar33; case 0x6: * (undefined * )0x7e2c = 0; if (param_4 != 0) {
piStackY6 = 0x8345; local_26 = FUN_3143_1850();
}
return local_26; case 0x7: break; case 0x8: piStackY6 = uVar31; loop {
local_8 = 0xca; cStackY7 = 0x5e; lVar47 = FUN_2692_05ab(); bVar44 = 0xfffd < piStackY6;
iVar34 = piStackY6 + 2; piStackY6 = 0x2692;
} while (lVar47 < CONCAT22(unaff_DI + bVar44,iVar34)); piStackY6 = 0x9; local_8 = 0x92; cStackY7 = 0x26; bStackY10 = 0xe8;
bStackY9 = 0x5e; FUN_25d6_0463(); loop {
piStackY6 = 0x2692; local_8 = 0xee; cStackY7 = 0x5e; lVar47 = FUN_2692_05ab();
} while (lVar47 < CONCAT22(unaff_DI + (0xfffc < piStackY6), piStackY6 + 3));
piStackY6 = 0x64; local_8 = 0x92; cStackY7 = 0x26; uVar43 = 0x168b; bStackY10 = 0xd;
bStackY9 = 0x5f; iVar34 = FUN_168b_05f1();
if (iVar34 == 0) {
piStackY6 = 0x168b; local_8 = 0x16; cStackY7 = 0x5f; piVar33 = FUN_25d6_043b(); return piVar33;
}
if (0x776a != 0) {
piStackY6 = 0x5; local_8 = 0x8b; cStackY7 = 0x16; bStackY10 = 0x28; bStackY9 = 0x5f;
FUN_25d6_0582(); while (0x776a != 0) {
piStackY6 = (0x776a * 2 + 0x7756);
local_8 = uVar43; cStackY7 = (uVar43 >> 8); bStackY10 = 0x3e; bStackY9 = 0x5f; FUN_25d6_0463(); piVar4 = 0x776a; *piVar4 = * piVar4 + - 1; local_8 = 0x48; cStackY7 = 0x5f; piStackY6 = uVar43;
uVar46 = FUN_2692_05ab(); iVar34 = (uVar46 >> 0x10) + (0xfff9 < uVar46); loop {
piStackY6 = 0x2692; uVar43 = 0x2692; local_8 = 0x59; cStackY7 = 0x5f; lVar47 = FUN_2692_05ab();
} while (lVar47 < CONCAT22(iVar34, piStackY6));
}
}
local_8 = 0x6b; cStackY7 = 0x5f; piStackY6 = uVar43; piStackY6 = FUN_25d6_060d(); local_8 = uVar43; bVar24 = local_8; cStackY7 = (uVar43 >> 8); uVar27 = cStackY7; bStackY10 = 0x72; bStackY9 = 0x5f; FUN_25d6_0463(); if ((piStackY6 == 0xb) || (piStackY6 == 0xc)) {
local_8 = 0xe4; cStackY7 = 0x60; piStackY6 = uVar43; FUN_25d6_09db(); piStackY6 = 0x0;
bStackY10 = 0xeb; bStackY9 = 0x60; local_8 = bVar24; cStackY7 = uVar27; FUN_25d6_0582();
piStackY6 = 0x1; bStackY10 = 0xf4; bStackY9 = 0x60; local_8 = bVar24; cStackY7 = uVar27;
FUN_25d6_04ee(); piStackY6 = 0x1; local_8 = 3; cStackY7 = 0; uStackY12._0_1_ = 1; uStackY12._1_1_ = 0x61; bStackY10 = bVar24; bStackY9 = uVar27; FUN_25d6_079f();
}
else {
uVar41 = 0xc84c; bStackY10 = 0xee; bStackY9 = 0x5d; local_8 = uVar41; cStackY7 = (uVar41 >> 8); if (0x5dee != 0) {
piVar4 = 0x5dee; * piVar4 = * piVar4 + - 1;
}
uVar41 = 0xc84e; local_e = 0xf0; bStackY13 = 0x5d; uStackY12._0_1_ = uVar41; uStackY12._1_1_ = (uVar41 >> 8); if (0x5df0 != 0) {
piVar4 = 0x5df0; * piVar4 = * piVar4 + - 1;
}
uVar41 = 0xc850; if (0x5df4 != 0) {
piVar4 = 0x5df4; * piVar4 = * piVar4 + - 1;
}
uVar42 = 0xc852; uStackY22 = CONCAT22(uVar42,0x5df2); if (0x5df2 != 0) {
piVar4 = 0x5df2; * piVar4 = * piVar4 + - 1;
}
if (CONCAT13(cStackY7, CONCAT12(local_8,0x5dee)) != 0) {
piStackY6 = 0x4; bStackY10 = 0xea; bStackY9 = 0x5f; local_8 = bVar24; cStackY7 = uVar27;
piStackY6 = FUN_168b_05f1(); local_8 = 0x8b;
cStackY7 = 0x16; bStackY10 = 0xf0; bStackY9 = 0x5f; FUN_25d6_0582(); piStackY6 = 0x2;
local_8 = 0x8b; cStackY7 = 0x16; uVar43 = 0x168b; bStackY10 = 0xfa; bStackY9 = 0x5f;
iVar34 = FUN_168b_05f1(); piStackY6 = (iVar34 + 1); local_8 = 0x8b; cStackY7 = 0x16; bStackY10 = 1; bStackY9 = 0x60;
FUN_25d6_04ee(); piStackY6 = 0x1; goto LAB_25d6_03a6;
}
if (CONCAT13(uStackY12._1_1_, CONCAT12(uStackY12, 0x5df0)) == 0) {
if (CONCAT22(uVar41, 0x5df4) == 0) {
if ( * uStackY22 == 0) {
local_8 = 0xa6; cStackY7 = 0x60; piStackY6 = uVar43; FUN_25d6_03b1(); 0x5dfc = 2;
piStackY6 = 0x0; bStackY10 = 0xb8; bStackY9 = 0x60; local_8 = bVar24; cStackY7 = uVar27;
FUN_25d6_0824(); piStackY6 = 0x3; bStackY10 = 0xc2; bStackY9 = 0x60; local_8 = bVar24;
cStackY7 = uVar27; iVar34 = FUN_168b_05f1();
piStackY6 = (iVar34 + 10); local_8 = 0x8b; cStackY7 = 0x16; bStackY10 = 0xcb;
bStackY9 = 0x60; FUN_25d6_0582(); piStackY6 = 0x5; local_8 = 0x8b; cStackY7 = 0x16;
bStackY10 = 0xd5; bStackY9 = 0x60; iVar34 = FUN_168b_05f1(); piStackY6 = (iVar34 + 6); local_8 = 0x8b; cStackY7 = 0x16;
bStackY10 = 0xde; bStackY9 = 0x60; piVar33 = FUN_25d6_04ee(); return piVar33;
}
piStackY6 = 0x3; bStackY10 = 0x80; bStackY9 = 0x60; local_8 = bVar24; cStackY7 = uVar27;
iVar34 = FUN_168b_05f1(); piStackY6 = (iVar34 + 0xd); local_8 = 0x8b; cStackY7 = 0x16; bStackY10 = 0x89; bStackY9 = 0x60;
FUN_25d6_0582(); piStackY6 = 0x4; local_8 = 0x8b; cStackY7 = 0x16; uVar43 = 0x168b;
bStackY10 = 0x93; bStackY9 = 0x60; iVar34 = FUN_168b_05f1(); piStackY6 = (iVar34 + 7); local_8 = 0x8b; cStackY7 = 0x16;
bStackY10 = 0x9c; bStackY9 = 0x60; FUN_25d6_04ee(); piStackY6 = 0x2;
}
else {
piStackY6 = 0x3; bStackY10 = 0x4b; bStackY9 = 0x60; local_8 = bVar24; cStackY7 = uVar27;
iVar34 = FUN_168b_05f1(); piStackY6 = (iVar34 + 7); local_8 = 0x8b; cStackY7 = 0x16; bStackY10 = 0x54; bStackY9 = 0x60;
FUN_25d6_0582(); piStackY6 = 0x2; local_8 = 0x8b; cStackY7 = 0x16; uVar43 = 0x168b;
bStackY10 = 0x5e; bStackY9 = 0x60; iVar34 = FUN_168b_05f1(); piStackY6 = (iVar34 + 5); local_8 = 0x8b; cStackY7 = 0x16;
bStackY10 = 0x67; bStackY9 = 0x60; FUN_25d6_04ee(); piStackY6 = 0x4;
}
goto LAB_25d6_03a6;
}
piStackY6 = 0x3; bStackY10 = 0x1a; bStackY9 = 0x60; local_8 = bVar24; cStackY7 = uVar27;
iVar34 = FUN_168b_05f1(); piStackY6 = (iVar34 + 4); local_8 = 0x8b; cStackY7 = 0x16; bStackY10 = 0x23; bStackY9 = 0x60;
FUN_25d6_0582(); piStackY6 = 0x2; local_8 = 0x8b; cStackY7 = 0x16; uVar43 = 0x168b;
bStackY10 = 0x2d; bStackY9 = 0x60; iVar34 = FUN_168b_05f1(); piStackY6 = (iVar34 + 3); local_8 = 0x8b; cStackY7 = 0x16;
bStackY10 = 0x36; bStackY9 = 0x60; FUN_25d6_04ee();
}
piStackY6 = 0x3;
// LAB_25d6_03a6:
local_8 = uVar43; cStackY7 = (uVar43 >> 8); bStackY10 = 0xb; bStackY9 = 0x61; piVar33 = FUN_25d6_0824(); return piVar33;
}
piStackY222 = piStackY222 / iVar34;
// LAB_200c_0610:
local_8 = uVar31;
cStackY7 = (uVar31 >> 8); bStackY10 = 0xd5; bStackY9 = 6; piVar33 = FUN_294b_0c76(); return piVar33;
}



fn fun_24bf_08c5(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let u_var2: u16;
    let u_var3: u16;
    let unaff_ds: u16;
    let pi_var4: *mut u16;

    u_var2 = 0x3444;
    fun_3444_02c6(0x39d9);
    0xff22 = 0;
    u_var1 = 0xc810;
    pi_var4 = CONCAT22(u_var1, 0xff24);
    if (0xff24 != param_1) {
        u_var3 = u_var2;
        if (0xff24 != -1) {
            if ((*0x97d & 1) != 0) {
                u_var2 = 0x2b26;
                fun_2b26_0402();
            }
            u_var3 = 0x2b26;
            fun_2b26_0f55(u_var2, (iRam00000000 * 2 + 0x774e), 0xffff);
        }
        pi_var4 = 0x10001;
        u_var2 = 0x2b26;
        fun_2b26_0f55(u_var3, (param_1 * 2 + 0x774e), 0xffff);
        if ((*0x97d & 1) != 0) {
            *pi_var4 = param_1;
            fun_2b26_08ec();
            pi_var4 = 0xd002b26;
            u_var2 = 0x2b26;
            fun_2b26_0363();
        }
    }
    *pi_var4 = param_1;
    fun_2b26_05ce(u_var2, 0xd00);
    return;
}


fn fun_24bf_0982()

{
    let unaff_ss: i16;
    let unaff_ds: u16;
    let local_e: i16;
    let local_c: i16;
    let local_a: i16;
    undefined * local_8;
    let pi_var1: *mut u16;

    fun_3444_02c6(0x39d9);
    if ((0xff24 != -1) && ((*0x97d & 1) != 0)) {
        local_8 = ff
        0xd01;
        local_a = 0x3444;
        local_c = 0x55ba;
        fun_168b_034f();
        local_8 = &stack0xfffa;
        local_a = 0x168b;
        local_c = 0x55cb;
        fun_168b_0834();
        pi_var1 = &local_e;
        local_8 = ff
        0xd0b;
        local_a = 0x168b;
        local_c = 0x55dc;
        fun_2b26_0e3b();
        0x7670 = ((local_a - pi_var1) - local_e) / 2;
        if (0x7672 == 0) {
            0x7672 = unaff_ss / 2;
        }
        if (0x7674 == 0) {
            0x7674 = (local_8 - unaff_ss) - local_c;
        }
        local_8 = ff
        0x561f;
        fun_24bf_0fb3();
        fun_24bf_0d43();
        local_8 = ff
        0x2b26;
        local_a = 0x5637;
        fun_24bf_0d15();
    }
    return;
}


// WARNING: Type propagation algorithm not settling

fn fun_24bf_0a4d()

{
    let u_var1: u16;
    let u_var2: u16;
    let i_var3: i16;
    let pi_var4: *mut u16;
    let i_var5: i16;
    let i_var6: i16;
    let unaff_ss: i16;
    let unaff_ds: u16;
    let local_2a: *mut u16;
    let local_26: *mut u16;
    let local_22: *mut u16;
    undefined2 * ****local_1e[4];
    undefined2 * ****local_16[3];
    let local_10: i16;
    undefined2 * ******local_e;
    let local_c: i16;
    undefined2 * ******local_a;
    let i_var7: i16;

    fun_3444_02c6(0x39d9);
    local_a = (undefined2 * ******)
    local_16;
    local_c = 0xd0b;
    local_e = (undefined2 * ******)
    0x3444;
    local_10 = 0x5658;
    fun_2b26_0e3b();
    if ((0xd08 != '\0') && (0xff24 != 3)) {
        local_a = (undefined2 * ******)
        0x80;
        local_c = 0x2b26;
        local_e = (undefined2 * ******)
        0x5689;
        fun_1454_00ae();
        return;
    }
    local_a = (undefined2 * ******)
    local_1e;
    local_c = 0xd00;
    local_e = (undefined2 * ******)
    0x2b26;
    local_10 = 0x569c;
    fun_2b26_0e3b();
    if (0x992c != 0xd) {
        return;
    }
    local_a = (undefined2 * ******)
    local_1e;
    local_c = 0x2b26;
    local_e = (undefined2 * ******)
    0x56b8;
    fun_294b_0cfc();
    u_var1 = 0xc810;
    local_22 = CONCAT22(u_var1, 0xff24);
    u_var2 = 0xc80e;
    local_26 = CONCAT22(u_var2, 0xff22);
    i_var5 = ((0xff24 * 10 + 0xff22) * 2 + -0x69);
    i_var7 = 0x1e;
    local_a = (undefined2 * ******)
    0x294b;
    i_var6 = 0x2a60;
    local_c = 0x5709;
    fun_2a60_007b();
    while (true) {
        local_a = (undefined2 * ******)
        0x57ef;
        i_var3 = FUN_1ba9_10aa();
        if (i_var3 == 0)
        break;
        i_var7 = 0x96;
        local_a = &local_a;
        local_c = 0x1ba9;
        i_var6 = 0x1ba9;
        local_e = (undefined2 * ******)
        0x571f;
        i_var3 = unaff_ss;
        fun_1ba9_1038();
        if ((local_e != local_a) || (local_c != i_var3)) {
            i_var3 = 0;
            local_a = (undefined2 * ******) * local_26;
            local_c = *local_22;
            local_e = (undefined2 * ******)
            0x1ba9;
            local_10 = 0x577c;
            FUN_24bf_00ad();
            pi_var4 = ((*local_22 * 10 + *local_26) * 2 + -0x69);
            u_var1 = 0xc80c;
            local_2a = CONCAT22(u_var1, pi_var4);
            i_var3 = (((local_10 - i_var3) - 0x7672) * 0x10) / 0x7674;
            *pi_var4 = i_var3;
            if (i_var3 < 0) {
                *local_2a = 0;
            }
            if (0xf < *local_2a) {
                *local_2a = 0xf;
            }
            local_a = (undefined2 * ******)
            0x1ba9;
            local_c = 0x57d4;
            fun_24bf_0d43();
            local_a = (undefined2 * ******) * local_22;
            local_c = 0x1ba9;
            local_e = (undefined2 * ******)
            0x57e7;
            FUN_24bf_00ad();
        }
    }
    if (i_var7 == 0x1e) {
        i_var6 = (((local_10 - i_var6) - 0x7672) * 0x10) / 0x7674;
        if ((i_var6 < i_var5) && (0 < i_var5)) {
            i_var5 = i_var5 + -1;
        } else {
            if ((i_var6 <= i_var5) || (0xe < i_var5))
            goto
            LAB_24bf_0cce;
            i_var5 = i_var5 + 1;
        }
        local_a = (undefined2 * ******)
        0x1ba9;
        local_c = 0x5838;
        i_var6 = FUN_39d9_0f86();
        if (i_var6 != 0) {
            ((*local_22 * 10 + *local_26) * 2 + -0x69) = i_var5;
            local_a = (undefined2 * ******)
            0x585d;
            fun_24bf_0d43();
            local_a = (undefined2 * ******) * local_22;
            local_c = 0x39d9;
            local_e = (undefined2 * ******)
            0x5870;
            FUN_24bf_00ad();
        }
    } else {
        local_a = (undefined2 * ******)
        0x1ba9;
        local_c = 0x587d;
        i_var6 = FUN_39d9_0f86();
        if (i_var6 == 0) {
            ((*local_22 * 10 + *local_26) * 2 + -0x69) = i_var5;
            local_a = (undefined2 * ******) * local_26;
            local_c = *local_22;
            local_e = (undefined2 * ******)
            0x39d9;
            local_10 = 0x58b1;
            FUN_24bf_00ad();
            local_a = (undefined2 * ******)
            0x39d9;
            local_c = 0x58b8;
            fun_24bf_0d43();
            goto
            LAB_24bf_0cce;
        }
    }
    local_a = (undefined2 * ******)
    0x58be;
    fun_24bf_0dc9();
// LAB_24bf_0cce:
    local_a = (undefined2 * ******)
    0x58c3;
    fun_294b_03be();
    return;
}


fn fun_24bf_0cd9()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_24bf_08c5(0x3444, (0xff24 + 1) % 4);
    return;
}


fn fun_24bf_0cf6()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_24bf_08c5(0x3444, (0xff24 + 3) % 4);
    return;
}


fn fun_24bf_0d15(param_1_00: u16, param_1: i16, param_2: i16)

{
    let i_var1: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var1 = ((param_1 * 0xb + param_2) * 2 + 0x76ee);
    if (0 < i_var1) {
        fun_168b_02a9(0x3444, i_var1);
    }
    return;
}


fn fun_24bf_0d43()

{
    let i_var1: i16;
    let u_var2: u16;
    let u_var3: u16;
    let unaff_si: i16;
    let unaff_ds: u16;
    let local_a: i16;
    let pi_stack8: *mut u16;

    fun_3444_02c6(0x39d9);
    pi_stack8 = &local_a;
    local_a = 0xd0b;
    fun_2b26_0e3b(0x3444);
    u_var2 = (-1 - ((0xff24 * 10 + 0xff22) * 2 + -0x69)) * 0x7674;
    u_var3 = u_var2 >> 0xf;
    i_var1 = 0x7672;
    pi_stack8 = 0xd03;
    local_a = 0x2b26;
    fun_168b_027d();
    local_a = local_a + 0x7670;
    pi_stack8 = ((((((u_var2 ^ u_var3) - u_var3) >> 4 ^ u_var3) - u_var3) - i_var1) + unaff_si);
    fun_168b_0561(0x168b);
    return;
}


fn fun_24bf_0dc9()

{
    let u_var1: u16;
    let u_var2: u16;
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    0x5ec2 = 0xff97;
    0x5a0 = 0xff99;
    0x5ec7 = 0xff9b;
    0x5ec4 = 0xff9d;
    0xb6e1 = 0xff9f;
    0xbf06 = 0xffa1;
    0xf4e9 = 0xffa3;
    0xece3 = 0xffab;
    0xece5 = 0xffad << 4;
    0xece7 = 0xffaf;
    0xfd01 = 0xffb1 + 1;
    0xfceb = 0xffb3;
    0xfd1e = 0xffb5;
    u_var1 = 0xffb7;
    u_var2 = u_var1 >> 0xf;
    0xece1 = (((u_var1 ^ u_var2) - u_var2) >> 2 ^ u_var2) - u_var2;
    0xfcf3 = 0xffbf;
    0x5a6 = 0xffc1;
    0xfcf1 = -(0xffc3 / 2 + -8);
    0xfcef = -(0xffc5 / 2 + -8);
    0xfced = -(0xffc7 / 2 + -8);
    i_var3 = 0;
    loop {
    (i_var3 * 2 + -0x1393) = (i_var3 * 2 + -0x2d) << 1;
    i_var3 = i_var3 + 1;
}
    while (i_var3 < 5);
    i_var4 = 0;
    for (iVar3 = 5; i_var3 < 10; iVar3 = iVar3 + 1) {
        i_var4 = i_var4 + (i_var3 * 2 + -0x2d);
    }
    for (iVar3 = 0; i_var3 < 5; iVar3 = iVar3 + 1) {
        if (i_var4 == 0) {
            (i_var3 * 2 + -0x139f) = 0;
        } else {
            (i_var3 * 2 + -0x139f) = ((i_var3 * 2 + -0x23) * 1000) / i_var4;
        }
    }
    return;
}


fn fun_24bf_0fb3(param_1_00: u16, param_1: u16)

{
    let i_var1: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((*0x97d & 1) != 0) {
        for (iVar1 = 0; i_var1 < 10; iVar1 = iVar1 + 1) {
            FUN_24bf_00ad(0x3444, param_1, i_var1, 1);
        }
    }
    return;
}


fn fun_24bf_0fe8(param_1_00: u16, undefined2 * * * * * param_1, param_2: u16)

{
    undefined2 * ****pppppuVar1;
    undefined2 * ***ppppuVar2;
    let u_var3: u16;
    let i_var4: i16;
    let u_var5: u16;
    let unaff_ss: i16;
    let unaff_ds: u16;
    let local_18: *mut u16;
    undefined2 * ***local_12;
    let u_stack_y16: u16;
    undefined2 * ***local_e;
    let i_stack_y12: i16;
    undefined2 * *****local_a;
    let i_var6: i16;

    u_var5 = 0x3444;
    fun_3444_02c6(0x39d9);
    ppppuVar2 = param_1[6];
    if (ppppuVar2 == (undefined2 * ***)
    0xd0b) {
    local_a = (undefined2 * *****)
    param_1;
    i_stack_y12 = 0x3444;
    local_e = (undefined2 * ***)
    0x5d50;
    fun_24bf_0a4d();
}
    else {
    if (ppppuVar2 == (undefined2 * ***)
    0xd0c) {
        local_a = (undefined2 * *****)
        0x5d58;
        fun_24bf_0cd9();
    }
    else {
        if (ppppuVar2 == (undefined2 * ***)
        0xd0d) {
            local_a = (undefined2 * *****)
            0x5d5e;
            fun_24bf_0cf6();
        }
        else {
            i_var4 = 0;
            while (ppppuVar2 = (undefined2 * ***)((0xff24 * 0xb + i_var4) * 2 + 0x76ee),
                   ppppuVar2 != (undefined2 * ***)
            0x0) {
                if (ppppuVar2 == param_1[6])
                goto
                LAB_24bf_1117;
                i_var4 = i_var4 + 1;
            }
            i_var4 = 0;
            while (true) {
                u_var3 = 0xc810;
                ppppuVar2 = (undefined2 * ***)((0xff24 * 0xb + i_var4) * 2 + 0x7696);
                if (ppppuVar2 == (undefined2 * ***)
                0x0) break;
                if (ppppuVar2 == param_1[6])
                goto
                LAB_24bf_1117;
                i_var4 = i_var4 + 1;
            }
            local_18 = CONCAT22(u_var3, 0xff24);
            if (0xff24 == 3) {
                i_var4 = 0;
                while (i_stack_y12 = ((*local_18 * 0xb + i_var4) * 2 + 0x76ee), i_stack_y12 != 0) {
                    local_a = &local_a;
                    u_stack_y16 = 0x5cae;
                    local_e = (undefined2 * ***)
                    u_var5;
                    fun_2b26_0e3b();
                    local_a = (undefined2 * *****) & local_12;
                    i_stack_y12 = ((*local_18 * 0xb + i_var4) * 2 + 0x7696);
                    local_e = (undefined2 * ***)
                    0x2b26;
                    u_var5 = 0x2b26;
                    u_stack_y16 = 0x5cce;
                    i_var6 = unaff_ss;
                    fun_2b26_0e3b();
                    if ((((i_var6 <= param_1[5]) && (param_1[5] <= 0x1388 + i_var6)) && (local_a <= param_1[4])) && (pppppuVar1 = param_1 + 4, *pppppuVar1 == local_e || *pppppuVar1 < local_e)
                    ) {
// LAB_24bf_1117:
                        local_a = (undefined2 * *****)
                        0x5d0c;
                        fun_294b_03ad();
                        local_a = (undefined2 * *****)
                        0xff24;
                        i_stack_y12 = 0x294b;
                        local_e = (undefined2 * ***)
                        0x5d22;
                        fun_24bf_0d15();
                        0xff22 = i_var4;
                        local_a = (undefined2 * *****)
                        0xff24;
                        i_stack_y12 = 0x294b;
                        local_e = (undefined2 * ***)
                        0x5d3b;
                        fun_24bf_0d15();
                        local_a = (undefined2 * *****)
                        0x5d41;
                        fun_24bf_0d43();
                        local_a = (undefined2 * *****)
                        0x5d46;
                        fun_294b_03be();
                        return;
                    }
                    i_var4 = i_var4 + 1;
                }
            }
        }
    }
}
    return;
}


fn fun_25d6_0004()

{
    bool
    bVar1;
    let u_var2: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((0x9c65 == '\b') || (0x9c65 == '\a')) {
        bVar1 = true;
    } else {
        bVar1 = false;
    }
    if (bVar1) {
        u_var2 = 0x1d00;
    } else {
        u_var2 = 0x1c00;
    }
    fun_2b26_05ce(0x3444, u_var2);
    fun_25d6_0038(0x2b26);
    return;
}


fn fun_25d6_0038()

{
    let b_var1: u8;
    bool
    bVar2;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((0x9c65 == '\b') || (0x9c65 == '\a')) {
        bVar2 = true;
    } else {
        bVar2 = false;
    }
    if (bVar2) {
        b_var1 = *0xb4d;
    } else {
        b_var1 = *0xb30;
    }
    if ((b_var1 & 1) != 0) {
        0x7774 = 1;
        fun_25d6_0080(0x3444);
    }
    return;
}


fn fun_25d6_0080()

{
    let unaff_ds: u16;
    let l_var1: i32;

    fun_3444_02c6(0x39d9);
    l_var1 = fun_3444_24dc(0x3444);
    if (l_var1 != 0x7776) {
        0x7776 = l_var1;
        0x7774 = 1;
    }
    fun_25d6_00cc(0x3444, 0x7774);
    return;
}


// WARNING: Removing unreachable block (ram,0x00025f00)
// WARNING: Removing unreachable block (ram,0x00025edc)
// WARNING: Removing unreachable block (ram,0x00025f60)

fn fun_25d6_00cc(param_1_00: u16, param_1: i16)

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let i_var3: i16;
    let extraout_dx: i16;
    let u_var4: u16;
    let unaff_ds: u16;
    let l_var5: i32;
    let u_var6: u32;
    let local_16: *mut u16;
    let local_12: *mut u16;
    let local_e: *mut u16;
    let u_var7: u16;
    let u_var8: u16;

    fun_3444_02c6(0x39d9);
    if (param_1 != 0) {
        0x7774 = 0;
    }
    if (0xfd00 == '\0') {
        fun_25d6_0463();
        fun_25d6_0582();
        0x7768 = 0;
        0x5dfc = 0;
    } else {
        if (0x7768 == 0) {
            pi_var1 = 0x7768;
            *pi_var1 = *pi_var1 + 1;
            fun_25d6_043b(0x3444);
            0x5dfc = 1;
        } else {
            if (0x7766 != 0) {
                pi_var1 = 0x7766;
                *pi_var1 = *pi_var1 + -1;
                return;
            }
            i_var3 = FUN_168b_05f1();
            if (i_var3 == 0) {
                FUN_2692_05ab(0x168b);
                i_var3 = extraout_dx;
                fun_25d6_0463();
                loop {
                    u_var7 = 0x2692;
                    l_var5 = FUN_2692_05ab();
                }
                while (l_var5 < CONCAT22(i_var3 + (0xfffd < u_var7), u_var7 + 2));
                fun_25d6_0463();
                loop {
                    u_var7 = 0x2692;
                    l_var5 = FUN_2692_05ab();
                }
                while (l_var5 < CONCAT22(i_var3 + (0xfffc < u_var7), u_var7 + 3));
            }
            u_var4 = 0x168b;
            i_var3 = FUN_168b_05f1();
            if (i_var3 == 0) {
                fun_25d6_043b(0x168b);
                return;
            }
            if (0x776a != 0) {
                fun_25d6_0582();
                while (0x776a != 0) {
                    fun_25d6_0463();
                    pi_var1 = 0x776a;
                    *pi_var1 = *pi_var1 + -1;
                    u_var6 = FUN_2692_05ab(u_var4);
                    i_var3 = (u_var6 >> 0x10) + (0xfff9 < u_var6);
                    loop {
                        u_var8 = 0x2692;
                        u_var4 = 0x2692;
                        l_var5 = FUN_2692_05ab();
                    }
                    while (l_var5 < CONCAT22(i_var3, u_var8));
                }
            }
            i_var3 = fun_25d6_060d(u_var4);
            fun_25d6_0463();
            if ((i_var3 == 0xb) || (i_var3 == 0xc)) {
                fun_25d6_09db(u_var4);
                fun_25d6_0582();
                fun_25d6_04ee();
                fun_25d6_079f(u_var4, 3, 1);
            } else {
                u_var8 = 0xc84c;
                if (0x5dee != 0) {
                    pi_var1 = 0x5dee;
                    *pi_var1 = *pi_var1 + -1;
                }
                u_var2 = 0xc84e;
                local_e = CONCAT22(u_var2, 0x5df0);
                if (0x5df0 != 0) {
                    pi_var1 = 0x5df0;
                    *pi_var1 = *pi_var1 + -1;
                }
                u_var2 = 0xc850;
                local_12 = CONCAT22(u_var2, 0x5df4);
                if (0x5df4 != 0) {
                    pi_var1 = 0x5df4;
                    *pi_var1 = *pi_var1 + -1;
                }
                u_var2 = 0xc852;
                local_16 = CONCAT22(u_var2, 0x5df2);
                if (0x5df2 != 0) {
                    pi_var1 = 0x5df2;
                    *pi_var1 = *pi_var1 + -1;
                }
                if (CONCAT22(u_var8, 0x5dee) == 0) {
                    if (*local_e == 0) {
                        if (*local_12 == 0) {
                            if (*local_16 == 0) {
                                fun_25d6_03b1(u_var4);
                                0x5dfc = 2;
                                fun_25d6_0824();
                                FUN_168b_05f1();
                                fun_25d6_0582();
                                FUN_168b_05f1();
                                fun_25d6_04ee();
                                return;
                            }
                            FUN_168b_05f1();
                            fun_25d6_0582();
                            FUN_168b_05f1();
                            fun_25d6_04ee();
                        } else {
                            FUN_168b_05f1();
                            fun_25d6_0582();
                            FUN_168b_05f1();
                            fun_25d6_04ee();
                        }
                    } else {
                        FUN_168b_05f1();
                        fun_25d6_0582();
                        FUN_168b_05f1();
                        fun_25d6_04ee();
                    }
                } else {
                    FUN_168b_05f1();
                    fun_25d6_0582();
                    FUN_168b_05f1();
                    fun_25d6_04ee();
                }
            }
        }
    }
    fun_25d6_0824();
    return;
}


fn fun_25d6_03b1()

{
    let pi_var1: *mut u16;
    let b_var2: u8;
    let b_var3: u8;
    let u_var4: u16;
    let u_var5: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    pi_var1 = 0x7778;
    *pi_var1 = *pi_var1 + 1;
    b_var2 = *0x7778;
    b_var3 = b_var2 & 7;
    if ((b_var2 & 7) == 0) {
        if (0x13 < 0xe8ef) {
            return;
        }
        u_var4 = 2;
        u_var5 = 3;
    } else {
        if (b_var3 == 1) {
            if (0xe8ef < 0xe7) {
                return;
            }
            u_var5 = 3;
            u_var4 = 3;
        } else {
            if (b_var3 == 2) {
                if (0xe9ef < 0xdd) {
                    return;
                }
                u_var4 = 4;
                u_var5 = 2;
            } else {
                if (b_var3 == 3) {
                    if (0xe7af < 0x33) {
                        return;
                    }
                    u_var4 = 2;
                } else {
                    if (b_var3 != 4) {
                        return;
                    }
                    if (0xe82f < 0xb) {
                        return;
                    }
                    u_var4 = 3;
                }
                u_var5 = 1;
            }
        }
    }
    fun_25d6_079f(0x3444, u_var5, u_var4);
    return;
}


fn fun_25d6_043b()

{
    let i_var1: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_25d6_0463(0x3444, 9);
    fun_25d6_0582(0x3444, 0);
    i_var1 = FUN_168b_05f1(0x3444, 3);
    0x7766 = i_var1 + 2;
    return;
}


fn fun_25d6_0463(param_1_00: u16, param_1: i16)

{
    bool
    bVar1;
    let u_var2: u16;
    let unaff_ds: u16;
    let u_var3: u32;
    let u_var4: u16;

    fun_3444_02c6(0x39d9);
    if ((0x9c65 == '\b') || (0x9c65 == '\a')) {
        bVar1 = true;
    } else {
        bVar1 = false;
    }
    if (bVar1) {
        fun_294b_02f2(0x3444, 0x1d);
        fun_2b26_0e73(0x294b, 0x1d03, 0, 0, param_1 + 19000);
        u_var4 = 0x1d03;
        u_var2 = 0x1d;
    } else {
        fun_294b_02f2(0x3444, 0x1c);
        fun_2b26_0e73(0x294b, 0x1c03, 0, 0, param_1 + 19000);
        u_var4 = 0x1c03;
        u_var2 = 0x1c;
    }
    u_var3 = FUN_2b26_0008(0x2b26, u_var2, u_var4);
    FUN_2c63_058f(0x2b26, u_var3);
    fun_294b_03be(0x2c63);
    return;
}


fn fun_25d6_04ee(param_1_00: u16, param_1: i16)

{
    bool
    bVar1;
    let u_var2: u16;
    let unaff_ds: u16;
    let u_var3: u32;
    let u_var4: u16;

    fun_3444_02c6(0x39d9);
    if (9 < param_1) {
        param_1 = 9;
    }
    if ((0x9c65 == '\b') || (0x9c65 == '\a')) {
        bVar1 = true;
    } else {
        bVar1 = false;
    }
    if (bVar1) {
        fun_294b_02f2(0x3444, 0x1d);
        fun_2b26_0e73(0x294b, 0x1d04, 0, 0, param_1 + 0x4c2c);
        u_var4 = 0x1d04;
        u_var2 = 0x1d;
    } else {
        fun_294b_02f2(0x3444, 0x1c);
        fun_2b26_0e73(0x294b, 0x1c04, 0, 0, param_1 + 0x4c2c);
        u_var4 = 0x1c04;
        u_var2 = 0x1c;
    }
    u_var3 = FUN_2b26_0008(0x2b26, u_var2, u_var4);
    FUN_2c63_058f(0x2b26, u_var3);
    fun_294b_03be(0x2c63);
    return;
}


fn fun_25d6_0582(param_1_00: u16, param_1: i16)

{
    bool
    bVar1;
    let u_var2: u16;
    let unaff_ds: u16;
    let u_var3: u32;
    let u_var4: u16;

    fun_3444_02c6(0x39d9);
    if ((0x9c65 == '\b') || (0x9c65 == '\a')) {
        bVar1 = true;
    } else {
        bVar1 = false;
    }
    if (bVar1) {
        fun_294b_02f2(0x3444, 0x1d);
        fun_2b26_0e73(0x294b, 0x1d05, 0, 0, param_1 + 17000);
        u_var4 = 0x1d05;
        u_var2 = 0x1d;
    } else {
        fun_294b_02f2(0x3444, 0x1c);
        fun_2b26_0e73(0x294b, 0x1c05, 0, 0, param_1 + 17000);
        u_var4 = 0x1c05;
        u_var2 = 0x1c;
    }
    u_var3 = FUN_2b26_0008(0x2b26, u_var2, u_var4);
    FUN_2c63_058f(0x2b26, u_var3);
    fun_294b_03be(0x2c63);
    return;
}


// WARNING: Type propagation algorithm not settling

fn fun_25d6_060d() -> u16

{
    bool
    bVar1;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ss: i16;
    let unaff_ds: u16;
    undefined2 * ****local_12;
    let local_10: i16;
    let local_e: i16;
    let local_c: i16;
    undefined2 * ******local_a;

    fun_3444_02c6(0x39d9);
    if ((0x9c65 == '\b') || (0x9c65 == '\a')) {
        bVar1 = true;
    } else {
        bVar1 = false;
    }
    if (bVar1) {
        local_c = 0x1d01;
    } else {
        local_c = 0x1c01;
    }
    local_a = (undefined2 * ******) & local_12;
    local_e = 0x3444;
    local_10 = 0x63ab;
    fun_2b26_0e3b();
    local_a = &local_a;
    local_c = 0x2b26;
    local_e = 0x63b8;
    fun_1ba9_1038();
    i_var4 = local_a - (local_e + local_12) / 2;
    unaff_ss = unaff_ss - (local_c + local_10) / 2;
    if ((*0xcf60 & 3) != 0) {
        i_var2 = (local_e - local_12) / 3;
        i_var3 = (local_c - local_10) / 3;
        if ((((unaff_ss < i_var3) && (-i_var3 < unaff_ss)) && (i_var4 < i_var2)) && (-i_var2 < i_var4)) {
            if (i_var4 < 1) {
                return 0xc;
            }
            return 0xb;
        }
    }
    if (((0x13 < unaff_ss) || (unaff_ss < -0x13)) || ((0x27 < i_var4 || (i_var4 < -0x27)))) {
        local_a = (undefined2 * ******)
        0x1ba9;
        local_c = 0x6446;
        i_var2 = FUN_168b_05f1();
        if (i_var2 != 0) {
            if (i_var4 < 1) {
                if (unaff_ss < 1) {
                    if (i_var4 < unaff_ss) {
                        if (i_var4 / 2 < unaff_ss) {
                            return 3;
                        }
                    } else {
                        if (unaff_ss / 2 < i_var4) {
                            return 1;
                        }
                    }
                    return 2;
                }
                if (-unaff_ss == i_var4 || -i_var4 < unaff_ss) {
                    unaff_ss = unaff_ss / 2;
                    if (unaff_ss != -i_var4 && SBORROW2(unaff_ss, -i_var4) == unaff_ss + i_var4 < 0) {
                        return 5;
                    }
                } else {
                    if (-unaff_ss != i_var4 / 2 && unaff_ss <= -(i_var4 / 2)) {
                        return 3;
                    }
                }
                return 4;
            }
            if (unaff_ss < 1) {
                if (-unaff_ss < i_var4) {
                    i_var4 = i_var4 / 2;
                    if (i_var4 != -unaff_ss && SBORROW2(i_var4, -unaff_ss) == i_var4 + unaff_ss < 0) {
                        return 7;
                    }
                } else {
                    if (-i_var4 != unaff_ss / 2 && i_var4 <= -(unaff_ss / 2)) {
                        return 1;
                    }
                }
                return 8;
            }
            if (unaff_ss < i_var4) {
                if (unaff_ss < i_var4 / 2) {
                    return 7;
                }
            } else {
                if (i_var4 < unaff_ss / 2) {
                    return 5;
                }
            }
            return 6;
        }
    }
    return 0;
}


fn fun_25d6_079f(param_1_00: u16, param_1: i16, param_2: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (param_1 == 1) {
        0x5dee = 0x14;
        0x5df8 = param_2;
    } else {
        if (param_1 == 2) {
            0x5df2 = 0x14;
            0x5dfa = param_2;
        } else {
            if (param_1 == 3) {
                0x5df0 = 0x14;
                0x5df6 = param_2;
            } else {
                if (param_1 == 4) {
                    0x5df4 = 0x14;
                    0x5dfe = param_2;
                }
            }
        }
    }
    return;
}


fn fun_25d6_0824(param_1_00: u16, param_1: i16)

{
    let pi_var1: *mut u16;
    code * *ppcVar2;
    bool
    bVar3;
    let i_var4: i16;
    let u_var5: u16;
    let unaff_ds: u16;
    let local_c: u16;
    let local_a: u16;
    let local_8: *mut u16;

    fun_3444_02c6(0x39d9);
    if ((0x9c65 == '\b') || (0x9c65 == '\a')) {
        bVar3 = true;
    } else {
        bVar3 = false;
    }
    if (bVar3) {
        local_8 = 0x65b1;
        fun_294b_02f2();
        local_8 = 0x1d02;
    } else {
        local_8 = 0x65c5;
        fun_294b_02f2();
        local_8 = 0x1c02;
    }
    local_a = 0x294b;
    local_c = 0x65d7;
    fun_2b26_0e3b();
    if ((*0x9c65 & 1) == 0) {
        local_8 = 0xffff;
        local_a = 0xffff;
        local_c = 0xffff;
        u_var5 = 0x2c63;
        fun_2c63_0002(0x2b26, 0xffff);
    } else {
        local_8 = &local_c;
        local_a = 0x2b26;
        u_var5 = 0x27ac;
        local_c = 0x65f5;
        fun_27ac_076d();
    }
    if (0x7faa == 0x140) {
        ppcVar2 = (code * *)
        0xcf6c;
        (**ppcVar2)();
    }
    if (param_1 == 0) {
        if ((0x1398 == '\0') || (0x5dfc != 0)) {
            local_8 = (0x5dfc * 4 + 0x795e);
        } else {
            local_8 = 0x798e;
            local_c = 0x6667;
            local_a = u_var5;
            i_var4 = FUN_2a60_0913();
            if ((i_var4 != 0) && (pi_var1 = 0x798c, *pi_var1 = *pi_var1 + 1, i_var4 = 0x798c * 4,
                                  ((i_var4 + 0x796a) | (i_var4 + 0x7968)) == 0)) {
                0x798c = 0;
            }
            local_8 = (0x798c * 4 + 0x796a);
            u_var5 = 0x2a60;
        }
    } else {
        if (param_1 == 1) {
            local_8 = (0x5df8 * 4 + 0x792a);
        } else {
            if (param_1 == 2) {
                local_8 = (0x5dfa * 4 + 0x793a);
            } else {
                if (param_1 == 3) {
                    local_8 = (0x5df6 * 4 + 0x7916);
                } else {
                    if (param_1 != 4)
                    goto
                    LAB_25d6_09b8;
                    local_8 = (0x5dfe * 4 + 0x794e);
                }
            }
        }
    }
    local_c = 0x6715;
    local_a = u_var5;
    fun_168b_034f();
// LAB_25d6_09b8:
    if (0x7faa == 0x140) {
        ppcVar2 = (code * *)
        0xcf70;
        (**ppcVar2)();
    }
    fun_294b_03be();
    return;
}


fn fun_25d6_09cd()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    0x776a = 7;
    return;
}


fn fun_25d6_09db()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((0xd26 != '\0') && (0x25 == '\0')) {
        fun_32c9_0af0(0x3444, 0x7992);
    }
    return;
}


fn fun_2676_000c() -> u16

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    0x7c0c = 1;
    fun_2d56_0eee(0x3444);
    return 0x7c0c;
}


fn fun_268d_0047(param_a: u16, param_b: u16, param_c: u16)

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_268d_004f()

{
    fun_3444_02c6(0x39d9);
    return;
}


fn fun_2692_0009()

{
    let pu_var1: *mut u16;
    let u_var2: u32;
    let u_var3: u32;
    let i_var4: i16;
    let pu_var5: *mut u16;
    let u_var6: u16;
    let unaff_ds: u16;

    u_var2 = 
    0x7fec;
    u_var3 = 
    0x7ff0;
    u_var6 = (undefined2)(u_var3 >> 0x10);
    pu_var5 = u_var3;
    i_var4 = 0x19;
    loop {
    pu_var1 = pu_var5 + 1;
    *pu_var5 = u_var2;
    pu_var5 = pu_var5 + 2;
    *pu_var1 = (u_var2 >> 0x10);
    i_var4 = i_var4 + -1;
}
    while (i_var4 != 0);
    return;
}


fn fun_2692_001f(param_1_00: u16, param_1: u16, param_2: u16, undefined2 *param_3)

{
    code * *ppcVar1;
    let u_var2: u16;
    let unaff_ds: u16;

    u_var2 = (undefined2)(param_3 >> 0x10);
    ppcVar1 = (code * *)
    0xcf8c;
    (**ppcVar1)(0x39d9, param_1, param_2, param_3 + 4, u_var2, *param_3,
                (param_3 + 2));
    return;
}


fn fun_2692_0042(param_1_00: u16, param_1: u16, param_2: u16, undefined2 *param_3)

{
    code * *ppcVar1;
    let u_var2: u16;
    let unaff_ds: u16;

    u_var2 = (undefined2)(param_3 >> 0x10);
    ppcVar1 = (code * *)
    0xcf94;
    (**ppcVar1)(0x39d9, param_1, param_2, param_3 + 4, u_var2, *param_3,
                (param_3 + 2));
    return;
}


fn fun_2692_0065(param_1_00: u16, param_1: i16, param_2: u16, undefined4 param_3) -> u16

{
    char
    cVar1;
    let u_var2: u16;
    let pc_var3: String;
    let u_var4: u16;
    let u_var5: u16;
    let unaff_ds: u16;

    u_var2 = 0x7fd4;
    pc_var3 = 
    param_3;
    u_var4 = param_1 - 0x7fd6;
    u_var5 = 0x39d9;
    loop {
    loop {
        cVar1 = *pc_var3;
        pc_var3 = pc_var3 + 1;
        if (cVar1 == '\0')
        goto
        LAB_2692_009f;
        u_var4 = u_var4 + 0x7fd6;
    }
    while (u_var4 < 0);
    fun_2692_00cc(u_var5, u_var4, param_2, cVar1);
    u_var5 = 0x2692;
}
    while (u_var4 < 0x7faa);
// LAB_2692_009f:
    0x7f98 = u_var4 + 0x7fd6;
    0x7f9a = param_2;
    return u_var2;
}


fn fun_2692_00b2(param_1_00: u16, undefined4 param_1)

{
    let unaff_ds: u16;

    fun_2692_0ecc(0x39d9, 0x7f98, 0x7f9a, param_1,
                  (param_1 >> 0x10));
    return;
}


fn fun_2692_00cc(param_1_00: u16, param_1: u16, param_2: u16, byte param_3)

{
    code * *ppcVar1;
    let u_var2: u32;
    let unaff_ds: u16;

    u_var2 = 
    0x7fce;
    ppcVar1 = (code * *)
    0xcf94;
    (**ppcVar1)(0x39d9, param_1, param_2, u_var2 + (0x7fd2 & 0xff) * param_3,
                (u_var2 >> 0x10), 0x7fd6, 0x7fd4);
    return;
}


fn fun_2692_00fb()

{
    let pcVar1: *mut Code;

    pcVar1 = swi(0x10);
    (*pcVar1)();
    return;
}


// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn fun_2692_0139()

{
    if ((_DAT_0000_00cc == 0x138) && (_DAT_0000_00ce == 0x2692)) {
        _DAT_0000_00ce = 0;
        _DAT_0000_00cc = 0;
    }
    return;
}


// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn fun_2692_015a(param_1: u16, param_2: u16) -> u16

{
    let pcVar1: *mut Code;
    let u_var2: u16;
    let b_var3: u8;
    let unaff_ds: u16;

    if (0x8538 != '\0') {
        // WARNING: Read-only address (ram,0x00020118) is written
        uRam00020118 = 1;
        DAT_0000_0449 = 0x50;
    }
    if ((_DAT_0000_00cc | _DAT_0000_00ce) == 0) {
        _DAT_0000_00ce = 0x2692;
        _DAT_0000_00cc = 0x138;
    }
    pcVar1 = swi(0x33);
    u_var2 = (*pcVar1)();
    if (u_var2 != 0) {
        pcVar1 = swi(0x33);
        (*pcVar1)();
        pcVar1 = swi(0x33);
        (*pcVar1)();
        b_var3 = 0;
        pcVar1 = swi(0x33);
        (*pcVar1)();
        u_var2 = 2;
        if ((b_var3 != 0) && (u_var2 = b_var3, b_var3 == 1)) {
            u_var2 = 4;
        }
    }
    
    0x8fae = u_var2;
    0xcf62 = 0x7fac >> 1;
    0xcf64 = 0x7faa >> 1;
    fun_2692_0a04();
    0x8566 = 1;
    return param_2;
}


fn fun_2692_01e8()

{
    let pi_var1: *mut u16;
    let pc_var2: String;
    let u_var3: u16;
    let unaff_ds: u16;
    let b_var4: u8;
    let b_var5: u8;
    let in_af: u8;
    let b_var6: u8;
    let b_var7: u8;
    let in_tf: u8;
    let in_if: u8;
    let b_var8: u8;
    let in_nt: u8;

    pi_var1 = 0x855e;
    *pi_var1 = *pi_var1 + 1;
    if (*pi_var1 == 0) {
        pi_var1 = 0x8560;
        *pi_var1 = *pi_var1 + 1;
    }
    
    0x853f = 0;
    if (0x8571 == '\0') {
        u_var3 = (undefined2) * (undefined4 *)
        0x9690;
        b_var4 = 0;
        b_var8 = 0;
        b_var7 = 0;
        b_var6 = true;
        b_var5 = 1;
        FUN_2692_0cbe();
        if (!(bool)
        b_var6) {
            b_var4 = 0;
            b_var8 = 0;
            u_var3 = 0;
            b_var7 = 0;
            b_var6 = 1;
            b_var5 = 1;
        }
        0x8faf = u_var3;
        FUN_2692_0231((in_nt & 1) * 0x4000 | (b_var8 & 1) * 0x800 | (in_if & 1) * 0x200 | (in_tf & 1) * 0x100 | (b_var7 & 1) * 0x80 | (b_var6 & 1) * 0x40 | (in_af & 1) * 0x10 | (b_var5 & 1) * 4 | (b_var4 & 1));
        pc_var2 = 
        0x8571;
        *pc_var2 = *pc_var2 + '\x01';
        
        0x853e = 0;
    }
    return;
}



undefined2  FUN_2692_0231()

{
let pcVar1: String; let uVar2: u16;
let uVar3: u16; let uVar4: u16;
let uVar5: u16; let uVar6: u16;
let iVar7: i16; code * * ppcVar8;
let in_AX: u16; let uVar9: u16;
let unaff_DS: u16; let uVar10: u16;
let uVar11: u16; let uVar12: u16;

uVar9 = 0x39d9; pcVar1 = (char * )0x8540; * pcVar1 = * pcVar1 + '\x01';
uVar2 = 0x9c7a; uVar3 = 0x9c7c; uVar4 = 0x7fde; uVar5 = 0x7fe0; 0x9c7c = 0x6169;
0x9c7a = 0x9c6a; uVar6 = 0x7fca; uVar12 = 0x7fdc; uVar11 = 0x7fda; uVar10 = 0x7fd8;
ppcVar8 = (code * * )0xcfa8; (* * ppcVar8)(0x39d9); iVar7 = 0x8faf; if (iVar7 == 0) {
uVar9 = 0x2692; FUN_2692_0d1b(0x39d9, in_AX);
}
else {
ppcVar8 = (code * * )(iVar7 + 8); ( * * ppcVar8)(0x39d9, in_AX, uVar10, uVar11, uVar12);
}
ppcVar8 = (code * * )0xcf68; (* * ppcVar8)(uVar9); ppcVar8 = (code * * )0xcfc4; ( * *ppcVar8)(uVar9); 0x7fe0 = uVar5;
0x7fde = uVar4; 0x9c7c = uVar3; 0x9c7a = uVar2; pcVar1 = (char * )0x8540;
* pcVar1 = * pcVar1 + - 1; return uVar6;
}



fn fun_2692_02a5()

{
    let pi_var1: *mut u16;
    let pc_var2: String;
    char
    cVar3;
    let unaff_ds: u16;

    
    0x853f = 1;
    cVar3 = 0x8571;
    if (cVar3 != '\0') {
        if (cVar3 < '\x01') {
            fun_3444_1a40(0x39d9, 0x95b4);
            // WARNING: Subroutine does not return
            fun_2a60_08cb(0x3444);
        }
        pi_var1 = 0x855a;
        *pi_var1 = *pi_var1 + 1;
        if (*pi_var1 == 0) {
            pi_var1 = 0x855c;
            *pi_var1 = *pi_var1 + 1;
        }
        FUN_2692_0231();
        pc_var2 = 
        0x8571;
        *pc_var2 = *pc_var2 + -1;
    }
    return;
}


fn fun_2692_02d7(param_1_00: u16, undefined4 param_1, undefined2 *param_2)

{
    let u_var1: u16;
    let unaff_ds: u16;

    u_var1 = (undefined2)(param_2 >> 0x10);
    0x8f98 = param_2;
    0x8f9a = u_var1;
    0x8554 = *param_2;
    0x8556 = (param_2 + 2);
    0x8f9c = param_1;
    0x8f9e = (param_1 >> 0x10);
    if (0x8566 != 0) {
        
        0x853e = 1;
    }
    return;
}


fn fun_2692_030e()

{
    let pcVar1: *mut Code;

    pcVar1 = swi(0x33);
    (*pcVar1)();
    return;
}


fn fun_2692_031e()

{
    let pcVar1: *mut Code;

    pcVar1 = swi(0x33);
    (*pcVar1)();
    return;
}


fn fun_2692_032b()

{
    let pc_var1: String;
    let pcVar2: *mut Code;
    let in_bx: u16;
    let in_stack_00000012: u16;

    pcVar2 = swi(0x33);
    (*pcVar2)();
    pcVar2 = swi(0x21);
    (*pcVar2)();
    // WARNING: Read-only address (ram,0x00039ea9) is written
    // WARNING: Read-only address (ram,0x00039eab) is written
    uRam00039eab = 0x39d9;
    pcVar2 = swi(0x21);
    uRam00039ea9 = in_bx;
    (*pcVar2)();
    pcVar2 = swi(0x21);
    (*pcVar2)();
    // WARNING: Read-only address (ram,0x00039ead) is written
    // WARNING: Read-only address (ram,0x00039eaf) is written
    uRam00039eaf = 0x39d9;
    pcVar2 = swi(0x21);
    uRam00039ead = in_bx;
    (*pcVar2)();
    pc_var1 = 
    0x95b2;
    *pc_var1 = *pc_var1 + '\x01';
    return;
}


fn fun_2692_036e()

{
    let pc_var1: String;
    let pcVar2: *mut Code;
    let unaff_ds: u16;

    if (0x95b2 != '\0') {
        pc_var1 = 
        0x95b2;
        *pc_var1 = *pc_var1 + -1;
        pcVar2 = swi(0x21);
        (*pcVar2)();
        pcVar2 = swi(0x21);
        (*pcVar2)();
    }
    pcVar2 = swi(0x33);
    (*pcVar2)();
    0x8566 = 0;
    return;
}


fn fun_2692_03a7() -> u16

{
    fun_2692_0403(0x39d9);
    return 0;
}


fn fun_2692_03c2() -> u16

{
    let unaff_ds: u16;

    return 0xa320;
}


fn fun_2692_03c6(param_1_00: u16, undefined4 param_1)

{
    let pi_var1: *mut u16;
    let pu_var2: *mut u16;
    let pu_var3: *mut u16;
    let i_var4: i16;
    let i_var5: i16;
    let pu_var6: *mut u16;
    let pu_var7: *mut u16;
    let unaff_ds: u16;

    i_var4 = 0xa320 + -1;
    if (-1 < i_var4) {
        0xa320 = i_var4;
        i_var4 = 0xa324;
        i_var5 = i_var4 + 1;
        pi_var1 = 0xa31e;
        if (*pi_var1 == i_var5 || *pi_var1 < i_var5) {
            i_var5 = 0;
        }
        0xa324 = i_var5;
        pu_var6 = (0xa32c + i_var4 * 0x10);
        pu_var7 = param_1;
        for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {
            pu_var3 = pu_var7;
            pu_var7 = pu_var7 + 1;
            pu_var2 = pu_var6;
            pu_var6 = pu_var6 + 1;
            *pu_var3 = *pu_var2;
        }
    }
    return;
}


// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn fun_2692_0403()

{
    let u_var1: u16;
    let in_ax: u16;
    let in_cx: u16;
    let in_dx: u16;
    let in_bx: u16;
    let i_var2: i16;
    let i_var3: i16;
    let unaff_es: u16;

    i_var2 = DAT_616d_a2e2 + 1;
    if (DAT_616d_a2de <= i_var2) {
        i_var2 = 0;
    }
    if (DAT_616d_a2e4 == i_var2) {
        uRam00020137 = 0xc4;
        return;
    }
    DAT_616d_a2e0 = DAT_616d_a2e0 + 1;
    i_var3 = DAT_616d_a2ec + DAT_616d_a2e2 * 0x10;
    DAT_616d_a2e2 = i_var2;
    (i_var3 + 6) = in_ax;
    (i_var3 + 8) = in_cx;
    (i_var3 + 10) = in_dx;
    (i_var3 + 0xc) = in_bx;
    (i_var3 + 0xe) = unaff_es;
    u_var1 = _DAT_0000_046c;
    (i_var3 + 2) = _DAT_0000_0417 | 1;
    (i_var3 + 4) = u_var1;
    if ((in_ax & 0xa00) != 0) {
        // WARNING: Read-only address (ram,0x00020137) is written
        uRam00020137 = 0x44;
    }
    return;
}


// WARNING: Unable to track spacebase fully for stack
// WARNING: This function may have set the stack pointer
// WARNING: Removing unreachable block (ram,0x00026e04)
// WARNING: Removing unreachable block (ram,0x00026e48)
// WARNING: Removing unreachable block (ram,0x00026e41)
// WARNING: Removing unreachable block (ram,0x00026e56)
// WARNING: Removing unreachable block (ram,0x00026e5d)
// WARNING: Removing unreachable block (ram,0x00026e66)
// WARNING: Removing unreachable block (ram,0x00026e6a)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn fun_2692_04da()

{
    uRam0002012d = 0x2bfc;
    uRam0002012f = 0xf846;
    uRam00020135 = 0xeb;
    return;
}


fn fun_2692_0562()

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let unaff_es: u16;
    let unaff_ds: u16;
    bool
    bVar3;

    pi_var1 = 0x8562;
    *pi_var1 = *pi_var1 + 1;
    if (*pi_var1 == 0) {
        pi_var1 = 0x8564;
        *pi_var1 = *pi_var1 + 1;
    }
    if ('\0' < 0x8571) {
        FUN_2692_0231();
        u_var2 = (undefined2) * (undefined4 *)
        0x9690;
        bVar3 = true;
        FUN_2692_0cbe();
        if (!bVar3) {
            u_var2 = 0;
        }
        0x8faf = u_var2;
        FUN_2692_0231();
        
        0x853e = 0;
    }
    return;
}



undefined4 FUN_2692_05ab()

{
return 0x10847;
}



fn fun_2692_05b5()

{
    let unaff_ds: u16;

    uRam00020127 = 0x8568;
    uRam00020129 = 0x856a;
    // WARNING: Read-only address (ram,0x00020127) is written
    // WARNING: Read-only address (ram,0x00020129) is written
    return;
}


fn fun_2692_05d1()

{
    let unaff_ds: u16;

    0x8568 = 0x847;
    0x856a = 1;
    return;
}


fn fun_2692_09f6()

{
    FUN_2692_0a0c();
    return;
}


fn fun_2692_0a04()

{
    char
    cVar1;
    let pcVar2: *mut Code;
    let unaff_ds: u16;

    cVar1 = 0x8fae;
    if (cVar1 != '\0') {
        pcVar2 = swi(0x33);
        (*pcVar2)(CONCAT11(cVar1, 1));
    }
    fun_2692_04da(0x39d9);
    return;
}



void  FUN_2692_0a0c()

{
char cVar1; code * pcVar2; let unaff_DS: u16;

cVar1 = 0x8fae; if (cVar1 != '\0') {
pcVar2 = swi(0x33); ( * pcVar2)(CONCAT11(cVar1, 1));
}
FUN_2692_04da(0x39d9); return;
}



byte FUN_2692_0a3d(param_1_00: u16,param_1: i16)

{
let unaff_DS: u16;

return * (param_1 + - 0x6a3d) ^ 0x80;
}



fn fun_2692_0a4d()

{
    let pcVar1: *mut Code;
    let u_var2: u16;
    let unaff_ds: u16;

    fun_2692_0a79(0x39d9);
    u_var2 = 0;
    // WARNING: Read-only address (ram,0x00020123) is written
    uRam00020123 = 0;
    
    0x95b3 = 0;
    pcVar1 = swi(0x33);
    (*pcVar1)();
    0xcf60 = u_var2;
    // WARNING: Read-only address (ram,0x00020137) is written
    uRam00020137 = 0;
    
    0x856e = 0;
    
    0x856f = 0;
    
    0x8572 = 0;
    
    0x8573 = 0;
    return;
}


fn fun_2692_0a79()

{
    let pu_var1: *mut u16;
    let i_var2: i16;
    let pu_var3: *mut u16;
    let unaff_ds: u16;

    pu_var3 = 0x95c3;
    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {
        pu_var1 = pu_var3;
        pu_var3 = pu_var3 + 1;
        *pu_var1 = 0x8080;
    }
    // WARNING: Read-only address (ram,0x00020123) is written
    uRam00020123 = 1;
    
    0x95b3 = 1;
    return;
}



void  FUN_2692_0a96()

{
let in_AX: i16; let iVar1: i16;
let unaff_DI: * mut u16; let piVar2: * mut u16; let unaff_ES: u16;

iVar1 = * unaff_DI; piVar2 = unaff_DI + 1;
while ( true ) {
if (iVar1 == 0) {
return;
}
if (in_AX == piVar2[6]) break; iVar1 = iVar1 + - 1; piVar2 = piVar2 + 9;
}
return;
}



fn fun_2692_0ab0()

{
    let unaff_ds: u16;

    
    0x967a = 0;
    
    0x9680 = 0;
    
    0xa326 = 0;
    0xa328 = 0xc82;
    
    0xa327 = 0x1f;
    return;
}


fn fun_2692_0ad0(param_1_00: u16, undefined4 param_1, uint *param_2)

{
    let pu_var1: *mut u16;
    let pu_var2: *mut u16;
    let u_var3: u16;
    let i_var4: i16;
    let pu_var5: *mut u16;
    let pu_var6: *mut u16;
    let u_var7: u16;
    let in_cf: u8;
    let in_pf: u8;
    let in_af: u8;
    let in_zf: u8;
    let in_sf: u8;
    let in_tf: u8;
    let in_if: u8;
    let in_of: u8;
    let in_nt: u8;

    u_var7 = (undefined2)(param_2 >> 0x10);
    u_var3 = *param_2;
    if (u_var3 < (param_2 + -2)) {
        *param_2 = *param_2 + 1;
        pu_var6 = (param_2 + 2 + (u_var3 & 0xff) * 0x12);
        pu_var5 = param_1;
        for (iVar4 = 9; iVar4 != 0; iVar4 = iVar4 + -1) {
            pu_var2 = pu_var6;
            pu_var6 = pu_var6 + 1;
            pu_var1 = pu_var5;
            pu_var5 = pu_var5 + 1;
            *pu_var2 = *pu_var1;
        }
        return;
    }
    fun_3444_1a40(0x39d9, 0x9696,
                  (in_nt & 1) * 0x4000 | (in_of & 1) * 0x800 | (in_if & 1) * 0x200 | (in_tf & 1) * 0x100 | (in_sf & 1) * 0x80 | (in_zf & 1) * 0x40 | (in_af & 1) * 0x10 | (in_pf & 1) * 4 | (in_cf & 1));
    // WARNING: Subroutine does not return
    fun_2a60_08cb(0x3444);
}


fn fun_2692_0b0d(param_1_00: u16, undefined4 param_1, uint *param_2)

{
    let pu_var1: *mut u16;
    let pu_var2: *mut u16;
    let u_var3: u16;
    let pu_var4: *mut u16;
    let i_var5: i16;
    let pu_var6: *mut u16;
    let pu_var7: *mut u16;
    let u_var8: u16;
    let u_var9: u16;

    u_var9 = 0x39d9;
    u_var8 = (undefined2)(param_2 >> 0x10);
    i_var5 = param_2;
    if (i_var5 == 0x728) {
        u_var9 = 0x2692;
        fun_2692_02a5(0x39d9);
    }
    u_var3 = *param_2;
    if (u_var3 < (i_var5 + -2)) {
        *param_2 = *param_2 + 1;
        pu_var6 = (i_var5 + 2);
        if (u_var3 != 0) {
            pu_var4 = pu_var6 + (u_var3 & 0xff) * 9;
            pu_var7 = pu_var4 + 8;
            for (uVar3 = (uVar3 &0xff) * 0x12 >> 1; puVar4 = puVar4 + -1, uVar3 != 0; uVar3 = uVar3 -1)
            {
                pu_var1 = pu_var7;
                pu_var7 = pu_var7 + -1;
                *pu_var1 = *pu_var4;
            }
        }
        pu_var4 = param_1;
        for (iVar5 = 9; iVar5 != 0; iVar5 = iVar5 + -1) {
            pu_var2 = pu_var6;
            pu_var6 = pu_var6 + 1;
            pu_var1 = pu_var4;
            pu_var4 = pu_var4 + 1;
            *pu_var2 = *pu_var1;
        }
        fun_2692_01e8(u_var9);
        return;
    }
    fun_3444_1a40(u_var9, 0x9696);
    // WARNING: Subroutine does not return
    fun_2a60_08cb(0x3444);
}


fn fun_2692_0b68(param_1_00: u16, param_1: u16, uint *param_2)

{
    let pu_var1: *mut u16;
    let pu_var2: *mut u16;
    char
    cVar3;
    bool
    bVar4;
    let u_var5: u16;
    let pu_var6: *mut u16;
    let pu_var7: *mut u16;
    let u_var8: u16;
    let u_var9: u16;
    let unaff_ds: u16;
    let b_var10: u8;
    bool
    bVar11;
    let in_af: u8;
    bool
    bVar12;
    bool
    bVar13;
    let in_tf: u8;
    let in_if: u8;
    bool
    bVar14;
    let in_nt: u8;

    u_var9 = 0x39d9;
    bVar4 = false;
    u_var8 = (undefined2)(param_2 >> 0x10);
    pu_var7 = param_2;
    b_var10 = pu_var7 < 0x728;
    bVar14 = SBORROW2(pu_var7, 0x728);
    pu_var6 = pu_var7 + -0x394;
    bVar13 = pu_var6 < 0;
    bVar12 = pu_var6 == 0x0;
    bVar11 = (POPCOUNT(pu_var6 & 0xff) & 1) == 0;
    if (bVar12) {
        b_var10 = 0;
        bVar14 = false;
        cVar3 = 0x8571;
        bVar13 = cVar3 < '\0';
        bVar12 = cVar3 == '\0';
        bVar11 = (POPCOUNT(cVar3) & 1) == 0;
        if ('\0' < cVar3) {
            u_var9 = 0x2692;
            fun_2692_02a5(0x39d9);
            bVar14 = false;
            bVar4 = true;
            bVar13 = false;
            bVar12 = false;
            bVar11 = false;
        }
    }
    FUN_2692_0a96((in_nt & 1) * 0x4000 | bVar14 * 0x800 | (in_if & 1) * 0x200 | (in_tf & 1) * 0x100 | bVar13 * 0x80 | bVar12 * 0x40 | (in_af & 1) * 0x10 | bVar11 * 4 | (b_var10 & 1));
    if (!(bool)
    b_var10) {
    *param_2 = *param_2 - 1;
    u_var5 = (*param_2 & 0xff) * 0x12 + 2;
    if (u_var5 != 0) {
        pu_var6 = pu_var7 + 9;
        for (uVar5 = uVar5 >> 1; uVar5 != 0; uVar5 = uVar5 -1) {
            pu_var2 = pu_var7;
            pu_var7 = pu_var7 + 1;
            pu_var1 = pu_var6;
            pu_var6 = pu_var6 + 1;
            *pu_var2 = *pu_var1;
        }
    }
}
    if (bVar4) {
        fun_2692_01e8(u_var9);
    }
    return;
}


fn fun_2692_0bd2(param_1_00: u16, param_1: u16, int *param_2) -> u16

{
    let i_var1: i16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    undefined
    in_CF;

    u_var3 = (undefined2)(param_2 >> 0x10);
    i_var2 = param_2;
    FUN_2692_0a96();
    if ((((!(bool)
    in_CF) &&(i_var1 = 0xcf62, *param_2 <= i_var1)) &&(i_var1 <= (i_var2 + 4))) &&((i_var1 = 0xcf64, (i_var2 + 2) <= i_var1 && (i_var1 <= (i_var2 + 6))))) {
    return 1;
}
    return 0;
}


fn fun_2692_0c4f()

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    undefined
    in_CF;

    pi_var1 = *(int * *)
    0x9686;
    u_var3 = (undefined2)(pi_var1 >> 0x10);
    i_var2 = pi_var1;
    FUN_2692_0a96();
    if (!(bool)
    in_CF) {
    fun_2692_09f6(0x39d9, (*pi_var1 + (i_var2 + 4)) >> 1,
                  ((i_var2 + 2) + (i_var2 + 6)) >> 1);
}
    return;
}


// WARNING: Globals starting with '_' overlap smaller symbols at the same address

void  FUN_2692_0cbe()

{
code * * ppcVar1; let in_AX: u16;
let iVar2: i16; let in_CX: i16;
let in_DX: i16; let bVar3: u8;
let in_BX: u16; let uVar4: u16;
let unaff_DI: * mut u8; let piVar5: * mut u16; let unaff_DS: u16;

bVar3 = * unaff_DI; uVar4 = in_BX & 0xff00 | bVar3; if (bVar3 != 0) {
piVar5 = (unaff_DI + 2); loop {
if (((((piVar5[8] & in_AX) != 0) & & ( *piVar5 < = in_CX)) & & (in_CX < = piVar5[2])) & &
((piVar5[1] < = in_DX && (in_DX < = piVar5[3])))) {
if ((uVar4 >> 8) == '\0') {
return;
}
ppcVar1 = (code * * )(piVar5 + 4); iVar2 = ( * * ppcVar1)(0x39d9, piVar5[6], piVar5[7], in_AX, in_CX, in_DX);
in_AX = _DAT_6000_e5f0; in_CX = _DAT_6000_e5f2; in_DX = _DAT_6000_e5f4; if (iVar2 == 0) {
return;
}
}
piVar5 = piVar5 + 9; bVar3 = uVar4 - 1; uVar4 = uVar4 & 0xff00 | bVar3;
} while (bVar3 != 0);
}
return;
}



fn fun_2692_0d1b(param_1_00: u16, byte param_1)

{
    let b_var1: u8;
    let unaff_ds: u16;
    let u_var2: u16;

    b_var1 = param_1 & 3;
    if ((param_1 & 3) != 0) {
        if (DAT_20a9_0289 == b_var1) {
            FUN_3440_0041(0x96a6);
        } else {
            DAT_20a9_0289 = b_var1;
            if (b_var1 == 1) {
                FUN_2692_0d73();
            } else {
                if (b_var1 == 2) {
                    u_var2 = 0x7e2c;
                    0x7e2c = 1;
                    fun_2692_001f(0x2000, 0x854c, 0x854e, 0x8fac);
                    0x7e2c = u_var2;
                }
            }
        }
    }
    return;
}



undefined2  FUN_2692_0d73()

{
let iVar1: i16; let uVar2: u16;
code * * ppcVar3; let puVar4: * mut u16; let uVar5: u32; undefined4 * puVar6; let iVar7: i16; let iVar8: i16; let uVar9: u16; let uVar10: u16; let unaff_DS: u16; let uVar11: u16;

puVar4 = * ff0x8f98;
uVar10 = (undefined2)(puVar4 >> 0x10); 0x8fa0 = puVar4; 0x8fa2 = uVar10;
0x8faa = * puVar4; 0x8fa8 = (puVar4 + 2); uVar5 = * ff0x8f9c; 0x8fa4 = uVar5; 0x8fa6 = (uVar5 >> 0x10); puVar6 = (undefined4 *) * ff0x98d6; if (((puVar6 >> 0x10) != 0) & & (0x8faf == 0)) {
puVar4 = * puVar6; uVar10 = (undefined2)(puVar4 >> 0x10); if ((0x8541 & 0xff) != 0) {
iVar1 = 0xcf62; iVar7 = 0xcf64; if ((((0x8543 < = iVar1) & & (iVar1 < = 0x8547)) & & (0x8545 < = iVar7)) & & (iVar7 < = 0x8549)) {
0x8fa0 = puVar4; 0x8fa2 = uVar10; 0x8faa = * puVar4; 0x8fa8 = (puVar4 + 2); uVar5 = * ff * ff0x98d2; 0x8fa4 = uVar5; 0x8fa6 = (uVar5 >> 0x10);
}
}
}
puVar6 = ff * (undefined4 *)0x98b8; if ((puVar6 >> 0x10) != 0) {
puVar4 = * puVar6; uVar10 = (undefined2)(puVar4 >> 0x10); 0x8fa0 = puVar4; 0x8fa2 = uVar10; 0x8faa = * puVar4;
0x8fa8 = (puVar4 + 2); uVar5 = * ff * ff0x98b4; 0x8fa4 = uVar5; 0x8fa6 = (uVar5 >> 0x10);
}
uVar10 = 0x7e2c; 0x7e2c = 1; uVar11 = 0xcf62; uVar9 = uVar11 & 0xfff8; uVar2 = 0x8fac; iVar1 = 0xcf64; 0x854c = uVar9;
0x854e = iVar1; iVar7 = iVar1 + 0x8fa8;
iVar8 = uVar9 + 0x8faa + 7; 0x8552 = iVar8; 0x8550 = iVar7; ppcVar3 = (code * * )0xcf88; ( * * ppcVar3)(0x2000, uVar9, iVar1, iVar8, iVar7, uVar2); ppcVar3 = (code * *)0xcf68; ( * * ppcVar3)(0x2000, 0xff0f, 0, 0); ppcVar3 = (code * * )0xcfa4; ( * *ppcVar3)(0x2000); 0x7e2c = 0;
uVar5 = * ff0x8fa0; FUN_2692_0042(0x2000, uVar11, iVar1, uVar5, (uVar5 >> 0x10)); ppcVar3 = (code * * )0xcfa0; ( * * ppcVar3)(0x2692); uVar5 = * ff0x8fa4; FUN_2692_001f(0x2692, uVar11,iVar1, uVar5, (uVar5 >> 0x10)); 0x7e2c = uVar10; return 0;
}



byte FUN_2692_0ebd()

{
return DAT_0000_0417 & 0x10;
}



fn fun_2692_0ecc(param_1_00: u16, param_1: i16, param_2: u16, undefined4 param_3)

{
    let pc_var1: String;
    let pb_var2: *mut u8;
    undefined * puVar3;
    let pb_var4: *mut u8;
    char
    cVar5;
    let b_var6: u8;
    let u_var7: u32;
    let u_var8: u16;
    let u_var9: u16;
    let b_var10: u8;
    let pc_var11: String;
    let pb_var12: *mut u8;
    undefined * puVar13;
    let pb_var14: *mut u8;
    let pb_var15: *mut u8;
    let pc_var16: String;
    undefined * puVar17;
    undefined * puVar18;
    let pb_var19: *mut u8;
    let pb_var20: *mut u8;
    let unaff_ds: u16;
    let u_var21: u16;

    pc_var11 = 
    param_3;
    u_var21 = (undefined2)(param_3 >> 0x10);
    if ((0x9c65 == '\x06') || (0x9c65 == '\x02')) {
        fun_2692_0065(0x39d9, param_1, param_2, pc_var11, u_var21);
        return;
    }
    0x9eb8 = *0x7fd4;
    pc_var16 = 
    0xa2ca;
    b_var6 = 0;
    loop {
    b_var10 = b_var6;
    pc_var1 = pc_var11;
    pc_var11 = pc_var11 + 1;
    cVar5 = *pc_var1;
    pc_var1 = pc_var16;
    pc_var16 = pc_var16 + 1;
    *pc_var1 = cVar5;
    if (cVar5 == '\0')
    break;
    b_var6 = b_var10 + 1;
}
    while ((b_var10 + 1) != 0x50);
    if (b_var10 == 0) {
        return;
    }
    u_var21 = 0x6169;
    if (DAT_616d_7f96 == 8) {
        DAT_616d_a2d9 = 0;
        DAT_616d_9e76 = b_var10 * 8;
        u_var8 = DAT_616d_9e76 - 1;
        puVar17 = ff
        0x9eba;
        pb_var12 = 0xa2ca;
        while (true) {
            pb_var2 = pb_var12;
            pb_var12 = pb_var12 + 1;
            b_var6 = *pb_var2;
            if (b_var6 == 0)
            break;
            u_var9 = 0x7fd2;
            u_var7 = 
            0x7fce;
            puVar13 = ff(u_var7 + b_var6 * (u_var9 & 0xff));
            puVar18 = puVar17;
            loop {
                puVar3 = puVar13;
                puVar13 = puVar13 + 1;
                *puVar18 = *puVar3;
                puVar18 = puVar18 + ((u_var8 | 7) + 1 >> 3);
                u_var9 = u_var9 - 1;
            }
            while (u_var9 != 0);
            puVar17 = puVar17 + 1;
            u_var21 = unaff_ds;
        }
    } else {
        DAT_616d_a2d9 = 0;
        DAT_616d_9e76 = DAT_616d_7f96 * b_var10;
        u_var8 = (DAT_616d_9e76 - 1 | 7) + 1 >> 3;
        pb_var19 = 0x9eba;
        pb_var12 = 0xa2ca;
        while (true) {
            pb_var15 = pb_var12 + 1;
            b_var6 = *pb_var12;
            if (b_var6 == 0)
            break;
            u_var9 = 0x7fd2;
            u_var7 = 
            0x7fce;
            pb_var14 = (u_var7 + b_var6 * (u_var9 & 0xff));
            pb_var20 = pb_var19;
            loop {
                pb_var2 = pb_var14;
                pb_var14 = pb_var14 + 1;
                *pb_var20 = *pb_var2 & 0xf0;
                pb_var20 = pb_var20 + u_var8;
                u_var9 = u_var9 - 1;
            }
            while (u_var9 != 0);
            pb_var12 = pb_var12 + 2;
            b_var6 = *pb_var15;
            u_var21 = unaff_ds;
            if (b_var6 == 0)
            break;
            u_var9 = 0x7fd2;
            u_var7 = 
            0x7fce;
            pb_var15 = (u_var7 + b_var6 * (u_var9 & 0xff));
            pb_var14 = pb_var19;
            loop {
                pb_var4 = pb_var15;
                pb_var15 = pb_var15 + 1;
                pb_var2 = pb_var14;
                *pb_var2 = *pb_var2 | *pb_var4 >> 4;
                pb_var14 = pb_var14 + u_var8;
                u_var9 = u_var9 - 1;
            }
            while (u_var9 != 0);
            pb_var19 = pb_var19 + 1;
        }
    }
    fun_2692_0042(0x39d9, param_1, param_2, 0x9eb6, u_var21);
    0x7f98 = param_1 + 0x9eb6;
    0x7f9a = param_2;
    return;
}


fn fun_2792_000c() -> u16

{
    let pc_var1: String;
    code * *ppcVar2;
    let i_var3: i16;
    let pc_var4: String;
    let unaff_ds: u16;

    0x8508 = 0;
    0x850a = 0;
    
    0x8532 = 1;
    
    0x852f = 1;
    
    0x8535 = 1;
    
    0x852c = 1;
    i_var3 = 4;
    pc_var4 = 
    0x852c;
    loop {
    pc_var1 = pc_var4;
    ppcVar2 = (code * *)(pc_var4 + 1);
    pc_var4 = pc_var4 + 3;
    if (*pc_var1 != '\0') {
        (**ppcVar2)();
    }
    i_var3 = i_var3 + -1;
}
    while (i_var3 != 0);
    FUN_2792_0131();
    return 0x8508;
}



void  FUN_2792_0131()

{
let puVar1: * mut u16; let uVar2: u16; code * pcVar3; let bVar4: u8; let unaff_DI: * mut u16; let unaff_DS: u16;

if (((unaff_DI[1] != 0) & & (unaff_DI < '\x04')) & & ((unaff_DI + 1) < '\x04')) {
pcVar3 = swi(0x10); bVar4 = (* pcVar3)(); if ((bVar4 & 7) == 7) {
if ((unaff_DI + 1) == '\x01') {
return;
}
}
else {
if ((unaff_DI + 1) != '\x01') {
return;
}
}
puVar1 = unaff_DI + 1; uVar2 = * puVar1; * puVar1 = * unaff_DI; * unaff_DI = uVar2;
}
return;
}


/*
Unable to decompile 'FUN_2792_0179'
Cause: Exception while decompiling 2792:0179: GHIDRA/decompiler alignment error

*/


// WARNING: Instruction at (ram,0x00022bc7) overlaps instruction at (ram,0x00022bc6)
//
// WARNING: Could not reconcile some variable overlaps

int FUN_27ac_0008(param_1_00: u16,undefined4 param_1,param_3_00: u16,param_4: u16,
param_3: u16)

{
let piVar1: * mut u16; let pbVar2: * mut u8; let pcVar3: String; let bVar4: u8; char cVar5; undefined uVar6;
let uVar7: u16; code * * ppcVar8;
let iVar9: i16; let iVar10: i16;
let uVar11: u16; let iVar12: i16;
let iVar13: i16; let extraout_DX: u16;
let extraout_DX_00: i16; let puVar14: * mut u16; let puVar15: * mut u16; undefined * puVar16; undefined * unaff_SI; let uVar17: u16; let iVar18: i16; let uVar19: u16; let uVar20: u16; let unaff_SS: i16; let unaff_DS: i16; let uVar21: u32; let local_70: u16; let uStack110: u16; let local_2e: i16; let local_2c: i16; let local_2a: i16; let local_28: u32; let local_24: i16; let local_22: i16; let local_20: i16; let local_1e: i16; let local_1c: i16; let local_1a: i16; let local_18: i16; let local_16: i16; let local_14: i16; let local_10: i16; let local_e: i16; let local_c: i16; let in_stack_0000fff6: i16; let local_8: i16; let local_4: i16;

puVar16 = &stack0xfffe; puVar14 = & stack0xfffe; FUN_2692_0009(); uVar11 = FUN_2792_000c(); iVar12 = (uVar11 >> 8); uVar17 = uVar11 & 0xff; local_8 = - 1; if ((uVar11 & 0x80) == 0) {
if (uVar17 == 1) {
local_c = - 0x68af; in_stack_0000fff6 = unaff_DS;
// LAB_27ac_0048:
iVar18 = - 1;
}
else {
if (uVar17 == 2) {
iVar18 = FUN_2792_0179(); iVar18 = 2 - (iVar18 == 0);
}
else {
if (uVar17 == 3) {
// LAB_27ac_0079: if (iVar12 == 1) {
// LAB_27ac_008c:
iVar18 = 5;
}
else {
if (iVar12 == 2) {
iVar18 = 1;
}
else {
if (iVar12 != 3) {
if (iVar12 == 4) goto LAB_27ac_008c; if (iVar12 != 5) goto LAB_27ac_0048;
}
iVar18 = 0;
}
}
}
else {
if (uVar17 == 4) {
iVar18 = 7;
}
else {
if (uVar17 != 5) goto LAB_27ac_0048; if ((iVar12 != 3) & & (iVar12 != 5)) goto LAB_27ac_0079; iVar18 = 8;
}
}
}
}
}
else {
iVar18 = 3;
}
uVar20 = 0x2792; if (0x9c65 == - 1) {
if (iVar18 == - 1) {
FUN_3444_07d2(0x2792, local_c); uVar20 = 0x3444; FUN_3444_01db(0x3444);
}
* (undefined * )0x9c65 = iVar18;
}
if (0x9822 != 0) {
bVar4 = * 0x9c65; if (bVar4 == 8) {
// LAB_27ac_00ee: * (undefined * )0x9c65 = 7;
}
else {
if (bVar4 < 9) {
if (bVar4 == 0) {
* (undefined * )0x9c65 = 5;
}
else {
if (bVar4 == 1) {
* (undefined * )0x9c65 = 1;
}
else {
if (bVar4 == 6) goto LAB_27ac_00ee;
}
}
}
}
}
FUN_3444_1aca(uVar20, & local_70); local_2c = unaff_SS; FUN_3074_000c(0x3444, & local_70);
FUN_27ac_0225(); cVar5 = 0x9c65; if (8 < cVar5) {
// WARNING: Subroutine does not return
FUN_2a60_08cb(0x3074, 0x9780);
}
iVar13 = cVar5 * 2; uVar20 = 0x2000;
local_1e = in_stack_0000fff6; switch(cVar5) {
case '\0': out(extraout_DX & 0xff | ((extraout_DX >> 8) + (iVar12 + 4)) << 8,
0xff08);
loop {
uVar21 = FUN_2fad_0189(); uVar11 = uVar11 - 1;
} while (uVar11 != 0); if (param_3._1_1_ != 0) {
uVar6 = * (undefined * )(param_3._1_1_ + 0xe); * (undefined * )0x67e6 = uVar6; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out((uVar21 >> 0x10), CONCAT11(uVar6, 8));
}
uVar21 = FUN_2fad_0189();
}
uVar20 = (undefined2)(uVar21 >> 0x10); iVar12 = uVar21; if ((0x9c65 != '\x06') & & (0x9c65 != '\x02')) {
out(uVar20, 0xff08); iVar12 = 5; out(uVar20, 5);
}
if (0x8540 == '\0') {
if (0x8571 == '\0') {
if (0x853f == '\0') {
iVar12 = FUN_2692_01e8();
}
}
else {
if (0x853e != '\0') {
iVar12 = FUN_2692_0562();
}
}
}
pcVar3 = (char * )0x7fcc; * pcVar3 = * pcVar3 + - 1; return iVar12;
case '\x01': while ( true ) {
local_2a = local_4 + param_1 + 1; local_2e = param_1 - local_4; FUN_23e0_06ef(uVar20, local_2e,- (local_2c - param_1._2_2_), local_2a); FUN_23e0_06ef(uVar20, local_2e, local_2c + param_1._2_2_, local_2a); if (local_8 < 1) {
iVar13 = iVar12 * 4 + 6;
}
else {
iVar13 = (iVar12 - iVar18) * 4 + 10; iVar18 = iVar18 + - 1;
}
local_8 = local_8 + iVar13; iVar12 = iVar12 + 1; if (iVar18 < iVar12) break;
local_18 = iVar12 >> 0xf; local_14 = local_10 >> 0xf; local_16 = local_10; local_1a = iVar12; FUN_3444_23fe(uVar20, local_10, local_14); iVar13 = FUN_3444_24dc(0x3444); iVar9 = (iVar13 + local_c + 1) / 2;
local_20 = iVar18 >> 0xf; local_1c = local_1e >> 0xf; local_22 = iVar18; local_c = iVar13; iVar13 = local_1e; FUN_3444_23fe(0x3444,local_1e, local_1c, iVar18, local_20, param_3); iVar10 = FUN_3444_24dc(0x3444); local_24 = iVar9 + param_1 + 1; iVar9 = param_1 - iVar9; local_28 = CONCAT22(iVar10, iVar9); FUN_23e0_06ef(0x3444, iVar9, - (iVar10 - param_1._2_2_), local_24, - (iVar10 - param_1._2_2_) + 1);
FUN_23e0_06ef(0x3444, (undefined2)local_28, local_28._2_2_ + param_1._2_2_, local_24,
local_28._2_2_ + param_1._2_2_ + 1, param_3); FUN_3444_23fe(0x3444, local_16, local_14,local_22, local_20); iVar9 = FUN_3444_24dc(0x3444); local_4 = (iVar9 + local_e) / 2; local_e = iVar9; FUN_3444_23fe(0x3444,local_1e, local_1c, local_1a, local_18, param_3); uVar20 = 0x3444; local_2c = FUN_3444_24dc(); local_1e = iVar13;
}
return iVar13; case '\x02': pbVar2 = (iVar13 + iVar12 + - 0x48); bVar4 = *pbVar2; * pbVar2 = * pbVar2 + extraout_DX;
piVar1 = (iVar13 + iVar18 + 0x1e);
* piVar1 = ( * piVar1 - iVar12) - CARRY1(bVar4, extraout_DX); puVar16 = &stack0xfffe; goto code_r0x00022c03; case '\x03': break;
case '\x04': puVar15 = & stack0xff8a; cVar5 = '\x1d'; loop {
puVar14 = puVar14 + - 1; puVar15 = puVar15 + - 1; * puVar15 = * puVar14;
cVar5 = cVar5 + - 1;
} while ('\0' < cVar5); pcVar3 = (char * )(iVar12 + 0x7500); *pcVar3 = * pcVar3 + (local_2c >> 8); FUN_2f42_0097(); 0xa432 = local_70;
0xa434 = uStack110; return local_70; case '\x05':
piVar1 = (unaff_SI + - 0x3e); *piVar1 = * piVar1 + local_2c; puVar16 = unaff_SI; if ((0x36 + 0x2e == 0xccd6) & & (0x7046 == '\0'))
goto LAB_2239_0915; break; case '\x06': FUN_2c63_0002(0x2000,extraout_DX - 7); uVar19 = (undefined2)(local_28 >> 0x10); iVar12 = (local_28 + 0x20) * 6; uVar20 = 0xc89a; uStack110 = * (iVar12 + 0x15da);
local_70 = * (iVar12 + 0x15d9); FUN_2c63_0002(0x2000, (local_28 + 4) + 5); uVar19 = (undefined2)(local_28 >> 0x10); iVar12 = (local_28 + 0x20) * 6; uVar20 = 0xc89a; uStack110 = * (iVar12 + 0x15da); local_70 = *(iVar12 + 0x15d9); FUN_2c63_0002(0x2000,(local_28 + 8) + - 7);
uVar19 = (undefined2)(local_28 >> 0x10); iVar12 = (local_28 + 0x20) * 6; uVar20 = 0xc89a; uStack110 = * (iVar12 + 0x15da); local_70 = * (iVar12 + 0x15d9); FUN_2c63_0002(0x2000, (local_28 + 4) + 6); uVar19 = (undefined2)(local_28 >> 0x10); iVar12 = (local_28 + 0x20) * 6; uVar20 = 0xc89a; uStack110 = * (iVar12 + 0x15da); local_70 = * (iVar12 + 0x15d9); FUN_2c63_0002(0x2000, (local_28 + 4) + 6); uVar11 = param_1 + 0x24;
uStack110 = param_1._2_2_; local_70 = uVar11;
local_10 = FUN_2c63_0168(); local_1c = (((param_1 + 4) + (param_1 + 8)) - local_10) / 2; uStack110 = param_1._2_2_; local_70 = uVar11; FUN_2c63_0168(); local_1a = (((param_1 + 6) + (param_1 + 10)) - extraout_DX_00) / 2; iVar12 = (param_1 + 0x20) * 6; uVar20 = 0xc89a; uStack110 = * (iVar12 + 0x15d7); local_70 = *(iVar12 + 0x15d5); FUN_2c63_0100();
uStack110 = param_1._2_2_; local_70 = uVar11;
iVar12 = FUN_2c63_01c1(); if (( *(param_1 + 3) & 4) != 0) {
uStack110 = (param_1 + 10); local_70 = (param_1 + 8); iVar12 = FUN_2c63_028d();
}
return iVar12; case '\a': FUN_168b_089b(0x2000,0x1503, local_2c * 0x10 + 0x16f, 0x70b5); FUN_168b_03d1(0x168b, 0x150a, 0x70c5);
uVar20 = 0x2b26; FUN_2b26_0e3b(0x168b, 0x1509,& stack0xfff6); iVar12 = 0; loop {
FUN_168b_04c4(uVar20, in_stack_0000fff6, 0xffff); uVar20 = 0x168b; FUN_168b_04c4(0x168b, in_stack_0000fff6, 0x5de4 + - 1); in_stack_0000fff6 = in_stack_0000fff6 + 0x138a; iVar12 = iVar12 + 1;
} while (iVar12 < 8); FUN_2b26_0e3b(0x168b, 0x1508, & stack0xfff6); FUN_168b_06a4(0x2b26); FUN_27ac_074d(0x168b, & stack0xfff6);
FUN_168b_06a4(0x27ac); FUN_168b_03d1(0x168b, 0x150b, 0x70ce); FUN_168b_03d1(0x168b, 0x150c,0x70e3); FUN_2b26_0e3b(0x168b, 0x150d, &stack0xfff6); uVar20 = 0x2b26; FUN_2b26_0e3b(0x2b26, 0x150e, & local_1a); for (iVar12 = 0; iVar12 < 5; iVar12 = iVar12 + 1) {
FUN_168b_04c4(uVar20, in_stack_0000fff6, local_8); uVar20 = 0x168b; FUN_168b_04c4(0x168b, local_1a, local_8); local_8 = local_8 + 0x5de4;
}
ppcVar8 = (code * * )0xcf70; (* * ppcVar8)(); * (undefined * )0x7046 = 1; FUN_2239_0531();
FUN_2239_126d(); iVar12 = 0xabe; 0xccca = iVar12; return iVar12; case '\b': return local_2c;
}
uVar19 = 0xc7a8; ppcVar8 = (code * *)0xcf74; ( * * ppcVar8)(0x2000, 0x5ddc, (puVar16 + - 0x3e),0x5de0,
0x5de4 + (puVar16 + - 0x3e) + - 1); unaff_SI = puVar16; if (0x36 != 0) {
code_r0x00022c03: FUN_27ac_0508(0x2000, 0x5ddc, (puVar16 + - 0x3e)); (puVar16 + -0x38) = 0x7fd6 * 3 + 0x5ddc; FUN_168b_04c4(0x27ac); FUN_2692_0ecc(0x168b, 0x138a + (puVar16 + - 0x38)); uVar20 = 0x2692; FUN_2692_00b2(); unaff_SI = puVar16;
}
0xccd6 = 0x36 + 0x2e;
// LAB_2239_0915:
piVar1 = (unaff_SI + - 0x3e); * piVar1 = * piVar1 + 0x5de4; if ((0x38 + 0x32 != 0xcce0) || (0x7046 != '\0')) {
ppcVar8 = (code * * )0xcf74; (* * ppcVar8)(uVar20, 0x5ddc, (unaff_SI + - 0x3e)); if (0x38 != 0) {
FUN_27ac_0508(uVar20, 0x5ddc, (unaff_SI + -0x3e)); (unaff_SI + - 0x38) = 0x7fd6 * 3 + 0x5ddc; FUN_168b_04c4(0x27ac); FUN_2692_0ecc(0x168b, 0x138a + (unaff_SI + - 0x38)); uVar20 = 0x2692;
FUN_2692_00b2();
}
0xcce0 = 0x38 + 0x32;
}
iVar12 = 0x5de4; piVar1 = (unaff_SI + -0x3e); * piVar1 = * piVar1 + iVar12 + iVar12 / 2; uVar19 = 0xc7c2; if (((0x5fc != 0xccdc) || (0x5fe != 0xccde)) || (uVar19 = uVar20, 0x7046 != '\0')) {
uVar19 = 0xc7d4; if (0x30 == 0) {
(unaff_SI + - 0xe) = 0x10;
}
else {
(unaff_SI + - 0xe) = 0x30 + 0x30;
}
uVar19 = 0x3444; FUN_3444_1aca(uVar20, unaff_SI + - 0x36); FUN_2239_12bf(0x3444, (unaff_SI + - 0x3e), (unaff_SI + - 0xe), 0x712f); uVar20 = 0xc7c2; uVar7 = 0x5fe; 0xccdc = 0x5fc; 0xccde = uVar7;
}
iVar12 = (0x6b5 / 0xfcf1) / 2 + 0x81; (unaff_SI + - 0xe) = iVar12; if (0x83 < iVar12) {
(unaff_SI + - 0xe) = 0x83;
}
piVar1 = (unaff_SI + - 0x3e); *piVar1 = * piVar1 + 0x5de4; if ((0xcccc != (unaff_SI + - 0xe)) || (0x7046 != '\0')) {
FUN_2239_12bf(uVar19, (unaff_SI + - 0x3e), (unaff_SI + - 0xe), 0x713a); 0xcccc = (unaff_SI + - 0xe);
}
uVar20 = 0xc7d6; if (0x6b7 < - 0x46) {
(unaff_SI + - 0xe) = 0x81;
}
else {
if (0x6b7 == 0) {
(unaff_SI + - 0xe) = 0x83;
}
else {
(unaff_SI + - 0xe) = 0x82;
}
}
piVar1 = (unaff_SI + - 0x3e); *piVar1 = * piVar1 + 0x5de4; iVar12 = (unaff_SI + - 0xe); if ((0xccd2 != iVar12) || (0x7046 != '\0')) {
FUN_2239_12bf(uVar19, (unaff_SI + - 0x3e), (unaff_SI + - 0xe), 0x7145); iVar12 = (unaff_SI + - 0xe);
0xccd2 = iVar12;
}
* (undefined * )0x7046 = 0; if (0x7faa == 0x140) {
ppcVar8 = (code * * )0xcf70; iVar12 = ( * * ppcVar8)();
}
return iVar12;
}



fn fun_27ac_0212()

{
    code * *ppcVar1;
    let unaff_ds: u16;

    if (0x97ea != 0) {
        ppcVar1 = (code * *)
        0xcfb8;
        (**ppcVar1)(0x39d9);
    }
    return;
}



undefined2 * FUN_27ac_021e()

{
return & DAT_616d_9c2a;
}



fn fun_27ac_0225()

{
    let i_var1: i16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    let u_var4: u32;

    u_var3 = 0x39d9;
    if (0x9824 == 0) {
        i_var2 = 0;
        loop {
            u_var4 = FUN_3074_00d3(u_var3, i_var2, 8);
            i_var1 = i_var2 * 4;
            (i_var1 + -0x331e) = u_var4;
            (i_var1 + -0x331c) = (u_var4 >> 0x10);
            u_var4 = FUN_3074_00d3(0x3074, i_var2, 7);
            (i_var1 + -0x32fc) = u_var4;
            (i_var1 + -0x32fa) = (u_var4 >> 0x10);
            fun_3074_034b(0x3074, i_var2, 8);
            u_var3 = 0x3074;
            fun_3074_034b(0x3074, i_var2, 7);
            i_var2 = i_var2 + 1;
        }
        while (i_var2 < 6);
        0x9824 = 1;
    }
    return;
}


fn fun_27ac_0287(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let u_var2: u16;
    let u_var3: u16;
    let u_var4: u16;
    let pu_var5: *mut u16;
    let pu_var6: *mut u16;
    let i_var7: i16;
    let u_var8: u16;
    let unaff_ds: u16;

    u_var8 = 0x39d9;
    if (0x9880 != 0) {
        return;
    }
    if (0x97ea == 0) {
        return;
    }
    0x9880 = 1;
    if (0x9820 != param_1) {
        if (param_1 != -1) {
            i_var7 = param_1 * 4;
            u_var1 = (i_var7 + -0x32fc);
            u_var2 = (i_var7 + -0x32fa);
            u_var3 = (i_var7 + -0x331e);
            u_var4 = (i_var7 + -0x331c);
            u_var8 = 0x3444;
            FUN_3440_0040(0x984a);
            if (((u_var4 | u_var3) == 0) || ((u_var2 | u_var1) == 0)) {
                fun_1d85_00e7(0x3444, 0x9867);
                goto
                LAB_27ac_0343;
            }
            0x9820 = param_1;
            0x97b2 = u_var3;
            0x97b4 = u_var4;
            0x97b6 = u_var1;
            0x97b8 = u_var2;
        }
        pu_var5 = 
        0x97b6;
        pu_var6 = 
        0x97b2;
        fun_2692_02d7(u_var8, *pu_var6, (pu_var6 + 2), *pu_var5,
                      (pu_var5 + 2));
    }
// LAB_27ac_0343:
    0x9880 = 0;
    return;
}



void FUN_27ac_034f(param_1: u16,param_2: u16,param_3: u16,param_4: u16,
param_5: u16,param_6: u16)

{
code * * ppcVar1; let unaff_DS: u16;

ppcVar1 = (code * * )0xcf74; (* * ppcVar1)(0x39d9, param_2, param_3, param_4, param_5, 0x7fdc | 0x7fda);
FUN_27ac_053d(0x39d9, param_2, param_3, param_4,param_5, param_6); return;
}



void FUN_27ac_0384(param_1_00: u16,param_1: i16,param_2: i16,param_3: u16,
param_4: u16)

{
let unaff_DS: u16;

FUN_2692_00cc(0x39d9, param_1, param_2, param_3); FUN_27ac_053d(0x2692,param_1, param_2, param_1 + 7, 0x7fd4 + param_2 + - 1, param_4); return;
}



void FUN_27ac_03b8(param_1_00: u16,param_2_00: i16,uparam_3: i16,param_4: i16,param_1: i16,
param_2: u16)

{
code * * ppcVar1; let iVar2: i16;
let unaff_DS: u16;

iVar2 = 0x7fd4; ppcVar1 = (code * * )0xcf74; ( ** ppcVar1)(0x39d9, param_2_00 << 3, (param_3 & 0xff) * iVar2 + (param_3._1_1_ * iVar2) / 0xe,
param_4 * 8 + - 1,
iVar2 * (param_1 + 1 & 0xff) + ((param_1 + 1 >> 8) * iVar2) / 0xe + - 1, param_2
); return;
}



void FUN_27ac_0418(param_1_00: u16,param_1: i16,param_2: i16,param_3: i16,param_4: i16,
param_5: u16)

{
let iVar1: i16; let unaff_DS: u16;

iVar1 = 0x7fd4; FUN_27ac_053d(0x39d9, param_1 << 3, iVar1 * param_2, param_3 * 8 + - 1, iVar1 * (param_4 + 1) + - 1,
param_5); return;
}



fn fun_27ac_0449(param_1_00: u16, undefined2 *param_1, param_2: u16)

{
    code * *ppcVar1;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;

    u_var3 = (undefined2)(param_1 >> 0x10);
    i_var2 = param_1;
    ppcVar1 = (code * *)
    0xcfb4;
    (**ppcVar1)(0x39d9, *param_1, (i_var2 + 2), (i_var2 + 4),
                (i_var2 + 6), param_2);
    return;
}


fn fun_27ac_0469(param_1_00: u16, undefined2 *param_1)

{
    code * *ppcVar1;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;

    u_var3 = (undefined2)(param_1 >> 0x10);
    i_var2 = param_1;
    ppcVar1 = (code * *)
    0xcf78;
    (**ppcVar1)(0x39d9, *param_1, (i_var2 + 2), (i_var2 + 4),
                (i_var2 + 6), CONCAT11(0x7fd9 + '\x10', 0x20));
    return;
}



void FUN_27ac_0490(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16)

{
code * * ppcVar1; let unaff_DS: u16;

ppcVar1 = (code * * )0xcf78; (* * ppcVar1)(0x39d9, param_1, param_2, param_3, param_4, CONCAT11(0x7fd9 + '\x10', 0x20)); return;
}



fn fun_27ac_04b1(param_1_00: u16, byte param_1, uparam_2: i16)

{
    let i_var1: i16;
    let unaff_ds: u16;
    undefined
    local_ca[200];

    fun_3444_1b7a(0x39d9, local_ca);
    i_var1 = 0x7fd4;
    fun_2692_0ecc(0x3444, param_1 << 3, i_var1 * (param_2 & 0xff) + (param_2._1_1_ * i_var1) / 0xe,
                  local_ca);
    return;
}


fn fun_27ac_0508(param_1_00: u16, param_1: u16, param_2: u16)

{
    undefined
    local_ca[200];

    fun_3444_1b7a(0x39d9, local_ca);
    fun_2692_0ecc(0x3444, param_1, param_2, local_ca);
    return;
}



void FUN_27ac_053d(param_1_00: u16,param_1: i16,param_2: i16,param_3: i16,param_4: i16,param_5: i16
)

{
code * * ppcVar1; let iVar2: i16;
let iVar3: i16; let unaff_DS: u16;

if (param_5 != 0) {
if (param_5 < 0) {
param_1 = param_1 + - 1; param_2 = param_2 + - 1; param_3 = param_3 + 1;
param_4 = param_4 + 1; param_5 = param_5 + 1;
}
else {
param_5 = param_5 + - 1;
}
iVar3 = - (param_5 - param_4); iVar2 = param_5 + param_2; ppcVar1 = (code ** )0xcf74; ( * * ppcVar1)(0x39d9, param_1, iVar2, param_1 + param_5,iVar3, 0x7fdc | 0x7fd8); ppcVar1 = (code * * )0xcf74; ( * * ppcVar1)(0x39d9, param_3, iVar2, param_3 - param_5, iVar3, 0x7fdc | 0x7fd8); ppcVar1 = (code * * )0xcf74; ( ** ppcVar1)(0x39d9, param_1, iVar2,param_3, param_2, 0x7fdc | 0x7fd8); ppcVar1 = (code * * )0xcf74; ( ** ppcVar1)(0x39d9, param_1, iVar3,param_3, param_4, 0x7fdc | 0x7fd8);
}
return;
}



void FUN_27ac_05e9(param_1_00: u16,param_1: i16,param_2: i16,param_3: i16,param_4: i16,param_5: i16
)

{
code * * ppcVar1; let iVar2: i16;
let iVar3: i16; let unaff_DS: u16;
bool bVar4; let local_6: u16; let local_4: u16;

if (param_5 != 0) {
bVar4 = - 1 < param_5; if (bVar4) {
param_5 = param_5 + - 1;
}
else {
param_1 = param_1 + - 1; param_2 = param_2 + - 1; param_3 = param_3 + 1;
param_4 = param_4 + 1; param_5 = param_5 + 1;
}
local_4 = bVar4; local_6 = ! bVar4; iVar3 = - local_4 - (param_5 - param_4);
iVar2 = param_5 + local_4 + param_2; ppcVar1 = (code * * )0xcf7c; ( * *ppcVar1)(0x39d9, param_5 + param_1, iVar2, param_1, iVar3); ppcVar1 = (code * * )0xcf7c; ( * * ppcVar1)(0x39d9, param_3, iVar2, param_3 - param_5, iVar3); ppcVar1 = (code * *)0xcf7c; ( * * ppcVar1)(0x39d9, local_6 + param_1, param_5 + param_2, param_3 - local_6, param_2); ppcVar1 = (code * * )0xcf7c; ( * * ppcVar1)(0x39d9, local_6 + param_1, param_4, param_3 - local_6, param_4 - param_5);
}
return;
}



fn fun_27ac_0699(param_1_00: u16, byte *param_1) -> u16

{
    let u_var1: u16;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    let unaff_ds: u16;

    i_var2 = 0x7fd6;
    u_var4 = (undefined2)(param_1 >> 0x10);
    i_var3 = param_1;
    0xcd26 = *param_1 * i_var2;
    0xcd2a = *(i_var3 + 4) * i_var2 + -1;
    i_var2 = 0x7fd4;
    u_var1 = (i_var3 + 2);
    0xcd28 = i_var2 * (u_var1 & 0xff) + ((u_var1 >> 8) * i_var2) / 0xe;
    u_var1 = (i_var3 + 6);
    0xcd2c = (u_var1 & 0xff) * i_var2 + ((u_var1 >> 8) * i_var2) / 0xe + -1;
    return 0xcd26;
}


fn fun_27ac_0710(param_1_00: u16, undefined2 *param_1, param_2: u16)

{
    let i_var1: i16;
    let u_var2: u16;

    u_var2 = (undefined2)(param_1 >> 0x10);
    i_var1 = param_1;
    FUN_27ac_05e9(0x39d9, *param_1, (i_var1 + 2), (i_var1 + 4),
                  (i_var1 + 6), param_2);
    return;
}


fn fun_27ac_0730(param_1_00: u16, undefined2 *param_1)

{
    code * *ppcVar1;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;

    u_var3 = (undefined2)(param_1 >> 0x10);
    i_var2 = param_1;
    ppcVar1 = (code * *)
    0xcf7c;
    (**ppcVar1)(0x39d9, *param_1, (i_var2 + 2), (i_var2 + 4),
                (i_var2 + 6));
    return;
}


fn fun_27ac_074d(param_1_00: u16, undefined2 *param_1, param_2: u16)

{
    let i_var1: i16;
    let u_var2: u16;

    u_var2 = (undefined2)(param_1 >> 0x10);
    i_var1 = param_1;
    FUN_27ac_053d(0x39d9, *param_1, (i_var1 + 2), (i_var1 + 4),
                  (i_var1 + 6), param_2);
    return;
}


fn fun_27ac_076d(param_1_00: u16, undefined2 *param_1, param_2: u16)

{
    code * *ppcVar1;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;

    u_var3 = (undefined2)(param_1 >> 0x10);
    i_var2 = param_1;
    ppcVar1 = (code * *)
    0xcf74;
    (**ppcVar1)(0x39d9, *param_1, (i_var2 + 2), (i_var2 + 4),
                (i_var2 + 6), param_2);
    return;
}



long FUN_27ac_078d(param_1_00: u16,uint *param_1,param_2: u16)

{
code * * ppcVar1; let uVar2: u16;
let uVar3: u16; let unaff_DS: u16;
bool bVar4; let lVar5: i32;

* (undefined * )0x7e2c = 1; uVar2 = *param_1 & 0xfff8; ppcVar1 = (code * *)0xcf80; uVar3 = ( * * ppcVar1)(0x39d9, uVar2, param_1[1],param_1[2], param_1[3]); bVar4 = uVar3 >> 0xf < 0;
if ((bVar4) || (( -1 < uVar3 || bVar4 & & (uVar3 < 0xffdd)))) {
lVar5 = FUN_3143_1720(0x39d9, uVar3); if (lVar5 != 0) {
ppcVar1 = (code * * )0xcf88; (* * ppcVar1)(0x3143, uVar2, param_1[1], param_1[2], param_1[3], lVar5);
}
* (undefined * )0x7e2c = 0;
}
else {
lVar5 = 0;
}
return lVar5;
}



void FUN_27ac_080a(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16)

{
FUN_27ac_083f(0x39d9, param_1, param_2, param_3,param_4, 0); return;
}



void FUN_27ac_0824(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16)

{
FUN_27ac_083f(0x39d9, param_1, param_2, param_3,param_4, 1); return;
}



void FUN_27ac_083f(param_1_00: u16,uint *param_1,param_2: u16,uparam_3: i16,uparam_4: i16,
param_5: i16)

{
let uVar1: u16; let unaff_DS: u16;

uVar1 = * param_1; if ((param_4 | param_3) == 0) {
FUN_2b26_0945(0x39d9, param_1, param_2);
}
else {
* (undefined * )0x7e2c = 1; FUN_2692_001f(0x39d9, uVar1 & 0xfff8, param_1[1], param_3, param_4); * (undefined * )0x7e2c = 0; if (param_5 != 0) {
FUN_3143_1850(0x2692, param_3, param_4);
}
}
return;
}



fn fun_27ac_0897(param_1_00: u16, uparam_1: i16, uparam_2: i16)

{
    if ((param_2 | param_1) != 0) {
        fun_3143_1850(0x39d9, param_1, param_2);
    }
    return;
}



ulong FUN_27ac_08b3(param_1_00: u16,int *param_1)

{
ulong uVar1; let uVar2: u16; let unaff_DS: u16;

uVar1 = (long)((0x9c65 + - 0x6846) * ( * param_1 + 7 >> 3)) * (long)(param_1 + 2); uVar2 = uVar1;
if ((0x7e2c == '\0') & & (0x9c65 == '\x06')) {
uVar2 = uVar2 >> 1;
}
return uVar1 & 0xffff0000 | (uVar2 + 4);
}


// WARNING: Could not reconcile some variable overlaps

fn fun_27ac_08ef(param_1_00: u16, param_1: u16, param_2: i16, undefined4 param_3)

{
    code * *ppcVar1;
    let i_var2: i16;
    let u_var3: u16;
    let u_var4: u16;
    let unaff_ds: u16;
    let u_var5: u32;
    undefined
    local_18[2];
    let local_16: u16;
    let local_14: i16;
    let local_12: u16;
    let local_10: u32;
    let local_c: i16;
    char
    local_9;
    let local_8: i16;

    u_var3 = (undefined2)(param_3 >> 0x10);
    fun_3122_0002(0x39d9, param_3 + 4, u_var3, (param_3 + 2));
    FUN_3122_0040(0x3122, &local_9);
    FUN_3122_0040(0x3122, local_18);
    FUN_3122_0040(0x3122, &local_14);
    FUN_3122_0040(0x3122, &local_16);
    local_12 = local_16 & 7;
    local_16 = local_16 & 0xfff8;
    local_c = 0;
    if ((local_9 == '\x04') || (local_9 == '\b')) {
        ppcVar1 = (code * *)
        0xcf80;
        local_8 = (**ppcVar1)(0x3122, 0, 0, local_14 + -1, 0, 0, 0x9882);
        local_8 = local_8 + -4;
        u_var5 = fun_3444_24d0(0x3122);
        local_10 = fun_3143_0d9e(0x3444, u_var5);
        u_var3 = 0x3143;
        for (; uVar4 = uVar3, local_c < local_16; local_c = local_c + 8) {
            u_var4 = 0x3122;
            i_var2 = FUN_3122_0040(u_var3, *local_10, (local_10 + 2), local_8 << 3);
            if (i_var2 == 0)
            break;
            ppcVar1 = (code * *)
            0xcf8c;
            (**ppcVar1)(0x3122, param_1, param_2, *local_10, (local_10 + 2), local_14, 8);
            param_2 = param_2 + 8;
            u_var3 = u_var4;
        }
        if (local_12 == 0)
        goto
        LAB_27ac_0aef;
        FUN_3122_0040(u_var4, *local_10, (local_10 + 2), local_8 * local_12);
        ppcVar1 = (code * *)
        0xcf8c;
        (**ppcVar1)(0x3122, param_1, param_2, *local_10, (local_10 + 2), local_14,
                    local_12);
    } else {
        ppcVar1 = (code * *)
        0xcf84;
        local_8 = (**ppcVar1)(0x3122, 0, 0, local_14 + -1, 0, 0, 0x988f);
        local_8 = local_8 + -4;
        u_var5 = fun_3444_24d0(0x3122);
        local_10 = fun_3143_0d9e(0x3444, u_var5);
        u_var3 = 0x3143;
        for (; uVar4 = uVar3, local_c < local_16; local_c = local_c + 8) {
            u_var4 = 0x3122;
            i_var2 = FUN_3122_0040(u_var3, *local_10, (local_10 + 2), local_8 << 3);
            if (i_var2 == 0)
            break;
            ppcVar1 = (code * *)
            0xcf94;
            (**ppcVar1)(0x3122, param_1, param_2, *local_10, (local_10 + 2), local_14, 8);
            param_2 = param_2 + 8;
            u_var3 = u_var4;
        }
        if (local_12 == 0)
        goto
        LAB_27ac_0aef;
        FUN_3122_0040(u_var4, *local_10, (local_10 + 2), local_8 * local_12);
        ppcVar1 = (code * *)
        0xcf94;
        (**ppcVar1)(0x3122, param_1, param_2, *local_10, (local_10 + 2), local_14,
                    local_12);
    }
    u_var4 = 0x3122;
// LAB_27ac_0aef:
    FUN_3143_0c84(uVar4, (undefined2)local_10, local_10._2_2_);
    return;
}



void FUN_27ac_0b00(param_1_00: u16,param_1: u16,param_2: u16,param_3: i16,
param_4: i16)

{
code * * ppcVar1; let unaff_DS: u16;

if (param_4 == param_3) {
FUN_27ac_076d(0x39d9, param_1, param_2, param_3);
}
else {
ppcVar1 = (code * * )0xcf68; (* * ppcVar1)(0x39d9, param_3, param_4, 0x20); FUN_27ac_0469(0x39d9, param_1,param_2);
}
return;
}



fn fun_27ac_0b38(param_1_00: u16, param_1: u16)

{
    let unaff_ds: u16;
    let l_var1: i32;
    let l_var2: i32;

    l_var1 = FUN_3074_00d3(0x39d9, param_1, 8);
    l_var2 = FUN_3074_00d3(0x3074, param_1, 7);
    if ((l_var1 != 0) && (l_var2 != 0)) {
        fun_3074_034b(0x3074, param_1, 8);
        fun_3074_034b(0x3074, param_1, 7);
        if ((0x98b6 | 0x98b4) != 0) {
            fun_3143_0c84(0x3074, 0x98b4, 0x98b6);
            fun_3143_0c84(0x3143, 0x98b8, 0x98ba);
        }
        0x98b4 = l_var1;
        0x98b6 = (l_var1 >> 0x10);
        0x98b8 = l_var2;
        0x98ba = (l_var2 >> 0x10);
        FUN_3440_0040(0x989c);
    }
    return;
}


fn fun_27ac_0bdf(param_1_00: u16, param_1: u16)

{
    let unaff_ds: u16;
    let l_var1: i32;
    let l_var2: i32;

    l_var1 = FUN_3074_00d3(0x39d9, param_1, 8);
    l_var2 = FUN_3074_00d3(0x3074, param_1, 7);
    fun_3074_034b(0x3074, param_1, 8);
    fun_3074_034b(0x3074, param_1, 7);
    if ((l_var1 != 0) && (l_var2 != 0)) {
        if ((0x98d4 | 0x98d2) != 0) {
            fun_3143_0c84(0x3074, 0x98d2, 0x98d4);
            fun_3143_0c84(0x3143, 0x98d6, 0x98d8);
        }
        0x98d2 = l_var1;
        0x98d4 = (l_var1 >> 0x10);
        0x98d6 = l_var2;
        0x98d8 = (l_var2 >> 0x10);
        FUN_3440_0040(0x98bc);
    }
    return;
}



fn FUN_2874_0004(param_1_00: u16,param_1: i16,param_2: i16,int *param_3) -> i16

{
let piVar1: * mut u16; let iVar2: i16; let iVar3: i16; let uVar4: u16;

uVar4 = (undefined2)(param_3 >> 0x10); iVar3 = param_3; iVar2 = 0; piVar1 = (iVar3 + 2);
if ( * piVar1 == param_2 || * piVar1 < param_2) {
if ((iVar3 + 6) < param_2) {
iVar2 = 0x40;
}
}
else {
iVar2 = 0x80;
}
if ( * param_3 == param_1 || * param_3 < param_1) {
if ((iVar3 + 4) < param_1) {
iVar2 = iVar2 + 0x10;
}
}
else {
iVar2 = iVar2 + 0x20;
}
return iVar2;
}



undefined4
FUN_2874_0041(param_1_00: u16,int *param_1,int *param_3,param_4: u16,int *param_5,
int *param_7)

{
let piVar1: * mut u16; let piVar2: * mut u16; let uVar3: u16; let uVar4: u16; let iVar5: i16; let    uVar6: u16; let local_12: i16; let local_10: i16; let local_e: i16; let local_c: i16;

piVar2 = param_7; piVar1 = param_5; local_12 = * param_1; local_10 = (param_1 + 2); local_e = (param_1 + 4); local_c = (param_1 + 6); uVar3 = FUN_2874_0004(0x39d9, * param_1,(param_1 + 2), param_3, param_4); uVar4 = FUN_2874_0004(0x39d9, (param_1 + 4), (param_1 + 6),
param_3, param_4); if ((uVar3 & uVar4) == 0) {
if ((uVar3 == 0) & & (uVar4 == 0)) {
if ((param_5._2_2_ | param_5) != 0) {
param_5 = (param_5 & 0xffff0000 | (param_5 + 8)); * piVar1 = * param_1;
(param_5 + 2) = (param_1 + 2); (param_5 + 4) = (param_1 + 4); (param_5 + 6) = (param_1 + 6);
}
if ((param_7._2_2_ | param_7) == 0) goto LAB_2874_0119;
}
else {
if ((param_7._2_2_ | param_7) == 0) {
if ((param_5._2_2_ | param_5) == 0) {
iVar5 = 0; param_5._2_2_ = 0;
goto LAB_2874_02b9;
}
if ((uVar3 & 0x80) != 0) {
local_10 = param_3[1];
}
if ((uVar4 & 0x40) != 0) {
local_c = param_3[3];
}
if ((uVar3 & 0x20) != 0) {
local_12 = * param_3;
}
if ((uVar4 & 0x10) != 0) {
local_e = param_3[2];
}
* param_5 = local_12; (param_5 + 2) = local_10; (param_5 + 4) = local_e; (param_5 + 6) = local_c; iVar5 = param_5 + 8; goto LAB_2874_02af;
}
if ((uVar3 & 0x80) != 0) {
(param_7 + 2) = local_10; (param_7 + 6) = param_3[1] + -1; * param_7 = local_12; (param_7 + 4) = local_e; param_7 = (param_7 & 0xffff0000 | (param_7 + 8)); local_10 = param_3[1];
}
if ((uVar4 & 0x40) != 0) {
uVar6 = (undefined2)(param_7 >> 0x10); iVar5 = param_7; (iVar5 + 2) = param_3[3] + 1; (iVar5 + 6) = local_c; * param_7 = local_12; (iVar5 + 4) = local_e;
param_7 = (param_7 & 0xffff0000 | (iVar5 + 8)); local_c = param_3[3];
}
if ((uVar3 & 0x20) != 0) {
uVar6 = (undefined2)(param_7 >> 0x10); iVar5 = param_7; (iVar5 + 2) = local_10; (iVar5 + 6) = local_c; * param_7 = local_12; (iVar5 + 4) = * param_3 + - 1; param_7 = (param_7 & 0xffff0000 | (iVar5 + 8)); local_12 = * param_3;
}
if ((uVar4 & 0x10) != 0) {
uVar6 = (undefined2)(param_7 >> 0x10); iVar5 = param_7; (iVar5 + 2) = local_10; (iVar5 + 6) = local_c; * param_7 = param_3[2] + 1; (iVar5 + 4) = (param_1 + 4); param_7 = (param_7 & 0xffff0000 | (iVar5 + 8)); local_e = param_3[2];
}
if ((param_5._2_2_ | param_5) != 0) {
param_5 = (param_5 & 0xffff0000 | (param_5 + 8)); * piVar1 = local_12; (param_5 + 2) = local_10; (param_5 + 4) = local_e; (param_5 + 6) = local_c; goto LAB_2874_023b;
}
}
// LAB_2874_0244:
param_5._2_2_ = (param_7 >> 0x10); iVar5 = param_7;
}
else {
if ((param_7._2_2_ | param_7) != 0) {
param_7 = (param_7 & 0xffff0000 | (param_7 + 8)); * piVar2 = * param_1;
(param_7 + 2) = (param_1 + 2); (param_7 + 4) = (param_1 + 4); (param_7 + 6) = (param_1 + 6); if ((param_5._2_2_ | param_5) != 0) {
// LAB_2874_023b:
(param_5 + 2) = 0x8000;
}
goto LAB_2874_0244;
}
// LAB_2874_0119:
param_5._2_2_ = (param_5 >> 0x10); iVar5 = param_5;
}
// LAB_2874_02af:
(iVar5 + 2) = 0x8000;
// LAB_2874_02b9: return CONCAT22(param_5._2_2_, iVar5);
}



undefined2 *
FUN_2874_02bf(param_1_00: u16,undefined2 *param_1,param_2: u16,ulong param_3,
undefined2 *param_5,uparam_7: i16,uparam_8: i16)

{
let puVar1: * mut u16; let puVar2: * mut u16; let iVar3: i16; let    uVar4: u16; let local_a: * mut u16;

iVar3 = param_5; if ((param_8 | param_7) == 0) {
local_a = param_5;
}
if (((param_3._2_2_ | param_3) == 0) || (puVar2 = CONCAT22(param_8, param_7), (param_3 + 2) == - 0x8000)) {
FUN_27ac_04b1(0x39d9, 0, 0, 0x98da); if ((param_8 | param_7) == 0) {
* param_5 = * param_1; (iVar3 + 2) = param_1[1]; (iVar3 + 4) = param_1[2]; (iVar3 + 6) = param_1[3]; param_7 = iVar3 + 8; param_8 = param_5._2_2_;
}
local_a = CONCAT22(param_8, param_7); (param_7 + 2) = 0x8000;
}
else {
while ( true ) {
uVar4 = (undefined2)(param_3 >> 0x10); iVar3 = param_3; if ((iVar3 + 2) == - 0x8000) break; local_a = FUN_2874_0041(0x39d9, iVar3, uVar4, param_1, param_2, param_5._0_2_, param_5._2_2_, puVar2); puVar1 = local_a; if (puVar2 == 0x0) {
param_5 = local_a; puVar1 = puVar2;
}
param_3 = param_3 & 0xffff0000 | (iVar3 + 8); puVar2 = puVar1;
}
}
return local_a;
}



fn fun_2874_0396(param_1_00: u16, code *param_1)

{
    let i_var1: i16;
    let i_var2: i16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let in_stack_0000000c: i16;
    let in_stack_0000000e: i16;
    let in_stack_00000010: i16;
    let in_stack_00000012: i16;
    let in_stack_00000014: u16;
    int
    local_64[40];
    let local_14: i16;
    let local_12: i16;
    let local_10: i16;
    let local_e: i16;
    let local_c: i16;
    let local_a: u16;
    let local_4: i16;

    i_var2 = in_stack_0000000e;
    i_var1 = in_stack_0000000c;
    if (in_stack_00000012 < in_stack_0000000e) {
        in_stack_0000000e = in_stack_00000012;
        in_stack_00000012 = i_var2;
    }
    if (in_stack_00000010 < in_stack_0000000c) {
        in_stack_0000000c = in_stack_00000010;
        in_stack_00000010 = i_var1;
    }
    local_12 = in_stack_0000000e;
    local_14 = in_stack_0000000c;
    local_10 = in_stack_00000010;
    local_e = in_stack_00000012;
    local_a = 0x9c7c;
    for (local_c = 0x9c7a; (local_c + 2) != -0x8000; local_c = local_c + 8) {
        FUN_2874_0041(0x39d9, &local_14);
        local_4 = 0;
        while (true) {
            if (local_64[local_4 * 4 + 1] == -0x8000)
            break;
            (*param_1)(0x39d9, local_64[local_4 * 4], local_64[local_4 * 4 + 1], local_64[local_4 * 4 + 2],
                       local_64[local_4 * 4 + 3], in_stack_00000014);
            local_4 = local_4 + 1;
        }
    }
    return;
}


// WARNING: Could not reconcile some variable overlaps

uint FUN_2874_0447()

{
let puVar1: * mut u16; code * *ppcVar2; let iVar3: i16; let uVar4: u16; let iVar5: i16; let iVar6: i16; let uVar7: u16; let unaff_SS: u16; let unaff_DS: u16; undefined uVar8;
let in_stack_00000008: i16; let in_stack_0000000a: i16;
let in_stack_0000000c: u16; let in_stack_0000000e: i16;
let in_stack_00000010: u16; int local_1c [4]; let local_14: u16; let local_12: u16; uint auStack16 [2]; let local_c: u32; let uStack4: u16;

uVar7 = 0x39d9; if (in_stack_0000000a == in_stack_0000000e) {
local_14 = 0xc870; local_12 = 0xc872;
}
else {
FUN_3444_4101(0x39d9); FUN_3444_4101(0x3444);
FUN_3444_44d9(0x3444); FUN_3444_4101(0x3444);
FUN_3444_44e8(0x3444); uVar7 = 0x3444; FUN_3444_41c9(0x3444);
}
local_1c[0] = in_stack_00000008; local_1c[1] = in_stack_0000000a; local_1c[2] = in_stack_0000000c; local_1c[3] = in_stack_0000000e; local_c._0_2_ = 0x9c7a; local_c = CONCAT22(0x9c7c,local_c); uVar4 = local_c; loop {
if ((local_c + 2) == - 0x8000) {
return uVar4;
}
auStack16[0] = FUN_2874_0004(uVar7, in_stack_00000008, in_stack_0000000a, local_c,
local_c._2_2_);
auStack16[1] = FUN_2874_0004(uVar7, in_stack_0000000c, in_stack_0000000e, local_c,
local_c._2_2_);
if ((auStack16[0] & auStack16[1]) == 0) {
local_c = (local_c & 0xffff0000 | local_c);
if ((auStack16[1] == 0) & & (auStack16[0] == 0)) {
ppcVar2 = (code * * )0xcfb0; uVar4 = ( * * ppcVar2)(uVar7, in_stack_00000008, in_stack_0000000a, in_stack_0000000c,
in_stack_0000000e, in_stack_00000010);
return uVar4;
}
uStack4 = 0; for (iVar5 = 0; uVar8 = iVar5 == 2, iVar5 < 2; iVar5 = iVar5 + 1) {
FUN_3444_402c(uVar7); FUN_3444_402c(0x3444);
FUN_3444_44f7(0x3444); iVar3 = local_c; uVar7 = (undefined2)(local_c >> 0x10); if ((bool)uVar8) {
puVar1 = auStack16 + iVar5; if ( * puVar1 != 0) {
if (( * puVar1 & 0x80) == 0) {
if (( * puVar1 & 0x40) != 0) {
iVar3 = (iVar3 + 6); goto LAB_2874_0552;
}
if (( * puVar1 & 0x20) == 0) {
uVar7 = (iVar3 + 4);
}
else {
uVar7 = * local_c;
}
iVar6 = iVar5 << 2; goto LAB_2874_06e0;
}
iVar3 = (iVar3 + 2);
// LAB_2874_0552:
local_1c[iVar5 * 2 + 1] = iVar3;
}
}
else {
puVar1 = auStack16 + iVar5; if (( *puVar1 & 0x80) == 0) {
if (( * puVar1 & 0x40) != 0) {
iVar3 = (iVar3 + 6); FUN_3444_4101(0x3444); FUN_3444_43b3(0x3444); FUN_3444_4101(0x3444); FUN_3444_44f2(0x3444); FUN_3444_45be(0x3444); iVar6 = FUN_3444_42c7(0x3444);
local_1c[iVar5 * 2] = iVar6; goto LAB_2874_062f;
}
}
else {
iVar3 = (iVar3 + 2); FUN_3444_4101(0x3444); FUN_3444_43b3(0x3444); FUN_3444_4101(0x3444); FUN_3444_44f2(0x3444); FUN_3444_45be(0x3444); iVar6 = FUN_3444_42c7(0x3444);
local_1c[iVar5 * 2] = iVar6;
// LAB_2874_062f:
local_1c[iVar5 * 2 + 1] = iVar3;
uVar4 = FUN_2874_0004(0x3444, local_1c[iVar5 * 2], iVar3, local_c, local_c._2_2_); * puVar1 = uVar4;
}
if (( * puVar1 & 0x20) == 0) {
if (( * puVar1 & 0x10) == 0) goto LAB_2874_06e3; uVar7 = (local_c + 4); iVar6 = iVar5 * 4; FUN_3444_4101(0x3444); FUN_3444_43cb(0x3444); FUN_3444_4101(0x3444); FUN_3444_44f2(0x3444); FUN_3444_45be(0x3444); iVar3 = FUN_3444_42c7(0x3444);
local_1c[iVar5 * 2 + 1] = iVar3;
}
else {
uVar7 = * local_c; iVar6 = iVar5 * 4; FUN_3444_4101(0x3444); FUN_3444_43cb(0x3444); FUN_3444_4101(0x3444); FUN_3444_44f2(0x3444); FUN_3444_45be(0x3444); iVar3 = FUN_3444_42c7(0x3444); local_1c[iVar5 * 2 + 1] = iVar3;
}
// LAB_2874_06e0:
(local_1c + iVar6) = uVar7;
}
// LAB_2874_06e3:
uVar7 = 0x3444;
}
ppcVar2 = (code * * )0xcfb0; (* * ppcVar2)(uVar7, local_1c[0], local_1c[1], local_1c[2], local_1c[3], in_stack_00000010);
}
local_c._0_2_ = local_c + 8; uVar4 = local_c._2_2_;
} while ( true );
}



fn fun_2874_072b()

{
    let i_var1: i16;
    code * *ppcVar2;
    let u_var3: u16;
    let i_var4: i16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let in_stack_00000008: i16;
    let in_stack_0000000a: i16;
    let in_stack_0000000c: i16;
    let in_stack_0000000e: u16;
    let in_stack_00000010: i16;
    let in_stack_00000012: i16;
    int
    aiStack102[40];
    let i_stack22: i16;
    let i_stack20: i16;
    let i_stack18: i16;
    let i_stack16: i16;
    let i_stack14: i16;
    let u_stack12: u16;
    let i_stack10: i16;
    let u_stack4: u16;

    u_var3 = (in_stack_00000010 + 7) >> 0xf;
    i_stack10 = (((in_stack_00000010 + 7 ^ u_var3) - u_var3) >> 3 ^ u_var3) - u_var3;
    i_stack20 = in_stack_0000000a;
    i_stack22 = in_stack_00000008;
    i_stack18 = in_stack_00000008 + in_stack_00000010 + -1;
    i_stack16 = in_stack_0000000a + in_stack_00000012 + -1;
    u_stack12 = 0x9c7c;
    for (iStack14 = 0x9c7a; (iStack14 + 2) != -0x8000; iStack14 = iStack14 + 8) {
        FUN_2874_0041(0x39d9, &i_stack22);
        u_stack4 = 0;
        i_var4 = 0;
        while (true) {
            if (aiStack102[i_var4 * 4 + 1] == -0x8000)
            break;
            0x7fe0 = i_stack18 - aiStack102[i_var4 * 4 + 2];
            0x7fde = aiStack102[i_var4 * 4] - i_stack22;
            i_var1 = aiStack102[i_var4 * 4 + 1];
            ppcVar2 = (code * *)
            0xcf98;
            (**ppcVar2)(0x39d9, in_stack_00000008, i_var1,
                        (i_var1 - in_stack_0000000a) * i_stack10 + in_stack_0000000c, in_stack_0000000e,
                        in_stack_00000010, (aiStack102[i_var4 * 4 + 3] - aiStack102[i_var4 * 4 + 1]) + 1);
            i_var4 = i_var4 + 1;
        }
    }
    0x7fde = 0;
    0x7fe0 = 0;
    return;
}


fn fun_2874_0816()

{
    let i_var1: i16;
    code * *ppcVar2;
    let u_var3: u16;
    let i_var4: i16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let in_stack_00000008: i16;
    let in_stack_0000000a: i16;
    let in_stack_0000000c: i16;
    let in_stack_0000000e: u16;
    let in_stack_00000010: i16;
    let in_stack_00000012: i16;
    int
    local_66[40];
    let local_16: i16;
    let local_14: i16;
    let local_12: i16;
    let local_10: i16;
    let local_e: i16;
    let local_c: u16;
    let local_a: i16;
    let local_4: u16;

    u_var3 = (in_stack_00000010 + 7) >> 0xf;
    local_a = (((in_stack_00000010 + 7 ^ u_var3) - u_var3) >> 3 ^ u_var3) - u_var3;
    if ((*0x9c65 & 1) == 0) {
        local_a = local_a * 4;
    }
    local_16 = in_stack_00000008;
    local_12 = in_stack_00000008 + in_stack_00000010 + -1;
    local_14 = in_stack_0000000a;
    local_10 = in_stack_0000000a + in_stack_00000012 + -1;
    local_c = 0x9c7c;
    for (local_e = 0x9c7a; (local_e + 2) != -0x8000; local_e = local_e + 8) {
        FUN_2874_0041(0x39d9, &local_16);
        local_4 = 0;
        i_var4 = 0;
        while (true) {
            if (local_66[i_var4 * 4 + 1] == -0x8000)
            break;
            0x7fe0 = local_12 - local_66[i_var4 * 4 + 2];
            0x7fde = local_66[i_var4 * 4] - local_16;
            i_var1 = local_66[i_var4 * 4 + 1];
            ppcVar2 = (code * *)
            0xcf90;
            (**ppcVar2)(0x39d9, in_stack_00000008, i_var1,
                        (i_var1 - in_stack_0000000a) * local_a + in_stack_0000000c, in_stack_0000000e,
                        in_stack_00000010, (local_66[i_var4 * 4 + 3] - local_66[i_var4 * 4 + 1]) + 1);
            i_var4 = i_var4 + 1;
        }
    }
    0x7fde = 0;
    0x7fe0 = 0;
    return;
}


fn fun_2874_090d()

{
    let i_var1: i16;
    code * *ppcVar2;
    let pi_var3: *mut u16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let in_stack_00000008: i16;
    let in_stack_0000000a: i16;
    let in_stack_0000000c: i16;
    let in_stack_0000000e: u16;
    let in_stack_00000010: i16;
    let in_stack_00000012: i16;
    int
    local_6c[40];
    let local_1c: i16;
    let local_1a: i16;
    let local_18: i16;
    let local_16: i16;
    let local_14: i16;
    let local_12: u16;
    let local_10: i16;
    let local_a: *mut u16;
    let u_var4: u16;

    local_10 = (in_stack_00000010 + 1) / 2;
    local_1a = in_stack_0000000a;
    local_1c = in_stack_00000008;
    local_18 = in_stack_00000008 + in_stack_00000010 + -1;
    local_16 = in_stack_0000000a + in_stack_00000012 + -1;
    local_12 = 0x9c7c;
    for (local_14 = 0x9c7a; (local_14 + 2) != -0x8000; local_14 = local_14 + 8) {
        FUN_2874_0041(0x39d9, &local_1c);
        pi_var3 = local_6c;
        local_a = pi_var3;
        u_var4 = unaff_ss;
        for (; piVar3[1] != -0x8000; piVar3 = piVar3 + 4) {
            0x7fe0 = local_18 - pi_var3[2];
            0x7fde = *pi_var3 - local_1c;
            i_var1 = pi_var3[1];
            ppcVar2 = (code * *)
            0xcf98;
            (**ppcVar2)(0x39d9, in_stack_00000008, i_var1,
                        (i_var1 - in_stack_0000000a) * local_10 + in_stack_0000000c, in_stack_0000000e,
                        in_stack_00000010, (pi_var3[3] - pi_var3[1]) + 1);
        }
    }
    0x7fde = 0;
    0x7fe0 = 0;
    return;
}


fn fun_2874_09f9()

{
    let i_var1: i16;
    code * *ppcVar2;
    let pi_var3: *mut u16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let in_stack_00000008: i16;
    let in_stack_0000000a: i16;
    let in_stack_0000000c: i16;
    let in_stack_0000000e: u16;
    let in_stack_00000010: i16;
    let in_stack_00000012: i16;
    int
    local_6c[40];
    let local_1c: i16;
    let local_1a: i16;
    let local_18: i16;
    let local_16: i16;
    let local_14: i16;
    let local_12: u16;
    let local_10: i16;
    let local_a: *mut u16;
    let u_var4: u16;

    local_10 = (in_stack_00000010 + 1) / 2;
    local_1a = in_stack_0000000a;
    local_1c = in_stack_00000008;
    local_18 = in_stack_00000008 + in_stack_00000010 + -1;
    local_16 = in_stack_0000000a + in_stack_00000012 + -1;
    local_12 = 0x9c7c;
    for (local_14 = 0x9c7a; (local_14 + 2) != -0x8000; local_14 = local_14 + 8) {
        FUN_2874_0041(0x39d9, &local_1c);
        pi_var3 = local_6c;
        local_a = pi_var3;
        u_var4 = unaff_ss;
        for (; piVar3[1] != -0x8000; piVar3 = piVar3 + 4) {
            0x7fe0 = local_18 - pi_var3[2];
            0x7fde = *pi_var3 - local_1c;
            i_var1 = pi_var3[1];
            ppcVar2 = (code * *)
            0xcf90;
            (**ppcVar2)(0x39d9, in_stack_00000008, i_var1,
                        (i_var1 - in_stack_0000000a) * local_10 + in_stack_0000000c, in_stack_0000000e,
                        in_stack_00000010, (pi_var3[3] - pi_var3[1]) + 1);
        }
    }
    0x7fde = 0;
    0x7fe0 = 0;
    return;
}


fn fun_2874_0ae5(param_1_00: u16, param_1: u16, param_2: u16)

{
    let i_var1: i16;
    let u_var2: u16;
    let unaff_ds: u16;
    let l_var3: i32;

    if ((0x992a | 0x9928) != 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x39d9, 0x98dd);
    }
    u_var2 = 0x9c7c;
    0xcd2e = 0x9c7a;
    0xcd30 = u_var2;
    l_var3 = fun_3143_1720(0x39d9, 0xa0);
    u_var2 = (undefined2)(l_var3 >> 0x10);
    0x9928 = l_var3;
    0x992a = u_var2;
    0x9c7a = l_var3;
    0x9c7c = u_var2;
    if (l_var3 == 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3143, 0x98f1);
    }
    i_var1 = FUN_2874_02bf(0x3143, param_1, param_2, 0xcd2e, 0xcd30,
                           0x9928, 0x992a, 0, 0);
    if (0x98 < (i_var1 - 0x9928 & 0xfff8)) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3143, 0x990f);
    }
    return;
}


fn fun_2874_0c88()

{
    code * *ppcVar1;
    let pi_var2: *mut u16;
    let i_var3: i16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let in_stack_00000008: i16;
    let in_stack_0000000a: i16;
    let in_stack_0000000c: i16;
    let in_stack_0000000e: u16;
    let in_stack_00000010: i16;
    let in_stack_00000012: i16;
    int
    local_6c[40];
    let local_1c: i16;
    let local_1a: i16;
    let local_18: i16;
    let local_16: i16;
    let local_14: i16;
    let local_12: u16;
    let local_10: i16;
    let local_a: *mut u16;
    let u_var4: u16;

    local_1a = in_stack_0000000a;
    local_1c = in_stack_00000008;
    local_10 = in_stack_00000010;
    local_18 = in_stack_00000008 + in_stack_00000010 + -1;
    local_16 = in_stack_0000000a + in_stack_00000012 + -1;
    local_12 = 0x9c7c;
    i_var3 = 0x9c7a;
    while ((i_var3 + 2) != -0x8000) {
        FUN_2874_0041(0x39d9, &local_1c);
        pi_var2 = local_6c;
        local_14 = i_var3;
        local_a = pi_var2;
        u_var4 = unaff_ss;
        for (; piVar2[1] != -0x8000; piVar2 = piVar2 + 4) {
            0x7fe0 = local_18 - pi_var2[2];
            0x7fde = *pi_var2 - local_1c;
            i_var3 = pi_var2[1];
            ppcVar1 = (code * *)
            0xcf98;
            (**ppcVar1)(0x39d9, in_stack_00000008, i_var3,
                        (i_var3 - in_stack_0000000a) * local_10 + in_stack_0000000c, in_stack_0000000e,
                        in_stack_00000010, (pi_var2[3] - pi_var2[1]) + 1);
        }
        i_var3 = local_14 + 8;
    }
    0x7fde = 0;
    0x7fe0 = 0;
    return;
}


fn fun_294b_0002(param_1_00: u16, uparam_1: i16, param_2: i16)

{
    let pu_var1: *mut u16;
    let pi_var2: *mut u16;
    let i_var3: i16;
    let u_var4: u16;
    let u_var5: u16;
    let i_var6: i16;
    let unaff_ds: u16;
    let u_var7: u32;

    i_var6 = param_1 >> 0xf;
    i_var3 = 0x9982;
    if ((i_var3 <= i_var6) && ((i_var3 < i_var6 || (pu_var1 = 0x9980, *pu_var1 <= param_1 && param_1 != *pu_var1)))) {
        0x9980 = param_1;
        0x9982 = i_var6;
    }
    pu_var1 = 0x9988;
    u_var5 = *pu_var1;
    *pu_var1 = *pu_var1 + 1;
    pi_var2 = 0x998a;
    *pi_var2 = *pi_var2 + (0xfffe < u_var5);
    param_1 = param_1 * 8;
    pu_var1 = 0x9984;
    u_var5 = *pu_var1;
    *pu_var1 = *pu_var1 + param_1;
    pi_var2 = 0x9986;
    *pi_var2 = *pi_var2 + (param_1 >> 0xf) + CARRY2(u_var5, param_1);
    if ((param_2 != 0) && ((0x996e | 0x996c) != 0)) {
        u_var7 = FUN_3143_1656(0x39d9, 0x996c, 0x996e);
        pu_var1 = 0x998e;
        u_var5 = *pu_var1;
        *pu_var1 = *pu_var1 + u_var7;
        pi_var2 = 0x9990;
        *pi_var2 = *pi_var2 + (u_var7 >> 0x10) + CARRY2(u_var5, u_var7);
        pi_var2 = 0x9992;
        *pi_var2 = *pi_var2 + 1;
    }
    u_var5 = 0x997c;
    i_var3 = 0x997e;
    pi_var2 = 0x9990;
    i_var6 = *pi_var2;
    if ((i_var3 <= i_var6) && ((*pi_var2 != i_var3 && i_var3 <= i_var6 || (pu_var1 = 0x998e, u_var5 <= *pu_var1 && *pu_var1 != u_var5)))) {
        u_var4 = 0x9990;
        0x997c = 0x998e;
        0x997e = u_var4;
    }
    i_var3 = 0x998c;
    pi_var2 = 0x9992;
    if (*pi_var2 != i_var3 && i_var3 <= *pi_var2) {
        0x998c = 0x9992;
    }
    return;
}


fn fun_294b_0096()

{
    let pu_var1: *mut u16;
    let pi_var2: *mut u16;
    let u_var3: u16;
    let u_var4: u16;
    let i_var5: i16;
    let i_var6: i16;
    let u_var7: u16;
    let unaff_ds: u16;
    let u_var8: u32;
    let local_4: i16;

    local_4 = 0;
    0x9990 = 0;
    0x998e = 0;
    i_var6 = 0;
    u_var7 = 0x39d9;
    while ((i_var5 = (i_var6 * 2 + -0x66d4), i_var5 != -0x8000 && (u_var3 = 0xc878, i_var5 = i_var5 * 4,
                                                                   ((i_var5 + 0x5e5c) | (i_var5 + 0x5e5a)) != 0))) {
        i_var5 = (i_var6 * 2 + -0x66d4) * 4;
        u_var8 = FUN_3143_1656(u_var7, (i_var5 + 0x5e5a), (i_var5 + 0x5e5c));
        pu_var1 = 0x998e;
        u_var4 = *pu_var1;
        *pu_var1 = *pu_var1 + u_var8;
        pi_var2 = 0x9990;
        *pi_var2 = *pi_var2 + (u_var8 >> 0x10) + CARRY2(u_var4, u_var8);
        local_4 = local_4 + 1;
        i_var6 = i_var6 + 1;
        u_var7 = 0x3143;
    }
    if ((0x9976 | 0x9974) != 0) {
        u_var8 = FUN_3143_1656(u_var7, 0x9974, 0x9976);
        pu_var1 = 0x998e;
        u_var4 = *pu_var1;
        *pu_var1 = *pu_var1 + u_var8;
        pi_var2 = 0x9990;
        *pi_var2 = *pi_var2 + (u_var8 >> 0x10) + CARRY2(u_var4, u_var8);
        local_4 = local_4 + 1;
    }
    u_var4 = 0x997c;
    i_var6 = 0x997e;
    pi_var2 = 0x9990;
    i_var5 = *pi_var2;
    if ((i_var6 <= i_var5) && ((*pi_var2 != i_var6 && i_var6 <= i_var5 || (pu_var1 = 0x998e, u_var4 <= *pu_var1 && *pu_var1 != u_var4)))) {
        u_var7 = 0x9990;
        0x997c = 0x998e;
        0x997e = u_var7;
    }
    if (0x998c < local_4) {
        0x998c = local_4;
    }
    return;
}


fn fun_294b_0152()

{
    let u_var1: u16;
    let unaff_ds: u16;

    u_var1 = 0x39d9;
    if ((0x996e | 0x996c) != 0) {
        u_var1 = 0x3143;
        fun_3143_0c84(0x39d9, 0x996c, 0x996e);
        0x996e = 0;
        0x996c = 0;
    }
    if ((0x9972 | 0x9970) != 0) {
        fun_3143_15ce(u_var1, 0x9970, 0x9972, 1);
        0x9972 = 0;
        0x9970 = 0;
    }
    0x9c7c = 0;
    0x9c7a = 0;
    return;
}


fn fun_294b_01a0(param_1_00: u16, param_1: u16)

{
    fun_294b_0219(0x39d9, param_1);
    return;
}


fn fun_294b_01af(param_1_00: u16, param_1: i16)

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let unaff_ds: u16;
    let local_4: i16;

    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    i_var2 = 0;
    local_4 = 0;
    while ((i_var2 < 0x1f && ((local_4 * 2 + -0x66d4) != -0x8000))) {
        pi_var1 = (i_var2 * 2 + -0x66d4);
        if (*pi_var1 == param_1) {
            local_4 = local_4 + 1;
        }
        *pi_var1 = (local_4 * 2 + -0x66d4);
        local_4 = local_4 + 1;
        i_var2 = i_var2 + 1;
    }
    (i_var2 * 2 + -0x66d4) = param_1;
    (i_var2 * 2 + -0x66d2) = 0x8000;
    fun_294b_03ea(0x39d9);
    return;
}


fn fun_294b_0219(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let i_var2: i16;
    let i_var3: i16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    int
    local_44[32];
    let local_4: u16;

    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    local_44[0] = param_1;
    i_var2 = 0;
    local_4 = 1;
    for (iVar3 = 1; i_var3 < 0x1f; iVar3 = iVar3 + 1) {
        i_var1 = (i_var2 * 2 + -0x66d4);
        if (i_var1 == -0x8000)
        break;
        local_44[i_var3] = i_var1;
        if (i_var1 == param_1) {
            i_var3 = i_var3 + -1;
        }
        i_var2 = i_var2 + 1;
    }
    local_44[i_var3] = -0x8000;
    FUN_3444_1f26(0x39d9, 0x992c);
    fun_294b_03ea(0x3444);
    return;
}


fn fun_294b_0289(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let pi_var2: *mut u16;
    let u_var3: u16;
    let unaff_ds: u16;
    let local_4: i16;

    u_var3 = 0x39d9;
    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    local_4 = 0;
    for (iVar1 = 0; i_var1 < 0x1f; iVar1 = iVar1 + 1) {
        pi_var2 = (i_var1 * 2 + -0x66d4);
        if (*pi_var2 == -0x8000)
        break;
        if (*pi_var2 == param_1) {
            local_4 = local_4 + 1;
        }
        *pi_var2 = (local_4 * 2 + -0x66d4);
        local_4 = local_4 + 1;
    }
    if (0x1e < i_var1) {
        u_var3 = 0x3444;
        FUN_3440_0040(0x9994);
    }
    fun_294b_03ea(u_var3);
    return;
}


fn fun_294b_02f2(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let u_var2: u16;
    let pu_var3: *mut u16;
    let unaff_ds: u16;

    fun_294b_0152(0x39d9);
    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    if ((*(param_1 * 0x1d + 0x804) & 1) == 0) {
        0x9c7c = 0;
        0x9c7a = 0;
    } else {
        u_var1 = 0xc878;
        u_var2 = (param_1 * 4 + 0x5e5a);
        u_var1 = (param_1 * 4 + 0x5e5c);
        0x9970 = u_var2;
        0x9972 = u_var1;
        fun_3143_15ce(0x39d9, u_var2, u_var1, 0);
        pu_var3 = 
        0x9970;
        u_var1 = (pu_var3 + 2);
        0x9c7a = *pu_var3;
        0x9c7c = u_var1;
    }
    return;
}


fn fun_294b_0360()

{
    let pu_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u16;
    let unaff_ds: u16;

    fun_294b_0152(0x39d9);
    pu_var1 = 0x9974;
    u_var2 = 0x9976;
    fun_3143_15ce(0x39d9, pu_var1, u_var2, 0);
    if ((u_var2 | pu_var1) == 0) {
        FUN_3440_0040(0x99bd);
    }
    u_var3 = pu_var1[1];
    0x9c7a = *pu_var1;
    0x9c7c = u_var3;
    return;
}


fn fun_294b_03ad()

{
    let unaff_ds: u16;

    fun_294b_0152(0x39d9);
    0x9c7a = 0x9c6a;
    0x9c7c = 0x6169;
    return;
}


fn fun_294b_03be()

{
    let unaff_ds: u16;

    fun_294b_0152(0x39d9);
    0x9c7c = 0;
    0x9c7a = 0;
    return;
}


fn fun_294b_03ea()

{
    let i_var1: i16;
    let pu_var2: *mut u16;
    let pi_var3: *mut u16;
    let pu_var4: *mut u16;
    let i_var5: i16;
    let pu_var6: *mut u16;
    let i_var7: i16;
    let i_var8: i16;
    let u_var9: u16;
    let u_var10: u16;
    let u_var11: u16;
    let unaff_ds: i16;
    let pi_var12: *mut u16;
    let u_var13: u32;
    let local_2a: *mut u16;
    let local_16: i16;
    let local_4: i16;

    u_var9 = 0x39d9;
    fun_294b_0152(0x39d9);
    if (0x9a50 == 0) {
        u_var9 = 0x3444;
        FUN_3444_1f84(0x39d9, 0x5e5a, 0x5b2d, 0, 0x80);
        0x9a50 = 1;
    }
    local_16 = 0x992c;
    if (local_16 == -0x8000) {
        0x9974 = 0x9a48;
        0x9976 = unaff_ds;
    } else {
        u_var10 = u_var9;
        if (((0x9976 | 0x9974) != 0) && ((0x9974 != -0x65b8 || (unaff_ds != 0x9976)))) {
            u_var10 = 0x3143;
            fun_3143_0c84(u_var9, 0x9974, 0x9976);
        }
        pi_var12 = fun_3143_0d9e(u_var10, 0x800, 0, 0, 0x99d9);
        i_var1 = *pi_var12;
        u_var9 = (pi_var12 + 2);
        u_var13 = fun_3143_0d9e(0x3143, 0x800, 0, 0, 0x99e2);
        0x9974 = u_var13;
        0x9976 = (u_var13 >> 0x10);
        pi_var3 = *(int * *)
        0x9974;
        pu_var2 = *pi_var3;
        u_var10 = (pi_var3 + 2);
        *pu_var2 = DAT_616d_9c2a;
        pu_var2[1] = DAT_616d_9c2c;
        pu_var2[2] = DAT_616d_9c2e;
        pu_var2[3] = DAT_616d_9c30;
        pu_var2[5] = 0x8000;
        for (iVar5 = 0; i_var5 < 0x20; iVar5 = iVar5 + 1) {
            i_var7 = i_var5 * 4;
            pu_var6 = (i_var7 + 0x5e5a);
            u_var11 = 0xc878;
            local_2a = CONCAT22(u_var11, pu_var6);
            if ((((i_var7 + 0x5e5c) | *pu_var6) != 0) && ((*pu_var6 != 0x9a4c || ((i_var7 + 0x5e5c) != unaff_ds)))) {
                fun_3143_0c84(0x3143, *pu_var6, (i_var7 + 0x5e5c));
                (i_var7 + 0x5e5c) = 0;
                *local_2a = 0;
            }
        }
        u_var13 = fun_2b26_06d4(0x3143, local_16, pu_var2, u_var10, i_var1, u_var9, 0, 0, 1, 0x99ea);
        i_var5 = FUN_2874_02bf(0x2b26, u_var13);
        i_var5 = (i_var5 - i_var1 & 0xfff8) + 8;
        u_var13 = fun_3143_0d9e(0x2874, i_var5, i_var5 >> 0xf);
        u_var11 = 0xc878;
        i_var7 = local_16 * 4;
        (i_var7 + 0x5e5a) = u_var13;
        (i_var7 + 0x5e5c) = (u_var13 >> 0x10);
        pu_var4 = (i_var7 + 0x5e5a);
        FUN_3444_1f26(0x3143, *pu_var4, (pu_var4 + 2), i_var1, u_var9, i_var5);
        local_4 = 1;
        loop {
            i_var5 = (local_4 * 2 + -0x66d4);
            if (i_var5 == -0x8000)
            break;
            u_var13 = fun_2b26_06d4(0x3444, local_16, pu_var2, u_var10, 0, 0, i_var1, u_var9);
            i_var7 = FUN_2874_02bf(0x2b26, u_var13);
            i_var7 = i_var7 - i_var1 >> 3;
            if (0xff < i_var7) {
                // WARNING: Subroutine does not return
                fun_2a60_08cb(0x2874, 0x99f6);
            }
            FUN_3444_1f26(0x2874, pu_var2, u_var10, i_var1, u_var9, (i_var7 + 1) * 8);
            u_var13 = fun_2b26_06d4(0x3444, i_var5, pu_var2, u_var10, i_var1, u_var9, 0, 0);
            i_var7 = FUN_2874_02bf(0x2b26, u_var13);
            i_var7 = i_var7 - i_var1 >> 3;
            if (0xff < i_var7) {
                // WARNING: Subroutine does not return
                fun_2a60_08cb(0x2874, 0x9a0d);
            }
            fun_294b_0002(0x2874, i_var7, 0);
            i_var7 = (i_var7 + 1) * 8;
            u_var13 = fun_3143_0d9e(0x2874, i_var7, i_var7 >> 0xf, 1, 0x9a24);
            u_var11 = 0xc878;
            i_var8 = i_var5 * 4;
            (i_var8 + 0x5e5a) = u_var13;
            (i_var8 + 0x5e5c) = (u_var13 >> 0x10);
            pu_var4 = (i_var8 + 0x5e5a);
            FUN_3444_1f26(0x3143, *pu_var4, (pu_var4 + 2), i_var1, u_var9, i_var7);
            local_4 = local_4 + 1;
            local_16 = i_var5;
        }
        while (local_4 < 0x20);
        u_var13 = fun_2b26_06d4(0x3444, local_16, pu_var2, u_var10, 0, 0, i_var1, u_var9);
        i_var5 = FUN_2874_02bf(0x2b26, u_var13);
        i_var5 = i_var5 - i_var1 >> 3;
        if (0xff < i_var5) {
            // WARNING: Subroutine does not return
            fun_2a60_08cb(0x2874, 0x9a30);
        }
        fun_294b_0002(0x2874, i_var5, 0);
        i_var5 = (i_var5 + 1) * 8;
        u_var11 = 0x3444;
        FUN_3444_1f26(0x2874, pu_var2, u_var10, i_var1, u_var9, i_var5);
        if ((0x9974 != -0x65b8) || (unaff_ds != 0x9976)) {
            u_var11 = 0x3143;
            u_var13 = FUN_3143_0ee2(0x3444, 0x9974, 0x9976, i_var5, i_var5 >> 0xf, 1,
            );
            0x9974 = u_var13;
            0x9976 = (u_var13 >> 0x10);
        }
        fun_3143_0c84(u_var11, pi_var12);
        fun_294b_0096(0x3143);
    }
    return;
}


fn fun_294b_077b(param_1_00: u16, undefined2 *param_1, uparam_2: i16)

{
    let pi_var1: *mut u16;
    let pu_var2: *mut u16;
    let u_var3: u32;
    let i_var4: i16;
    let u_var5: u16;
    let u_var6: u16;
    let unaff_ds: u16;
    undefined4 * puVar7;
    let u_var8: u32;
    let pu_var9: *mut u16;
    let local_8: i16;

    if ((param_2 | param_1) == 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x39d9, 0x9a84);
    }
    u_var6 = 0x3143;
    puVar7 = (undefined4 *)
    fun_3143_0d9e(0x39d9, 0x800, 0, 0, 0x9a52);
    u_var5 = (undefined2)(puVar7 >> 0x10);
    if ((0x9c7c | 0x9c7a) == 0) {
        local_8 = 1;
        pu_var2 = *(undefined2 * *)
        puVar7;
        u_var5 = (puVar7 + 2);
        *pu_var2 = *param_1;
        pu_var2[1] = param_1[1];
        pu_var2[2] = param_1[2];
        pu_var2[3] = param_1[3];
    } else {
        u_var8 = CONCAT22((puVar7 + 2), puVar7);
        while (true) {
            u_var3 = 
            0x9c7a;
            u_var5 = (undefined2)(u_var3 >> 0x10);
            i_var4 = u_var3;
            if ((i_var4 + 2) == -0x8000)
            break;
            u_var8 = FUN_2874_0041(u_var6, i_var4, u_var5, param_1, param_2, u_var8, 0, 0);
            pi_var1 = 0x9c7a;
            *pi_var1 = *pi_var1 + 8;
            u_var6 = 0x2874;
        }
        local_8 = u_var8 - puVar7 >> 3;
        if (0xff < local_8) {
            // WARNING: Subroutine does not return
            fun_2a60_08cb(u_var6, 0x9a5d);
        }
    }
    (local_8 * 8 + *puVar7 + 2) = 0x8000;
    u_var8 = fun_3444_24d0(u_var6, 0);
    pu_var9 = FUN_3143_0ee2(0x3444, puVar7, u_var8);
    u_var6 = (undefined2)(pu_var9 >> 0x10);
    if (pu_var9 == 0x0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3143, 0x9a9c, unaff_ds);
    }
    fun_294b_0152(0x3143);
    u_var5 = (pu_var9 + 2);
    0x9c7a = *pu_var9;
    0x9c7c = u_var5;
    0x996c = pu_var9;
    0x996e = u_var6;
    fun_294b_0002(0x3143, local_8, 1);
    return;
}


fn fun_294b_08c8(param_1_00: u16, uparam_1: i16, uparam_2: i16)

{
    let pi_var1: *mut u16;
    let u_var2: u32;
    let i_var3: i16;
    let u_var4: u16;
    let u_var5: u16;
    let unaff_ds: u16;
    undefined4 * puVar6;
    let u_var7: u32;
    let pu_var8: *mut u16;

    if ((param_2 | param_1) == 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x39d9, 0x9ae4);
    }
    puVar6 = (undefined4 *)
    fun_3143_0d9e(0x39d9, 0x800, 0, 0, 0x9ab2);
    if ((0x9c7c | 0x9c7a) == 0) {
        0x9c7a = 0x9c6a;
        0x9c7c = 0x6169;
    }
    u_var7 = CONCAT22((puVar6 + 2), puVar6);
    u_var5 = 0x3143;
    while (true) {
        u_var2 = 
        0x9c7a;
        u_var4 = (undefined2)(u_var2 >> 0x10);
        i_var3 = u_var2;
        if ((i_var3 + 2) == -0x8000)
        break;
        u_var7 = FUN_2874_0041(u_var5, i_var3, u_var4, param_1, param_2, 0, 0, u_var7);
        pi_var1 = 0x9c7a;
        *pi_var1 = *pi_var1 + 8;
        u_var5 = 0x2874;
    }
    i_var3 = u_var7 - puVar6 >> 3;
    if (0xff < i_var3) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(u_var5, 0x9abd);
    }
    fun_294b_0002(u_var5, i_var3, 1);
    (i_var3 * 8 + *puVar6 + 2) = 0x8000;
    u_var7 = fun_3444_24d0(u_var5, 0);
    pu_var8 = FUN_3143_0ee2(0x3444, puVar6, u_var7);
    u_var5 = (undefined2)(pu_var8 >> 0x10);
    if (pu_var8 == 0x0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3143, 0x9afc);
    }
    fun_294b_0152(0x3143);
    u_var4 = (pu_var8 + 2);
    0x9c7a = *pu_var8;
    0x9c7c = u_var4;
    0x996c = pu_var8;
    0x996e = u_var5;
    return;
}


fn fun_294b_09fa(param_1_00: u16, undefined2 *param_1, uparam_2: i16)

{
    let pi_var1: *mut u16;
    let pu_var2: *mut u16;
    let i_var3: i16;
    let u_var4: u16;
    let u_var5: u32;
    let i_var6: i16;
    let i_var7: i16;
    let u_var8: u16;
    let u_var9: u16;
    let u_var10: u16;
    let unaff_ds: u16;
    undefined4 * puVar11;
    let u_var12: u32;
    let pu_var13: *mut u16;
    let local_14: *mut u16;
    let local_8: i16;

    if ((param_2 | param_1) == 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x39d9, 0x9b44);
    }
    u_var10 = 0x3143;
    puVar11 = (undefined4 *)
    fun_3143_0d9e(0x39d9, 0x800, 0, 0, 0x9b12);
    u_var9 = (undefined2)(puVar11 >> 0x10);
    i_var7 = puVar11;
    if ((0x9c7c | 0x9c7a) == 0) {
        local_8 = 1;
        pu_var2 = *(undefined2 * *)
        puVar11;
        u_var9 = (i_var7 + 2);
        *pu_var2 = *param_1;
        pu_var2[1] = param_1[1];
        pu_var2[2] = param_1[2];
        pu_var2[3] = param_1[3];
    } else {
        i_var3 = puVar11;
        u_var4 = (i_var7 + 2);
        local_14 = CONCAT22(u_var4, i_var3);
        while (true) {
            pu_var13 = 
            0x9c7a;
            u_var8 = (undefined2)(pu_var13 >> 0x10);
            i_var6 = pu_var13;
            if ((i_var6 + 2) == -0x8000)
            break;
            *local_14 = *pu_var13;
            (i_var3 + 2) = (i_var6 + 2);
            (i_var3 + 4) = (i_var6 + 4);
            (i_var3 + 6) = (i_var6 + 6);
            pi_var1 = 0x9c7a;
            *pi_var1 = *pi_var1 + 8;
        }
        u_var12 = CONCAT22((i_var7 + 2), puVar11);
        while (true) {
            u_var5 = 
            0x9c7a;
            u_var9 = (undefined2)(u_var5 >> 0x10);
            i_var7 = u_var5;
            if ((i_var7 + 2) == -0x8000)
            break;
            u_var12 = FUN_2874_0041(u_var10, i_var7, u_var9, param_1, param_2, 0, 0, u_var12);
            pi_var1 = 0x9c7a;
            *pi_var1 = *pi_var1 + 8;
            u_var10 = 0x2874;
        }
        local_8 = u_var12 - puVar11 >> 3;
        if (0xff < local_8) {
            // WARNING: Subroutine does not return
            fun_2a60_08cb(u_var10, 0x9b1d, unaff_ds);
        }
    }
    fun_294b_0002(u_var10, local_8, 1);
    (local_8 * 8 + *puVar11 + 2) = 0x8000;
    u_var12 = fun_3444_24d0(u_var10, 0);
    pu_var13 = FUN_3143_0ee2(0x3444, puVar11, u_var12);
    u_var10 = (undefined2)(pu_var13 >> 0x10);
    if (pu_var13 == 0x0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3143, 0x9b5c, unaff_ds);
    }
    fun_294b_0152(0x3143);
    u_var9 = (pu_var13 + 2);
    0x9c7a = *pu_var13;
    0x9c7c = u_var9;
    0x996c = pu_var13;
    0x996e = u_var10;
    return;
}


fn fun_294b_0b7c()

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u32;
    let pu_var4: *mut u16;
    let u_var5: u16;
    let u_var6: u16;
    let i_var7: i16;
    let u_var8: u16;
    let u_var9: u16;
    let u_var10: u16;
    let u_var11: u16;
    let unaff_ds: u16;
    undefined4 * puVar12;

    u_var8 = 0;
    u_var3 = 
    0x9c7a;
    u_var9 = (u_var3 >> 0x10);
    u_var6 = u_var3;
    if ((u_var9 | u_var6) != 0) {
        for (; (uVar6 + 2) != -0x8000; uVar6 = uVar6 + 8) {}
        u_var8 = (u_var6 - 0x9c7a) + 8;
        u_var6 = u_var8 >> 0xf;
        pi_var1 = 0x997a;
        *pi_var1 = *pi_var1 + ((((u_var8 ^ u_var6) - u_var6) >> 3 ^ u_var6) - u_var6);
    }
    u_var11 = 0x3143;
    puVar12 = (undefined4 *)
    fun_3143_0d9e(0x39d9, u_var8 + 8, (u_var8 >> 0xf) + (0xfff7 < u_var8), 1, 0x9b72);
    u_var5 = (undefined2)(puVar12 >> 0x10);
    if (puVar12 != (undefined4 *)
    0x0) {
    if (u_var8 != 0) {
        u_var11 = 0x3444;
        FUN_3444_1f26(0x3143, puVar12 + 8, (puVar12 + 2),
                      0x9c7a, 0x9c7c, u_var8);
    }
    u_var2 = 0xc87c;
    u_var10 = 0x5edc;
    pu_var4 = *puVar12;
    *pu_var4 = 0x5eda;
    (pu_var4 + 2) = u_var10;
    u_var2 = 0x9c7c;
    u_var10 = (undefined2)(*puVar12 >> 0x10);
    i_var7 = *puVar12;
    (i_var7 + 4) = 0x9c7a;
    (i_var7 + 6) = u_var2;
    u_var2 = 0xc87c;
    0x5eda = puVar12;
    0x5edc = u_var5;
    pi_var1 = 0x9978;
    *pi_var1 = *pi_var1 + 1;
    if (0x9978 < 0x15) {
        return;
    }
    // WARNING: Subroutine does not return
    fun_2a60_08cb(u_var11, 0x9ba0);
}
    // WARNING: Subroutine does not return
    fun_2a60_08cb(0x3143, 0x9b7c);
}


fn fun_294b_0c6d()

{
    fun_294b_0b7c(0x39d9);
    fun_294b_03be(0x39d9);
    return;
}


fn fun_294b_0c76()

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    undefined4 * puVar3;
    let pu_var4: *mut u16;
    let u_var5: u32;
    let i_var6: i16;
    let u_var7: u16;
    let unaff_ds: u16;

    if (0x9978 == 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x39d9, 0x9bc1);
    }
    fun_294b_0152(0x39d9);
    u_var7 = 0xc87c;
    fun_3143_15ce(0x39d9, 0x5eda, 0x5edc, 0);
    puVar3 = (undefined4 *) * (undefined4 *)
    0x5eda;
    0x996c = puVar3;
    0x996e = (puVar3 >> 0x10);
    pu_var4 = *puVar3;
    u_var7 = (pu_var4 + 2);
    u_var2 = 0xc87c;
    0x5eda = *pu_var4;
    0x5edc = u_var7;
    u_var5 =  * (undefined4 *)
    0x996c;
    u_var7 = (undefined2)(u_var5 >> 0x10);
    i_var6 = u_var5;
    if (((i_var6 + 6) | (i_var6 + 4)) == 0) {
        0x9c7c = 0;
        0x9c7a = 0;
    } else {
        0x9c7a = i_var6 + 8;
        0x9c7c = u_var7;
    }
    pi_var1 = 0x9978;
    *pi_var1 = *pi_var1 + -1;
    return;
}


fn fun_294b_0cfc(param_1_00: u16, int *param_1)

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    let unaff_ds: u16;

    u_var4 = (undefined2)(param_1 >> 0x10);
    i_var3 = param_1;
    if (((((i_var3 + 2) < 0x9c6c) || (i_var2 = 0x9c70, pi_var1 = (i_var3 + 6), *pi_var1 != i_var2 && i_var2 <= *pi_var1)) || (pi_var1 = 0x9c6a, *pi_var1 != *param_1 && *param_1 <= *pi_var1)) || (0x9c6e < (i_var3 + 4))) {
        fun_294b_03ad(0x39d9);
    } else {
        fun_294b_03be(0x39d9);
    }
    return;
}


fn fun_294b_0d4f(param_1_00: u16, uparam_1: i16, uparam_2: i16)

{
    let u_var1: u16;
    let u_var2: u16;
    let pu_var3: *mut u16;
    let unaff_ds: u16;
    let u_var4: u32;

    if ((param_2 | param_1) != 0) {
        fun_294b_0152(0x39d9);
        u_var4 = fun_3143_0d9e(0x39d9, 0x10, 0, 0, 0x9be9);
        0x996c = u_var4;
        0x996e = (u_var4 >> 0x10);
        pu_var3 = 
        0x996c;
        u_var1 = *pu_var3;
        u_var2 = (pu_var3 + 2);
        0x9c7a = u_var1;
        0x9c7c = u_var2;
        FUN_2874_0041(0x3143, param_1, param_2, 0x9c6a, 0x6169, u_var1, u_var2, 0, 0);
    }
    return;
}


// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn FUN_2a25_003c() -> i16

{
code * pcVar1; let bVar2: u8; let iVar3: i16; let unaff_DS: u16; bool bVar4;

if (((0xcf66 != '\0') & & (0x9c66 == '\x02')) & & (0x9c68 == '\x01')) {
bVar2 = in (0xc4); out(0xc4, bVar2 & 0x7c); * ff0xcf66 = 0;
}
iVar3 = 0x9bf8; if (iVar3 == 0) {
bVar4 = false; pcVar1 = swi(0x16); iVar3 = ( * pcVar1)();
if (bVar4) {
iVar3 = 0;
}
}
if (0x95b3 != '\0') {
_DAT_0000_0417 = _DAT_0000_0417 & 0xffdf;
}
return iVar3;
}



uint FUN_2a25_007e()

{
let puVar1: * mut u16; let uVar2: u16; code * pcVar3; let uVar4: u16; let unaff_DS: u16;

uVar4 = 0x9bf8;
if (uVar4 == 0) {
pcVar3 = swi(0x16); uVar4 = (* pcVar3)(); if (uVar4 == '\0') {
0x9bf8 = uVar4 & 0xff00 | uVar4 >> 8; uVar4 = 0;
}
return uVar4;
}
puVar1 = 0x9bfa; uVar2 = * puVar1; *puVar1 = 0; 0x9bf8 = uVar2; return uVar4 & 0xff;
}



fn fun_2a25_00a3(param_1_00: u16, undefined param_1)

{
    let pu_var1: *mut u16;
    let u_var2: u16;
    let unaff_ds: u16;

    pu_var1 = 0x9bf8;
    u_var2 = *pu_var1;
    *pu_var1 = CONCAT11(0x80, param_1);
    0x9bfa = u_var2;
    return;
}



fn FUN_2a25_00b4() -> i16

{
undefined uVar1; let iVar2: i16;

iVar2 = FUN_2a25_007e(0x39d9); if (iVar2 == 0) {
uVar1 = FUN_2a25_007e(0x2a25); iVar2 = CONCAT11(8, uVar1);
}
return iVar2;
}



fn fun_2a35_0075()

{
    let u_var1: u16;
    let unaff_ds: u16;
    let pu_var2: *mut u16;
    let pu_var3: *mut u16;

    pu_var2 = FUN_3074_00d3(0x39d9, 0x14, 0xb);
    u_var1 = (pu_var2 + 2);
    0x7f9c = *pu_var2;
    0x7f9e = u_var1;
    pu_var3 = FUN_3074_00d3(0x3074, 0x13, 0xb);
    u_var1 = (pu_var3 + 2);
    0x7fa0 = *pu_var3;
    0x7fa2 = u_var1;
    if ((pu_var3 != 0x0) && (pu_var2 != 0x0)) {
        fun_3074_034b(0x3074, 0x14, 0xb);
        fun_3074_034b(0x3074, 0x13, 0xb);
        return;
    }
    fun_3444_07d2(0x3074, 0x9c00);
    // WARNING: Subroutine does not return
    fun_2a60_08cb(0x3444, 0x9c15);
}


fn fun_2a35_010b()

{
    let u_var1: u16;
    let unaff_ds: u16;
    let pu_var2: *mut u16;

    pu_var2 = FUN_3074_00d3(0x39d9, 0x14, 0xb);
    u_var1 = (pu_var2 + 2);
    0x7fa0 = *pu_var2;
    0x7fa2 = u_var1;
    pu_var2 = FUN_3074_00d3(0x3074, 0x15, 0xb);
    u_var1 = (pu_var2 + 2);
    0x7f9c = *pu_var2;
    0x7f9e = u_var1;
    fun_3074_034b(0x3074, 0x14, 0xb);
    fun_3074_034b(0x3074, 0x15, 0xb);
    return;
}


fn fun_2a35_01cd()

{
    let u_var1: u16;
    let unaff_ds: u16;
    let pu_var2: *mut u16;

    pu_var2 = FUN_3074_00d3(0x39d9, 0x13, 0xb);
    if (pu_var2 != 0x0) {
        FUN_3440_0040(0x9c2b);
        u_var1 = (pu_var2 + 2);
        0x7fa0 = *pu_var2;
        0x7fa2 = u_var1;
        fun_3074_034b(0x3444, 0x13, 0xb);
    }
    return;
}



undefined4 FUN_2a60_0006(param_1_00: u16,char *param_1,param_2: u16)

{
let piVar1: * mut u16; let uVar2: u16; let unaff_DS: u16; let lVar3: i32; let local_4: i16;

uVar2 = 0x39d9; 0xcd32 = 0; 0xcd34 = 0; for (; * param_1 != '\0'; param_1 = param_1 + local_4) {
lVar3 = FUN_3444_1d5e(uVar2, param_1, param_2,10); if (lVar3 == 0) {
local_4 = FUN_3444_178e(0x3444, param_1, param_2);
}
else {
local_4 = lVar3 - param_1; param_1 = param_1 + 1;
}
uVar2 = 0x3444; if (0xcd32 < local_4) {
0xcd32 = local_4;
}
piVar1 = 0xcd34; * piVar1 = * piVar1 + 1;
}
return CONCAT22(0xcd34, 0xcd32);
}



fn fun_2a60_007b(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let i_var2: i16;
    let u_var3: u16;
    let l_var4: i32;
    let l_var5: i32;

    u_var3 = 0x39d9;
    i_var1 = param_1 << 1;
    while (i_var2 = i_var1 + -1, i_var1 != 0) {
        l_var4 = FUN_2692_05ab(u_var3);
        loop {
            u_var3 = 0x2692;
            l_var5 = FUN_2692_05ab(0x2692);
            i_var1 = i_var2;
        }
        while (l_var4 == l_var5);
    }
    return;
}



undefined4 FUN_2a60_00b2(param_1_00: u16,param_1: u16,param_2: u16,param_3: i16)

{
let iVar1: i16; let uVar2: u16;

iVar1 = FUN_3444_178e(0x39d9, param_1, param_2); uVar2 = - (iVar1 - param_3) >> 1; FUN_3444_1f84(0x3444, 0, 0x429a, 0x20, uVar2); FUN_3444_172e(0x3444,uVar2, 0x429a, param_1, param_2); return 0x429a0000;
}



fn FUN_2a60_0103(param_1_00: u16,param_1: i16) -> i16

{
let unaff_DS: u16;

return (0x7faa / 0x7fd6 - param_1) / 2;
}



void FUN_2a60_011c(param_1_00: u16,int *param_1,uparam_2: i16,param_4: u16,
param_5: u16)

{
let iVar1: i16; let unaff_DS: u16;

iVar1 = FUN_3444_178e(0x39d9, param_4, param_5,
param_2._1_1_ + (param_2 & 0xff) * 0x7fd4, param_4, param_5
); FUN_2692_0ecc(0x3444, (((((param_1 + 4) - iVar1) - * param_1) >> 1) + * param_1) * 0x7fd6); return;
}



ulong FUN_2a60_0172(param_1_00: u16,int *param_1,param_2: u16,param_3: u16)

{
ulong uVar1; let uVar2: u16; let unaff_DS: u16;

uVar2 = FUN_3444_178e(0x39d9, param_2, param_3); uVar1 = uVar2 * 0x7fd6;
return uVar1 & 0xffff0000 | ((( - *param_1 - (uVar1 - (param_1 + 4))) >> 1) + * param_1);
}



fn fun_2a60_01a3(param_1_00: u16, int *param_1, param_2: i16, param_3: i16)

{
    let i_var1: i16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;

    i_var1 = (0x7faa / 0x7fd6 - param_2) / 2;
    u_var3 = (undefined2)(param_1 >> 0x10);
    i_var2 = param_1;
    *param_1 = i_var1;
    (i_var2 + 4) = i_var1 + param_2;
    i_var1 = (0x7fac / 0x7fd4 - param_3) / 2;
    (i_var2 + 2) = i_var1;
    (i_var2 + 6) = i_var1 + param_3;
    return;
}


fn fun_2a60_01e8()

{
    fun_27ac_04b1(0x39d9, 0, 0x16, 0x9c7e);
    FUN_2a25_007e(0x27ac);
    return;
}


fn fun_2a60_020d(param_1_00: u16, param_1: u16, param_2: u16)

{
    fun_2a60_0236(0x39d9, param_1, param_2, 0);
    return;
}


fn fun_2a60_0221(param_1_00: u16, param_1: u16, param_2: u16)

{
    fun_2a60_0236(0x39d9, param_1, param_2, 1);
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_2a60_0236(param_1_00: u16, param_1: u16, param_2: u16, param_3: i16)

{
    code * *ppcVar1;
    let u_var2: u32;
    let i_var3: i16;
    let u_var4: u16;
    let i_var5: i16;
    let u_var6: u16;
    let unaff_ds: u16;
    let pu_var7: *mut u16;
    undefined
    local_3a[13];
    char
    local_2d;
    let local_2a: u16;
    let u_stack40: u16;
    let u_stack38: u16;
    let u_stack36: u16;
    undefined
    local_22[6];
    let local_1c: i16;
    let local_1a: u32;
    let local_16: u32;
    let local_12: u32;
    let local_e: u16;
    let local_8: i16;
    let local_6: i16;
    let local_4: i16;

    local_e = 0xffff;
    0xcd36 = param_3 * 6 + -0x6366;
    0xcd38 = unaff_ds;
    0x9c7c = 0;
    0x9c7a = 0;
    local_12 = FUN_2a60_0006(0x39d9, param_1, param_2);
    fun_2a60_01a3(0x39d9, local_22);
    pu_var7 = fun_27ac_0699(0x39d9, local_22);
    u_var6 = (undefined2)(pu_var7 >> 0x10);
    i_var5 = pu_var7;
    local_2a = *pu_var7;
    u_stack40 = (i_var5 + 2);
    u_stack38 = (i_var5 + 4);
    u_stack36 = (i_var5 + 6);
    local_1a = FUN_27ac_078d(0x27ac, &local_2a);
    fun_27ac_076d(0x27ac, &local_2a);
    u_var2 = 
    0xcd36;
    u_var6 = (undefined2)(u_var2 >> 0x10);
    i_var5 = u_var2;
    ppcVar1 = (code * *)
    0xcf68;
    (**ppcVar1)(0x27ac, (i_var5 + 2), (i_var5 + 2), 0x20);
    fun_27ac_074d(0x27ac, &local_2a);
    ppcVar1 = (code * *)
    0xcf68;
    (**ppcVar1)(0x27ac, 0x404, 0xcd36, 0);
    FUN_2a60_0464(0x27ac, local_22);
    local_4 = FUN_2a60_0172(0x27ac, &local_2a);
    local_4 = local_4 / 0x7fd6;
    local_6 = local_1c + -2;
    u_var2 = 
    0xcd36;
    u_var6 = (undefined2)(u_var2 >> 0x10);
    i_var5 = u_var2;
    ppcVar1 = (code * *)
    0xcf68;
    (**ppcVar1)(0x27ac, (i_var5 + 2), (i_var5 + 4), 0xc0);
    FUN_1ba9_1157(0x27ac, local_4, local_6, 0x9c91);
    u_var2 = 
    0xcd36;
    u_var6 = (undefined2)(u_var2 >> 0x10);
    i_var5 = u_var2;
    ppcVar1 = (code * *)
    0xcf68;
    (**ppcVar1)(0x1ba9, (i_var5 + 2), (i_var5 + 4), 0);
    fun_1ba9_0e42(0x1ba9);
    fun_2692_05d1(0x1ba9);
    local_16 = FUN_2692_05ab(0x2692);
    u_var6 = 0x1ba9;
    i_var5 = FUN_1ba9_10aa(0x2692);
    local_8 = i_var5;
    loop {
    loop {
        if (param_3 != 0) {
            i_var3 = FUN_2a60_0913(u_var6, &local_16);
            if (i_var3 != 0)
            goto
            LAB_2a60_0429;
        }
        i_var3 = FUN_2a25_003c(u_var6);
        if (i_var3 != 0) {
            u_var4 = FUN_2a25_007e(0x2a25);
            if (u_var4 == 0) {
                FUN_2a25_007e(0x2a25);
            }
            u_var6 = 0x2a25;
            if ((*(u_var4 + 0xb8f1) & 2) != 0) {
                u_var4 = u_var4 - 0x20;
            }
            if ((u_var4 == 0x43) || ((u_var4 < 0x44 && ((u_var4 == '\n' || (u_var4 == '\r'))))))
            goto
            LAB_2a60_0429;
        }
        if (i_var5 == 0) {
            u_var6 = 0x1ba9;
            i_var3 = FUN_1ba9_10aa(0x2a25);
            if (i_var3 != 0)
            goto
            LAB_2a60_0429;
        } else {
            i_var5 = FUN_1ba9_10aa(0x2a25);
        }
        u_var6 = 0x2692;
        i_var3 = fun_2692_03c2(0x1ba9);
    }
    while (i_var3 == 0);
    u_var6 = 0x2692;
    fun_2692_03c6(0x2692, local_3a);
}
    while (local_2d != '\t');
// LAB_2a60_0429:
    FUN_1ba9_0fbd(uVar6, 0x900);
    fun_1ba9_0e5d(0x1ba9);
    FUN_27ac_0824(0x1ba9, &local_2a);
    u_var6 = 0x27ac;
    loop {
    i_var5 = FUN_1ba9_10aa(u_var6);
    u_var6 = 0x1ba9;
}
    while (i_var5 != 0);
    fun_2d56_0eee(0x1ba9);
    fun_2692_05b5(0x2d56);
    return;
}


// WARNING: Could not reconcile some variable overlaps

void FUN_2a60_0464(param_1_00: u16,param_1: u16,param_2: u16,param_3: i16,
char *param_4,param_5: u16)

{
let iVar1: i16; let uVar2: u16;
let uVar3: u16; let unaff_SS: u16;
let unaff_DS: u16; let puVar4: * mut u16; let lVar5: i32; undefined * puVar6; undefined local_64 [80]; let local_14: u16; let uStack18: u16; let uStack16: u16; let uStack14: u16; let local_c: u32; let local_8: i16;

param_3 = 0x7fd4 * param_3; uVar3 = 0x27ac; puVar4 = FUN_27ac_0699(0x39d9, param_1, param_2); uVar2 = (undefined2)(puVar4 >> 0x10);
iVar1 = puVar4; local_14 = * puVar4; uStack18 = (iVar1 + 2); uStack16 = (iVar1 + 4); uStack14 = (iVar1 + 6); local_8 = 0; while ( *param_4 != '\0') {
lVar5 = FUN_3444_1d5e(uVar3, param_4, param_5,10); if (lVar5 == 0) {
local_c = lVar5; iVar1 = FUN_3444_178e(0x3444,param_4, param_5); lVar5 = CONCAT22(param_5, param_4 + iVar1 + - 1);
}
else {
iVar1 = lVar5 - param_4;
}
local_c = lVar5; FUN_3444_17a6(0x3444, local_64); local_64[iVar1] = 0; param_4 = (char * )(local_c + 1);
param_5 = local_c._2_2_; param_3 = param_3 + 0x7fd4; puVar6 = local_64; iVar1 = param_3;
uVar2 = FUN_2a60_0172(0x3444, & local_14);
uVar3 = 0x2692; FUN_2692_0ecc(0x3444, uVar2,iVar1, puVar6); local_8 = local_8 + 1;
}
return;
}



bool FUN_2a60_0535()

{
let iVar1: i16; undefined local_98 [150];

FUN_3444_1aca(0x39d9, local_98); iVar1 = FUN_2a60_0570(0x3444, local_98); return iVar1 == 0;
}


// WARNING: Could not reconcile some variable overlaps

uint FUN_2a60_0570(param_1_00: u16,param_1: u16,param_2: u16,param_3: i16)

{
code * * ppcVar1; let pcVar2: String;
let iVar3: i16; let uVar4: u16;
let iVar5: i16; let uVar6: u16;
let uVar7: u16; let unaff_SS: u16;
let unaff_DS: u16; let puVar8: * mut u16; undefined local_4c [12]; let local_40: u16; int local_3c [8]; let local_2c: u32; let local_28: u16; let    uStack38: u16; let uStack36: u16; let    uStack34: u16; let local_1c: u32; let local_18: u32; undefined2 local_14 [3];
let local_e: i16; let local_c: i16;
let local_a: i16; let local_8: i16;
let local_6: u16; let local_4: i16;

local_14[0] = 0xffff; FUN_2a60_096e(0x39d9); local_18 = CONCAT22((param_3 * 4 + - 0x6300), (param_3 * 4 + - 0x6302)); local_1c = FUN_2a60_0006(0x39d9, param_1, param_2); local_c = local_1c;
local_e = (param_3 * 2 + - 0x62ee); local_8 = 0; local_a = 0; iVar5 = 0; uVar7 = 0x39d9; for (local_6 = 0; local_6 < local_e; local_6 = local_6 + 1) {
uVar6 = (undefined2)(local_18 >> 0x10); iVar3 = FUN_3444_178e(uVar7, (local_6 * 4 + local_18) + 1,
(local_6 * 4 + local_18 + 2)); local_3c[local_6] = iVar3; local_8 = local_8 + iVar3; iVar5 = iVar5 + 2; uVar7 = 0x3444;
}
if (local_c < iVar5) {
local_c = iVar5;
}
FUN_2a60_01a3(uVar7, 0x9d0a); puVar8 = FUN_27ac_0699(uVar7, 0x9d0a); uVar7 = (undefined2)(puVar8 >> 0x10); iVar5 = puVar8; local_28 = * puVar8; uStack38 = (iVar5 + 2); uStack36 = (iVar5 + 4); uStack34 = (iVar5 + 6); local_2c = FUN_27ac_078d(0x27ac, & local_28); FUN_27ac_076d(0x27ac, & local_28); ppcVar1 = (code * * )0xcf68; ( ** ppcVar1)(0x27ac, 0x404, 0x404,0x40); FUN_27ac_074d(0x27ac, & local_28); ppcVar1 = (code * * )0xcf68;
( * * ppcVar1)(0x27ac, 0,0, 0); FUN_27ac_074d(0x27ac, &local_28); ppcVar1 = (code * * )0xcf68; ( * * ppcVar1)(0x27ac,0x404, 0xf0f, 0xc0); FUN_2a60_0464(0x27ac, 0x9d0a); local_8 = ((local_c - local_8) + - 2) / 2 + 0x9d0a; local_a = 0x9d10 + - 2; ppcVar1 = (code * * )0xcf68; ( * *ppcVar1)(0x27ac, 0x404, 0xc0c, 0xc0); uVar7 = 0x27ac; for (local_6 = 0; local_6 < local_e; local_6 = local_6 + 1) {
uVar6 = (undefined2)(local_18 >> 0x10); FUN_1ba9_1157(uVar7, local_8, local_a,(local_6 * 4 + local_18) + 1,
(local_6 * 4 + local_18 + 2),
local_6 & 0xff | ((local_6 >> 8) + 9) << 8); local_8 = local_8 + local_3c[local_6] + 2;
uVar7 = 0x1ba9;
}
uVar6 = 0x1ba9; FUN_1ba9_0e42(uVar7); loop {
uVar7 = 0x2a25; iVar5 = FUN_2a25_003c(uVar6); if (iVar5 != 0) {
uVar7 = 0x2a25; iVar5 = FUN_2a25_00b4(0x2a25); if (0 < iVar5) {
if (( * (iVar5 + - 0x470f) & 2) != 0) {
iVar5 = iVar5 + - 0x20;
}
for (uVar4 = 0; local_4 = iVar5, uVar4 < local_e; uVar4 = uVar4 + 1) {
pcVar2 = * (char * * )(uVar4 * 4 + local_18); if (( *pcVar2 == iVar5) || ((pcVar2 + 1) == iVar5)) goto LAB_2a60_07c3;
}
uVar7 = 0x1ba9; FUN_1ba9_1d36(0x2a25, iVar5,local_14);
}
}
iVar5 = FUN_2692_03c2(uVar7); if (iVar5 != 0) {
uVar7 = 0x2692; FUN_2692_03c6(0x2692, local_4c); uVar4 = local_40; if (local_40._1_1_ == '\t') {
// LAB_2a60_07c3:
local_40 = uVar4; for (iVar5 = 0; iVar5 < local_e; iVar5 = iVar5 + 1) {
FUN_1ba9_0fbd(uVar7, iVar5 + 0x900); uVar7 = 0x1ba9;
}
FUN_1ba9_0e5d(uVar7); FUN_27ac_0824(0x1ba9, &local_28); return local_40 & 0xff;
}
}
uVar6 = 0x2692;
} while ( true );
}



undefined4 FUN_2a60_0897(param_1_00: u16,param_1: i16)

{
let iVar1: i16; let unaff_DS: u16;

if ((param_1 < = 0xbbc4) & & ( - 1 < param_1)) {
return CONCAT22((param_1 * 4 + - 0x44d2), (param_1 * 4 + - 0x44d4));
}
iVar1 = 0xcd3a * 4; return CONCAT22((iVar1 + - 0x61ce), (iVar1 + -0x61d0));
}



fn fun_2a60_08cb()

{
    undefined
    local_e8[140];
    undefined
    local_5c[90];

    fun_3444_1b7a(0x39d9, local_5c);
    fun_3444_1aca(0x3444, local_e8);
    fun_141a_0355(0x3444, local_e8);
    return;
}


// WARNING: Removing unreachable block (ram,0x0002af49)

fn FUN_2a60_0913(param_1_00: u16,uint *param_1,uparam_2: i16) -> i16

{
let iVar1: i16; let iVar2: i16;
let iVar3: i16; let uVar4: u16;
let uVar5: u32; let lVar6: i32;

uVar5 = FUN_2692_05ab(0x39d9); iVar1 = (uVar5 >> 0x10); uVar4 = (undefined2)(param_1 >> 0x10); iVar2 = param_1; iVar3 = (iVar2 + 2);
if ((iVar1 < iVar3) || (((iVar1 < = iVar3 & & (uVar5 < * param_1)) || (lVar6 = FUN_2692_05ab(0x2692),
CONCAT22((param_2 >> 0xf) + (iVar2 + 2) + CARRY2(param_2, * param_1),
param_2 + * param_1) < = lVar6)))) {
iVar3 = 1;
}
else {
iVar3 = 0;
}
if (iVar3 != 0) {
uVar5 = FUN_2692_05ab(0x2692); * param_1 = uVar5; (iVar2 + 2) = (uVar5 >> 0x10);
}
return iVar3;
}



fn fun_2a60_096e()

{
    let i_var1: i16;
    let u_var2: u16;

    u_var2 = 0x39d9;
    while (true) {
        i_var1 = FUN_2a25_003c(u_var2);
        if (i_var1 == 0)
        break;
        u_var2 = 0x2a25;
        FUN_2a25_007e(0x2a25);
    }
    return;
}


fn fun_2af8_0006(param_1_00: u16, int *param_1, param_2: i16, param_3: u16)

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let i_var3: i16;
    code * *ppcVar4;
    bool
    bVar5;
    let i_var6: i16;
    let pi_var7: *mut u16;
    let i_var8: i16;
    let i_var9: i16;
    let u_var10: u16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let u_var11: u32;
    let local_e2: *mut u16;
    int
    local_de[100];
    let local_16: i16;
    let local_14: i16;
    let local_12: i16;
    let local_10: i16;
    let local_e: i16;
    let local_c: i16;
    let local_a: i16;
    let local_8: i16;
    let local_6: i16;
    let local_4: i16;

    u_var10 = 0x39d9;
    local_c = 0;
    u_var2 = 0xc884;
    0x6176 = 0x7faa;
    local_e2 = CONCAT22(u_var2, 0x6178);
    0x6178 = 0x7fac;
    if (param_2 == 1) {
        ppcVar4 = (code * *)
        0xcf74;
        (**ppcVar4)(0x39d9, *param_1, (param_1 + 2), *param_1,
                    (param_1 + 2), param_3);
    } else {
        local_a = 0x7fff;
        local_8 = 0x7fff;
        local_e = -0x7fff;
        local_6 = -0x7fff;
        for (iVar6 = 0; i_var6 < param_2; iVar6 = iVar6 + 1) {
            pi_var7 = (param_1 + i_var6 * 4);
            if (*pi_var7 != 0x9eb4) {
                if (pi_var7[1] < local_a) {
                    local_a = pi_var7[1];
                }
                pi_var1 = pi_var7 + 1;
                if (*pi_var1 != local_e && local_e <= *pi_var1) {
                    local_e = pi_var7[1];
                }
                if (*pi_var7 < local_8) {
                    local_8 = *pi_var7;
                }
                pi_var1 = pi_var7;
                if (*pi_var1 != local_6 && local_6 <= *pi_var1) {
                    local_6 = *pi_var7;
                }
            }
        }
        if ((((-1 < local_6) && (-1 < local_e)) && (local_e = local_e + 1, local_a < local_e)) && ((pi_var1 = 0x6176, *pi_var1 != local_8 && local_8 <= *pi_var1 && (*local_e2 != local_a && local_a <= *local_e2)))) {
            local_8 = local_a;
            if (local_a < 0) {
                local_8 = 0;
            }
            if (*local_e2 < local_e) {
                local_e = *local_e2;
            }
            while (i_var6 = local_8, local_c = 0, local_8 < local_e) {
                local_16 = *param_1;
                local_14 = (param_1 + 2);
                local_4 = 1;
                i_var9 = local_c;
                while ((local_4 <= param_2 && (i_var9 < 0x32))) {
                    if (local_4 == param_2) {
                        local_6 = 0;
                    } else {
                        local_6 = local_4;
                    }
                    pi_var7 = (local_6 * 4 + param_1);
                    i_var8 = *pi_var7;
                    local_10 = pi_var7[1];
                    local_12 = i_var8;
                    if (i_var6 < local_14) {
                        if (local_10 < i_var6) {
                            u_var11 = FUN_3444_2364(u_var10, 0, local_14 - local_10, local_14 - i_var6,
                                                    local_14 - i_var6 >> 0xf);
                            i_var8 = FUN_3444_2364(0x3444, 0, local_16 - local_12, u_var11);
                            i_var8 = i_var8 - local_16;
                            goto
                            LAB_2af8_01de;
                        }
// LAB_2af8_01ad:
                        if (local_10 != i_var6)
                        goto
                        LAB_2af8_01ed;
// LAB_2af8_01e0:
                        local_de[i_var9] = i_var8;
                        i_var9 = i_var9 + 1;
                    } else {
                        if (i_var6 < local_10) {
                            u_var11 = FUN_3444_2364(u_var10, 0, local_10 - local_14, local_10 - i_var6,
                                                    local_10 - i_var6 >> 0xf);
                            i_var8 = FUN_3444_2364(0x3444, 0, local_12 - local_16, u_var11);
                            i_var8 = i_var8 - local_12;
// LAB_2af8_01de:
                            uVar10 = 0x3444;
                            i_var8 = -i_var8;
                            goto
                            LAB_2af8_01e0;
                        }
                        if ((local_10 < i_var6) && (local_14 != i_var6))
                        goto
                        LAB_2af8_01ad;
                    }
// LAB_2af8_01ed:
                    local_16 = local_12;
                    local_14 = local_10;
                    local_4 = local_4 + 1;
                }
                local_16 = i_var6;
                loop {
                    bVar5 = false;
                    for (iVar8 = 0; i_var8 < iVar9 + -1; iVar8 = iVar8 + 1) {
                        i_var3 = local_de[i_var8];
                        if (local_de[i_var8 + 1] < i_var3) {
                            local_de[i_var8] = local_de[i_var8 + 1];
                            local_de[i_var8 + 1] = i_var3;
                            bVar5 = true;
                        }
                    }
                }
                while (bVar5);
                if (i_var9 != 0) {
                    local_c = i_var9;
                    local_8 = i_var6;
                    for (iVar8 = 0; i_var8 < local_c + -2; iVar8 = iVar8 + 2) {
                        if (local_de[i_var8 + 2] == (local_de + 1)[i_var8]) {
                            local_de[i_var8 + 2] = local_de[i_var8];
                        } else {
                            ppcVar4 = (code * *)
                            0xcf74;
                            (**ppcVar4)(u_var10, local_de[i_var8], i_var6, (local_de + 1)[i_var8], i_var6, param_3);
                        }
                    }
                    ppcVar4 = (code * *)
                    0xcf74;
                    (**ppcVar4)(u_var10, local_de[i_var8], i_var6, local_de[i_var8 + 1], i_var6, param_3);
                }
                local_8 = i_var6 + 1;
            }
        }
    }
    return;
}



fn FUN_2b26_0008(param_1_00: u16,param_1: i16,byte param_2) -> i16

{
let uVar1: u16; let iVar2: i16;
let unaff_DS: u16;

FUN_3444_02c6(0x39d9);
uVar1 = 0xc88a; iVar2 = (param_1 * 0x1d + 0x800); return iVar2 + (param_2 * 2 + iVar2 + 2);
}



int FUN_2b26_0043(param_1_00: u16,param_2_00: u16,param_1: i16,param_2: u16,
param_3: i16,param_4: i16)

{
let iVar1: i16; let uVar2: u16;
let piVar3: * mut u16; let unaff_DS: u16; let uVar4: u32;

FUN_3444_02c6(0x39d9); uVar4 = FUN_2b26_0008(0x3444, 0xcd6c,param_2); uVar2 = (undefined2)(uVar4 >> 0x10); if ((param_1 == 0x65) & & (param_4 == - 0x8000)) {
// LAB_2b26_00c8:
iVar1 = - 0x8000;
}
else {
if ((param_1 < 200) || (0xcd < param_1)) {
piVar3 = (param_1 * 2 + uVar4 + 4); if ( * piVar3 == - 0x8000) goto LAB_2b26_00c8; 0xcd6e = 1; iVar1 = *piVar3;
}
else {
0xcd6e = 1; iVar1 = (0xcd6c * 0x1d + param_1 * 2 + 0x67d);
}
iVar1 = iVar1 + param_3;
}
return iVar1;
}



fn fun_2b26_00d1(param_1_00: u16, param_1: i16)

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let u_var3: u16;
    let i_var4: i16;
    let i_var5: i16;
    let unaff_ds: u16;
    let u_var6: u32;
    let i_var7: i16;
    let u_var8: u16;
    let u_var9: u16;

    fun_3444_02c6(0x39d9);
    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    0xcd6c = param_1;
    i_var7 = **(int * *)(param_1 * 0x1d + 0x800);
    for (iVar5 = 0; i_var5 < iVar7; iVar5 = iVar5 + 1) {
        i_var7 = 0x3444;
        u_var6 = FUN_2b26_0008(0x3444, param_1, i_var5);
        u_var8 = (undefined2)(u_var6 >> 0x10);
        i_var2 = u_var6;
        if ((i_var2 + 0x1c) == 'd') {
            (i_var2 + 4) = (i_var2 + 0x14);
        } else {
            (i_var2 + 4) = 0x8000;
        }
        if ((i_var2 + 0x1d) == 'd') {
            (i_var2 + 6) = (i_var2 + 0x16);
        } else {
            (i_var2 + 6) = 0x8000;
        }
        if ((i_var2 + 0x1e) == 'd') {
            (i_var2 + 8) = (i_var2 + 0x18);
        } else {
            (i_var2 + 8) = 0x8000;
        }
        if ((i_var2 + 0x1f) == 'd') {
            (i_var2 + 10) = (i_var2 + 0x1a);
        } else {
            (i_var2 + 10) = 0x8000;
        }
    }
    loop {
    0xcd6e = 0;
    for (iVar5 = 0; i_var5 < iVar7; iVar5 = iVar5 + 1) {
        i_var7 = 0x3444;
        u_var6 = FUN_2b26_0008(0x3444, param_1, i_var5);
        u_var9 = (undefined2)(u_var6 >> 0x10);
        i_var2 = u_var6;
        u_var8 = u_var9;
        if ((i_var2 + 4) == -0x8000) {
            u_var8 = 1;
            i_var7 = (i_var2 + 0x14);
            u_var3 = FUN_2b26_0043();
            (i_var2 + 4) = u_var3;
        }
        u_var9 = u_var8;
        if ((i_var2 + 6) == -0x8000) {
            u_var9 = 1;
            i_var7 = (i_var2 + 0x16);
            uRam0003f8ad = FUN_2b26_0043();
        }
        u_var8 = u_var9;
        if ((i_var2 + 8) == -0x8000) {
            u_var8 = 0xffff;
            i_var7 = (i_var2 + 0x18);
            u_var3 = FUN_2b26_0043();
            (i_var2 + 8) = u_var3;
        }
        if ((i_var2 + 10) == -0x8000) {
            i_var7 = (i_var2 + 0x1a);
            u_var9 = FUN_2b26_0043();
            (i_var2 + 10) = u_var9;
        }
    }
}
    while (0xcd6e != 0);
    for (iVar5 = 0; i_var5 < iVar7; iVar5 = iVar5 + 1) {
        i_var7 = 0x3444;
        u_var6 = FUN_2b26_0008(0x3444, param_1, i_var5);
        u_var8 = (undefined2)(u_var6 >> 0x10);
        i_var2 = u_var6;
        if (((((i_var2 + 4) == -0x8000) || ((i_var2 + 6) == -0x8000)) || ((i_var2 + 8) == -0x8000)) || ((i_var2 + 10) == -0x8000))
        break;
    }
    if (i_var7 == i_var5) {
        for (iVar5 = 1; i_var5 < iVar7; iVar5 = iVar5 + 1) {
            i_var7 = 0x3444;
            u_var6 = FUN_2b26_0008(0x3444, param_1, i_var5);
            u_var8 = (undefined2)(u_var6 >> 0x10);
            i_var4 = u_var6;
            i_var2 = (i_var4 + 8);
            pi_var1 = (i_var4 + 4);
            if (*pi_var1 != i_var2 && i_var2 <= *pi_var1) {
                u_var9 = (i_var4 + 4);
                (i_var4 + 4) = i_var2;
                (i_var4 + 8) = u_var9;
            }
            i_var2 = (i_var4 + 10);
            pi_var1 = (i_var4 + 6);
            if (*pi_var1 != i_var2 && i_var2 <= *pi_var1) {
                u_var9 = (i_var4 + 6);
                (i_var4 + 6) = i_var2;
                (i_var4 + 10) = u_var9;
            }
        }
        u_var6 = FUN_2b26_0008(0x3444, param_1, 0);
        u_var9 = (undefined2)(u_var6 >> 0x10);
        i_var7 = u_var6;
        u_var8 = 0xc88a;
        0xbda5 = (i_var7 + 4);
        0xbda7 = (i_var7 + 6);
        0xbda9 = (i_var7 + 8);
        0xbdab = (i_var7 + 10);
        return;
    }
    // WARNING: Subroutine does not return
    fun_2a60_08cb();
}


fn fun_2b26_0363(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let u_var2: u16;
    let u_var3: u16;
    let u_var4: u16;
    let unaff_ds: u16;
    let u_var5: u32;
    let i_var6: i16;

    fun_3444_02c6(0x39d9);
    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    u_var4 = 0x2d56;
    fun_2d56_032c(0x3444);
    i_var6 = **(int * *)(param_1 * 0x1d + 0x800);
    for (uVar3 = 0; u_var3 < iVar6; uVar3 = uVar3 + 1) {
        u_var5 = FUN_2b26_0008(u_var4, param_1, u_var3);
        u_var2 = (undefined2)(u_var5 >> 0x10);
        i_var1 = u_var5;
        if (((*(i_var1 + 2) & 1) != 0) || (((*(i_var1 + 2) & 4) != 0 && ((*(i_var1 + 2) & 2) != 0)))) {
            if ((*(i_var1 + 2) & 4) == 0) {
                fun_1ba9_0f70(u_var4, i_var1 + 4, u_var2, u_var3 & 0xff | param_1 << 8);
            } else {
                fun_1ba9_0fd4(u_var4, i_var1 + 4, u_var2, u_var3 & 0xff | param_1 << 8);
            }
            u_var4 = 0x1ba9;
        }
    }
    return;
}


fn fun_2b26_0402(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let u_var2: u16;
    let u_var3: u16;
    let unaff_ds: u16;
    let u_var4: u32;
    let u_var5: u16;

    fun_3444_02c6(0x39d9);
    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    u_var3 = 0x2d56;
    fun_2d56_032c(0x3444);
    u_var5 = **(uint * *)(param_1 * 0x1d + 0x800);
    for (uVar2 = 0; u_var2 < uVar5; uVar2 = uVar2 + 1) {
        u_var5 = u_var2;
        u_var4 = FUN_2b26_0008(u_var3, param_1);
        u_var1 = (u_var4 + 2);
        if (((u_var1 & 1) != 0) || (((u_var1 & 4) != 0 && ((u_var1 & 2) != 0)))) {
            if ((u_var1 & 4) == 0) {
                u_var5 = u_var2 & 0xff | param_1 << 8;
                fun_1ba9_0fbd(u_var3);
            } else {
                u_var5 = u_var2 & 0xff | param_1 << 8;
                fun_1ba9_1021(u_var3);
            }
            u_var3 = 0x1ba9;
        }
    }
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_2b26_048e(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let pcVar2: *mut Code;
    let i_var3: i16;
    let u_var4: u16;
    let u_var5: u16;
    let u_var6: u16;
    let u_var7: u16;
    let unaff_ds: u16;
    let u_var8: u32;
    let local_c: i16;
    let local_a: u32;

    fun_3444_02c6(0x39d9);
    if (((0x9c7c | 0x9c7a) == 0) || (u_var8 = 
    0x9c7a, (u_var8 + 2) != -0x8000)) {
if (param_1._1_1_ != '\0') {
param_1 = param_1 >> 8;
}
local_a._2_2_ = 0x3444; local_a._0_2_ = 0xb723; FUN_2d56_032c(); local_a._2_2_ = * * (int * * )(param_1 * 0x1d + 0x800); uVar7 = 0x2d56; for (iVar3 = 0; local_c = uVar7, iVar3 < local_a._2_2_; iVar3 = iVar3 + 1) {
local_a._0_2_ = param_1; local_a._2_2_ = iVar3; local_a = FUN_2b26_0008(); uVar4 = uVar7; if (( * (local_a + 2) & 2) != 0) {
uVar4 = 0x2c63; local_c = uVar7; FUN_2c63_058f();
}
uVar7 = uVar4;
}
local_a._2_2_ = 0; local_a._0_2_ = param_1; uVar8 = FUN_2b26_0008(); uVar4 = (undefined2)(uVar8 >> 0x10);
iVar3 = uVar8; if ((iVar3 + 0x21) == '\0') {
uVar5 = uVar7; if (( * (iVar3 + 2) & 0x10) != 0) {
local_a._2_2_ = 0; local_c = (iVar3 + 0x24); local_a._0_2_ = local_c + (iVar3 + 6); local_c = local_c + (iVar3 + 4); uVar5 = 0x2c63;
FUN_2c63_031b(uVar7, 0x80);
}
uVar6 = uVar5; if (( * (iVar3 + 2) & 0x20) != 0) {
local_a._2_2_ = 1; local_a._0_2_ = (iVar3 + 10) - (iVar3 + 0x24); local_c = (iVar3 + 8) - (iVar3 + 0x24); uVar6 = 0x2c63;
FUN_2c63_031b(uVar5, 0x81);
}
uVar7 = uVar6; if (( * (iVar3 + 2) & 0x40) != 0) {
local_a._2_2_ = 2; iVar1 = (iVar3 + 0x24); local_a._0_2_ = iVar1 + (iVar3 + 6); local_c = - (iVar1 - (iVar3 + 8)); uVar7 = 0x2c63; FUN_2c63_031b(uVar6, 0x82);
}
}
uVar4 = 0xc88a; pcVar2 = * (code ** )(local_a + 0x811); if (((local_a + 0x813) | pcVar2) != 0) {
local_a._2_2_ = param_1; local_c = 0xb827;
local_a._0_2_ = uVar7; ( * pcVar2)();
}
}
    return;
}


fn fun_2b26_05ce(param_1_00: u16, param_1: i16, param_2: u16, param_3: u16)

{
    let pb_var1: *mut u8;
    let pcVar2: *mut Code;
    let u_var3: u16;
    let i_var4: i16;
    let u_var5: u16;
    let unaff_ds: u16;
    let local_c: u16;
    let u_stack_y10: u16;
    let local_8: u16;
    let local_6: i16;

    u_var5 = 0x3444;
    local_6 = 0xb839;
    fun_3444_02c6(0x39d9);
    if (0xa400 == 0) {
        local_6 = 0x3444;
        u_var5 = 0x2f42;
        local_8 = 0xb846;
        fun_2f42_0097();
    }
    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    i_var4 = param_1 * 0x1d;
    if ((*(i_var4 + 0x804) & 1) == 0) {
        u_var3 = 0xc88c;
        if ((0xa43c | 0xa43a) != 0) {
            local_8 = 0xb885;
            local_6 = u_var5;
            (*0xb885)();
        }
        u_var3 = 0x9820;
        local_6 = 1;
        u_stack_y10 = 0xb897;
        local_8 = u_var5;
        fun_27ac_0287();
        local_6 = 0x27ac;
        local_8 = 0xb89d;
        fun_2d56_032c();
        local_6 = 0x992c;
        if (local_6 != -0x8000) {
            local_8 = 0x2d56;
            u_stack_y10 = 0xb8af;
            fun_2b26_0402();
        }
        u_var5 = 0xc88a;
        pb_var1 = (i_var4 + 0x804);
        *pb_var1 = *pb_var1 | 1;
        (i_var4 + 0x80d) = param_2;
        (i_var4 + 0x80f) = param_3;
        local_6 = param_1;
        local_8 = 0x2d56;
        u_stack_y10 = 0xb8d4;
        fun_2b26_00d1();
        local_6 = param_1;
        local_8 = 0x2d56;
        u_stack_y10 = 0xb8dd;
        fun_294b_0219();
        u_var5 = 0xc892;
        pcVar2 = *(code * *)
        0xa436;
        local_c = 0xa438;
        if ((local_c | pcVar2) != 0) {
            local_6 = 0;
            local_8 = 0x294b;
            u_stack_y10 = 0xb8fb;
            (*pcVar2)();
        }
        local_6 = param_1;
        local_8 = 0x294b;
        u_stack_y10 = 0xb904;
        fun_294b_02f2();
        local_6 = param_1;
        local_8 = 0x294b;
        u_stack_y10 = 0xb90c;
        fun_2b26_048e();
        local_6 = 0x294b;
        local_8 = 0xb912;
        fun_294b_03be();
        local_6 = param_1;
        local_8 = 0x294b;
        u_stack_y10 = 0xb919;
        fun_2b26_0363();
        local_6 = 0x294b;
        local_8 = 0xb91f;
        FUN_2d56_03f0();
        local_8 = 0x2d56;
        u_stack_y10 = 0xb925;
        local_6 = u_var3;
        fun_27ac_0287();
    } else {
        local_6 = param_1;
        u_stack_y10 = 0xb92e;
        local_8 = u_var5;
        fun_2b26_09bf();
    }
    return;
}


fn fun_2b26_06d4(param_1_00: u16, uparam_1: i16) -> u16

{
    let u_var1: u16;
    let i_var2: i16;
    let i_var3: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if ((param_1 & 0xff00) != 0) {
        param_1 = param_1 >> 8;
    }
    i_var3 = param_1 * 0x1d;
    u_var1 = 0xc88a;
    0xcd70 = (i_var3 + 0x805);
    0xcd72 = (i_var3 + 0x807);
    i_var2 = (i_var3 + 0x809);
    0xcd74 = i_var2;
    i_var3 = (i_var3 + 0x80b);
    0xcd76 = i_var3;
    0xcd74 = i_var2 + -1;
    0xcd76 = i_var3 + -1;
    return 0xcd70;
}


fn fun_2b26_072d(param_1_00: u16, param_1: u16, undefined2 *param_2)

{
    let i_var1: i16;
    let u_var2: u16;
    let i_var3: i16;
    let u_var4: u16;
    let pu_var5: *mut u16;

    fun_3444_02c6(0x39d9);
    pu_var5 = fun_2b26_06d4(0x3444, param_1);
    u_var2 = (undefined2)(pu_var5 >> 0x10);
    i_var1 = pu_var5;
    u_var4 = (undefined2)(param_2 >> 0x10);
    i_var3 = param_2;
    *param_2 = *pu_var5;
    (i_var3 + 2) = (i_var1 + 2);
    (i_var3 + 4) = (i_var1 + 4);
    (i_var3 + 6) = (i_var1 + 6);
    return;
}


fn fun_2b26_0754(param_1_00: u16, param_1: i16)

{
    let pcVar1: *mut Code;
    let u_var2: u16;
    let pb_var3: *mut u8;
    let unaff_ds: u16;
    let pu_var4: *mut u16;
    let local_26: u16;
    let local_24: i16;
    let local_22: *mut Code;
    let local_20: u16;
    let local_1e: *mut u8;
    let local_12: u16;
    let u_stack_y16: u16;
    let u_stack_y14: u16;
    let i_stack_y12: i16;
    let i_var5: i16;

    fun_3444_02c6(0x39d9);
    if (0xa400 == 0) {
        fun_2f42_0097();
    }
    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    pb_var3 = (param_1 * 0x1d + 0x804);
    u_var2 = 0xc88a;
    local_1e = CONCAT22(u_var2, pb_var3);
    if ((*pb_var3 & 1) != 0) {
        u_var2 = 0xc88c;
        local_22 = *(code * *)
        0xa43a;
        local_20 = 0xa43c;
        if ((local_20 | local_22) != 0) {
            (*local_22)();
        }
        i_stack_y12 = 0xba25;
        fun_27ac_0287();
        fun_2d56_032c();
        i_stack_y12 = 0xba32;
        pu_var4 = fun_2b26_06d4();
        u_var2 = (undefined2)(pu_var4 >> 0x10);
        local_12 = *pu_var4;
        u_stack_y16 = (pu_var4 + 2);
        u_stack_y14 = (pu_var4 + 4);
        i_var5 = 0;
        while ((i_var5 * 2 + -0x66d4) != param_1) {
            i_var5 = i_var5 + 1;
        }
        i_stack_y12 = 0xba67;
        fun_294b_02f2();
        while (true) {
            i_var5 = i_var5 + 1;
            local_24 = (i_var5 * 2 + -0x66d4);
            if (local_24 == -0x8000)
            break;
            u_stack_y14 = 0x294b;
            u_stack_y16 = 0xba7d;
            i_stack_y12 = local_24;
            fun_2b26_072d();
            i_stack_y12 = 0x294b;
            u_stack_y14 = 0xba8a;
            fun_294b_08c8();
        }
        fun_1ba9_131c();
        i_stack_y12 = 0xbab0;
        fun_294b_0289();
        u_var2 = 0xc892;
        pcVar1 = *(code * *)
        0xa436;
        local_26 = 0xa438;
        if ((local_26 | pcVar1) != 0) {
            i_stack_y12 = 0xbace;
            (*pcVar1)();
        }
        *local_1e = *local_1e & 0xfe;
        i_stack_y12 = 0xbadb;
        fun_2b26_0402();
        i_var5 = 0x992c;
        if (i_var5 != -0x8000) {
            i_stack_y12 = 0xbaf0;
            param_1 = i_var5;
            fun_2b26_0363();
        }
        while ((param_1 * 2 + -0x66d4) != -0x8000) {
            i_stack_y12 = 0xbb01;
            fun_294b_02f2();
            i_stack_y12 = 0x294b;
            u_stack_y14 = 0xbb0c;
            fun_294b_077b();
            i_stack_y12 = 0xbb18;
            fun_2b26_048e();
            param_1 = param_1 + 1;
        }
        fun_294b_03be();
        FUN_2d56_03f0();
        i_stack_y12 = 0xbb45;
        fun_27ac_0287();
    }
    return;
}


fn fun_2b26_08ec(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let unaff_ds: u16;

    u_var1 = 0x3444;
    fun_3444_02c6(0x39d9);
    if (0xa400 == 0) {
        u_var1 = 0x2f42;
        fun_2f42_0097(0x3444);
    }
    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    if ((*(param_1 * 0x1d + 0x804) & 1) != 0) {
        fun_2d56_032c(u_var1);
        fun_294b_02f2(0x2d56, param_1);
        fun_2b26_048e(0x294b, param_1);
        fun_294b_03be(0x294b);
        FUN_2d56_03f0(0x294b);
    }
    return;
}


fn fun_2b26_0945(param_1_00: u16, param_1: u16, param_2: u16)

{
    let u_var1: u16;
    let pi_var2: *mut u16;
    let i_var3: i16;
    let u_var4: u16;
    let unaff_ds: u16;
    let pu_var5: *mut u16;

    fun_3444_02c6(0x39d9);
    fun_2d56_032c(0x3444);
    fun_294b_03ad(0x2d56);
    fun_294b_077b(0x294b, param_1, param_2);
    u_var4 = 0x1ba9;
    fun_1ba9_131c(0x294b);
    i_var3 = 0;
    while (true) {
        pi_var2 = (i_var3 * 2 + -0x66d4);
        u_var1 = 0xc890;
        pu_var5 = CONCAT22(u_var1, pi_var2);
        if (*pi_var2 == -0x8000)
        break;
        fun_294b_02f2(u_var4, *pi_var2);
        u_var4 = 0x294b;
        fun_294b_077b(0x294b, param_1, param_2);
        fun_2b26_048e(0x294b, *pu_var5);
        i_var3 = i_var3 + 1;
    }
    fun_294b_03be(u_var4);
    FUN_2d56_03f0(0x294b);
    return;
}


fn fun_2b26_09bf(param_1_00: u16, uparam_1: i16)

{
    let pcVar1: *mut Code;
    let u_var2: u16;
    let i_var3: i16;
    let unaff_ds: u16;
    let local_20: u16;
    let local_1e: *mut Code;
    let local_1c: u16;
    let local_1a: u16;
    undefined
    local_18[8];
    let local_10: u16;
    let u_stack_y14: u16;
    let u_stack_y12: u16;
    let pu_stack_y10: *mut u16;
    let u_var4: u16;
    let i_var5: i16;

    fun_3444_02c6(0x39d9);
    if ((param_1 & 0xff00) != 0) {
        param_1 = param_1 >> 8;
    }
    if ((*(param_1 * 0x1d + 0x804) & 1) == 0) {
        pu_stack_y10 = 0x3444;
        u_stack_y12 = 0xbc53;
        fun_2b26_05ce();
    } else {
        if (DAT_616d_98ec != param_1) {
            i_var5 = 1;
            while ((local_1a = (i_var5 * 2 + -0x66d4), local_1a != param_1 && (local_1a != 0x8000)
            )) {
                i_var5 = i_var5 + 1;
            }
            u_var2 = 0xc88c;
            local_1e = *(code * *)
            0xa43a;
            local_1c = 0xa43c;
            u_var4 = DAT_616d_98ec;
            if ((local_1c | local_1e) != 0) {
                pu_stack_y10 = 0xbca6;
                (*local_1e)();
            }
            pu_stack_y10 = 0x3444;
            u_stack_y12 = 0xbcba;
            fun_27ac_0287();
            pu_stack_y10 = 0xbcc0;
            fun_2d56_032c();
            if (u_var4 != 0x8000) {
                pu_stack_y10 = 0x2d56;
                u_stack_y12 = 0xbcce;
                fun_2b26_0402();
            }
            pu_stack_y10 = 0x2d56;
            u_stack_y12 = 0xbcd5;
            fun_294b_01a0();
            u_var2 = 0xc892;
            pcVar1 = *(code * *)
            0xa436;
            local_20 = 0xa438;
            if ((local_20 | pcVar1) != 0) {
                pu_stack_y10 = 0x294b;
                u_stack_y12 = 0xbcf3;
                (*pcVar1)();
            }
            pu_stack_y10 = 0x294b;
            u_stack_y12 = 0xbcf9;
            fun_2b26_0363();
            pu_stack_y10 = local_18;
            u_stack_y14 = 0x294b;
            local_10 = 0xbd04;
            u_stack_y12 = param_1;
            fun_2b26_072d();
            for (; 0 < iVar5; iVar5 = iVar5 + -1) {
                pu_stack_y10 = 0xbd11;
                fun_294b_03ad();
                pu_stack_y10 = &local_10;
                u_stack_y12 = (i_var5 * 2 + -0x66d4);
                u_stack_y14 = 0x294b;
                local_10 = 0xbd27;
                fun_2b26_072d();
                pu_stack_y10 = &local_10;
                u_stack_y12 = 0x294b;
                u_stack_y14 = 0xbd34;
                fun_294b_077b();
                i_var3 = i_var5;
                while (i_var3 = i_var3 + -1, 0 < i_var3) {
                    pu_stack_y10 = &local_10;
                    u_stack_y12 = (i_var3 * 2 + -0x66d4);
                    u_stack_y14 = 0x294b;
                    local_10 = 0xbd56;
                    fun_2b26_072d();
                    pu_stack_y10 = &local_10;
                    u_stack_y12 = 0x294b;
                    u_stack_y14 = 0xbd63;
                    fun_294b_08c8();
                }
                pu_stack_y10 = local_18;
                u_stack_y12 = 0x294b;
                u_stack_y14 = 0xbd74;
                fun_294b_077b();
                pu_stack_y10 = 0x294b;
                u_stack_y12 = 0xbd7d;
                fun_2b26_048e();
            }
            pu_stack_y10 = 0xbd8c;
            fun_294b_03be();
            pu_stack_y10 = 0xbd91;
            FUN_2d56_03f0();
            pu_stack_y10 = 0x2d56;
            u_stack_y12 = 0xbd99;
            fun_27ac_0287();
        }
    }
    return;
}


fn fun_2b26_0b40(param_1_00: u16, uparam_1: i16)

{
    let pcVar1: *mut Code;
    let u_var2: u16;
    let unaff_ds: u16;
    let local_12: u16;
    let local_10: i16;
    let local_e: *mut Code;
    let local_c: u16;

    fun_3444_02c6(0x39d9);
    if ((param_1 & 0xff00) != 0) {
        param_1 = param_1 >> 8;
    }
    u_var2 = 0xc88c;
    local_e = *(code * *)
    0xa43a;
    local_c = 0xa43c;
    if ((local_c | local_e) != 0) {
        (*local_e)();
    }
    local_10 = param_1 * 0x1d;
    if ((*(local_10 + 0x804) & 1) == 0) {
        local_c = 0xbdf1;
        fun_2b26_05ce();
    }
    local_c = 0xbdff;
    fun_2b26_0402();
    local_c = 0xbe06;
    fun_294b_01af();
    u_var2 = 0xc892;
    pcVar1 = *(code * *)
    0xa436;
    local_12 = 0xa438;
    if ((local_12 | pcVar1) != 0) {
        local_c = 0xbe24;
        (*pcVar1)();
    }
    local_c = 0x294b;
    local_e = 0xbe4c;
    fun_2b26_0945();
    local_c = 0xbe5b;
    fun_2b26_0363();
    return;
}


fn fun_2b26_0c02(param_1_00: u16, int *param_1, param_2: u16, param_3: i16)

{
    let pi_var1: *mut u16;
    let pcVar2: *mut Code;
    let u_var3: u16;
    let pi_var4: *mut u16;
    let unaff_ds: u16;
    let u_var5: u32;
    let local_3a: *mut u16;
    let local_34: u16;
    let local_32: *mut Code;
    let local_30: u16;
    let local_2e: *mut u16;
    let local_2c: u16;
    let local_2a: *mut Code;
    let local_28: u16;
    let local_1e: i16;
    let local_1c: i16;
    let local_1a: i16;
    let local_18: i16;
    let local_16: i16;
    let local_14: i16;
    let local_12: i16;
    let local_10: i16;
    let local_e: u16;
    let local_c: i16;
    let i_var6: i16;

    fun_3444_02c6(0x39d9);
    if (0x992c != -0x8000) {
        local_e = 0x9820;
        local_c = 0xbe96;
        fun_27ac_0287();
        u_var3 = 0xc88c;
        local_2a = *(code * *)
        0xa43a;
        local_28 = 0xa43c;
        if ((local_28 | local_2a) != 0) {
            (*local_2a)();
        }
        fun_2d56_032c();
        local_c = -0x4143;
        fun_2b26_0402();
        local_1e = *param_1;
        local_1c = param_1[1];
        local_1a = param_1[2];
        local_18 = param_1[3];
        local_c = local_c * 0x1d;
        local_2e = (local_c + 0x805);
        local_2c = 0xc88a;
        local_16 = *local_2e;
        local_14 = (local_c + 0x807);
        local_12 = (local_c + 0x809);
        local_10 = (local_c + 0x80b);
        local_c = 0xbf13;
        fun_294b_0289();
        local_c = 0x294b;
        local_e = 0xbf1e;
        u_var5 = FUN_2b26_0008();
        u_var3 = (undefined2)(u_var5 >> 0x10);
        i_var6 = u_var5;
        pi_var1 = (i_var6 + 0x14);
        *pi_var1 = *pi_var1 + (local_1e - local_16);
        pi_var1 = (i_var6 + 0x16);
        *pi_var1 = *pi_var1 + (local_1c - local_14);
        pi_var1 = (i_var6 + 0x18);
        *pi_var1 = *pi_var1 + (local_1a - local_12);
        pi_var1 = (i_var6 + 0x1a);
        *pi_var1 = *pi_var1 + (local_18 - local_10);
        local_c = 0xbf58;
        fun_2b26_00d1();
        local_c = 0xbf61;
        fun_294b_0219();
        if (param_3 == 0) {
            u_var3 = 0xc896;
            pcVar2 = *(code * *)
            0xa432;
            local_34 = 0xa434;
            if ((local_34 | pcVar2) != 0) {
                local_c = 0xbfa4;
                (*pcVar2)();
            }
        } else {
            u_var3 = 0xc894;
            local_32 = *(code * *)
            0xa42e;
            local_30 = 0xa430;
            if ((local_30 | local_32) != 0) {
                local_c = 0xbf85;
                (*local_32)();
            }
        }
        local_1e = *local_2e;
        local_1c = local_2e[1];
        local_12 = local_12 + -1;
        local_10 = local_10 + -1;
        local_1a = local_2e[2] + -1;
        local_18 = local_2e[3] + -1;
        fun_294b_03ad();
        local_c = 0x294b;
        local_e = 0xbfd7;
        fun_294b_077b();
        local_c = 0x294b;
        local_e = 0xbfe3;
        fun_294b_08c8();
        i_var6 = 1;
        while (pi_var4 = (i_var6 * 2 + -0x66d4), u_var3 = 0xc890,
               local_3a = CONCAT22(u_var3, pi_var4), *pi_var4 != -0x8000) {
            local_c = *local_3a;
            local_e = 0x294b;
            local_10 = -0x4005;
            fun_2b26_072d();
            local_c = 0x294b;
            local_e = 0xc008;
            fun_294b_08c8();
            i_var6 = i_var6 + 1;
        }
        fun_1ba9_131c();
        local_c = 0xc034;
        fun_294b_02f2();
        local_c = 0xc03c;
        fun_2b26_048e();
        local_c = 0xc044;
        fun_2b26_0363();
        i_var6 = 1;
        while ((i_var6 * 2 + -0x66d4) != -0x8000) {
            local_c = 0xc055;
            fun_294b_02f2();
            local_c = 0x294b;
            local_e = 0xc060;
            fun_294b_077b();
            local_c = 0xc06c;
            fun_2b26_048e();
            i_var6 = i_var6 + 1;
        }
        FUN_2d56_03f0();
        local_c = 0xc094;
        fun_27ac_0287();
    }
    return;
}


fn fun_2b26_0e3b(param_1_00: u16, param_1: u16, undefined2 *param_3)

{
    let i_var1: i16;
    let u_var2: u16;
    let i_var3: i16;
    let u_var4: u16;
    let u_var5: u32;

    fun_3444_02c6(0x39d9);
    u_var5 = FUN_2b26_0008(0x3444, param_1._1_1_, param_1);
    u_var2 = (undefined2)(u_var5 >> 0x10);
    i_var1 = u_var5;
    u_var4 = (undefined2)(param_3 >> 0x10);
    i_var3 = param_3;
    *param_3 = (i_var1 + 4);
    (i_var3 + 2) = (i_var1 + 6);
    (i_var3 + 4) = (i_var1 + 8);
    (i_var3 + 6) = (i_var1 + 10);
    return;
}


fn fun_2b26_0e73(param_1_00: u16, byte param_1, param_3: i16, param_4: i16, param_5: u16)

{
    let i_var1: i16;
    let u_var2: u16;
    let u_var3: u32;
    let local_a: u16;

    fun_3444_02c6(0x39d9);
    local_a = param_1;
    u_var3 = FUN_2b26_0008(0x3444);
    u_var2 = (undefined2)(u_var3 >> 0x10);
    i_var1 = u_var3;
    if (param_3 == 0) {
        if ((i_var1 + 0x24) <= param_4) {
            return;
        }
    } else {
        if ((i_var1 + 0x25) <= param_4) {
            return;
        }
        local_a = (i_var1 + 0x24) + 1;
    }
    (i_var1 + (local_a + param_4) * 2 + 0x24) = param_5;
    return;
}


fn fun_2b26_0edc(param_1_00: u16, param_1: u16, param_3: i16, param_4: i16, param_5: i16)

{
    let pu_var1: *mut u16;
    let i_var2: i16;
    let u_var3: u16;
    let u_var4: u32;

    fun_3444_02c6(0x39d9);
    u_var4 = FUN_2b26_0008(0x3444, param_1._1_1_, param_1);
    u_var3 = (undefined2)(u_var4 >> 0x10);
    i_var2 = u_var4;
    if (param_3 != -1) {
        pu_var1 = (i_var2 + 2);
        *pu_var1 = *pu_var1 ^ ((*(i_var2 + 3) ^ ((param_3 << 10) >> 8)) & 4) << 8;
    }
    if (param_4 != -1) {
        pu_var1 = (i_var2 + 2);
        *pu_var1 = *pu_var1 ^ (*(i_var2 + 2) ^ param_4) & 1;
    }
    if (param_5 != -1) {
        pu_var1 = (i_var2 + 2);
        *pu_var1 = *pu_var1 ^ (*(i_var2 + 2) ^ (param_5 << 1)) & 2;
    }
    return;
}


fn fun_2b26_0f55(param_1_00: u16, param_1: i16, param_2: i16, param_3: i16, param_4: i16)

{
    let pu_var1: *mut u16;
    let pi_var2: *mut u16;
    let i_var3: i16;
    let u_var4: u16;
    let i_var5: i16;
    let i_var6: i16;
    let unaff_ds: u16;
    let u_var7: u32;
    let local_8: i16;

    fun_3444_02c6(0x39d9);
    for (iVar5 = 0; piVar2 = 0x6182, *piVar2 != iVar5 &&i_var5 < = * piVar2; iVar5 = iVar5 + 1) {
        i_var3 = 0;
        local_8 = **(int * *)(i_var5 * 0x1d + 0x800);
        while (i_var6 = i_var3, i_var6 < local_8) {
            u_var7 = FUN_2b26_0008(0x3444);
            u_var4 = (undefined2)(u_var7 >> 0x10);
            i_var3 = u_var7;
            if ((i_var3 + 0x22) == param_1) {
                if (param_2 != -1) {
                    pu_var1 = (i_var3 + 2);
                    *pu_var1 = *pu_var1 ^ ((*(i_var3 + 3) ^ ((param_2 << 10) >> 8)) & 4
                    ) << 8;
                }
                if (param_3 != -1) {
                    pu_var1 = (i_var3 + 2);
                    *pu_var1 = *pu_var1 ^ (*(i_var3 + 2) ^ param_3) & 1;
                }
                if (param_4 != -1) {
                    pu_var1 = (i_var3 + 2);
                    *pu_var1 = *pu_var1 ^ (*(i_var3 + 2) ^ (param_4 << 1)) & 2;
                }
            }
            local_8 = i_var6;
            i_var3 = i_var6 + 1;
        }
    }
    return;
}


fn fun_2b26_100d()

{
    let pb_var1: *mut u8;
    let pi_var2: *mut u16;
    let pcVar3: *mut Code;
    let u_var4: u16;
    let i_var5: i16;
    let u_var6: u16;
    let i_var7: i16;
    let u_var8: u16;
    let unaff_ds: u16;
    let u_var9: u32;
    let pu_var10: *mut u16;
    let local_34: u16;
    let local_32: *mut u16;
    let local_2e: *mut u16;
    let local_2a: *mut u16;
    let local_26: *mut u16;
    let local_22: i16;
    let local_20: *mut Code;
    let local_1e: u16;
    let local_1c: u16;
    let local_1a: u16;
    let local_18: u16;
    let local_16: u16;
    let local_14: u16;
    let local_12: i16;
    let local_10: u16;
    let local_e: i16;
    let local_c: i16;

    fun_3444_02c6(0x39d9);
    _local_c = CONCAT22(0xc27f, local_c);
    fun_2f42_0097();
    if ((*(0x992c * 0x1d + 0x804) & 2) == 0) {
        u_var8 = 0xc88c;
        local_20 = *(code * *)
        0xa43a;
        local_1e = 0xa43c;
        if ((local_1e | local_20) != 0) {
            _local_c = CONCAT22(0xc2ba, local_c);
            (*local_20)();
        }
        local_22 = 0x2f42;
        _local_c = CONCAT22(0xc2bf, local_c);
        fun_2d56_032c();
        _local_c = 0x2d56c2c6;
        fun_2b26_0402();
        local_22 = local_22 * 0x1d;
        if ((*(local_22 + 0x804) & 1) == 0) {
            _local_c = 0x2d56c2e5;
            fun_2b26_00d1();
        }
        u_var8 = 0xc88a;
        local_26 = CONCAT22(u_var8, (local_22 + 0x805));
        local_1c = (local_22 + 0x805);
        local_2a = CONCAT22(u_var8, (local_22 + 0x807));
        local_1a = (local_22 + 0x807);
        local_2e = CONCAT22(u_var8, (local_22 + 0x809));
        local_18 = (local_22 + 0x809);
        local_32 = CONCAT22(u_var8, (local_22 + 0x80b));
        local_16 = (local_22 + 0x80b);
        _local_c = 0x2d56;
        local_e = 0xc340;
        u_var9 = FUN_2b26_0008();
        u_var6 = (undefined2)(u_var9 >> 0x10);
        i_var7 = u_var9;
        u_var8 = 0xc88a;
        pb_var1 = (local_22 + 0x804);
        *pb_var1 = *pb_var1 | 2;
        (local_22 + 0x815) = (i_var7 + 0x14);
        (local_22 + 0x817) = (i_var7 + 0x16);
        (local_22 + 0x819) = (i_var7 + 0x18);
        (local_22 + 0x81b) = (i_var7 + 0x1a);
        u_var4 = (i_var7 + 0x26);
        local_14 = u_var4 & 0xff;
        local_12 = (u_var4 >> 8);
        if (0x9c65 == '\x06') {
            local_e = 1;
            local_10 = 1;
        } else {
            local_10 = local_14;
            if (1 < local_14) {
                local_10 = 8;
            }
            local_e = 2;
        }
        local_c = -0x3c4e;
        u_var8 = 0x2d56;
        fun_294b_0289();
        i_var7 = *local_26 - *local_26 % local_10;
        pi_var2 = (local_c + 0x14);
        *pi_var2 = *pi_var2 - i_var7;
        if (0 < (local_c + 0x14)) {
            i_var7 = i_var7 + local_10;
            pi_var2 = (local_c + 0x14);
            *pi_var2 = *pi_var2 - local_10;
        }
        if ((local_c + 0x14) < -1) {
            i_var7 = i_var7 - local_10;
            pi_var2 = (local_c + 0x14);
            *pi_var2 = *pi_var2 + local_10;
        }
        i_var5 = -((0x7fd4 * 3) / 2 - *local_2a);
        i_var5 = i_var5 - i_var5 % local_e;
        pi_var2 = (local_c + 0x16);
        *pi_var2 = *pi_var2 - i_var5;
        pi_var2 = (local_c + 0x18);
        *pi_var2 = *pi_var2 + ((i_var7 - ((i_var7 - *local_2e) + 0x7faa) % local_14) - *local_2e) + 0x7faa;
        pi_var2 = (local_c + 0x1a);
        *pi_var2 = *pi_var2 + ((i_var5 - ((i_var5 - *local_32) + 0x7fac) % local_12) - *local_32) + 0x7fac;
        if (((local_c + 0x14) + (local_c + 0x18) + local_14) <= 0x7faa + 1) {
            pi_var2 = (local_c + 0x18);
            *pi_var2 = *pi_var2 + local_14;
        }
        _local_c = 0x294bc483;
        fun_2b26_00d1();
        _local_c = 0x294bc48c;
        fun_294b_0219();
        u_var8 = 0xc896;
        pcVar3 = *(code * *)
        0xa432;
        local_34 = 0xa434;
        if ((local_34 | pcVar3) != 0) {
            _local_c = 0x294bc4aa;
            (*pcVar3)();
        }
        _local_c = CONCAT22(0xc4b0, local_c);
        fun_294b_03ad();
        _local_c = 0x294bc4b7;
        pu_var10 = fun_2b26_06d4();
        u_var8 = (undefined2)(pu_var10 >> 0x10);
        i_var7 = pu_var10;
        local_1c = *pu_var10;
        local_1a = (i_var7 + 2);
        local_18 = (i_var7 + 4);
        local_16 = (i_var7 + 6);
        _local_c = CONCAT22(&local_1c, 0x294b);
        local_e = 0xc4d0;
        fun_294b_08c8();
        _local_c = CONCAT22(0xc4d7, local_c);
        fun_1ba9_131c();
        i_var7 = 1;
        u_var8 = 0x1ba9;
        while ((i_var7 * 2 + -0x66d4) != -0x8000) {
            _local_c = CONCAT22(u_var8, 0xc4e9);
            fun_294b_02f2();
            _local_c = 0x294bc4f4;
            fun_2b26_048e();
            i_var7 = i_var7 + 1;
            u_var8 = 0x294b;
        }
        _local_c = CONCAT22(0xc517, local_c);
        FUN_2d56_03f0();
        _local_c = 0x2d56c51e;
        fun_2b26_0363();
        _local_c = 0x2d56c526;
        fun_2b26_08ec();
    }
    return;
}


fn fun_2b26_12cd()

{
    let pb_var1: *mut u8;
    let pcVar2: *mut Code;
    let i_var3: i16;
    let i_var4: i16;
    let u_var5: u16;
    let unaff_ds: u16;
    let u_var6: u32;
    let local_1a: u16;
    let local_18: *mut Code;
    let local_16: u16;
    let local_14: u16;
    let u_stack_y18: u16;
    let u_stack_y16: u16;
    let u_stack_y14: u16;

    fun_3444_02c6(0x39d9);
    fun_2f42_0097();
    i_var3 = 0x992c;
    if ((*(i_var3 * 0x1d + 0x804) & 2) != 0) {
        u_var5 = 0xc88c;
        local_18 = *(code * *)
        0xa43a;
        local_16 = 0xa43c;
        if ((local_16 | local_18) != 0) {
            (*local_18)();
        }
        fun_2d56_032c();
        fun_2b26_0402();
        i_var3 = i_var3 * 0x1d;
        local_14 = (i_var3 + 0x805);
        u_stack_y18 = (i_var3 + 0x807);
        u_stack_y16 = (i_var3 + 0x809);
        u_stack_y14 = 0xc5b2;
        u_var6 = FUN_2b26_0008();
        u_var5 = (undefined2)(u_var6 >> 0x10);
        i_var4 = u_var6;
        pb_var1 = (i_var3 + 0x804);
        *pb_var1 = *pb_var1 & 0xfd;
        (i_var4 + 0x14) = (i_var3 + 0x815);
        (i_var4 + 0x16) = (i_var3 + 0x817);
        (i_var4 + 0x18) = (i_var3 + 0x819);
        (i_var4 + 0x1a) = (i_var3 + 0x81b);
        fun_2b26_00d1();
        fun_294b_0289();
        fun_294b_0219();
        u_var5 = 0xc896;
        pcVar2 = *(code * *)
        0xa432;
        local_1a = 0xa434;
        if ((local_1a | pcVar2) != 0) {
            (*pcVar2)();
        }
        fun_2b26_0363();
        u_stack_y14 = 0xc625;
        fun_2b26_0945();
        FUN_2d56_03f0();
    }
    return;
}


fn fun_2c63_0002()

{
    char
    cVar1;
    code * *ppcVar2;
    sbyte
    sVar3;
    let unaff_ds: u16;
    let in_stack_0000000c: i16;
    let in_stack_0000000e: i16;
    let local_a: u16;
    let local_8: *mut u16;

    fun_3444_02c6(0x39d9);
    cVar1 = 0x9c65;
    if (((cVar1 == '\x01') || (cVar1 == '\x03')) || (cVar1 == '\x05')) {
// LAB_2c63_0022:
        sVar3 = 4;
    } else {
        if (cVar1 != '\x06') {
            if (cVar1 != '\a')
            goto
            LAB_2c63_002e;
            goto
            LAB_2c63_0022;
        }
        sVar3 = 8;
    }
    in_stack_0000000c = in_stack_0000000c << sVar3;
    in_stack_0000000e = in_stack_0000000e << sVar3;
// LAB_2c63_002e:
    if (in_stack_0000000e == in_stack_0000000c) {
        local_8 = &local_a;
        local_a = 0x3444;
        fun_27ac_076d();
    } else {
        local_8 = in_stack_0000000c;
        local_a = 0x3444;
        ppcVar2 = (code * *)
        0xcf68;
        (**ppcVar2)();
        local_8 = 0x3444;
        local_a = 0xc69b;
        fun_27ac_0469();
    }
    return;
}



void FUN_2c63_007e(param_1_00: u16,param_1: i16,param_2: i16,param_3: i16,param_4: i16,param_5: i16
,param_6: u16,param_7: u16)

{
FUN_3444_02c6(0x39d9); if (0 < param_5) {
FUN_2c63_0002(0x3444, param_1, param_2, param_3,param_5 + param_2, param_6, param_7); FUN_2c63_0002(0x3444, param_1, param_2, param_5 + param_1, param_4, param_6, param_7); FUN_2c63_0002(0x3444, param_1, param_4 - param_5, param_3,param_4, param_6, param_7); FUN_2c63_0002(0x3444, param_3 - param_5, param_2, param_3, param_4, param_6, param_7);
}
return;
}



fn fun_2c63_0100(param_1_00: u16, uparam_1: i16, uparam_2: i16)

{
    char
    cVar1;
    code * *ppcVar2;
    let unaff_ds: u16;
    let u_var3: u16;
    let u_var4: u16;
    let u_var5: u16;

    fun_3444_02c6(0x39d9);
    cVar1 = 0x9c65;
    if ((((cVar1 == '\x01') || (cVar1 == '\x03')) || (cVar1 == '\x05')) || (cVar1 == '\a')) {
        u_var5 = 0;
        if ((param_1 & 0xf) == 0xf) {
            u_var5 = 0xc0;
        } else {
            if ((param_1 & 4) == 0) {
                u_var5 = 0x80;
            }
            if ((param_2 & param_1) != 0) {
                u_var5 = u_var5 | 0x40;
            }
        }
        u_var4 = 0;
        u_var3 = 0;
    } else {
        u_var5 = 0x40;
        u_var4 = param_2 & 0xf | param_2 << 8;
        u_var3 = param_1 & 0xf | param_1 << 8;
    }
    ppcVar2 = (code * *)
    0xcf68;
    (**ppcVar2)(0x3444, u_var3, u_var4, u_var5);
    return;
}



undefined4 FUN_2c63_0168(param_1_00: u16,char *param_1)

{
code * * ppcVar1; let iVar2: i16;
let iVar3: i16; let unaff_DS: u16;

FUN_3444_02c6(0x39d9); iVar3 = param_1; if ( * param_1 == '}') {
ppcVar1 = (code * * )0xcf6c; (* * ppcVar1)(0x3444); iVar3 = iVar3 + 1;
}
iVar3 = FUN_3444_178e(0x3444, iVar3, (param_1 >> 0x10)); iVar3 = iVar3 * 0x7fd6; iVar2 = 0x7fd4; if ( * param_1 == '}') {
iVar2 = 0x3444; iVar3 = - 0x3819; ppcVar1 = (code * * )0xcf70; ( ** ppcVar1)();
}
return CONCAT22(iVar2, iVar3);
}



void FUN_2c63_01c1(param_1_00: u16,param_1: u16,param_2: u16,char *param_3,
param_4: u16,param_5: u16,param_6: u16,param_7: u16,
param_8: u16,param_9: u16)

{
code * * ppcVar1; let iVar2: i16;
let unaff_DS: u16;

FUN_3444_02c6(0x39d9);
iVar2 = param_3; if ( * param_3 == '}') {
ppcVar1 = (code * * )0xcf6c; (* * ppcVar1)(0x3444); iVar2 = iVar2 + 1;
}
FUN_27ac_0508(0x3444, param_1, param_2, iVar2,(param_3 >> 0x10), param_4, param_5, param_6,
param_7, param_8, param_9);
if ( * param_3 == '}') {
ppcVar1 = (code * * )0xcf70; (* * ppcVar1)(0x27ac);
}
return;
}



fn fun_2c63_0228(param_1_00: u16, param_1: u16, param_2: i16, param_3: i16, param_4: i16)

{
    code * *ppcVar1;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    param_3 = param_3 + -1;
    ppcVar1 = (code * *)
    0xcf7c;
    (**ppcVar1)(0x3444, param_1, param_2, param_3, param_2);
    ppcVar1 = (code * *)
    0xcf7c;
    (**ppcVar1)(0x3444, param_1, param_4 + -1, param_3, param_4 + -1);
    param_2 = param_2 + 1;
    ppcVar1 = (code * *)
    0xcf7c;
    (**ppcVar1)(0x3444, param_1, param_2, param_1, param_4 + -2);
    ppcVar1 = (code * *)
    0xcf7c;
    (**ppcVar1)(0x3444, param_3, param_2, param_3, param_4 + -2);
    return;
}



void FUN_2c63_028d(param_1_00: u16,param_1: u16,param_2: u16,param_3: i16,
param_4: i16)

{
code * * ppcVar1; let unaff_DS: u16;

FUN_3444_02c6(0x39d9); ppcVar1 = (code ** )0xcf7c; ( * * ppcVar1)(0x3444, param_1, param_2, param_3 + - 1, param_4 + - 1); return;
}



void FUN_2c63_02af(param_1_00: u16,param_1: i16,param_2: i16,param_3: i16,param_4: i16,
param_5: u16,param_6: u16,param_7: u16,param_8: u16)

{
FUN_3444_02c6(0x39d9); if ((param_1 < param_3) & & (param_2 < param_4)) {
FUN_2c63_007e(0x3444, param_1, param_2, param_3,param_4, 1, param_5, param_6); if ((param_1 + 2 < param_3) & & (param_2 + 2 < param_4)) {
FUN_2c63_0002(0x3444, param_1 + 1, param_2 + 1, param_3 + - 1, param_4 + -1, param_7, param_8);
}
}
return;
}



fn fun_2c63_031b(param_1_00: u16, param_1: u16, param_2: i16, param_3: i16, param_4: i16)

{
    let pi_var1: *mut u16;
    let unaff_ds: u16;
    char * *ppcVar2;
    let u_var3: u16;

    fun_3444_02c6(0x39d9);
    ppcVar2 = (char * *)
    FUN_3074_00d3(0x3444, param_1, 2);
    u_var3 = (undefined2)(ppcVar2 >> 0x10);
    pi_var1 = ppcVar2;
    if (ppcVar2 == (char * *)
    0x0) {
    fun_2c63_0002(0x3074, param_2, param_3, param_2 + 10, param_3 + 10, 0xc, 4);
}
    else {
    if (param_4 != 0) {
        param_2 = param_2 - (*ppcVar2 + 3);
    }
    if (param_4 == 1) {
        param_3 = param_3 - (*ppcVar2 + 5);
    }
    if ((**ppcVar2 == '\x01') && ((*0x9c65 & 1) == 0)) {
        fun_2c63_0100(0x3074, 0xf, 0);
        fun_2692_0042(0x3074, param_2, param_3, *pi_var1 + 3, pi_var1[1]);
    } else {
        fun_2692_001f(0x3074, param_2, param_3, ppcVar2 + 3, pi_var1[1]);
    }
    fun_3074_02f7(0x2692, param_1, 2);
}
    return;
}



void FUN_2c63_03f8(param_1_00: u16,param_1: i16,param_2: i16,param_3: i16,char *param_4,
param_5: u16,param_6: i16)

{
let iVar1: i16; let iVar2: i16;
let iVar3: i16; let unaff_SS: u16;
let unaff_DS: u16; undefined local_6c [88]; let uStackY20: u16; let local_12: i16; let local_10: i16; undefined * local_e;
let local_a: i16; let local_8: i16;

FUN_3444_02c6(0x39d9); if (( * param_4 == '\0') || (param_3 < 3)) {
local_a = param_1; iVar2 = 0x7fd6 * param_3 + param_1; local_8 = param_2; iVar3 = 0x7fd4 + param_2; if (param_1 < 0) {
local_a = 0;
}
iVar1 = 0x7faa; if (iVar1 < iVar2) {
iVar2 = iVar1;
}
if (param_2 < 0) {
local_8 = 0;
}
iVar1 = 0x7fac; if (iVar1 < iVar3) {
iVar3 = iVar1;
}
if (iVar3 < = local_8) {
return;
}
if (iVar2 < = local_a) {
return;
}
local_e = (undefined * )param_6;
}
else {
local_e = local_6c + 1; local_10 = 0x3444;
local_12 = 0xca5e; FUN_3444_17a6(); local_6c[0] = 0x20; local_6c[param_3] = 0; FUN_2c63_0100(); local_e = (undefined * )0x3444; local_10 = 0xca96; FUN_2692_0ecc(); iVar2 = FUN_3444_178e(); if (param_3 - iVar2 == 0) {
return;
}
iVar3 = FUN_3444_178e(); local_12 = iVar3 * 0x7fd6 + param_1; local_e = (undefined * )(local_12 + 0x7fd6 * (param_3 - iVar2)); local_10 = param_2; iVar2 = 0x7fd4 + param_2; if (local_12 < 0) {
local_12 = 0;
}
iVar3 = 0x7faa; if (iVar3 < local_e) {
local_e = (undefined * )iVar3;
}
if (param_2 < 0) {
local_10 = 0;
}
if (0x7fac < iVar2) {
iVar2 = 0x7fac;
}
if (iVar2 < = local_10) {
return;
}
if (local_e < = local_12) {
return;
}
local_e = (undefined * )local_10; local_a = local_12;
}
local_12 = 0x3444; uStackY20 = 0xcbb7; local_10 = local_a; FUN_2c63_0002(); return;
}


// WARNING: Instruction at (ram,0x0002bc02) overlaps instruction at (ram,0x0002bc01)
//
// WARNING: Could not reconcile some variable overlaps

uint FUN_2c63_058f(param_1: u16,undefined4 param_2_00,undefined param_2,undefined param_3,
uparam_4: i16,uparam_5: i16)

{
let puVar1: * mut u16; let pcVar2: String; let piVar3: * mut u16; let    uVar4: u16; code * * ppcVar5; char cVar6; let uVar7: u16; let piVar8: * mut u16; let iVar9: i16; let extraout_DX: u16; let uVar10: u16; let puVar11: * mut u16; let puVar12: *mut u16; let unaff_SI: u16; let unaff_DI: u16; let uVar13: u16; let unaff_SS: u16; let unaff_DS: u16; let piStackY226: * mut u16; let piStackY222: * mut u16; int aiStackY127 [30]; undefined *puStackY66; let local_40: i16; let iStackY58: i16; let local_24: u16; let local_22: u16; let local_20: u32; let local_1c: u16; let local_1a: u16; let local_18: u16; let local_16: u16; undefined local_14 [4]; let local_10: u16; let local_e: u16; let iVar14: i16; let iVar15: i16;

puVar12 = & stack0xfffe; FUN_3444_02c6(0x39d9); local_18 = (param_2_00 >> 0x10); uVar10 = param_2_00; uVar7 = SEXT12((uVar10 + 0x21)); if (8 < uVar7) {
if (( * (uVar10 + 3) & 4) != 0) {
_local_e = CONCAT22((uVar10 + 6),(uVar10 + 4)); local_10 = 0x3444; local_14 = CONCAT22(0xd55b, local_14._0_2_); uVar7 = FUN_2c63_028d();
}
return uVar7;
}
piVar8 = (uVar7 * 2); local_20._2_2_ = unaff_SI; switch(uVar7) {
case 1: piVar3 = (aiStackY127 + unaff_DI); * piVar3 = * piVar3 + 1; for (iVar9 = 0; iVar9 < 5; iVar9 = iVar9 + 1) {
if (unaff_DI == 0) {
(iVar9 * 2 + - 0x139f) = 0;
}
else {
uVar10 = ((iVar9 * 2 + - 0x23) * 1000) / unaff_DI; (iVar9 * 2 + - 0x139f) = uVar10;
}
}
return uVar10; case 2: pcVar2 = (char * )(unaff_SI + 0x34); * pcVar2 = * pcVar2 + param_2_00; return uVar10; case 3: pcVar2 = (char * )(piVar8 + unaff_SI + 6); * pcVar2 = *pcVar2 + (piVar8 >> 8); _local_e = CONCAT22(0x7119, local_40); local_10 = 0x5ddc; local_14 = 0x20002c15; FUN_27ac_0508();
iStackY58 = 0x7fd6 * 3 + 0x5ddc; _local_e = CONCAT22(iStackY58, 0x27ac); local_10 = 0x2c50; FUN_168b_04c4(); _local_e = CONCAT22(local_40, 0x138a + iStackY58); local_10 = 0x168b;
local_14 = CONCAT22(0x2c6c, local_14._0_2_); FUN_2692_0ecc(); _local_e = 0x26922c8f; FUN_2692_00b2(); 0xccd6 = 0x36 + 0x2e; local_40 = local_40 + 0x5de4; if ((0x38 + 0x32 != 0xcce0) || (0x7046 != '\0')) {
ppcVar5 = (code * * )0xcf74; (* * ppcVar5)(); if (0x38 != 0) {
FUN_27ac_0508(); iStackY58 = 0x7fd6 * 3 + 0x5ddc; FUN_168b_04c4(); FUN_2692_0ecc();
FUN_2692_00b2();
}
0xcce0 = 0x38 + 0x32;
}
iVar9 = 0x5de4; local_40 = local_40 + iVar9 + iVar9 / 2; uVar13 = 0xc7c2; if (((0x5fc != 0xccdc) || (0x5fe != 0xccde)) || (0x7046 != '\0')) {
uVar13 = 0xc7d4; if (0x30 == 0) {
local_10 = 0x10;
}
else {
local_10 = 0x30 + 0x30;
}
FUN_3444_1aca(); FUN_2239_12bf(); uVar13 = 0xc7c2; uVar4 = 0x5fe; 0xccdc = 0x5fc;
0xccde = uVar4;
}
local_10 = (0x6b5 / 0xfcf1) / 2 + 0x81; if (0x83 < local_10) {
local_10 = 0x83;
}
local_40 = local_40 + 0x5de4; if ((0xcccc != local_10) || (0x7046 != '\0')) {
FUN_2239_12bf(); 0xcccc = local_10;
}
uVar13 = 0xc7d6; if (0x6b7 < - 0x46) {
local_10 = 0x81;
}
else {
if (0x6b7 == 0) {
local_10 = 0x83;
}
else {
local_10 = 0x82;
}
}
local_40 = local_40 + 0x5de4; if ((0xccd2 != local_10) || (uVar10 = local_10, 0x7046 != '\0')) {
FUN_2239_12bf(); 0xccd2 = local_10; uVar10 = local_10;
}
goto LAB_2239_1257; case 4: pcVar2 = (char * )(piVar8 + (unaff_SI - 0x3c)); * pcVar2 = * pcVar2 + extraout_DX;
loop {
// WARNING: Do nothing block with infinite loop
} while ( true ); case 5: loop {
iVar15 = 0x2000; iVar9 = 0x4491; FUN_23e0_04d1(); uVar10 = local_20._2_2_; loop {
uVar7 = param_5; if ((local_20 < = param_5) & & (uVar7 = param_4, param_4 < = local_20)) {
iVar15 = 0x2000; iVar9 = 0x44b4; uVar7 = FUN_23e0_04d1(); uVar10 = local_20;
}
if (uVar10 < = unaff_DI) {
return uVar7;
}
iVar14 = (_local_e >> 0x10); if (iVar15 < 0) {
_local_e = _local_e & 0xffff | (iVar14 + 8) << 0x10; iVar14 = iVar9;
}
else {
_local_e = _local_e & 0xffff | (iVar14 + 0x10) << 0x10; uVar10 = uVar10 - 1;
}
iVar15 = iVar15 + iVar14; iVar9 = iVar9 + 8; unaff_DI = unaff_DI + 1; uVar7 = unaff_SI + unaff_DI; local_20 = (local_20 & 0xffff | uVar7 << 0x10); if ((uVar7 < = param_5) & & (param_4 <= uVar7)) {
iVar15 = 0x2000; iVar9 = 0x43ae; FUN_23e0_04d1(); uVar10 = uVar7;
}
uVar7 = uVar10 + unaff_SI; local_20 = (local_20 & 0xffff0000 | uVar7); if ((uVar7 < = param_5) & & (param_4 < = uVar7)) {
iVar15 = 0x2000; iVar9 = 0x43d6; FUN_23e0_04d1(); uVar10 = uVar7;
}
local_22 = unaff_SI - unaff_DI; if ((local_22 < = param_5) & & (param_4 < = local_22)) {
iVar15 = 0x2000; iVar9 = 0x43fe; uVar10 = local_22; FUN_23e0_04d1();
}
local_24 = unaff_SI - uVar10; if ((local_24 < = param_5) & & (param_4 < = local_24)) {
iVar15 = 0x2000; iVar9 = 0x4426; uVar10 = local_24; FUN_23e0_04d1();
}
if ((local_22 < = param_5) & & (param_4 < = local_22)) {
iVar15 = 0x2000; iVar9 = 0x444a; uVar10 = local_22; FUN_23e0_04d1();
}
if ((local_24 < = param_5) & & (param_4 < = local_24)) {
iVar15 = 0x2000; iVar9 = 0x446d; uVar10 = local_24; FUN_23e0_04d1();
}
} while ((param_5 < local_20._2_2_) || (local_20._2_2_ < param_4));
} while ( true ); case 6: puVar11 = & stack0xfff6; cVar6 = '\x1b'; loop {
puVar12 = puVar12 + - 1; puVar11 = puVar11 + - 1; * puVar11 = * puVar12;
cVar6 = cVar6 + - 1;
} while ('\0' < cVar6); while (_local_e = _local_e & 0xffff | local_18 << 0x10, * piVar8 != - 0x8000) {
puStackY66 = & stack0xfff6; FUN_294b_02f2(); FUN_294b_077b(); FUN_2b26_048e(); unaff_SI = unaff_SI + 1; piVar8 = (unaff_SI * 2 + - 0x66d4); local_18 = 0xc890; _local_e = ZEXT24(piVar8);
}
puStackY66 = & stack0xfff6; FUN_294b_03be(); uVar10 = FUN_2d56_03f0(); return uVar10; case 7: if ((extraout_DX | uVar10) != 0) {
_local_e = 0xa5602000;
// WARNING: Subroutine does not return
local_10 = 6; FUN_2a60_08cb();
}
local_16 = CONCAT11(param_3, param_2); local_1c = param_4; local_1a = param_5; piVar3 = (local_22 + 0x61fe); * piVar3 = * piVar3 + 1; _local_e = 0x20000049; local_14 = FUN_3143_1720(); if (local_14 != 0x0) {
if ((local_22 + 0x61fe) == 1) {
if ((local_e | unaff_DI) != 0) {
_local_e = CONCAT22(unaff_DI, 0x3143); local_10 = 0x80; FUN_3143_1850();
}
uVar13 = (undefined2)(local_14 >> 0x10); iVar9 = local_14; * local_14 = local_1c; (iVar9 + 2) = local_1a; (iVar9 + 4) = local_18; (iVar9 + 6) = local_16;
}
else {
_local_e = CONCAT22((local_20 + 2),* local_20); local_14._0_2_ = 0x3143;
local_16 = 0xb9; unique0x100004e1 = local_14; FUN_3444_1f26(); puVar1 = (0x61a8 * 8 + local_14._0_2_); * puVar1 = local_1c; puVar1[1] = local_1a; puVar1[2] = local_18; puVar1[3] = local_16;
iVar9 = 0x61a8 * 8; _local_e = CONCAT22(local_14._2_2_, iVar9 + local_10); local_10 = local_14._2_2_; local_14 = CONCAT22(iVar9 + local_14._0_2_ + 8, 0x3444);
local_16 = 0x10b; FUN_3444_1f26(); _local_e = CONCAT22(local_10, 0x3444); local_10 = 0x119; FUN_3143_1850();
}
* local_20 = local_14._0_2_; (local_20 + 2) = local_14._2_2_; return 1;
}
_local_e = 0xa57d3143;
// WARNING: Subroutine does not return
local_10 = 0x5e; FUN_2a60_08cb(); case 8: uVar13 = 0xc6cc; piStackY226 = CONCAT22(uVar13, 0xfff5); 0xfff5 = local_e - local_16; if (0x7faa == 0x140) {
iVar9 = 8;
}
else {
iVar9 = 0x10;
}
* piStackY226 = * piStackY226 / iVar9; * piStackY222 = * piStackY222 / iVar9; uVar10 = FUN_294b_0c76(); return uVar10;
}
FUN_2239_12bf(); 0xcccc = local_10; local_40 = local_40 + 0x5de4; uVar13 = 0xc7c2; if (((0x5fc != 0xccdc) || (0x5fe != 0xccde)) || (0x7046 != '\0')) {
FUN_3444_1aca(); FUN_2239_12bf(); uVar13 = 0xc7c2; uVar4 = 0x5fe; 0xccdc = 0x5fc;
0xccde = uVar4;
}
local_40 = local_40 + 0x5de4; uVar13 = 0xc7c4;
if (0x442 == 0) {
if (0x440 != 0) {
iVar9 = 0x440; goto LAB_2239_0658;
}
uVar13 = 0xc7c6; 0x2c = 0;
}
else {
iVar9 = 0x442 + 0x10;
// LAB_2239_0658:
uVar13 = 0xc7c6;
0x2c = iVar9;
}
uVar10 = 0xccce; if ((0x2c != uVar10) || (0x7046 != '\0')) {
if (0x2c == 0) {
FUN_2239_133a();
}
else {
FUN_2239_12bf();
}
uVar10 = 0x2c; 0xccce = uVar10;
}
// LAB_2239_1257: * (undefined * )0x7046 = 0; if (0x7faa == 0x140) {
ppcVar5 = (code * * )0xcf70; uVar10 = ( * * ppcVar5)();
}
return uVar10;
}



void FUN_2d56_0004(param_1_00: u16,int *param_1,int * * param_3,param_4: i16,param_5: i16,
param_6: i16,uparam_7: i16)

{
let piVar1: * mut u16; let pbVar2: * mut u8; let iVar3: i16; let iVar4: i16; let iVar5: i16; let iVar6: i16; let iVar7: i16; let    uVar8: u16; let uVar9: u16; let unaff_SS: i16; let unaff_DS: u16; let local_22: i16; let local_20: i16; let local_1a: i16; let local_18: i16; let local_12: i16; let local_10: i16; let local_e: i16; let local_c: i16; let piVar10: * mut u16; let uVar11: u16;

uVar11 = param_7 >> 8; FUN_3444_02c6(0x39d9); param_7 = param_7 & 0xff; if ((param_4 == 0) & & (0x9c65 == '\x06')) {
param_7 = 1;
}
FUN_294b_0c6d(); FUN_294b_03ad(); uVar8 = (undefined2)(param_3 >> 0x10);
iVar7 = param_3; (iVar7 + 2) = 0; * param_3 = 0x0; local_22 = *param_1; local_20 = (param_1 + 2);
local_10 = 0x294b; local_12 = - 0x2a06; local_e = local_22; local_c = local_20; FUN_2c63_0228(); FUN_1ba9_10e7(); local_1a = local_22; local_18 = local_20; while ( true ) {
uVar9 = 0x1ba9; iVar3 = FUN_1ba9_1100();
if (iVar3 == 0) break; piVar10 = & local_12; local_c = 0x1ba9; local_e = -0x29e8; iVar3 = unaff_SS; FUN_1ba9_1038();
* param_3 = (local_12 - local_e); (iVar7 + 2) = local_10 - local_c; while( true ) {
while ( true ) {
while ( true ) {
if (param_4 == 0) {
if (0x9c65 != '\x06') {
if ((param_7 < 8) || (param_7 % 8 != 0)) {
if ( * param_3 < 1) {
* param_3 = ( * param_3 + - * param_3 % param_7);
}
else {
* param_3 = ( * param_3 - * param_3 % param_7);
}
}
else {
* param_3 = * param_3 & 0xf8;
}
pbVar2 = (iVar7 + 2); * pbVar2 = * pbVar2 & 0xfe;
}
}
else {
if ( * param_3 < 1) {
* param_3 = ( * param_3 + - * param_3 % param_7);
}
else {
* param_3 = ( * param_3 - * param_3 % param_7);
}
if ((iVar7 + 2) < 1) {
piVar1 = (iVar7 + 2); * piVar1 = * piVar1 + - (iVar7 + 2) % uVar11;
}
else {
piVar1 = (iVar7 + 2); * piVar1 = * piVar1 - (iVar7 + 2) % uVar11;
}
}
if (param_4 == 0) {
local_1a = * param_3 + * param_1; local_18 = (iVar7 + 2) + (param_1 + 2);
}
iVar4 = * param_3 + (param_1 + 4); iVar5 = (iVar7 + 2) + (param_1 + 6); if (param_4 == 0) break; if (0x7faa + local_1a + 2 < iVar4) {
* param_3 = ( * param_3 - param_7);
}
else {
if (iVar5 < = 0x7fac) goto LAB_2d56_0245;
piVar1 = (iVar7 + 2); * piVar1 = * piVar1 - uVar11;
}
}
if ((0x7fd4 * 3) / 2 <= local_18) break; if (0x9c65 == '\x06') {
piVar1 = (iVar7 + 2); * piVar1 = * piVar1 + 1;
}
else {
piVar1 = (iVar7 + 2); * piVar1 = * piVar1 + 2;
}
}
iVar6 = 0x7fd4 - 0x7fac; if ( - local_18 != iVar6 & & local_18 < = - iVar6) break; if (0x9c65 == '\x06') {
piVar1 = (iVar7 + 2); * piVar1 = * piVar1 + - 1;
}
else {
piVar1 = (iVar7 + 2); * piVar1 = * piVar1 + - 2;
}
}
// LAB_2d56_0245: if (param_4 != 0) {
if (iVar4 < param_5 + local_1a) {
* param_3 = ((param_5 + local_1a) - (param_1 + 4));
}
if (iVar5 < param_6 + local_18) {
(iVar7 + 2) = (param_6 + local_18) - (param_1 + 6);
}
}
if (( * param_3 != piVar10) || ((iVar7 + 2) != iVar3)) {
local_c = local_20; local_e = local_22; local_10 = 0x1ba9; local_12 = - 0x27e8; FUN_2c63_0228(); local_c = local_18; local_e = local_1a; local_10 = 0x2c63; local_12 = - 0x27d4; FUN_2c63_0228(); local_22 = local_1a; local_20 = local_18;
}
iVar3 = FUN_2a25_003c(); if (iVar3 != 0) {
uVar9 = 0x2a25; iVar3 = FUN_2a25_00b4();
if ((iVar3 == 10) || (iVar3 == 0xd)) break;
}
}
local_c = local_20; local_e = local_22; local_12 = - 0x2782; local_10 = uVar9; FUN_2c63_0228(); FUN_294b_0c76(); return;
}



fn fun_2d56_032c()

{
    code * *ppcVar1;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    let u_var4: u32;

    fun_3444_02c6(0x39d9);
    if (-1 < 0xa426) {
        fun_294b_0c6d(0x3444);
        fun_294b_03ad(0x294b);
        u_var4 = FUN_2b26_0008(0x294b, 0x992c, 0xa426);
        u_var3 = (undefined2)(u_var4 >> 0x10);
        i_var2 = u_var4;
        ppcVar1 = (code * *)
        0xcf7c;
        (**ppcVar1)(0x2b26, (i_var2 + 4), (i_var2 + 6),
                    (i_var2 + 8) + -1, (i_var2 + 10) + -1);
        0xa426 = 0xffff;
        fun_294b_0c76(0x2b26);
    }
    return;
}


fn fun_2d56_038c(param_1_00: u16, param_1: i16)

{
    code * *ppcVar1;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    let u_var4: u32;

    fun_3444_02c6(0x39d9);
    if (param_1 != 0xa426) {
        fun_2d56_032c(0x3444);
        0xa426 = param_1;
        fun_294b_0c6d(0x3444);
        fun_294b_03ad(0x294b);
        u_var4 = FUN_2b26_0008(0x294b, 0x992c, param_1);
        u_var3 = (undefined2)(u_var4 >> 0x10);
        i_var2 = u_var4;
        ppcVar1 = (code * *)
        0xcf7c;
        (**ppcVar1)(0x2b26, (i_var2 + 4), (i_var2 + 6),
                    (i_var2 + 8) + -1, (i_var2 + 10) + -1);
        fun_294b_0c76(0x2b26);
    }
    return;
}


/*
Unable to decompile 'FUN_2d56_03f0'
Cause: Exception while decompiling 2d56:03f0: GHIDRA/decompiler alignment error

*/


fn fun_2d56_0490(param_1_00: u16, int *param_1)

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    u_var3 = (undefined2)(param_1 >> 0x10);
    if (*param_1 < 4) {
        *param_1 = 4;
    }
    i_var2 = 0x7faa + -4;
    if (*param_1 != i_var2 && i_var2 <= *param_1) {
        *param_1 = 0x7faa + -4;
    }
    i_var2 = 0x7fac + -4;
    pi_var1 = (param_1 + 2);
    if (*pi_var1 != i_var2 && i_var2 <= *pi_var1) {
        (param_1 + 2) = 0x7fac + -4;
    }
    return;
}



fn FUN_2d56_04d6() -> i16

{
let iVar1: i16; let iVar2: i16;
let iVar3: i16; let uVar4: u16;
let iVar5: i16; let iVar6: i16;
let unaff_DS: u16; let uVar7: u32;
let local_e: i16; let iVar8: i16;
let iVar9: i16;

FUN_3444_02c6(0x39d9);
local_e = 0; iVar8 = * * (int * * )(0x992c * 0x1d + 0x800); iVar3 = 0x3444; for (iVar5 = 1; iVar5 < iVar8; iVar5 = iVar5 + 1) {
iVar6 = 0x2b26; local_e = - 0x2582; uVar7 = FUN_2b26_0008(iVar3, 0x992c, iVar5);
uVar4 = (undefined2)(uVar7 >> 0x10); iVar2 = uVar7; iVar8 = iVar3;
if (( * (iVar2 + 2) & 1) != 0) {
iVar3 = (iVar2 + 4); iVar1 = (iVar2 + 8); iVar2 = FUN_3444_200e(0x2b26, - (((iVar2 + 6) + (iVar2 + 10)) / 2 -
0xcf64)); iVar9 = 0x3444; iVar6 = 0x3444; iVar8 = - 0x253a; iVar3 = FUN_3444_200e(0x3444, - ((iVar3 + iVar1) / 2 - 0xcf62)); if (iVar2 + iVar3 < iVar9) {
local_e = iVar5;
}
}
iVar3 = iVar6;
}
return local_e;
}



fn fun_2d56_0585(param_1_00: u16, param_1: i16, param_2: i16)

{
    let i_var1: i16;
    let u_var2: u16;
    let i_var3: i16;
    let unaff_ds: u16;
    let u_var4: u32;
    let local_c: u16;
    let local_a: *mut u16;
    let i_var5: i16;

    fun_3444_02c6(0x39d9);
    i_var5 = **(int * *)(0x992c * 0x1d + 0x800);
    i_var3 = param_2 + param_1;
    local_c = 0x3444;
    while (true) {
        if (param_1 == i_var3) {
            return;
        }
        if (i_var5 == i_var3) {
            i_var3 = 1;
        } else {
            if (i_var3 == 0) {
                i_var3 = i_var5 + -1;
            }
        }
        local_a = 0x992c;
        i_var5 = i_var3;
        u_var4 = FUN_2b26_0008();
        u_var2 = (undefined2)(u_var4 >> 0x10);
        i_var1 = u_var4;
        if (((((*(i_var1 + 2) & 1) != 0) && ((i_var1 + 4) < 0x7faa + -6)) && (5 < (i_var1 + 8))) && ((i_var1 + 6) < 0x7fac + -6))
        break;
        i_var3 = i_var3 + param_2;
        local_c = 0x2b26;
    }
    local_a = &local_c;
    local_c = 0x2b26;
    fun_2d56_0490();
    local_a = local_c;
    local_c = 0x2b26;
    fun_2692_09f6();
    return;
}


// WARNING: Instruction at (ram,0x00028d5a) overlaps instruction at (ram,0x00028d59)
//
// WARNING: Type propagation algorithm not settling

undefined2
FUN_2d56_0652(param_1: u16,param_2: i16,param_3: u16,param_4: u16,
param_5: u16,param_6: u16,param_7: u16,undefined param_8)

{
let piVar1: * mut u16; let pcVar2: String; let piVar3: * mut u16; let pbVar4: * mut u8; let bVar5: u8; code * pcVar6; let uVar7: u16;
code * * ppcVar8; char cVar9; undefined uVar10; undefined uVar11; let bVar12: u8; let bVar13: u8; undefined uVar14; undefined uVar15;
let bVar16: u8; undefined uVar17; let bVar18: u8; undefined uVar19; let bVar20: u8; let bVar21: u8; let bVar22: u8; let iVar23: i16; let unaff_SI: String; let iVar24: i16; let uVar25: u16; let iVar26: i16; let unaff_DI: u16; let uVar27: u16; let uVar28: u16; let unaff_SS: i16; let unaff_DS: u16; undefined uVar29; let uVar30: u32; let lVar31: i32; let puStackY40: * mut u16; let local_1e: i16; int local_1c [4]; undefined uStackY18; char cStackY17; let bStackY16: u8; char cStackY15; let local_e: u8; char cStackY13; let local_c: u8; char cStackY11; let local_a: u8; let bStackY9: u8; let local_8: u8; let bStackY7: u8; let local_6: u8; let bStackY5: u8; undefined uVar32; let bVar33: u8;
char cVar34; undefined uVar35; undefined uVar36;

uVar28 = 0x3444; local_6 = 0xbd; bStackY5 = 0xdb; FUN_3444_02c6(0x39d9); cVar9 = cStackY15;
uVar32 = bStackY16; uVar35 = unaff_DI; uVar36 = (unaff_DI >> 8); local_6 = unaff_SI; bStackY5 = (unaff_SI >> 8); uVar27 = 0xc8a4;
cVar34 = 0xc54; bStackY16 = unaff_SS; bVar33 = bStackY16; cStackY15 = (unaff_SS >> 8); uVar29 = cStackY15; bStackY16 = uVar32; cStackY15 = cVar9; if (cVar34 == - 0x10) {
uVar27 = 0xc8a0; if (0x992c != - 0x8000) {
local_8 = 0; bStackY7 = 0; uVar27 = 0x992c; local_a = uVar27; bStackY9 = (uVar27 >> 8); local_c = 0x44; cStackY11 = '4'; local_e = '\x04'; cStackY13 = -0x24; uVar27 = FUN_2b26_0008(); bVar22 = bStackY7; bVar21 = local_8; iVar24 = CONCAT11(bStackY7, local_8); local_6 = uVar27; bVar16 = local_6; bStackY5 = (uVar27 >> 8); bVar18 = bStackY5; uVar27 = 0xc8a4;
bVar5 = * 0xc53; uVar25 = bVar5 - 0x81; if (6 < uVar25) goto LAB_2d56_0838;
uVar28 = 0x2000; local_8 = uVar27; bVar12 = local_8; bStackY7 = (uVar27 >> 8); uVar32 = bStackY7; local_8 = param_2; bVar13 = local_8; bStackY7 = (param_2 >> 8); uVar35 = bStackY7; local_6 = param_4;
uVar36 = local_6; bStackY5 = (param_4 >> 8); uVar19 = bStackY5; local_6 = param_6; uVar17 = local_6; bStackY5 = (param_6 >> 8); bVar20 = bStackY5; local_6 = bVar16; bStackY5 = bVar18; switch(bVar5) {
case 0x81: pbVar4 = (unaff_SI + - 0x20); * pbVar4 = * pbVar4 | (uVar25 * 2 >> 8); uVar32 = 1; uVar35 = 0; loop {
local_a = & uStackY18; bStackY9 = ( & uStackY18 >> 8); iVar24 = CONCAT11(uVar35, uVar32) + 0x1104; local_c = iVar24;
cStackY11 = (iVar24 >> 8); local_e = uVar28; cStackY13 = (uVar28 >> 8); bStackY16 = 0x7b; cStackY15 = 0x18;
local_8 = bVar33; bStackY7 = uVar29; FUN_2b26_0e3b(); local_8 = local_a; bStackY7 = bStackY9;
stack0xffea = 0x2b261895; FUN_2c63_0002(); if ((CONCAT11(bStackY5, local_6) | CONCAT11(bStackY7, local_8)) != 0) {
local_8 = local_6; bStackY7 = bStackY5; local_a = local_6; bStackY9 = bStackY5; iVar24 = CONCAT11(cStackY13, local_e) - CONCAT11(cStackY17, uStackY18); iVar23 = ((cStackY13 >> 7) - (cStackY17 >> 7)) -
(CONCAT11(cStackY13, local_e) < CONCAT11(cStackY17, uStackY18)); local_c = iVar23;
cStackY11 = (iVar23 >> 8); local_e = iVar24; cStackY13 = (iVar24 >> 8); uVar27 = 0xc77e; iVar24 = CONCAT11(uVar35, uVar32) * 4; uVar28 = (iVar24 + - 4999); bStackY16 = uVar28;
cStackY15 = (uVar28 >> 8); uVar27 = (iVar24 + - 0x1389); uStackY18 = uVar27; cStackY17 = (uVar27 >> 8); stack0xffea = 0x2c6318d2; stack0xffea = FUN_3444_23fe(); local_1c[2] = 0x3444; local_1c[1] = 0x18d9; iVar24 = FUN_3444_2364(); iVar24 = iVar24 + CONCAT11(cStackY17, uStackY18); local_e = iVar24; cStackY13 = (iVar24 >> 8); local_1c[2] = CONCAT11(bStackY9, local_a);
local_1c[1] = CONCAT11(bStackY9, local_a); local_1c[0] = 0; local_1e = 0; FUN_2c63_02af();
}
uVar28 = 0x2c63; iVar24 = CONCAT11(uVar35,uVar32) + 1; uVar32 = iVar24; uVar35 = (iVar24 >> 8);
} while (iVar24 < 8); * (undefined * )0xfd03 = 0; local_8 = 99;
bStackY7 = 0x2c; local_a = 0x17; bStackY9 = 0x19; ppcVar8 = (code * * )0xcf70; uVar27 = ( * * ppcVar8)(); return uVar27; case 0x82: iVar24 = bVar22 << 8; out(0x8b, bVar21 ^ 0x9a); iVar23 = 0x4446;
// LAB_2874_062f:
(local_1c + unaff_DI + 2) = iVar24; bStackY5 = local_a; bStackY7 = local_c; local_6 = cStackY11; bStackY9 = iVar24; local_8 = (iVar24 >> 8); uVar27 = (local_1c + unaff_DI);
cStackY11 = uVar27; local_a = (uVar27 >> 8); cStackY13 = uVar28; local_c = (uVar28 >> 8); cStackY15 = 0x80;
local_e = 0x8d; uVar27 = FUN_2874_0004();
* puStackY40 = uVar27;
// LAB_2874_0648:
bStackY5 = uVar28; if (( * puStackY40 & 0x20) == 0) {
if (( * puStackY40 & 0x10) == 0) goto LAB_2874_06e3; uVar27 = (CONCAT11(cStackY11, local_c) + 4); iVar26 = iVar23 * 4; bStackY7 = 0xfb; local_6 = 0x8d; FUN_3444_4101(); bStackY7 = 0x44; local_6 = 0x34; bStackY9 = 3; local_8 = 0x8e; FUN_3444_43cb(); bStackY7 = 0x44; local_6 = 0x34; bStackY9 = 0xb; local_8 = 0x8e; FUN_3444_4101(); bStackY9 = 0x44; local_8 = 0x34; cStackY11 = 0x10; local_a = 0x8e; FUN_3444_44f2(); bStackY9 = 0x44; local_8 = 0x34; cStackY11 = 0x15; local_a = 0x8e; FUN_3444_45be(); bStackY9 = 0x44; local_8 = 0x34; cStackY11 = 0x1a; local_a = 0x8e; iVar24 = FUN_3444_42c7(); local_1c[iVar23 * 2 + 1] = iVar24;
}
else {
uVar27 = CONCAT13(bStackY9, CONCAT12(local_a,CONCAT11(cStackY11, local_c))); iVar26 = iVar23 * 4; bStackY7 = 0xaf; local_6 = 0x8d; FUN_3444_4101(); bStackY7 = 0x44; local_6 = 0x34; bStackY9 = 0xb7; local_8 = 0x8d; FUN_3444_43cb(); bStackY7 = 0x44; local_6 = 0x34; bStackY9 = 0xbf; local_8 = 0x8d; FUN_3444_4101(); bStackY9 = 0x44; local_8 = 0x34; cStackY11 = 0xc4; local_a = 0x8d; FUN_3444_44f2(); bStackY9 = 0x44; local_8 = 0x34; cStackY11 = 0xc9; local_a = 0x8d; FUN_3444_45be(); bStackY9 = 0x44; local_8 = 0x34; cStackY11 = 0xce; local_a = 0x8d; iVar24 = FUN_3444_42c7(); local_1c[iVar23 * 2 + 1] = iVar24;
}
// LAB_2874_06e0:
uVar28 = 0x3444; (local_1c + iVar26) = uVar27;
// LAB_2874_06e3:
loop {
iVar23 = iVar23 + 1; while ( true ) {
uVar29 = iVar23 == 2; bStackY5 = uVar28;
uVar32 = bStackY5; uVar35 = (uVar28 >> 8); if (iVar23 < 2) break; bStackY5 = param_8; uVar29 = bStackY5; bStackY7 = stack0xffea; local_6 = (stack0xffea >> 8); bStackY9 = local_1c[2]; local_8 = (local_1c[2] >> 8); cStackY11 = local_1c[1]; local_a = (local_1c[1] >> 8); cStackY13 = local_1c[0];
local_c = (local_1c[0] >> 8); cStackY17 = '?'; bStackY16 = 0x8e;
ppcVar8 = (code * * )0xcfb0; cStackY15 = uVar32; local_e = uVar35; ( * *ppcVar8)(); iVar24 = CONCAT11(cStackY11, local_c); loop {
iVar23 = iVar24 + 8; if ((iVar24 + 10) == - 0x8000) {
return CONCAT11(bStackY9, local_a);
}
bStackY5 = local_a; bStackY7 = iVar23; uVar14 = bStackY7; local_6 = (iVar23 >> 8); uVar15 = local_6; bStackY9 = param_5; uVar10 = bStackY9; local_8 = (param_5 >> 8); bVar33 = local_8; cStackY15 = 0x22;
local_e = 0x8c; cStackY13 = uVar32; local_c = uVar35; cStackY11 = uVar36; local_a = uVar19;
bStackY16 = FUN_2874_0004(); bStackY5 = local_a;
bStackY9 = param_7; uVar11 = bStackY9; local_8 = (param_7 >> 8); bVar5 = local_8; cStackY15 = 0x34; local_e = 0x8c; cStackY13 = uVar32; local_c = uVar35; cStackY11 = uVar17; local_a = bVar20; bStackY7 = uVar14; local_6 = uVar15; uVar25 = FUN_2874_0004(); local_e = uVar25; cStackY13 = (uVar25 >> 8); iVar24 = iVar23;
} while ((CONCAT11(cStackY15, bStackY16) & uVar25) != 0); if ((uVar25 == 0) & & (CONCAT11(cStackY15,bStackY16) == 0)) {
cStackY17 = 0x62; bStackY16 = 0x8e; ppcVar8 = (code * * )0xcfb0; cStackY15 = uVar32; local_e = uVar35; cStackY13 = uVar36; local_c = uVar19; cStackY11 = uVar10; local_a = bVar33; bStackY9 = uVar17; local_8 = bVar20; bStackY7 = uVar11; local_6 = bVar5; bStackY5 = uVar29; uVar27 = ( * * ppcVar8)(); return uVar27;
}
iVar23 = 0; local_c = uVar14; cStackY11 = uVar15;
}
bStackY7 = 100; local_6 = 0x8c; FUN_3444_402c(); bStackY7 = 0x44; local_6 = 0x34;
bStackY9 = 0x6d; local_8 = 0x8c; FUN_3444_402c(); bStackY9 = 0x44; local_8 = 0x34;
uVar28 = 0x3444; cStackY11 = 0x72; local_a = 0x8c; FUN_3444_44f7(); if ( ! (bool)uVar29) {
puStackY40 = ( & bStackY16 + iVar23 * 2); if (( * puStackY40 & 0x80) == 0) {
if (( * puStackY40 & 0x40) == 0) goto LAB_2874_0648; iVar24 = (CONCAT11(cStackY11, local_c) + 6); unaff_DI = iVar23 * 4; bStackY5 = 0x44; bStackY7 = 0x4a; local_6 = 0x8d; FUN_3444_4101(); bStackY7 = 0x44; local_6 = 0x34; bStackY9 = 0x52; local_8 = 0x8d; FUN_3444_43b3(); bStackY7 = 0x44; local_6 = 0x34; bStackY9 = 0x5a; local_8 = 0x8d; FUN_3444_4101(); bStackY9 = 0x44; local_8 = 0x34; cStackY11 = 0x5f; local_a = 0x8d; FUN_3444_44f2(); bStackY9 = 0x44; local_8 = 0x34; cStackY11 = 'd'; local_a = - 0x73; FUN_3444_45be();
bStackY5 = 0x44; uVar28 = 0x3444; bStackY7 = 0x69; local_6 = 0x8d; iVar26 = FUN_3444_42c7(); local_1c[iVar23 * 2] = iVar26;
}
else {
iVar24 = (CONCAT11(cStackY11, local_c) + 2); unaff_DI = iVar23 * 4; bStackY5 = 0x44; bStackY7 = 0xfb; local_6 = 0x8c; FUN_3444_4101(); bStackY7 = 0x44; local_6 = 0x34; bStackY9 = 3; local_8 = 0x8d; FUN_3444_43b3(); bStackY7 = 0x44; local_6 = 0x34; bStackY9 = 0xb; local_8 = 0x8d; FUN_3444_4101(); bStackY9 = 0x44; local_8 = 0x34; cStackY11 = 0x10; local_a = 0x8d; FUN_3444_44f2(); bStackY9 = 0x44; local_8 = 0x34; cStackY11 = '\x15'; local_a = -0x73; FUN_3444_45be(); bStackY5 = 0x44;
uVar28 = 0x3444; bStackY7 = 0x1a; local_6 = 0x8d; iVar26 = FUN_3444_42c7(); local_1c[iVar23 * 2] = iVar26;
}
goto LAB_2874_062f;
}
piVar1 = ( & bStackY16 + iVar23 * 2);
} while ( * piVar1 == 0); if (( * piVar1 & 0x80) == 0) {
if (( * piVar1 & 0x40) == 0) goto LAB_2874_056f; iVar24 = (CONCAT11(cStackY11, local_c) + 6);
}
else {
iVar24 = (CONCAT11(cStackY11, local_c) + 2);
}
local_1c[iVar23 * 2 + 1] = iVar24; goto LAB_2874_06e3; case 0x83: uVar27 = 0x5ddc; local_a = uVar27; bStackY9 = (uVar27 >> 8); local_c = 0; cStackY11 = 0x20; local_e = 0x95; cStackY13 = 0x36;
local_8 = bVar12; bStackY7 = uVar32; FUN_168b_04c4(); iVar24 = 0x138a + 0x5ddc; local_a = iVar24; bStackY9 = (iVar24 >> 8); local_c = 0x8b; cStackY11 = 0x16; local_e = 0xb7; cStackY13 = 0x36; local_8 = bVar13; bStackY7 = uVar35; local_6 = uVar36; bStackY5 = uVar19; FUN_2692_0ecc(); local_8 = 0x92; bStackY7 = 0x26; local_a = 0xc4; bStackY9 = 0x36; local_6 = uVar17; bStackY5 = bVar20; uVar27 = FUN_2692_00b2(); return uVar27;
case 0x84: loop {
bStackY7 = bVar22; local_8 = bVar21; uStackY18 = uVar28; cStackY17 = (uVar28 >> 8); stack0xffea = CONCAT22(0x1713,local_1c[3]); FUN_2c63_0002();
uVar32 = 8; cVar34 = '\0'; while (- 1 < cVar34) {
local_1c[2] = CONCAT11(cStackY15, bStackY16) + CONCAT11(cVar34, uVar32); local_6 = 0; bStackY5 = 0; local_8 = 100; bStackY7 = 0; uVar25 = CONCAT11(cStackY13, local_e) - CONCAT11(bStackY9, local_a); iVar24 = uVar25 + 8; iVar23 = (((cStackY13 >> 7) - (bStackY9 >> 7)) - (CONCAT11(cStackY13, local_e) < CONCAT11(bStackY9, local_a))) + (0xfff7 < uVar25); local_a = iVar23; bStackY9 = (iVar23 >> 8); local_c = iVar24; cStackY11 = (iVar24 >> 8); uVar27 = ((CONCAT11(cVar34, uVar32) / 2) * 2 + 0x460); cStackY15 = (uVar27 >> 8); local_e = cStackY15 >> 7;
cStackY13 = cStackY15 >> 0xf; bStackY16 = uVar27; uStackY18 = 99; cStackY17 = 0x2c; stack0xffea = CONCAT22(0x1777, local_1c[3]); uVar30 = FUN_3444_23fe(); uStackY18 = (uVar30 >> 0x10); cStackY17 = (uVar30 >> 0x18); stack0xffea = CONCAT22(uVar30, 0x3444); local_1c[2] = 0x177e; FUN_3444_2364(); stack0xffea = CONCAT22((CONCAT11(cStackY11, local_c) -
CONCAT11(cStackY15, bStackY16)) + local_1c[2] + - 8,
CONCAT11(bStackY7,local_8)); local_1c[2] = CONCAT11(bStackY7, local_8); local_1c[1] = 0; local_1c[0] = 0;
local_1e = CONCAT11(cStackY17, uStackY18); FUN_2c63_02af(); iVar24 = CONCAT11(cVar34, uVar32) + - 2; uVar32 = iVar24; cVar34 = (iVar24 >> 8);
}
while ( true ) {
if (0xe < CONCAT11(bStackY5, local_6) + 1) {
* (undefined * )0x6b4 = 0; local_6 = 99; bStackY5 = 0x2c; local_8 = 0xdb; bStackY7 = 0x17; ppcVar8 = (code ** )0xcf70; uVar27 = ( * * ppcVar8)(); return uVar27;
}
local_8 = & bStackY16; bStackY7 = ( & bStackY16 >> 8); local_a = (unaff_SS + 0x1005); bStackY9 = ((unaff_SS + 0x1005) >> 8); local_c = 99;
cStackY11 = ','; uVar28 = 0x2b26; local_e = 'F'; cStackY13 = '\x16'; local_6 = bVar33;
bStackY5 = uVar29; FUN_2b26_0e3b(); if (0x7faa != 0x140) break; local_6 = local_8;
bStackY5 = bStackY7; uStackY18 = 0x26; cStackY17 = 0x2b; stack0xffea = CONCAT22(0x166b, local_1c[3]); FUN_2c63_0002(); cVar9 = bStackY9; cVar34 = local_a; local_1c[2] = CONCAT11(cStackY15, bStackY16); local_6 = 0; bStackY5 = 0; local_8 = 100;
bStackY7 = 0; uVar27 = 0x460; cStackY11 = (uVar27 >> 8); local_a = cStackY11 >> 7; bStackY9 = cStackY11 >> 0xf; local_c = uVar27; uVar25 = CONCAT11(cVar9, cVar34); iVar24 = CONCAT11(cStackY13,local_e) - uVar25; iVar23 = ((cStackY13 >> 7) - (cVar9 >> 7)) - (CONCAT11(cStackY13, local_e) < uVar25); local_e = iVar23; cStackY13 = (iVar23 >> 8); bStackY16 = iVar24; cStackY15 = (iVar24 >> 8);
uStackY18 = 99; cStackY17 = 0x2c; stack0xffea = CONCAT22(0x16ac, local_1c[3]);
uVar30 = FUN_3444_23fe(); uStackY18 = (uVar30 >> 0x10); cStackY17 = (uVar30 >> 0x18); stack0xffea = CONCAT22(uVar30, 0x3444); local_1c[2] = 0x16b3; FUN_3444_2364(); stack0xffea = CONCAT22((CONCAT11(cStackY11, local_c) - CONCAT11(cStackY15, bStackY16)) + local_1c[2],
CONCAT11(bStackY7, local_8));
local_1c[2] = CONCAT11(bStackY7, local_8); local_1c[1] = 0; local_1c[0] = 0; local_1e = CONCAT11(cStackY17, uStackY18); FUN_2c63_02af();
}
local_6 = local_8; bStackY5 = bStackY7; bVar21 = local_8; bVar22 = bStackY7;
} while ( true ); case 0x85: param_2 = param_2 * 0x1d; uVar29 = param_2; uVar36 = (param_2 >> 8); if (( * (param_2 + 0x804) & 1) == 0) {
uVar27 = 0xc88c; pcVar6 = * (code ** )0xa43a; uVar25 = 0xa43c; local_8 = pcVar6; bStackY7 = (pcVar6 >> 8); local_6 = uVar25; bStackY5 = (uVar25 >> 8); if ((uVar25 | pcVar6) != 0) {
local_a = 0; bStackY9 = 0x20; local_c = 0x85; cStackY11 = 0xb8; ( * pcVar6)();
}
uVar27 = 0x9820; local_a = 1; bStackY9 = 0; local_c = 0; cStackY11 = 0x20;
local_e = 0x97; cStackY13 = 0xb8; FUN_27ac_0287(); local_a = 0xac; bStackY9 = 0x27;
local_c = 0x9d; cStackY11 = 0xb8; FUN_2d56_032c(); iVar24 = 0x992c; if (iVar24 != - 0x8000) {
local_a = iVar24; bStackY9 = (iVar24 >> 8); local_c = 0x56; cStackY11 = 0x2d; local_e = 0xaf; cStackY13 = 0xb8; FUN_2b26_0402();
}
uVar28 = 0xc88a; iVar24 = CONCAT11(uVar36,uVar29); pbVar4 = (iVar24 + 0x804); * pbVar4 = * pbVar4 | 1; (iVar24 + 0x80d) = param_3; (iVar24 + 0x80f) = param_4; local_c = 0x56; cStackY11 = 0x2d; local_e = 0xd4; cStackY13 = 0xb8; local_a = bVar13; bStackY9 = uVar35; FUN_2b26_00d1(); local_c = 0x56; cStackY11 = 0x2d; local_e = 0xdd; cStackY13 = 0xb8; local_a = bVar13; bStackY9 = uVar35; FUN_294b_0219(); uVar28 = 0xc892; if ((0xa438 | 0xa436) != 0) {
local_a = 0; bStackY9 = 0; local_c = 0x4b; cStackY11 = 0x29; local_e = 0xfb;
cStackY13 = 0xb8; ( * 0xb8fb)();
}
local_c = 0x4b; cStackY11 = 0x29; local_e = 4; cStackY13 = 0xb9; local_a = bVar13;
bStackY9 = uVar35; FUN_294b_02f2(); local_c = 0x4b; cStackY11 = 0x29; local_e = 0xc;
cStackY13 = 0xb9; local_a = bVar13; bStackY9 = uVar35; FUN_2b26_048e(); local_a = 0x4b;
bStackY9 = 0x29; local_c = 0x12; cStackY11 = 0xb9; FUN_294b_03be(); local_c = 0x4b;
cStackY11 = 0x29; local_e = 0x19; cStackY13 = 0xb9; local_a = bVar13; bStackY9 = uVar35;
FUN_2b26_0363(); local_a = 0x4b; bStackY9 = 0x29; local_c = 0x1f; cStackY11 = 0xb9;
FUN_2d56_03f0(); local_a = uVar27; bStackY9 = (uVar27 >> 8); local_c = 0x56; cStackY11 = 0x2d; local_e = 0x25; cStackY13 = 0xb9; uVar27 = FUN_27ac_0287();
}
else {
local_c = 0; cStackY11 = 0x20; local_e = 0x2e; cStackY13 = 0xb9; local_a = local_8;
bStackY9 = bStackY7; local_8 = bVar12; bStackY7 = uVar32; uVar27 = FUN_2b26_09bf();
}
return uVar27; case 0x87: while (unaff_DI < 0x7faa) {
loop {
local_a = * unaff_SI; unaff_SI = unaff_SI + 1; if (local_a == '\0') goto LAB_2692_009f;
unaff_DI = unaff_DI + 0x7fd6;
} while (unaff_DI < 0); local_8 = uVar27; bStackY7 = (uVar27 >> 8);
bStackY9 = local_a >> 7; local_c = param_3; cStackY11 = (param_3 >> 8);
local_e = unaff_DI; cStackY13 = (unaff_DI >> 8); bStackY16 = uVar28; cStackY15 = (uVar28 >> 8); uVar28 = 0x2692;
uStackY18 = 0xb5; cStackY17 = 0x69; FUN_2692_00cc(); uVar27 = CONCAT11(bStackY7, local_8);
}
// LAB_2692_009f:
0x7f98 = unaff_DI + 0x7fd6; 0x7f9a = param_3;
return CONCAT11(bStackY5, local_6);
}
piVar3 = ( & stack0x6a3c + unaff_DI); *piVar3 = * piVar3 + iVar24; if ( *piVar3 != 0) {
local_8 = 5; bStackY7 = 0; local_a = 0; bStackY9 = 0x20; local_c = 0x28;
cStackY11 = '_'; FUN_25d6_0582();
// LAB_25d6_01c9: if (0x776a != 0) {
uVar27 = (0x776a * 2 + 0x7756);
local_8 = uVar27; bStackY7 = (uVar27 >> 8); local_a = uVar28; bVar33 = local_a; bStackY9 = (uVar28 >> 8);
uVar32 = bStackY9; local_c = 0x3e; cStackY11 = '_'; FUN_25d6_0463(); piVar3 = 0x776a;
* piVar3 = * piVar3 + - 1; local_a = 0x48; bStackY9 = 0x5f; local_8 = bVar33; bStackY7 = uVar32; lVar31 = FUN_2692_05ab(); lVar31 = lVar31 + 6; local_6 = lVar31; bStackY5 = (lVar31 >> 8);
uVar32 = (lVar31 >> 0x10); uVar29 = (lVar31 >> 0x18); loop {
local_8 = 0x92; bStackY7 = 0x26; uVar28 = 0x2692; local_a = 0x59; bStackY9 = 0x5f;
uVar30 = FUN_2692_05ab(); iVar24 = (uVar30 >> 0x10); if (CONCAT11(uVar29, uVar32) < iVar24) break;
} while ((iVar24 < CONCAT11(uVar29, uVar32)) || (uVar30 < CONCAT11(bStackY5, local_6))
); goto LAB_25d6_01c9;
}
}
local_8 = uVar28; bVar33 = local_8; bStackY7 = (uVar28 >> 8); uVar32 = bStackY7; local_a = 0x6b; bStackY9 = 0x5f; iVar24 = FUN_25d6_060d(); local_8 = iVar24; bStackY7 = (iVar24 >> 8); local_c = 0x72; cStackY11 = 0x5f; local_a = bVar33;
bStackY9 = uVar32; FUN_25d6_0463(); if ((iVar24 == 0xb) || (iVar24 == 0xc)) {
local_a = 0xe4; bStackY9 = 0x60; local_8 = bVar33; bStackY7 = uVar32; FUN_25d6_09db();
local_8 = 0; bStackY7 = 0; local_c = 0xeb; cStackY11 = 0x60; local_a = bVar33;
bStackY9 = uVar32; FUN_25d6_0582(); local_8 = 1; bStackY7 = 0; local_c = 0xf4;
cStackY11 = 0x60; local_a = bVar33; bStackY9 = uVar32; FUN_25d6_04ee(); local_8 = 1;
bStackY7 = 0; local_a = 3; bStackY9 = 0; local_e = 1; cStackY13 = 0x61;
local_c = bVar33; cStackY11 = uVar32; FUN_25d6_079f();
}
else {
uVar27 = 0xc84c; local_8 = uVar27; bStackY7 = (uVar27 >> 8); if (0x5dee != 0) {
piVar3 = 0x5dee; * piVar3 = * piVar3 + - 1;
}
uVar27 = 0xc84e; local_e = 0xf0; cStackY13 = 0x5d; local_c = uVar27; cStackY11 = (uVar27 >> 8); if (0x5df0 != 0) {
piVar3 = 0x5df0; * piVar3 = * piVar3 + - 1;
}
uVar27 = 0xc850; uStackY18 = 0xf4; cStackY17 = ']'; bStackY16 = uVar27; cStackY15 = (uVar27 >> 8); if (0x5df4 != 0) {
piVar3 = 0x5df4; * piVar3 = * piVar3 + - 1;
}
uVar27 = 0xc852; stack0xffea = CONCAT22(uVar27,0x5df2); if (0x5df2 != 0) {
piVar3 = 0x5df2; * piVar3 = * piVar3 + - 1;
}
if (CONCAT13(bStackY7, CONCAT12(local_8,0x5dee)) != 0) {
local_8 = 4; bStackY7 = 0; local_c = 0xea; cStackY11 = 0x5f; local_a = bVar33;
bStackY9 = uVar32; uVar27 = FUN_168b_05f1();
local_8 = uVar27; bStackY7 = (uVar27 >> 8); local_a = 0x8b; bStackY9 = 0x16; local_c = 0xf0; cStackY11 = 0x5f; FUN_25d6_0582(); local_8 = 2; bStackY7 = 0; local_a = 0x8b; bStackY9 = 0x16; uVar28 = 0x168b; local_c = 0xfa; cStackY11 = 0x5f; iVar24 = FUN_168b_05f1(); local_8 = (iVar24 + 1); bStackY7 = ((iVar24 + 1) >> 8); local_a = 0x8b; bStackY9 = 0x16; local_c = 1;
cStackY11 = 0x60; FUN_25d6_04ee(); local_8 = 1; goto LAB_25d6_03a6;
}
if (CONCAT13(cStackY11, CONCAT12(local_c,0x5df0)) == 0) {
if (CONCAT13(cStackY15, CONCAT12(bStackY16,0x5df4)) == 0) {
if ( * stack0xffea == 0) {
local_a = 0xa6; bStackY9 = 0x60; local_8 = bVar33; bStackY7 = uVar32; FUN_25d6_03b1();
0x5dfc = 2; local_8 = 0; bStackY7 = 0; local_c = 0xb8; cStackY11 = 0x60;
local_a = bVar33; bStackY9 = uVar32; FUN_25d6_0824(); local_8 = 3; bStackY7 = 0;
local_c = 0xc2; cStackY11 = 0x60; local_a = bVar33; bStackY9 = uVar32; iVar24 = FUN_168b_05f1(); local_8 = (iVar24 + 10);
bStackY7 = ((iVar24 + 10) >> 8); local_a = 0x8b; bStackY9 = 0x16; local_c = 0xcb; cStackY11 = 0x60; FUN_25d6_0582(); local_8 = 5; bStackY7 = 0; local_a = 0x8b; bStackY9 = 0x16; local_c = 0xd5; cStackY11 = 0x60; iVar24 = FUN_168b_05f1(); local_8 = (iVar24 + 6); bStackY7 = ((iVar24 + 6) >> 8); local_a = 0x8b; bStackY9 = 0x16; local_c = 0xde; cStackY11 = 0x60;
uVar27 = FUN_25d6_04ee(); return uVar27;
}
local_8 = 3; bStackY7 = 0; local_c = 0x80; cStackY11 = 0x60; local_a = bVar33;
bStackY9 = uVar32; iVar24 = FUN_168b_05f1();
local_8 = (iVar24 + 0xd); bStackY7 = ((iVar24 + 0xd) >> 8); local_a = 0x8b; bStackY9 = 0x16; local_c = 0x89; cStackY11 = 0x60; FUN_25d6_0582(); local_8 = 4; bStackY7 = 0; local_a = 0x8b; bStackY9 = 0x16; uVar28 = 0x168b; local_c = 0x93; cStackY11 = 0x60; iVar24 = FUN_168b_05f1(); local_8 = (iVar24 + 7); bStackY7 = ((iVar24 + 7) >> 8); local_a = 0x8b;
bStackY9 = 0x16; local_c = 0x9c; cStackY11 = 0x60; FUN_25d6_04ee(); local_8 = 2;
}
else {
local_8 = 3; bStackY7 = 0; local_c = 0x4b; cStackY11 = 0x60; local_a = bVar33;
bStackY9 = uVar32; iVar24 = FUN_168b_05f1();
local_8 = (iVar24 + 7); bStackY7 = ((iVar24 + 7) >> 8); local_a = 0x8b; bStackY9 = 0x16; local_c = 0x54; cStackY11 = 0x60; FUN_25d6_0582(); local_8 = 2; bStackY7 = 0; local_a = 0x8b; bStackY9 = 0x16; uVar28 = 0x168b; local_c = 0x5e; cStackY11 = 0x60; iVar24 = FUN_168b_05f1(); local_8 = (iVar24 + 5); bStackY7 = ((iVar24 + 5) >> 8); local_a = 0x8b;
bStackY9 = 0x16; local_c = 0x67; cStackY11 = 0x60; FUN_25d6_04ee(); local_8 = 4;
}
goto LAB_25d6_03a6;
}
local_8 = 3; bStackY7 = 0; local_c = 0x1a; cStackY11 = 0x60; local_a = bVar33;
bStackY9 = uVar32; iVar24 = FUN_168b_05f1();
local_8 = (iVar24 + 4); bStackY7 = ((iVar24 + 4) >> 8); local_a = 0x8b; bStackY9 = 0x16; local_c = 0x23; cStackY11 = 0x60; FUN_25d6_0582(); local_8 = 2; bStackY7 = 0; local_a = 0x8b; bStackY9 = 0x16; uVar28 = 0x168b; local_c = 0x2d; cStackY11 = 0x60; iVar24 = FUN_168b_05f1(); local_8 = (iVar24 + 3); bStackY7 = ((iVar24 + 3) >> 8); local_a = 0x8b;
bStackY9 = 0x16; local_c = 0x36; cStackY11 = 0x60; FUN_25d6_04ee();
}
local_8 = 3;
// LAB_25d6_03a6:
bStackY7 = 0; local_a = uVar28; bStackY9 = (uVar28 >> 8); local_c = 0xb; cStackY11 = 0x61; uVar27 = FUN_25d6_0824(); return uVar27;
}
goto LAB_2d56_0838;
}
if (cVar34 != - 1) {
if (( * 0xc54 & 0x80) != 0) {
return 0;
}
if (0xc54 == 0x992c) {
uVar27 = 0xc8a4; if (( * 0xc4e & 0x1e) == 0) {
local_8 = * 0xc53; bStackY7 = 0; uVar27 = 0x992c; local_a = uVar27; bStackY9 = (uVar27 >> 8); local_c = 0x44;
cStackY11 = 0x34; local_e = 0x5e; cStackY13 = 0xe1; uVar30 = FUN_2b26_0008(); local_6 = uVar30; bStackY5 = (uVar30 >> 8); if (( * (uVar30 + 2) & 2) != 0) {
uVar25 = 0xc53; if (uVar25 >> 8 == 0x992c) {
local_8 = uVar25; bStackY7 = 0; local_a = 0x26; bStackY9 = 0x2b; local_c = 0x97;
cStackY11 = 0xe1; FUN_2d56_038c();
}
goto LAB_2d56_0838;
}
}
else {
uVar25 = 0xc53; if ((uVar25 & 0x8000) == 0) {
local_8 = uVar25; bStackY7 = (uVar25 >> 8); uVar27 = 0x992c; local_a = uVar27; bStackY9 = (uVar27 >> 8);
local_c = 0x44; cStackY11 = 0x34; local_e = 0xb7; cStackY13 = 0xe1; uVar30 = FUN_2b26_0008(); iVar24 = uVar30; local_6 = uVar30;
bStackY5 = (uVar30 >> 8); bVar33 = (uVar30 >> 0x10); uVar32 = (uVar30 >> 0x18);
uVar27 = (undefined2)(uVar30 >> 0x10); if (((( * 0xc49 & 3) == 0) & & (( *(iVar24 + 3) & 8) != 0)) & & (( * 0xc4d & 2) == 0)) {
local_8 = 0x26; bStackY7 = 0x2b; local_a = 0xec; bStackY9 = 0xe1; FUN_294b_0c6d();
local_8 = 0x4b; bStackY7 = 0x29; local_a = 0xf1; bStackY9 = 0xe1; FUN_294b_03ad();
iVar24 = CONCAT11(bStackY5, local_6); uVar28 = (undefined2)(CONCAT13(uVar32, CONCAT12(bVar33, iVar24)) >> 0x10); pbVar4 = (iVar24 + 3); *pbVar4 = * pbVar4 ^ 4; uVar27 = (iVar24 + 10); local_8 = uVar27; bStackY7 = (uVar27 >> 8); uVar27 = (iVar24 + 8); local_a = uVar27;
bStackY9 = (uVar27 >> 8); uVar27 = (iVar24 + 6); local_c = uVar27; cStackY11 = (uVar27 >> 8);
uVar27 = (iVar24 + 4); local_e = uVar27; cStackY13 = (uVar27 >> 8); bStackY16 = 0x4b; cStackY15 = 0x29; uVar27 = 0x2c63; uStackY18 = 0xe; cStackY17 = 0xe2; FUN_2c63_028d(); uVar25 = (CONCAT11(bStackY5, local_6) + 2); if (((uVar25 & 0x400) != 0) && ((uVar25 & 0x1000) != 0)) {
iVar24 = * * (int * * )(0x992c * 0x1d + 0x800); for (uVar25 = 0; uVar25 < iVar24; uVar25 = uVar25 + 1) {
if ( * 0xc53 != uVar25) {
local_8 = uVar25; bStackY7 = (uVar25 >> 8); uVar28 = 0x992c; local_a = uVar28; bStackY9 = (uVar28 >> 8);
local_c = uVar27; cStackY11 = (uVar27 >> 8); uVar27 = 0x2b26; local_e = 0x65; cStackY13 = 0xe2; uVar30 = FUN_2b26_0008(); iVar23 = uVar30; uVar28 = (undefined2)(uVar30 >> 0x10); if (((iVar23 + 0x22) == (CONCAT11(bStackY5, local_6) + 0x22)) & & (( * (iVar23 + 3) & 4) != 0)) {
pbVar4 = (iVar23 + 3); * pbVar4 = * pbVar4 & 0xfb; uVar27 = (iVar23 + 10); local_8 = uVar27; bStackY7 = (uVar27 >> 8); uVar27 = (iVar23 + 8); local_a = uVar27; bStackY9 = (uVar27 >> 8); uVar27 = (iVar23 + 6); local_c = uVar27;
cStackY11 = (uVar27 >> 8); uVar27 = (iVar23 + 4); local_e = uVar27; cStackY13 = (uVar27 >> 8);
bStackY16 = 0x26; cStackY15 = 0x2b; uVar27 = 0x2c63; uStackY18 = 0x9e; cStackY17 = 0xe2;
FUN_2c63_028d();
}
}
}
}
local_8 = uVar27; bStackY7 = (uVar27 >> 8); local_a = 0xac; bStackY9 = 0xe2; FUN_294b_0c76();
}
else {
local_a = local_6; bStackY9 = bStackY5; local_8 = bVar33; bStackY7 = uVar32; if (((iVar24 + 0x21) == '\x06') || ((iVar24 + 0x21) == '\a')) {
local_c = 0x26; cStackY11 = 0x2b; local_e = 199; cStackY13 = 0xe2; iVar24 = FUN_2ecc_051e();
}
else {
if ((iVar24 + 0x21) != '\b') {
return 0;
}
local_c = 0x26; cStackY11 = 0x2b; local_e = 0xd7; cStackY13 = 0xe2; iVar24 = FUN_2e46_0701();
}
if (iVar24 != 0) goto LAB_2d56_0838;
}
}
}
return 0;
}
goto LAB_2d56_0838;
}
uVar27 = 0xc8a0; if (0x992c != - 0x8000) {
local_8 = 0; bStackY7 = 0; uVar27 = 0x992c; local_a = uVar27; bStackY9 = (uVar27 >> 8); local_c = 0x44; cStackY11 = 0x34; uVar28 = 0x2b26; local_e = 0xbc; cStackY13 = 0xdd; uVar30 = FUN_2b26_0008(); local_6 = uVar30; bStackY5 = (uVar30 >> 8); uVar35 = (uVar30 >> 0x10); uVar36 = (uVar30 >> 0x18);
}
if (0x992c == - 0x8000) {
// LAB_2d56_08bf:
iVar24 = 0; while ( true ) {
uVar27 = 0xc8a0; iVar23 = iVar24 * 2;
if ((iVar23 + - 0x66d4) == -0x8000) break; unaff_DI = (iVar23 + -0x66d4); local_a = & local_1e; bStackY9 = ( & local_1e >> 8); uVar27 = (iVar23 + - 0x66d4); local_c = uVar27; cStackY11 = (uVar27 >> 8);
local_e = uVar28; cStackY13 = (uVar28 >> 8); uVar28 = 0x2b26; bStackY16 = 0x49; cStackY15 = - 0x22; local_8 = bVar33;
bStackY7 = uVar29; FUN_2b26_072d(); uVar27 = 0xc8a4; if ((((local_1e < = 0xc4f) & & (piVar3 = 0xc4f, *piVar3 == local_1c[1] || * piVar3 < local_1c[1])) & & (local_1c[0] < = 0xc51)) && (piVar3 = 0xc51, * piVar3 == local_1c[2] || * piVar3 < local_1c[2])) {
if ((iVar24 != 0) & & (( * (CONCAT11(bStackY5, local_6) + 3) & 1) == 0)) {
local_8 = unaff_DI; bStackY7 = (unaff_DI >> 8); local_a = 0x26; bStackY9 = 0x2b; uVar28 = 0x2b26; local_c = 0x8c; cStackY11 = 0xde; FUN_2b26_09bf();
}
break;
}
iVar24 = iVar24 + 1;
}
if ((iVar24 != 0) || (uVar27 = 0xc8a0, 0x992c == - 0x8000))
goto LAB_2d56_0838; local_8 = 0; bStackY7 = 0; uVar27 = 0x992c; local_a = uVar27; bStackY9 = (uVar27 >> 8); local_c = uVar28; cStackY11 = (uVar28 >> 8); uVar28 = 0x2b26; local_e = 0xae; cStackY13 = 0xde; lVar31 = FUN_2b26_0008(); uVar27 = (undefined2)(lVar31 >> 0x10); iVar24 = lVar31; local_6 = lVar31; bStackY5 = (lVar31 >> 8); if (lVar31 == 0) goto LAB_2d56_0838; local_c = unaff_DS; cStackY11 = (unaff_DS >> 8);
local_1e = (iVar24 + 4) + (iVar24 + 0x24); local_1c[0] = (iVar24 + 6) + (iVar24 + 0x24); local_1c[1] = (iVar24 + 8) - (iVar24 + 0x24); local_1c[2] = (iVar24 + 10) - (iVar24 + 0x24); local_e = bVar33; cStackY13 = uVar29; if ((((( *(iVar24 + 2) & 0x10) == 0) || (0xc4f < local_1e)) || (uVar7 = 0xc8a4, local_1e + 0x6184 <= 0xc4f)) || ((0xc51 < local_1c[0] || (local_1c[0] + 0x6186 < = 0xc51)))) {
if ((((( * (iVar24 + 2) & 0x20) == 0) ||
((local_1c[1] < = 0xc4f || (uVar28 = 0xc8a4, 0xc4f < local_1c[1] - 0x6188)))) ||
(local_1c[2] < = 0xc51)) || (0xc51 < local_1c[2] - 0x618a)) {
if ((((( * (iVar24 + 2) & 0x40) != 0) & & (0xc4f < local_1c[1])) && (uVar28 = 0xc8a4, local_1c[1] - 0x618c < = 0xc4f)) & & ((local_1c[0] < = 0xc51 & & (0xc51 < local_1c[0] + 0x618e)))) {
if (( * (unaff_DI * 0x1d + 0x804) & 2) == 0) {
local_8 = 0x26; bStackY7 = 0x2b; local_a = 0x99; bStackY9 = 0xe0; FUN_2b26_100d();
}
else {
local_8 = 0x26; bStackY7 = 0x2b; local_a = 0x91; bStackY9 = 0xe0; FUN_2b26_12cd();
}
goto LAB_2d56_0838;
}
if ((( * (iVar24 + 2) & 0x80) == 0) || (0x7fd4 + local_1c[0] < = 0xc51)) goto LAB_2d56_0838; local_1e = (iVar24 + 4); local_1c[0] = (iVar24 + 6); uVar27 = (iVar24 + 0x26);
local_8 = uVar27; bStackY7 = (uVar27 >> 8); local_a = 0; bStackY9 = 0; local_c = 0; cStackY11 = 0; local_e = 0; cStackY13 = 0; uStackY18 = SUB21(( & bStackY16 + 2), 0); cStackY17 = (( & bStackY16 + 2) >> 8); stack0xffea = CONCAT22(unaff_SS, & local_1e); local_1c[2] = 0x2b26; local_1c[1] = - 0x1efc;
bStackY16 = bVar33; cStackY15 = uVar29; FUN_2d56_0004(); local_8 = 0x26; bStackY7 = 0x2b;
local_a = 0xc; bStackY9 = 0xe1; FUN_1ba9_1d7e(); if ((CONCAT11(cStackY13, local_e) == 0) & & (CONCAT11(cStackY11, local_c) == 0))
goto LAB_2d56_0838;
local_1e = local_1e + CONCAT11(cStackY13, local_e); local_1c[0] = local_1c[0] + CONCAT11(cStackY11, local_c); local_8 = 1;
}
else {
local_1e = (iVar24 + 4); local_1c[0] = (iVar24 + 6); uVar28 = (iVar24 + 0x26); local_8 = uVar28; bStackY7 = (uVar28 >> 8);
uVar28 = (iVar24 + 0x2a); local_a = uVar28; bStackY9 = (uVar28 >> 8); uVar27 = (iVar24 + 0x28); local_c = uVar27; cStackY11 = (uVar27 >> 8); local_e = 1; cStackY13 = 0;
uStackY18 = SUB21(( & bStackY16 + 2), 0); cStackY17 = (( & bStackY16 + 2) >> 8); stack0xffea = CONCAT22(unaff_SS, & local_1e); local_1c[2] = 0x2b26; local_1c[1] = - 0x2024; bStackY16 = bVar33; cStackY15 = uVar29; FUN_2d56_0004(); local_8 = 0x26; bStackY7 = 0x2b; local_a = 0xe4; bStackY9 = 0xdf; FUN_1ba9_1d7e(); if ((CONCAT11(cStackY13, local_e) == 0) & & (CONCAT11(cStackY11, local_c) == 0))
goto LAB_2d56_0838; local_1c[1] = local_1c[1] + CONCAT11(cStackY13, local_e);
local_1c[2] = local_1c[2] + CONCAT11(cStackY11, local_c); local_8 = 0;
}
bStackY7 = 0; local_c = & local_1e; cStackY11 = ( & local_1e >> 8); local_e = 0xa9; cStackY13 = 0x1b; bStackY16 = 9; cStackY15 = 0xe0; local_a = bVar33; bStackY9 = uVar29; FUN_2b26_0c02(); uVar27 = 0xc8a2; if (( * 0x804 & 2) != 0) {
pbVar4 = 0x804; * pbVar4 = * pbVar4 & 0xfd;
}
goto LAB_2d56_0838;
}
}
else {
iVar24 = CONCAT11(bStackY5, local_6); uVar27 = (undefined2)(CONCAT13(uVar36, CONCAT12(uVar35, iVar24)) >> 0x10); if (( * (iVar24 + 3) & 2) == 0) goto LAB_2d56_08bf; uVar7 = 0xc8a4; if (((((iVar24 + 4) < = 0xc4f) & & (iVar23 = 0xc4f, piVar3 = (iVar24 + 8),
* piVar3 != iVar23 & & iVar23 <= * piVar3)) & & (uVar27 = 0xc8a4, (iVar24 + 6) < = 0xc51)) & & (iVar23 = 0xc51, piVar3 = (iVar24 + 10),
* piVar3 != iVar23 & & iVar23 < = * piVar3)) goto LAB_2d56_0838;
}
uVar27 = 0x992c; local_8 = uVar27; bStackY7 = (uVar27 >> 8); local_a = uVar28; bStackY9 = (uVar28 >> 8);
local_c = 0xbe; cStackY11 = 0xdc; FUN_2b26_0754();
// LAB_2d56_0838:
pcVar2 = (char * )0xa424;
* pcVar2 = * pcVar2 + - 1; return 1;
// LAB_2874_056f: if (( * piVar1 & 0x20) == 0) {
uVar27 = (CONCAT11(cStackY11, local_c) + 4);
}
else {
uVar27 = CONCAT13(bStackY9, CONCAT12(local_a,CONCAT11(cStackY11, local_c)));
}
iVar26 = iVar23 << 2; goto LAB_2874_06e0;
}



fn FUN_2d56_0d89() -> i16

{
let pcVar1: String; let pbVar2: * mut u8; let piVar3: * mut u16; int * * ppiVar4; let bVar5: u8; let iVar6: i16; let iVar7: i16; let    unaff_DS: u16; let uVar8: u32; let local_e: * mut u8; let local_a: i16; let local_8: * mut u16; let uVar9: u16;

iVar7 = 0x3444; FUN_3444_02c6(0x39d9); if (0xa424 == '\0') {
local_8 = 0x3444; local_a = - 0x1cfc; FUN_27ac_0287(); loop {
iVar7 = 0x2692; local_8 = 0xe30a; iVar6 = FUN_2692_03c2(); if (iVar6 == 0) break; local_8 = 0xc47; local_a = 0x2692;
iVar7 = 0x2692; FUN_2692_03c6(); pcVar1 = (char * )0xa424; * pcVar1 = *pcVar1 + '\x01'; uVar9 = 0xc8a4; local_e = CONCAT22(uVar9, 0xc4e); if ((* 0xc4e & 10) != 0) {
if (((( * 0xa42a & 10) == 0) || (0xc53 != 0xa428)) || (0xa402 < = 0xc4b - 0xa42c)) {
0xa42a = * local_e;
}
else {
bVar5 = * 0xc4e; 0xa42a = bVar5; if ((bVar5 & 2) != 0) {
pbVar2 = 0xc4e; * pbVar2 = * pbVar2 | 0x20;
}
if (( * local_e & 8) != 0) {
* local_e = * local_e | 0x40;
}
}
uVar9 = 0xc8a4; 0xa428 = 0xc53; 0xa42c = 0xc4b;
}
local_8 = 0xe3a8; iVar6 = FUN_2d56_0652();
} while (iVar6 != 0);
}
if ( - 1 < 0xa426) {
local_8 = 0x992c; local_a = iVar7; uVar8 = FUN_2b26_0008(); uVar9 = (undefined2)(uVar8 >> 0x10); iVar7 = uVar8;
local_8 = & local_a; local_a = 0x2b26; FUN_1ba9_1038(); piVar3 = (iVar7 + 4); if ((( * piVar3 != local_a && local_a < = * piVar3) || (piVar3 = (iVar7 + 8), * piVar3 == local_a || * piVar3 < local_a)) || ((ppiVar4 = (int * *)(iVar7 + 6), * ppiVar4 != local_8 & & local_8 < = * ppiVar4 ||
(ppiVar4 = (int * * )(iVar7 + 10), * ppiVar4 == local_8 || * ppiVar4 < local_8)))) {
local_8 = 0xe400; FUN_2d56_032c(); local_8 = 0xe404; FUN_2d56_03f0();
}
}
return 0xa424;
}



fn fun_2d56_0ead(param_1_00: u16, undefined4 param_1) -> u16

{
    let pc_var1: String;
    let pu_var2: *mut u16;
    let pu_var3: *mut u16;
    let u_var4: u16;
    let i_var5: i16;
    let pu_var6: *mut u16;
    let pu_var7: *mut u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0xa424 == '\0') {
        FUN_2d56_0d89(0x3444);
    }
    if (0xa424 == '\0') {
        u_var4 = 0;
    } else {
        pu_var6 = 0xc47;
        pu_var7 = param_1;
        for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {
            pu_var3 = pu_var7;
            pu_var7 = pu_var7 + 1;
            pu_var2 = pu_var6;
            pu_var6 = pu_var6 + 1;
            *pu_var3 = *pu_var2;
        }
        pc_var1 = 
        0xa424;
        *pc_var1 = *pc_var1 + -1;
        u_var4 = 1;
    }
    return u_var4;
}


fn fun_2d56_0eee()

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_1ba9_1d7e(0x3444);
    
    0xa424 = 0;
    return;
}


fn fun_2e46_0000(param_1_00: u16, uparam_1: i16, uparam_3: i16, uparam_4: i16, param_5: i16)

{
    char * *ppcVar1;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let pc_var5: String;
    let u_var6: u16;
    let u_var7: u16;
    let u_var8: u16;
    let unaff_ds: u16;
    let u_var9: u32;
    let local_10: i16;
    let u_var10: u16;
    let u_var11: u16;
    let i_var12: i16;

    i_var12 = param_5;
    fun_3444_02c6(0x39d9);
    fun_2f42_0097(0x3444);
    local_10 = param_5;
    i_var2 = param_1._1_1_;
    u_var7 = 0x2b26;
    u_var9 = FUN_2b26_0008(0x2f42, i_var2, param_1 & 0xff);
    u_var8 = (undefined2)(u_var9 >> 0x10);
    i_var3 = u_var9;
    if ((param_4 | param_3) != 0) {
        (i_var3 + 0x24) = param_3;
        (i_var3 + 0x26) = param_4;
    }
    if (param_5 != -1) {
        ppcVar1 = *(char * **)(char * *)(i_var3 + 0x24);
        pc_var5 = *ppcVar1;
        u_var11 = (ppcVar1 + 2);
        *(char * *)(i_var3 + 0x28) = pc_var5;
        while (i_var4 = param_5 + -1, param_5 != 0) {
            param_5 = i_var4;
            if (*pc_var5 != '\0') {
                u_var10 = u_var7;
                i_var4 = FUN_3444_178e(u_var7, pc_var5, u_var11);
                pc_var5 = pc_var5 + i_var4 + 1;
                u_var7 = 0x3444;
                u_var11 = u_var10;
            }
        }
        if (*pc_var5 != '\0') {
            *(char * *)(i_var3 + 0x28) = pc_var5;
        }
    }
    if (i_var12 != -1) {
        i_var12 = **(int * *)(i_var2 * 0x1d + 0x800);
        for (uVar6 = 0; iVar3 = local_10, u_var6 < iVar12; uVar6 = uVar6 + 1) {
            u_var8 = 0x2b26;
            u_var9 = FUN_2b26_0008(u_var7, i_var2, u_var6);
            u_var7 = (undefined2)(u_var9 >> 0x10);
            i_var4 = u_var9;
            if ((((i_var4 + 0x21) == '\a') || ((i_var4 + 0x21) == '\x06')) && ((i_var4 + 0x26) == param_1)) {
                u_var8 = 0x2ecc;
                local_10 = -0x1a9f;
                fun_2ecc_00a8(0x2b26, param_1._1_1_ << 8 | u_var6, i_var3, 1);
            }
            u_var7 = u_var8;
        }
    }
    return;
}



fn FUN_2e46_010d() -> i16

{
let iVar1: i16; let piVar2: * mut u16; let iVar3: i16; let iVar4: i16; let uVar5: u16; let uVar6: u32; let local_12: i16; let local_e: i16; let local_c: u16;

FUN_3444_02c6(0x39d9); FUN_2f42_0097(0x3444); uVar6 = FUN_2b26_0008(); piVar2 = * (int * *)(uVar6 + 0x24); local_12 = *piVar2; iVar1 = (piVar2 + 2);
iVar4 = 0; uVar5 = 0x2b26; while ( true ) {
local_c = (undefined2)(uVar6 >> 0x10); local_e = uVar6; piVar2 = * (int * * )(local_e + 0x24);
if (( * piVar2 + (local_e + 0x28) == local_12) & & ((piVar2 + 2) == iVar1)) break; uVar6 = CONCAT22(uVar5, 0xe5db); iVar3 = FUN_3444_178e(); local_12 = local_12 + iVar3 + 1; iVar4 = iVar4 + 1; uVar5 = 0x3444;
}
return iVar4;
}



fn fun_2e46_018c(param_1_00: u16, undefined4 param_1, param_3: i16, param_4: i16)

{
    let b_var1: u8;
    let u_var2: u16;
    let pi_var3: *mut u16;
    let i_var4: i16;
    let i_var5: i16;
    let i_var6: i16;
    let u_var7: u16;
    let unaff_ds: u16;
    let i_var8: i16;
    let i_var9: i16;
    let pc_var10: String;

    fun_3444_02c6(0x39d9);
    if (-1 < param_4) {
        i_var8 = (param_1 + 4);
        i_var9 = (param_1 + 6);
        i_var5 = (param_1 + 8);
        pi_var3 = *(int * *)(param_1 + 0x24);
        pc_var10 = 
        CONCAT22((pi_var3 + 2),
                 *pi_var3 + (param_1 + 0x28));
        while (((i_var9 < 0x7fac && (0 < param_3)) && (*pc_var10 != '\0'))) {
            u_var7 = SUB42(pc_var10, 0);
            i_var6 = 0x3444;
            i_var4 = FUN_3444_178e(0x3444, u_var7, (pc_var10 >> 0x10));
            i_var9 = i_var9 + 0x7fd4;
            param_3 = param_3 + -1;
            pc_var10 = 
            CONCAT22(u_var7, i_var6 + i_var4 + 1);
        }
        i_var5 = (i_var5 - i_var8) / 0x7fd6;
        u_var7 = 0x3444;
        while ((i_var9 < 0x7fac && (i_var4 = param_4 + -1, param_4 != 0))) {
            i_var6 = (param_1 + 0x20) * 6;
            u_var2 = 0xc8b0;
            b_var1 = *(i_var6 + 0x15d5);
            pc_var10 = (b_var1 | b_var1 << 0x10);
            FUN_2c63_03f8(u_var7, i_var8, i_var9, i_var5, b_var1, b_var1, b_var1, (i_var6 + 0x15d7));
            i_var9 = i_var9 + 0x7fd4;
            u_var7 = 0x2c63;
            param_4 = i_var4;
            if (*pc_var10 != '\0') {
                u_var7 = 0x3444;
                FUN_3444_178e(0x2c63, pc_var10, (pc_var10 >> 0x10));
            }
        }
    }
    return;
}


fn fun_2e46_0283(param_1_00: u16, uparam_1: i16, param_2: i16, param_3: i16)

{
    code * *ppcVar1;
    char * *ppcVar2;
    let i_var3: i16;
    let i_var4: i16;
    let u_var5: u16;
    let pc_var6: String;
    let u_var7: u16;
    let u_var8: u16;
    let u_var9: u16;
    let unaff_ss: i16;
    let unaff_ds: u16;
    let u_var10: u32;
    let local_20: i16;
    let local_1e: i16;
    let local_1c: i16;
    let local_16: i16;
    let i_var11: i16;
    let u_var12: u16;
    let i_var13: i16;
    let i_var14: i16;

    fun_3444_02c6(0x39d9);
    i_var3 = FUN_2e46_010d(0x3444, param_1);
    if (i_var3 == param_2) {
        return;
    }
    u_var7 = param_1 & 0xff;
    i_var3 = param_1._1_1_;
    u_var10 = FUN_2b26_0008(0x3444, i_var3);
    u_var5 = (undefined2)(u_var10 >> 0x10);
    i_var11 = u_var10;
    ppcVar2 = *(char * **)(char * *)(i_var11 + 0x24);
    pc_var6 = *ppcVar2;
    u_var8 = 0x2b26;
    u_var9 = (ppcVar2 + 2);
    while (u_var7 != 0) {
        u_var7 = u_var7 - 1;
        if (*pc_var6 != '\0') {
            u_var12 = u_var8;
            u_var7 = u_var9;
            i_var13 = FUN_3444_178e(u_var8, pc_var6);
            pc_var6 = pc_var6 + i_var13 + 1;
            u_var8 = 0x3444;
            u_var9 = u_var12;
        }
    }
    *(char * *)(i_var11 + 0x28) = pc_var6;
    if (param_3 != 0) {
        i_var14 = 0x6169;
        i_var13 = -0x6396;
        fun_294b_077b(u_var8);
        if ((param_2 - i_var14 < i_var13) && (i_var13 < i_var14 + param_2)) {
            local_16 = (i_var11 + 4);
            local_20 = (i_var11 + 6);
            local_1e = (i_var11 + 8);
            local_1c = (i_var11 + 10);
            if (unaff_ss < param_2) {
                i_var14 = param_2 - unaff_ss;
                i_var4 = 0x7fd4;
                i_var13 = local_20 + i_var14 * i_var4;
                for (iVar11 = local_20; local_20 = iVar13, i_var11 < 0; iVar11 = iVar11 + iVar4) {
                    i_var14 = i_var14 + 1;
                    i_var13 = local_20 + i_var4;
                }
                for (; 0x7fac < local_1c; local_1c = local_1c - iVar4) {
                    i_var14 = i_var14 + 1;
                }
            } else {
                i_var13 = 0x7fd4;
                i_var14 = unaff_ss - param_2;
                i_var11 = local_20 + i_var14 * i_var13;
                local_1c = local_1c - i_var14 * i_var13;
                for (; local_20 < 0; local_20 = local_20 + iVar13) {
                    i_var14 = i_var14 + 1;
                    i_var11 = i_var11 + i_var13;
                }
                for (; 0x7fac < (iVar11 - local_20) + local_1c; local_1c = local_1c + -1) {}
            }
            if (local_16 < 0) {
                local_16 = 0;
            }
            if (0x7faa < local_1e) {
                local_1e = 0x7faa;
            }
            if ((local_20 < local_1c) && (local_16 < local_1e)) {
                local_1c = local_1c + -1;
                ppcVar1 = (code * *)
                0xcfc8;
                (**ppcVar1)(0x294b, local_16, local_20, local_1e + -1, local_1c, local_16, i_var11);
                fun_2e46_018c(0x294b, u_var10, local_1c, i_var14);
                u_var8 = 0x294b;
                goto
                LAB_2e46_0470;
            }
        }
        FUN_2c63_058f(0x294b, u_var10);
        u_var8 = 0x2c63;
    }
// LAB_2e46_0470:
    iVar11 = **(int * *)(i_var3 * 0x1d + 0x800);
    for (uVar7 = 0; u_var7 < iVar11; uVar7 = uVar7 + 1) {
        u_var9 = 0x2b26;
        u_var10 = FUN_2b26_0008(u_var8, i_var3, u_var7);
        u_var5 = (undefined2)(u_var10 >> 0x10);
        i_var13 = u_var10;
        if (((((i_var13 + 0x21) == '\x06') || ((i_var13 + 0x21) == '\a')) && ((i_var13 + 0x24) != -1)) && ((i_var13 + 0x26) == param_1)) {
            u_var9 = 0x2ecc;
            fun_2ecc_00a8(0x2b26, param_1 & 0xff00 | u_var7, param_2, param_3);
        }
        u_var8 = u_var9;
    }
    return;
}



fn FUN_2e46_04df(param_1_00: u16,uparam_1: i16) -> i16

{
byte * * ppbVar1; let iVar2: i16;
let pbVar3: * mut u8; let iVar4: i16; let uVar5: u16; let uVar6: u32; let uVar7: u16;

FUN_3444_02c6(0x39d9); FUN_2f42_0097(0x3444); uVar6 = FUN_2b26_0008(0x2f42, (param_1 >> 8),param_1 & 0xff); ppbVar1 = * (byte * * * )(byte * * )(uVar6 + 0x24); pbVar3 = * ppbVar1;
uVar7 = (ppbVar1 + 2); iVar4 = 0; uVar5 = 0x2b26; while ( true ) {
if ( * pbVar3 == 0) {
return - 1;
}
if (( * pbVar3 & 1) != 0) break; iVar2 = FUN_3444_178e(uVar5, pbVar3, uVar7); pbVar3 = pbVar3 + iVar2 + 1; iVar4 = iVar4 + 1; uVar5 = 0x3444;
}
return iVar4;
}



fn fun_2e46_054a(param_1_00: u16, param_1: u16, param_3: i16, byte param_4)

{
    byte * *ppbVar1;
    let i_var2: i16;
    let i_var3: i16;
    let pb_var4: *mut u8;
    let u_var5: u16;
    let u_var6: u32;
    let i_var7: i16;

    fun_3444_02c6(0x39d9);
    fun_2f42_0097(0x3444);
    i_var7 = 0x2f42;
    u_var6 = FUN_2b26_0008(0x2f42, param_1._1_1_, param_1);
    ppbVar1 = (byte * *) * (undefined4 *)(u_var6 + 0x24);
    pb_var4 = *ppbVar1;
    u_var5 = (ppbVar1 + 2);
    i_var2 = 0x2b26;
    while (param_3 != 0) {
        if (*pb_var4 == 0)
        goto
        LAB_2e46_0610;
        *pb_var4 = 0x30;
        i_var7 = i_var2;
        i_var2 = FUN_3444_178e(i_var2, pb_var4);
        pb_var4 = pb_var4 + i_var2 + 1;
        i_var2 = 0x3444;
        param_3 = param_3 + -1;
    }
    if (*pb_var4 != 0) {
        if (*pb_var4 != (param_4 & 1 | 0x30)) {
            i_var7 = 1;
        }
        *pb_var4 = param_4 & 1 | 0x30;
        i_var3 = i_var2;
        while (true) {
            i_var2 = 0x3444;
            i_var3 = FUN_3444_178e(i_var3, pb_var4);
            pb_var4 = pb_var4 + i_var3 + 1;
            if (*pb_var4 == 0)
            break;
            if (*pb_var4 != 0x30) {
                i_var7 = 1;
            }
            *pb_var4 = 0x30;
            i_var3 = i_var2;
        }
    }
// LAB_2e46_0610:
    if (i_var7 != 0) {
        FUN_2c63_058f(i_var2, u_var6);
    }
    return;
}



fn FUN_2e46_0627(param_1_00: u16,uparam_1: i16) -> i16

{
let puVar1: * mut u16; let iVar2: i16; let uVar3: u16; let unaff_DS: u16; let uVar4: u32; let local_12: String; let local_e: i16;

FUN_3444_02c6(0x39d9); param_1 = param_1 & 0xff; uVar4 = FUN_2b26_0008(0x3444, param_1._1_1_); uVar3 = (undefined2)(uVar4 >> 0x10); iVar2 = uVar4; local_e = ((iVar2 + 10) - (iVar2 + 6)) / 0x7fd4; puVar1 = * ff(iVar2 + 0x24); local_12 = (char * )CONCAT22((puVar1 + 2),* puVar1); uVar3 = 0x2b26; while ( true ) {
if ( * local_12 == '\0') break; local_e = - 0x1520; iVar2 = FUN_3444_178e(uVar3,local_12, (local_12 >> 0x10));
local_12 = (char * )(local_12 & 0xffff0000 | (local_12 + iVar2 + 1));
param_1 = param_1 + 1; uVar3 = 0x3444;
}
if (local_e < param_1) {
local_e = param_1 - local_e;
}
else {
local_e = - 1;
}
return local_e;
}



fn fun_2e46_06a6()

{
    let i_var1: i16;
    let unaff_ds: u16;
    let in_stack_00000008: i16;

    fun_3444_02c6(0x39d9);
    i_var1 = FUN_2e46_010d(0x3444, 0xc53);
    in_stack_00000008 = in_stack_00000008 + i_var1;
    i_var1 = FUN_2e46_0627(0x3444, 0xc53);
    if (i_var1 != -1) {
        if (in_stack_00000008 < 0) {
            in_stack_00000008 = 0;
        }
        if (i_var1 < in_stack_00000008) {
            in_stack_00000008 = i_var1;
        }
        fun_2e46_0283(0x3444, 0xc53, in_stack_00000008, 1);
    }
    return;
}


/*
Unable to decompile 'FUN_2e46_0701'
Cause: Exception while decompiling 2e46:0701: GHIDRA/decompiler alignment error

*/


fn FUN_2ecc_0031(param_1_00: u16,undefined4 param_1) -> i16

{
let iVar1: i16; let uVar2: u16;
let unaff_DS: u16;

FUN_3444_02c6(0x39d9);
uVar2 = (undefined2)(param_1 >> 0x10); iVar1 = param_1; if ((iVar1 + 0x26) == - 1) {
if ((iVar1 + 0x21) == '\x06') {
iVar1 = ((((iVar1 + 8) - (iVar1 + 4)) - 0x619c) - 0x6198) - 0x61a0;
}
else {
iVar1 = ((((iVar1 + 10) - (iVar1 + 6)) - 0x6192) - 0x6196) - 0x61a2;
}
iVar1 = iVar1 + - 2;
}
else {
iVar1 = FUN_2e46_0627(0x3444, (iVar1 + 0x26));
}
return iVar1;
}



fn fun_2ecc_00a8(param_1_00: u16, param_1: u16, param_3: i16, param_4: i16)

{
    let i_var1: i16;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ds: u16;
    let u_var5: u32;
    let u_var6: u16;
    let u_var7: u16;
    let u_var8: u16;
    let u_var9: u16;

    fun_3444_02c6(0x39d9);
    fun_2f42_0097(0x3444);
    u_var5 = FUN_2b26_0008(0x2f42, param_1._1_1_, param_1);
    u_var9 = (undefined2)(u_var5 >> 0x10);
    i_var1 = u_var5;
    if (param_3 < 0) {
        param_3 = -1;
    }
    i_var2 = FUN_2ecc_0031(0x2b26, u_var5);
    if (i_var2 < param_3) {
        param_3 = i_var2;
    }
    if ((i_var1 + 0x24) != param_3) {
        (i_var1 + 0x24) = param_3;
        if ((param_4 != 0) && ((*(param_1._1_1_ * 0x1d + 0x804) & 1) != 0)) {
            if (param_3 == -1) {
                FUN_2c63_058f(0x2b26, i_var1, u_var9);
            } else {
                fun_294b_0b7c(0x2b26);
                fun_294b_077b(0x294b, 0x9c6a, 0x6169);
                if ((i_var1 + 0x21) == '\x06') {
                    i_var2 = (i_var1 + 0x20) * 6;
                    u_var8 = 0xc8c0;
                    i_var3 = (i_var1 + 10) + -1;
                    u_var7 = *(i_var2 + 0x15d7);
                    fun_2c63_0002(0x294b, (i_var1 + 4) + 0x6198 + 1, (i_var1 + 6) + 1,
                                  ((i_var1 + 8) - 0x619c) + -1, i_var3, u_var7,
                                  (i_var2 + 0x15d8));
                    u_var8 = 0;
                    i_var4 = (i_var3 + 6) + 1;
                    i_var2 = FUN_2ecc_02b3(0x2c63, i_var3, u_var7, i_var4, 0);
                    i_var2 = i_var2 + (u_var7 + 4) + 0x6198;
                } else {
                    i_var2 = (i_var1 + 0x20) * 6;
                    u_var8 = 0xc8c0;
                    fun_2c63_0002(0x294b, (i_var1 + 4) + 1, (i_var1 + 6) + 0x6192 + 1,
                                  (i_var1 + 8) + -1, ((i_var1 + 10) - 0x6196) + -1,
                                  (i_var2 + 0x15d7), (i_var2 + 0x15d8));
                    u_var8 = 0;
                    u_var6 = 0x2c63;
                    i_var3 = -0x10fc;
                    i_var2 = FUN_2ecc_02b3();
                    i_var4 = i_var2 + (i_var3 + 6) + 0x6192 + 1;
                    i_var2 = (i_var3 + 4);
                }
                fun_2c63_031b(0x2c63, 0x87, i_var2 + 1, i_var4, u_var8);
                fun_294b_0c76(0x2c63);
            }
        }
        if ((((i_var1 + 0x24) != -1) && ((i_var1 + 0x26) != -1)) && (i_var2 = FUN_2e46_010d(), (i_var1 + 0x24) != i_var2)) {
            fun_2e46_0283();
        }
    }
    return;
}



fn FUN_2ecc_02b3(param_1_00: u16,param_1: i16,param_2: u16) -> i16

{
let lVar1: i32; let iVar2: i16;
let iVar3: i16; let unaff_DS: u16;
let uVar4: u16;

FUN_3444_02c6(0x39d9);
iVar2 = (param_1 + 0x24); if ((iVar2 != - 1) & & ((param_1 + 0x26) != - 1)) {
uVar4 = (param_1 + 0x26); iVar2 = FUN_2e46_0627(0x3444, uVar4); if (iVar2 == - 1) {
iVar2 = - 1;
}
else {
FUN_2b26_0008(0x2e46, (uVar4 >> 8), uVar4 & 0xff, iVar2); if ((param_1 + 0x21) == '\a') {
iVar3 = ((((param_1 + 10) - (param_1 + 6)) - 0x6192) - 0x6196) - 0x61a2;
}
else {
iVar3 = ((((param_1 + 8) - (param_1 + 4)) - 0x619c) - 0x6198
) - 0x61a0;
}
lVar1 = (long)(iVar3 + - 2) * (long)(iVar2 >> 0xf); iVar2 = FUN_3444_2364(0x2b26, lVar1,(lVar1 >> 0x10), iVar2);
}
}
return iVar2;
}



fn fun_2ecc_0377(param_1_00: u16, undefined4 param_1, param_2: i16)

{
    let i_var1: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var1 = (param_1 + 0x24);
    if (i_var1 != -1) {
        i_var1 = i_var1 + param_2;
        if (i_var1 < 0) {
            i_var1 = 0;
        }
        fun_2ecc_00a8(0x3444, 0xc53, i_var1, 1);
    }
    return;
}



fn FUN_2ecc_03aa(param_1_00: u16,undefined2 * * * * * * param_1,param_2: u16) -> i16

{
undefined2 * * * * * pppppuVar1; let iVar2: i16; let iVar3: i16; let uVar4: u16; let unaff_SS: i16; let unaff_DS: u16; undefined2 * * * * * ** local_a;

FUN_3444_02c6(0x39d9); local_a = & local_a; uVar4 = 0x1ba9; FUN_1ba9_1038(0x3444); if (param_1[0x13] == (undefined2 * * * * * )0xffff) {
if ((param_1 + 0x21) == '\a') {
iVar3 = ((unaff_SS - param_1[3]) - 0x61a2 / 2) - 0x6192;
}
else {
iVar3 = local_a + (( - (0x61a0 / 2) - param_1[2]) - 0x619a);
}
iVar3 = iVar3 + - 1;
}
else {
pppppuVar1 = param_1[0x13]; local_a = (undefined2 * * * * * * * )0x1ba9; iVar3 = FUN_2e46_0627(); if (iVar3 == - 1) {
return - 1;
}
local_a = (undefined2 * * * * * ** )(pppppuVar1 >> 8); FUN_2b26_0008(0x2e46); if ((param_1 + 0x21) == '\a') {
iVar2 = param_1[5] + (((- 0x6192 - param_1[3]) - 0x6196) - 0x61a2);
}
else {
iVar2 = param_1[4] + (((- 0x619c - param_1[2]) - 0x6198) - 0x61a0);
}
local_a = (undefined2 * * * * * ** )(iVar2 + - 2); uVar4 = 0x3444; iVar3 = FUN_3444_2364(0x2b26, ((long)local_a * (long)iVar3),
(((long)local_a * (long)iVar3) >> 0x10));
}
if (iVar3 < 0) {
iVar3 = 0;
}
local_a = (undefined2 * * * * * ** )param_1; iVar2 = FUN_2ecc_0031(uVar4); if (iVar2 < iVar3) {
iVar3 = iVar2;
}
return iVar3;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_2ecc_051e(param_1_00: u16, param_1: i16, param_2: u16) -> u16

{
    let u_var1: u16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    let local_1a: *mut u16;
    let local_16: *mut u16;
    let local_12: *mut u16;
    let pi_var4: *mut u16;

    fun_3444_02c6(0x39d9);
    if ((*(param_1 + 2) & 1) == 0) {
        return 1;
    }
    if ((param_1 + 0x24) == -1)
    goto
    LAB_2ecc_074f;
    if ((param_1 + 0x21) == '\x06') {
        u_var3 = 0xc8c2;
        local_12 = CONCAT22(u_var3, 0xc4f);
        if (((param_1 + 4) + 0x6198 + 1 <= 0xc4f) && (*local_12 < ((param_1 + 8) - 0x619c) + -1)) {
            pi_var4 = 0x3444f277;
            i_var2 = FUN_2ecc_02b3();
            if (i_var2 == -1)
            goto
            LAB_2ecc_05c0;
            if ((param_1 + 4) + *pi_var4 + i_var2 <= *local_12) {
                i_var2 = (param_1 + 4) + 0x61a0 + *pi_var4 + i_var2;
                local_1a._0_2_ = 0xc4f;
                goto
                LAB_2ecc_06a7;
            }
        }
// LAB_2ecc_06b2:
        FUN_2ecc_0377(0x3444, param_1);
        FUN_2692_05ab();
        u_var3 = 0x2692;
        loop {
            i_var2 = FUN_2a60_0913(u_var3, &stack0xfff6);
            u_var3 = 0x2a60;
        }
        while (i_var2 == 0);
        FUN_2692_05ab();
        while (i_var2 = FUN_1ba9_10aa(), i_var2 != 0) {
            i_var2 = FUN_2a60_0913(0x1ba9, &stack0xfff6);
            if (i_var2 != 0) {
                fun_2ecc_0377();
            }
        }
    } else {
        u_var1 = 0xc8ba;
        local_16 = CONCAT22(u_var1, 0x6192);
        u_var3 = 0xc8c2;
        local_1a._0_2_ = 0xc51;
        local_1a = CONCAT22(u_var3, 0xc51);
        if ((0xc51 < (param_1 + 6) + 0x6192 + 1) || (((param_1 + 10) - 0x6196) + -1 <= 0xc51))
        goto
        LAB_2ecc_06b2;
        i_var2 = FUN_2ecc_02b3();
        if (i_var2 == -1) {
// LAB_2ecc_05c0:
            FUN_2ecc_00a8(0x3444, 0xc53);
            goto
            LAB_2ecc_074f;
        }
        if (*local_1a < (param_1 + 6) + *local_16 + i_var2)
        goto
        LAB_2ecc_06b2;
        i_var2 = (param_1 + 6) + 0x61a2 + *local_16 + i_var2;
// LAB_2ecc_06a7:
        if (i_var2 < local_1a)
        goto
        LAB_2ecc_06b2;
        while (i_var2 = FUN_1ba9_10aa(), i_var2 != 0) {
            FUN_2ecc_03aa(0x1ba9, param_1);
            fun_2ecc_00a8();
        }
    }
    fun_1ba9_1d7e();
// LAB_2ecc_074f:
    if ((param_1 + 0x26) != -1) {
        return 1;
    }
    return 0;
}


fn fun_2f42_0004(param_1: u16, param_2: u16)

{
    let u_var1: u16;
    let u_var2: u16;
    let i_var3: i16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    undefined * puStackY36;
    undefined
    auStackY32[16];
    let u_stack_y16: u16;
    let u_stack_y14: u16;
    let u_stack_y12: u16;
    undefined * puStackY10;

    fun_3444_02c6(0x39d9);
    i_var3 = 0;
    while (true) {
        u_var1 = (i_var3 * 4 + -0x5bc2);
        u_var2 = (i_var3 * 4 + -0x5bc0);
        puStackY36 = ff
        CONCAT22(u_var2, u_var1);
        if ((u_var2 | u_var1) == 0)
        break;
        auStackY32[i_var3] = *puStackY36;
        i_var3 = i_var3 + 1;
    }
    puStackY10 = auStackY32;
    u_stack_y12 = param_2;
    u_stack_y14 = 0x3444;
    u_stack_y16 = 0xf464;
    FUN_3444_134a();
    return;
}


fn fun_2f42_004c(param_1_00: u16, param_1: u16)

{
    let u_var1: u16;
    let u_var2: u16;
    let i_var3: i16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    undefined * local_24;
    undefined
    local_20[16];
    let u_stack_y16: u16;
    let u_stack_y14: u16;
    let u_stack_y12: u16;
    undefined * puStackY10;

    fun_3444_02c6(0x39d9);
    puStackY10 = local_20;
    u_stack_y12 = param_1;
    u_stack_y14 = 0x3444;
    u_stack_y16 = 0xf489;
    FUN_3444_124c();
    i_var3 = 0;
    while (true) {
        u_var1 = (i_var3 * 4 + -0x5bc2);
        u_var2 = (i_var3 * 4 + -0x5bc0);
        local_24 = ff
        CONCAT22(u_var2, u_var1);
        if ((u_var2 | u_var1) == 0)
        break;
        *local_24 = local_20[i_var3];
        i_var3 = i_var3 + 1;
    }
    return;
}


fn fun_2f42_0097() -> u16

{
    let pb_var1: *mut u8;
    let pi_var2: *mut u16;
    let u_var3: u16;
    let i_var4: i16;
    let i_var5: i16;
    let u_var6: u16;
    let u_var7: u16;
    let unaff_ds: u16;
    undefined4 * puVar8;
    let pu_var9: *mut u16;
    let u_var10: u32;
    let i_var11: i16;

    fun_3444_02c6(0x39d9);
    if (0xa400 == 0) {
        0x43e = 0x101;
        puVar8 = (undefined4 *)
        FUN_3074_00d3(0x3444, 0x100, 0);
        pu_var9 = *puVar8;
        u_var6 = (undefined2)(pu_var9 >> 0x10);
        0x6182 = *pu_var9;
        FUN_3444_1e00(0x3074, 0x15d5, 0x5b2d, pu_var9 + 4, u_var6, (pu_var9 + 2) * 6);
        u_var6 = 0x3074;
        fun_3074_01d4(0x3444, 0x100, 0);
        for (iVar11 = 0; piVar2 = 0x6182, *piVar2 != iVar11 &&i_var11 < = * piVar2;
            iVar11 = iVar11 + 1) {
            i_var5 = i_var11 + 0x101;
            pu_var9 = FUN_3074_00d3(u_var6, i_var5, 1);
            u_var6 = (pu_var9 + 2);
            i_var4 = i_var11 * 0x1d;
            u_var3 = 0xc8ca;
            (i_var4 + 0x800) = *pu_var9;
            (i_var4 + 0x802) = u_var6;
            fun_3074_034b(0x3074, i_var5, 1);
            u_var6 = 0x2b26;
            u_var10 = FUN_2b26_0008(0x3074, i_var11, 0);
            u_var7 = (undefined2)(u_var10 >> 0x10);
            i_var5 = u_var10;
            u_var3 = 0xc8ca;
            (i_var4 + 0x805) = (i_var5 + 4);
            (i_var4 + 0x807) = (i_var5 + 6);
            (i_var4 + 0x809) = (i_var5 + 8);
            (i_var4 + 0x80b) = (i_var5 + 10);
            pb_var1 = (i_var4 + 0x804);
            *pb_var1 = *pb_var1 & 0xfe;
            (i_var4 + 0x813) = 0;
            (i_var4 + 0x811) = 0;
        }
        puVar8 = (undefined4 *)
        FUN_3074_00d3(u_var6, 0x80, 2);
        u_var7 = (undefined2)(*puVar8 >> 0x10);
        i_var11 = *puVar8;
        u_var6 = (i_var11 + 5);
        u_var3 = 0xc8cc;
        0x6184 = (i_var11 + 3);
        0x6186 = u_var6;
        fun_3074_02f7(0x3074, 0x80, 2);
        puVar8 = (undefined4 *)
        FUN_3074_00d3(0x3074, 0x81, 2);
        u_var7 = (undefined2)(*puVar8 >> 0x10);
        i_var11 = *puVar8;
        u_var6 = (i_var11 + 5);
        u_var3 = 0xc8ce;
        0x6188 = (i_var11 + 3);
        0x618a = u_var6;
        fun_3074_02f7(0x3074, 0x81, 2);
        puVar8 = (undefined4 *)
        FUN_3074_00d3(0x3074, 0x82, 2);
        u_var7 = (undefined2)(*puVar8 >> 0x10);
        i_var11 = *puVar8;
        u_var6 = (i_var11 + 5);
        u_var3 = 0xc8d0;
        0x618c = (i_var11 + 3);
        0x618e = u_var6;
        fun_3074_02f7(0x3074, 0x82, 2);
        puVar8 = (undefined4 *)
        FUN_3074_00d3(0x3074, 0x83, 2);
        u_var7 = (undefined2)(*puVar8 >> 0x10);
        i_var11 = *puVar8;
        u_var6 = (i_var11 + 5);
        u_var3 = 0xc8d2;
        0x6190 = (i_var11 + 3);
        0x6192 = u_var6;
        fun_3074_02f7(0x3074, 0x83, 2);
        puVar8 = (undefined4 *)
        FUN_3074_00d3(0x3074, 0x84, 2);
        u_var7 = (undefined2)(*puVar8 >> 0x10);
        i_var11 = *puVar8;
        u_var6 = (i_var11 + 5);
        u_var3 = 0xc8d4;
        0x6194 = (i_var11 + 3);
        0x6196 = u_var6;
        fun_3074_02f7(0x3074, 0x84, 2);
        puVar8 = (undefined4 *)
        FUN_3074_00d3(0x3074, 0x85, 2);
        u_var7 = (undefined2)(*puVar8 >> 0x10);
        i_var11 = *puVar8;
        u_var6 = (i_var11 + 5);
        u_var3 = 0xc8d6;
        0x6198 = (i_var11 + 3);
        0x619a = u_var6;
        fun_3074_02f7(0x3074, 0x85, 2);
        puVar8 = (undefined4 *)
        FUN_3074_00d3(0x3074, 0x86, 2);
        u_var7 = (undefined2)(*puVar8 >> 0x10);
        i_var11 = *puVar8;
        u_var6 = (i_var11 + 5);
        u_var3 = 0xc8d8;
        0x619c = (i_var11 + 3);
        0x619e = u_var6;
        fun_3074_02f7(0x3074, 0x86, 2);
        puVar8 = (undefined4 *)
        FUN_3074_00d3(0x3074, 0x87, 2);
        u_var7 = (undefined2)(*puVar8 >> 0x10);
        i_var11 = *puVar8;
        u_var6 = (i_var11 + 5);
        u_var3 = 0xc8da;
        0x61a0 = (i_var11 + 3);
        0x61a2 = u_var6;
        fun_3074_02f7(0x3074, 0x87, 2);
        0xa400 = 1;
        fun_2f42_05a6(0x3074);
    }
    return 0;
}


fn fun_2f42_03a9(param_1_00: u16, param_1: i16, param_2: u16, param_3: u16)

{
    let u_var1: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0xa400 == 0) {
        fun_2f42_0097(0x3444);
    }
    if (param_1._1_1_ != '\0') {
        param_1 = param_1 >> 8;
    }
    u_var1 = 0xc8ca;
    (param_1 * 0x1d + 0x811) = param_2;
    (param_1 * 0x1d + 0x813) = param_3;
    return;
}


fn fun_2f42_03ee(param_1_00: u16, param_1: u16, param_2: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0xa400 == 0) {
        fun_2f42_0097(0x3444);
    }
    0xa42e = param_1;
    0xa430 = param_2;
    return;
}


fn fun_2f42_0419(param_1_00: u16, param_1: u16, param_2: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0xa400 == 0) {
        fun_2f42_0097(0x3444);
    }
    0xa432 = param_1;
    0xa434 = param_2;
    return;
}


fn fun_2f42_0444(param_1_00: u16, param_1: u16, param_2: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0xa400 == 0) {
        fun_2f42_0097(0x3444);
    }
    0xa436 = param_1;
    0xa438 = param_2;
    return;
}


fn fun_2f42_046f(param_1_00: u16, param_1: u16, param_2: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0xa400 == 0) {
        fun_2f42_0097(0x3444);
    }
    0xa43a = param_1;
    0xa43c = param_2;
    return;
}


fn fun_2f42_049a() -> u16

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let unaff_ds: u16;
    let u_var5: u32;

    fun_3444_02c6(0x39d9);
    i_var2 = FUN_3444_109a(0x3444, 0xa46e);
    if (0 < i_var2) {
        i_var3 = FUN_3444_134a(0x3444, i_var2, &stack0xfffa);
        if ((i_var3 == 2) && (i_var3 = FUN_3444_134a(0x3444, i_var2, 0x9c65), i_var3 == 1)) {
            i_var3 = 0;
            while (true) {
                pi_var1 = 0x6182;
                if (*pi_var1 == i_var3 || *pi_var1 < i_var3) {
                    fun_2f42_0004(0x3444);
                    FUN_3444_0fe6(0x3444);
                    return 0;
                }
                u_var5 = FUN_2b26_0008(0x3444, 8, 0);
                i_var3 = FUN_3444_134a(0x2b26, i_var2, u_var5 + 0x14, (u_var5 >> 0x10));
                if ((i_var3 != 8) || (i_var3 = FUN_3444_134a(0x3444, i_var2, 0x881, 0x5b2d), i_var3 != 4))
                break;
                i_var3 = 8;
                i_var4 = FUN_3444_134a(0x3444, i_var2, 0x8ed, 0x5b2d);
                if (i_var4 != 8)
                break;
                i_var3 = i_var3 + 1;
            }
        }
        FUN_3444_0fe6(0x3444);
        fun_3444_2226(0x3444, 0xa46e);
    }
    return 0xffff;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_2f42_05a6() -> u16

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    let unaff_ds: u16;
    let u_var5: u32;
    let local_6: i16;

    local_6 = -0x62f;
    fun_3444_02c6(0x39d9);
    local_6 = -0x8000;
    i_var2 = FUN_3444_109a(0x3444, 0xa46e);
    if (0 < i_var2) {
        local_6 = 2;
        i_var3 = FUN_3444_124c(0x3444, i_var2, &local_6);
        if ((i_var3 == 2) && (local_6 == 1)) {
            local_6 = 1;
            u_var4 = 0x3444;
            i_var3 = FUN_3444_124c(0x3444, i_var2, &local_6);
            if ((i_var3 == 1) && (0x9c65 == local_6)) {
                local_6 = 0;
                while (true) {
                    pi_var1 = 0x6182;
                    if (*pi_var1 == local_6 || *pi_var1 < local_6) {
                        local_6 = i_var2;
                        fun_2f42_004c(u_var4);
                        local_6 = i_var2;
                        FUN_3444_0fe6(u_var4);
                        return 0;
                    }
                    local_6 = 8;
                    u_var5 = FUN_2b26_0008(u_var4, 8, 0);
                    i_var3 = FUN_3444_124c(0x2b26, i_var2, u_var5 + 0x14, (u_var5 >> 0x10));
                    if (i_var3 != 8)
                    break;
                    local_6 = 4;
                    i_var3 = FUN_3444_124c(0x3444, i_var2, 0x881, 0x5b2d);
                    if (i_var3 != 4)
                    break;
                    local_6 = 8;
                    i_var3 = FUN_3444_124c(0x3444, i_var2, 0x8ed, 0x5b2d);
                    if (i_var3 != 8)
                    break;
                    u_var4 = 0x2b26;
                    fun_2b26_00d1(0x3444);
                    local_6 = local_6 + 1;
                }
            }
        }
        local_6 = i_var2;
        FUN_3444_0fe6(0x3444);
    }
    return 0xffff;
}


fn fun_2fad_000c()

{
    let u_var1: u16;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;
    let u_var4: u32;
    let in_stack_00000008: i16;
    undefined
    local_70[90];
    let u_stack_y22: u16;
    let u_stack_y20: u16;
    undefined * puStackY18;

    fun_3444_02c6(0x39d9);
    puStackY18 = local_70;
    u_stack_y20 = 0x3444;
    u_stack_y22 = 0xfafe;
    fun_3444_1aca();
    i_var2 = FUN_3444_109a();
    in_stack_00000008 = in_stack_00000008 * 0x7c;
    (in_stack_00000008 + 0x6220) = i_var2;
    if (i_var2 < 1) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb();
    }
    puStackY18 = ff
    0xfb57;
    FUN_3444_124c();
    u_var4 = fun_3143_1720();
    u_var3 = (u_var4 >> 0x10);
    u_var1 = 0xc8dc;
    (in_stack_00000008 + 0x61fa) = u_var4;
    (in_stack_00000008 + 0x61fc) = u_var3;
    if ((u_var3 | (in_stack_00000008 + 0x61fa)) == 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb();
    }
    puStackY18 = ff
    0xfba9;
    FUN_3444_124c();
    FUN_3444_0fe6();
    return;
}


fn fun_2fad_00e9()

{
    let u_var1: u16;
    let i_var2: i16;
    let unaff_ds: u16;
    let u_var3: u32;
    let in_stack_00000008: i16;
    let pu_stack_y110: *mut u16;
    undefined
    local_68[82];
    let u_stack_y22: u16;
    let u_stack_y20: u16;
    undefined * puStackY18;

    fun_3444_02c6(0x39d9);
    puStackY18 = local_68;
    u_stack_y20 = 0x3444;
    u_stack_y22 = 0xfbde;
    fun_3444_1aca();
    puStackY18 = ff
    0xfbf3;
    i_var2 = FUN_3444_109a();
    in_stack_00000008 = in_stack_00000008 * 0x7c;
    (in_stack_00000008 + 0x6220) = i_var2;
    if (i_var2 < 1) {
        // WARNING: Subroutine does not return
        puStackY18 = ff
        0x3444;
        u_stack_y20 = 0xfc26;
        fun_2a60_08cb();
    }
    u_var1 = 0xc8dc;
    (in_stack_00000008 + 0x61fe) = 0;
    (in_stack_00000008 + 0x6200) = 0;
    (in_stack_00000008 + 0x6204) = 0;
    (in_stack_00000008 + 0x6202) = 0;
    (in_stack_00000008 + 0x6208) = 0;
    (in_stack_00000008 + 0x6206) = 0;
    (in_stack_00000008 + 0x620c) = 0;
    (in_stack_00000008 + 0x620a) = 0;
    (in_stack_00000008 + 0x620e) = 0;
    (in_stack_00000008 + 0x6210) = 0;
    pu_stack_y110 = CONCAT22(u_var1, in_stack_00000008 + 0x61fe);
    puStackY18 = ff
    0xfc7a;
    FUN_3444_134a();
    if ((*pu_stack_y110 & 0x1fff) != 0) {
        u_var3 = fun_3143_1720();
        u_var1 = 0xc8dc;
        (in_stack_00000008 + 0x61fa) = u_var3;
        (in_stack_00000008 + 0x61fc) = (u_var3 >> 0x10);
    }
    FUN_3444_0fe6();
    return;
}


fn fun_2fad_0189()

{
    let pc_var1: String;
    let in_ax: u16;
    let i_var2: i16;
    let in_bx: i16;
    let unaff_bp: i16;
    let unaff_si: i16;
    let unaff_es: u16;
    let u_var3: u16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    char
    in_CF;
    let u_var4: u32;
    let u_var5: u16;

    u_var5 = 0x39d9;
    pc_var1 = (unaff_bp + unaff_si + -0x48);
    *pc_var1 = *pc_var1 + (in_ax >> 8) + in_CF;
    (unaff_bp + -0x6c) = in_bx + 0x61fe;
    (unaff_bp + -0x6a) = unaff_es;
    u_var3 = 0x3444;
    FUN_3444_134a(0x39d9);
    i_var2 = **(int * *)(unaff_bp + -0x6c) << 3;
    (unaff_bp + -2) = i_var2;
    if (i_var2 != 0) {
        u_var3 = 0x3143;
        u_var4 = fun_3143_1720(0x3444, i_var2, u_var5);
        u_var5 = 0xc8dc;
        i_var2 = (unaff_bp + -0x68);
        (i_var2 + 0x61fa) = u_var4;
        (i_var2 + 0x61fc) = (u_var4 >> 0x10);
    }
    FUN_3444_0fe6(u_var3);
    return;
}


fn fun_2fad_01e3(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let unaff_ds: u16;
    let local_6e: *mut u16;
    undefined
    local_66[80];
    let u_stack_y22: u16;
    let u_stack_y20: u16;
    undefined * puStackY18;

    fun_3444_02c6(0x39d9);
    param_1 = param_1 * 0x7c;
    puStackY18 = local_66;
    u_stack_y20 = 0x3444;
    u_stack_y22 = 0xfce4;
    fun_3444_1aca();
    i_var1 = FUN_3444_109a();
    (param_1 + 0x6220) = i_var1;
    if (i_var1 < 1) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb();
    }
    if ((param_1 + 0x6224) != 0) {
        puStackY18 = ff
        0xfd35;
        FUN_3444_1006();
        local_6e = CONCAT22(0x5b2d, param_1 + 0x61fe);
        puStackY18 = ff
        0xfd53;
        FUN_3444_134a();
        if (*local_6e != 0) {
            puStackY18 = ff
            0xfd7f;
            FUN_3444_134a();
        }
    }
    FUN_3444_0fe6();
    fun_3143_1850();
    return;
}



undefined4 FUN_2fad_02d7(param_1_00: u16,param_1: i16,param_2: i16,param_3: i16)

{
let uVar1: u32; let iVar2: i16;
let iVar3: i16; let uVar4: u16;
let uVar5: u16; let iVar6: i16;
let unaff_DS: u16; undefined4 * local_c; let piVar7: * mut u16;

FUN_3444_02c6(0x39d9); uVar5 = 0xc8de; piVar7 = CONCAT22(uVar5, 25000); 0x61a8 = 0; param_1 = param_1 * 0x7c; iVar2 = (param_1 + 0x61fe); iVar6 = iVar2 + - 1; if (iVar2 != 0) {
while ( * piVar7 == iVar6 || * piVar7 < iVar6) {
iVar2 = ( * piVar7 + iVar6) / 2; uVar5 = 0xc8dc; iVar3 = iVar2 * 8 + (param_1 + 0x61fa); uVar5 = (param_1 + 0x61fc); uVar4 = 0xc8e0; local_c = ffCONCAT22(uVar4, 0x61a4); 0x61a4 = iVar3; 0x61a6 = uVar5;
if ((param_3 < (iVar3 + 6)) || ((( * local_c + 6) == param_3 & & (param_2 < = (* local_c + 4))))) {
iVar6 = iVar2 + - 1;
}
else {
* piVar7 = iVar2 + 1;
}
}
uVar1 = * ff(param_1 + 0x61fa); uVar4 = (undefined2)(uVar1 >> 0x10); iVar6 = uVar1 + *piVar7 * 8; uVar5 = 0xc8e0; local_c = ffCONCAT22(uVar5, 0x61a4); 0x61a4 = iVar6; 0x61a6 = uVar4; if (((iVar6 + 4) == param_2) & & (( * local_c + 6) == param_3)) {
uVar4 = local_c; uVar5 = 0x61a6; goto LAB_2fad_03e0;
}
}
uVar4 = 0; uVar5 = 0;
// LAB_2fad_03e0: return CONCAT22(uVar5, uVar4);
}



fn fun_2fad_03e6(param_1_00: u16, param_1: i16)

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let i_var3: i16;
    let i_var4: i16;
    let i_var5: i16;
    let i_var6: i16;
    let unaff_ds: u16;
    let l_var7: i32;
    let pi_var8: *mut u16;
    let u_var9: u16;
    let u_var10: u16;
    let i_var11: i16;

    fun_3444_02c6(0x39d9);
    param_1 = param_1 * 0x7c;
    u_var10 = 0xc8dc;
    pi_var8 = CONCAT22(u_var10, (param_1 + 0x61fa));
    i_var6 = (param_1 + 0x61fa);
    u_var9 = (param_1 + 0x61fc);
    pi_var1 = (param_1 + 0x61fe);
    *pi_var1 = *pi_var1 + -1;
    i_var11 = (param_1 + 0x61fe);
    if (i_var11 < 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3444, 0xa507);
    }
    if (i_var11 == 0) {
        i_var5 = 0;
        u_var10 = 0;
    } else {
        i_var6 = *pi_var8;
        u_var9 = 0x3444;
        l_var7 = fun_3143_1720(0x3444, i_var11 << 3);
        u_var10 = (undefined2)(l_var7 >> 0x10);
        i_var5 = l_var7;
        if (l_var7 == 0) {
            // WARNING: Subroutine does not return
            fun_2a60_08cb(0x3143, 0xa53c);
        }
        FUN_3444_1f26(0x3143, l_var7, i_var6, u_var9, 0x61a8 << 3);
        u_var2 = 0xc8de;
        i_var3 = 0x61a8 * 8;
        i_var4 = i_var3 + i_var5;
        pi_var8 = CONCAT22(u_var10, i_var4);
        FUN_3444_1f26(0x3444, i_var4, u_var10, i_var3 + i_var6 + 8, u_var9, (i_var11 - 0x61a8) * 8);
    }
    *pi_var8 = i_var5;
    (pi_var8 + 2) = u_var10;
    fun_3143_1850(0x3444, i_var6, u_var9);
    return;
}


// WARNING: Could not reconcile some variable overlaps

undefined2
FUN_2fad_04e6(param_1_00: u16,param_1: i16,param_2: u16,uparam_3: i16,byte param_5,
param_6: u16,param_7: u16)

{
let piVar1: * mut u16; let uVar2: u16; let uVar3: u16; let uVar4: u16; let iVar5: i16; let uVar6: u16; let iVar7: i16; let unaff_DS: u16; let lVar8: i32; let local_20: * mut u16; let uStackY20: u32; let uVar9: u16;

FUN_3444_02c6(0x39d9); iVar5 = param_1 * 0x7c; uVar2 = 0xc8dc; local_20 = CONCAT22(uVar2, (iVar5 + 0x61fa)); uVar3 = (iVar5 + 0x61fa);
uVar9 = 0x3444; lVar8 = FUN_2fad_02d7(0x3444,param_1, param_2, param_3); if (lVar8 != 0) {
// WARNING: Subroutine does not return
FUN_2a60_08cb(0x3444, 0xa560);
}
uVar4 = param_3 & 0xff | param_5 << 8; uVar6 = 0xc8dc; piVar1 = (iVar5 + 0x61fe); * piVar1 = * piVar1 + 1; uStackY20 = FUN_3143_1720(0x3444, (iVar5 + 0x61fe) << 3); uVar6 = (undefined2)(uStackY20 >> 0x10); iVar7 = uStackY20; if (uStackY20 == 0x0) {
// WARNING: Subroutine does not return
FUN_2a60_08cb(0x3143, 0xa57d);
}
if ((iVar5 + 0x61fe) == 1) {
if ((uVar9 | uVar3) != 0) {
FUN_3143_1850(0x3143, uVar3, uVar9);
}
* uStackY20 = param_6; (iVar7 + 2) = param_7; (iVar7 + 4) = param_2; (iVar7 + 6) = uVar4;
}
else {
FUN_3444_1f26(); iVar7 = 0x61a8 * 8;
(iVar7 + 0xb9) = param_6; (iVar7 + 0xbb) = param_7; (iVar7 + 0xbd) = param_2; (iVar7 + 0xbf) = uVar4; iVar7 = 0x61a8; uStackY20._2_2_ = 0x3143; uStackY20 = 0x3444010b; FUN_3444_1f26();
FUN_3143_1850(0x3444, iVar7 * 8 + 0xc1,uStackY20._2_2_);
}
* local_20 = (undefined2)uStackY20; (iVar5 + 0x61fc) = uStackY20._2_2_; return 1;
}



fn fun_2fad_0664(param_1_00: u16, param_1: i16, param_2: u16, param_3: u16)

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let i_var3: i16;
    let i_var4: i16;
    let i_var5: i16;
    let i_var6: i16;
    let unaff_ds: u16;
    let l_var7: i32;
    let i_var8: i16;
    let i_var9: i16;
    let u_var10: u16;
    let u_var11: u16;

    fun_3444_02c6(0x39d9);
    l_var7 = FUN_3f5d_07d7(0x3444, param_1, param_2, param_3);
    if (l_var7 == 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3444, 0xa59f);
    }
    param_1 = param_1 * 0x7c;
    u_var2 = 0xc8dc;
    pi_var1 = (param_1 + 0x61fe);
    *pi_var1 = *pi_var1 + -1;
    l_var7 = fun_3143_1720(0x3444, (param_1 + 0x61fe) << 3);
    i_var3 = l_var7;
    if (l_var7 == 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3143, 0xa5af);
    }
    i_var4 = (0x61a8 + 1) * 8;
    u_var2 = 0xc8dc;
    u_var11 = (param_1 + 0x61fc);
    i_var9 = i_var3;
    u_var10 = u_var11;
    FUN_3444_1f26(0x3143, i_var3, u_var11, (param_1 + 0x61fa), u_var11, i_var4);
    u_var2 = 0xc8de;
    i_var5 = 0x61a8 * 8;
    i_var6 = i_var3 + i_var5 + 8;
    i_var8 = 0x3444;
    FUN_3444_1f26(0x3444, i_var6, u_var11, i_var5 + i_var9 + 0x10, u_var10, ((i_var4 - 0x61a8) + -1) * 8);
    fun_3143_1850(0x3444, i_var6, u_var11);
    u_var2 = 0xc8dc;
    (i_var8 + 0x61fa) = i_var3;
    (i_var8 + 0x61fc) = 0x211;
    return;
}



undefined4 FUN_3023_000e()

{
undefined4 * puVar1; let iVar2: i16; let lVar3: i32; let in_stack_00000008: i16; let in_stack_0000000a: * mut u16; undefined local_3c [38]; let local_16: i16; let uStackY20: u16; undefined * local_12; let local_e: i16;

FUN_3444_02c6(0x39d9); lVar3 = FUN_2fad_02d7(); if (lVar3 == 0) {
puVar1 = ff0x0; local_e = 0;
}
else {
local_12 = (undefined * )0x29a; FUN_3444_1006(); local_12 = (undefined * )0x2ae;
FUN_3444_124c(); iVar2 = local_16; in_stack_00000008 = in_stack_00000008 + 0x61; local_12 = local_3c; uStackY20 = 0x3444; local_16 = 0x2cd; FUN_3444_1aca();
if (( * (lVar3 + 7) & 1) == 0) {
local_12 = (undefined * )0x3444; uStackY20 = 0x456; lVar3 = FUN_3143_0d9e(); puVar1 = fflVar3; if (lVar3 == 0) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
local_e = iVar2; local_12 = (undefined * )0x481; FUN_3444_124c(); local_12 = (undefined * )iVar2;
}
else {
if (( * (lVar3 + 7) & 4) == 0) {
local_12 = (undefined * )0x369; FUN_3444_124c(); local_12 = (undefined * )0x3444;
uStackY20 = 0x381; FUN_3143_0d9e(); local_12 = (undefined * )(iVar2 + 2);
uStackY20 = 0x3143; local_16 = 0x3a4; local_e = FUN_3143_0d9e(); local_12 = (undefined * )0x3c5; FUN_3444_124c(); FUN_3122_0002();
puVar1 = ff0x3122; iVar2 = FUN_3122_0040(); if ((undefined * )iVar2 != local_12) {
local_12 = (undefined * )0x405; FUN_3444_07d2(); puVar1 = ff0x3444;
local_12 = (undefined * )0x418; FUN_3440_0040();
}
FUN_3143_0c84(); FUN_3143_15ce();
}
else {
local_12 = (undefined * )0x3444; uStackY20 = 0x2fc; lVar3 = FUN_3143_0d9e(); puVar1 = fflVar3; if (lVar3 == 0) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
local_12 = (undefined * )0x327; FUN_3444_124c(); local_e = (puVar1 + 2);
local_12 = (undefined * )0x3444; uStackY20 = 0x345; FUN_3444_1e00(); * puVar1 = 0xffff; local_12 = (undefined * )(iVar2 + 2);
}
}
* in_stack_0000000a = local_12;
}
return CONCAT22(local_e, puVar1);
}



fn fun_3023_0265()

{
    fun_3444_02c6(0x39d9);
    // WARNING: Subroutine does not return
    fun_2a60_08cb(0x3444, 0xa690);
}



fn FUN_304d_0002() -> i16

{
let uVar1: u16; let iVar2: i16;
let iVar3: i16; let iVar4: i16;
let unaff_DS: u16; let local_6c: * mut u16; undefined local_66 [80]; let uStackY22: u16; let uStackY20: u16; undefined *puStackY18;

FUN_3444_02c6(0x39d9); iVar2 = FUN_304d_0222(); if (iVar2 == - 1) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
iVar3 = iVar2 * 0x7c; puStackY18 = (undefined * )0x51a; FUN_304d_01c2(); puStackY18 = local_66; uStackY20 = 0x3444; uStackY22 = 0x532;
FUN_3444_1aca(); iVar4 = FUN_3444_109a();
uVar1 = 0xc8e4; local_6c = CONCAT22(uVar1,(iVar3 + 0x6222)); (iVar3 + 0x6222) = iVar4; if (iVar4 < 1) {
puStackY18 = (undefined * )0x570; iVar4 = FUN_3444_109a(); * local_6c = iVar4; if (iVar4 < 1) {
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
uVar1 = 0xc8e4; (iVar3 + 0x6212) = 0x5678; (iVar3 + 0x6214) = 0x1234;
(iVar3 + 0x621a) = 0; (iVar3 + 0x6218) = 0; (iVar3 + 0x621e) = 0; (iVar3 + 0x621c) = 0; FUN_2fad_00e9(); (iVar3 + 0x6224) = 1;
}
else {
puStackY18 = (undefined * )0x5ed; FUN_3444_124c(); FUN_2fad_000c(); (iVar3 + 0x6224) = 0;
}
return iVar2;
}



fn fun_304d_0152(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let u_var2: u16;
    let i_var3: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    i_var3 = param_1 * 0x7c;
    u_var1 = 0xc8e4;
    u_var2 = (i_var3 + 0x6222);
    if ((i_var3 + 0x6224) != 0) {
        FUN_3444_1006(0x3444, u_var2, 0, 0, 0);
        FUN_3444_134a(0x3444, u_var2, i_var3 + 0x6212, 0x5b2d, 0xe);
    }
    FUN_3444_0fe6(0x3444, u_var2);
    fun_2fad_01e3(0x3444, param_1);
    (i_var3 + 0x61aa) = 0;
    return;
}



void FUN_304d_01c2(param_1_00: u16,char *param_1,param_2: u16,param_3: u16,
param_4: u16)

{
undefined * puVar1;

FUN_3444_02c6(0x39d9); FUN_3444_17a6(0x3444, param_1, param_2, param_3, param_4, 0x4f); param_1[0x4f] = '\0'; for (; * param_1 == '.'; param_1 = param_1 + 1) {}
puVar1 = (undefined * )FUN_3444_1d5e(0x3444,param_1, param_2, 0x2e); if (puVar1 != (undefined * )0x0) {
* puVar1 = 0;
}
return;
}



ulong FUN_304d_0222()

{
ulong uVar1; let extraout_DX: u16; let uVar2: u16; let iVar3: i16; let uVar4: u16; let unaff_DS: u16;

FUN_3444_02c6(0x39d9); uVar2 = extraout_DX; if (0xa736 == 0) {
0xa736 = 1; for (iVar3 = 0; iVar3 < 4; iVar3 = iVar3 + 1) {
uVar2 = (undefined2)(((long)iVar3 * 0x7c) >> 0x10); *(undefined * )(((long)iVar3 * 0x7c) + 0x61aa) = 0;
}
}
uVar4 = 0; while ( true ) {
if (3 < uVar4) {
return CONCAT22(uVar2, 0xffff);
}
uVar1 = (long)uVar4 * 0x7c; uVar2 = (undefined2)(uVar1 >> 0x10); if ((uVar1 + 0x61aa) == '\0') break; uVar4 = uVar4 + 1;
}
return uVar1 & 0xffff0000 | uVar4;
}



fn fun_3074_000c(param_1_00: u16, param_1: u16, param_2: u16)

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let u_var3: u16;
    let u_var4: u16;
    let unaff_ds: u16;
    let u_var5: u32;

    u_var3 = 0x3444;
    fun_3444_02c6(0x39d9);
    0xa756 = 0;
    if (0xa750 != 0) {
        u_var3 = 0x27ac;
        fun_27ac_0287(0x3444, 1);
    }
    u_var4 = u_var3;
    if ((0xa754 | 0xa752) == 0) {
        u_var4 = 0x30b9;
        u_var5 = FUN_30b9_000e(u_var3, 0);
        0xa752 = u_var5;
        0xa754 = (u_var5 >> 0x10);
    }
    u_var4 = FUN_304d_0002(u_var4, param_1, param_2);
    u_var3 = 0xc8e6;
    (0xa750 * 2 + 0x639a) = u_var4;
    i_var2 = (0xa750 * 2 + 0x639a);
    pi_var1 = 0xa750;
    *pi_var1 = *pi_var1 + 1;
    if (i_var2 < 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x304d, 0xa738);
    }
    return;
}



ulong FUN_3074_008e(param_1_00: u16,param_1: u16,param_2: u16)

{
ulong uVar1; let uVar2: u16;

FUN_3444_02c6(0x39d9); FUN_27ac_0287(0x3444, 1);
uVar1 = FUN_3074_00d3(0x27ac, param_1, param_2); uVar2 = (uVar1 >> 0x10);
if (uVar1 != 0) {
FUN_3143_15ce(0x27ac, uVar1, 1);
}
return uVar1 & 0xffff | uVar2 << 0x10;
}



long FUN_3074_00d3(param_1_00: u16,param_1: i16,param_2: i16)

{
let piVar1: * mut u16; let iVar2: i16; let uVar3: u16; let unaff_DS: u16; let lVar4: i32; let uVar5: u16; let uVar6: u16;

FUN_3444_02c6(0x39d9); if (0xa750 < 1) {
// WARNING: Subroutine does not return
FUN_2a60_08cb(0x3444, 0xa758);
}
lVar4 = FUN_30b9_0203(0x3444, param_1, param_2,0xa752); if (lVar4 == 0) {
FUN_27ac_0287(0x30b9); uVar5 = 0x27ac; for (iVar2 = 0; piVar1 = 0xa750, *piVar1 != iVar2 & & iVar2 < = * piVar1; iVar2 = iVar2 + 1)
{
uVar3 = 0x3023; lVar4 = FUN_3023_000e(uVar5,(iVar2 * 2 + 0x639a), param_1,param_2, & stack0xfff8); uVar5 = (undefined2)lVar4; if (lVar4 != 0) {
if ((param_1 == 4) & & (param_2 == 7)) {
uVar5 = 0xa77a; uVar3 = 0x3444; FUN_3440_0040();
}
uVar6 = 0xa754; iVar2 = FUN_30b9_0341(uVar3,param_1, param_2, 0xa752); if (iVar2 != 0) {
return CONCAT22(uVar5, uVar6);
}
// WARNING: Subroutine does not return
FUN_2a60_08cb(0x30b9, 0xa78f);
}
uVar5 = uVar3;
}
FUN_3440_0040(0xa7b3); lVar4 = 0;
}
else {
FUN_3143_15ce(0x30b9, lVar4);
}
return lVar4;
}



fn fun_3074_01d4(param_1_00: u16, param_1: u16, param_2: u16)

{
    let unaff_ds: u16;
    let l_var1: i32;

    fun_3444_02c6(0x39d9);
    if (0xa750 < 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3444, 0xa7f5);
    }
    l_var1 = FUN_30b9_0203(0x3444, param_1, param_2, 0xa752, 0xa754);
    if (l_var1 != 0) {
        FUN_3440_0040(0xa818);
        FUN_30b9_0401(0x3444, param_1, param_2, 0xa752, 0xa754);
        fun_3143_0c84(0x30b9, param_1, param_2);
    }
    return;
}


fn fun_3074_024c(param_1_00: u16, undefined *param_1, param_2: u16)

{
    let i_var1: i16;
    let unaff_ds: u16;
    undefined * local_6;

    local_6 = ff
    0x997;
    fun_3444_02c6(0x39d9);
    if (0xa750 < 0) {
        local_6 = ff
        0xa82a;
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3444);
    }
    local_6 = &stack0xfffc;
    i_var1 = FUN_30b9_016b(0x3444, param_1, param_2, 0xa752, 0xa754, &local_6);
    if (i_var1 == 0) {
        local_6 = param_1;
        FUN_3440_0040(0xa866);
    } else {
        FUN_3440_0040(0xa84d);
        local_6 = ff
        0xa752;
        FUN_30b9_0401(0x3444, local_6, 0xa754);
        local_6 = param_1;
        fun_3143_0c84(0x30b9);
    }
    return;
}


fn fun_3074_02da(param_1_00: u16, param_1: u16, param_2: u16)

{
    fun_3444_02c6(0x39d9);
    fun_3143_15ce(0x3444, param_1, param_2, 3);
    return;
}


fn fun_3074_02f7(param_1_00: u16, param_1: u16, param_2: u16)

{
    let unaff_ds: u16;
    let l_var1: i32;

    fun_3444_02c6(0x39d9);
    if (0xa750 < 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3444, 0xa894);
    }
    l_var1 = FUN_30b9_0203(0x3444, param_1, param_2, 0xa752, 0xa754);
    if (l_var1 != 0) {
        fun_3143_15ce(0x30b9, l_var1, 3);
    }
    return;
}


fn fun_3074_034b(param_1_00: u16, param_1: u16, param_2: u16)

{
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0xa750 < 0) {
        // WARNING: Subroutine does not return
        fun_2a60_08cb(0x3444, 0xa8b7);
    }
    FUN_30b9_0094(0x3444, param_1, param_2, 0xa752, 0xa754);
    return;
}


fn fun_3074_037f()

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    u_var3 = 0x3444;
    while (0 < 0xa750) {
        u_var2 = 0xc8e6;
        pi_var1 = 0xa750;
        *pi_var1 = *pi_var1 + -1;
        fun_304d_0152(u_var3, (0xa750 * 2 + 0x639a));
        u_var3 = 0x304d;
    }
    fun_30b9_00fb(u_var3, 0xa752, 0xa754);
    0xa754 = 0;
    0xa752 = 0;
    return;
}



void FUN_3074_041a(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16,param_5: u16,param_6: u16)

{
let unaff_DS: u16;

FUN_3444_02c6(0x39d9);
FUN_27ac_0287(0x3444, 1); FUN_3074_034b(0x27ac, param_1, param_2); FUN_3023_0265(0x27ac,0x639a, param_4, param_5, param_6, param_1,param_2, param_3); return;
}



int * * FUN_30b9_000e(param_1_00: u16,param_1: i16)

{
let iVar1: i16; let iVar2: i16;
let iVar3: i16; int * * ppiVar4;
let uVar5: u16;

FUN_3444_02c6(0x39d9);
if (param_1 == 0) {
iVar3 = 0x1f7;
}
else {
iVar3 = FUN_30b9_0611(0x3444, param_1);
}
iVar1 = (iVar3 + 1) * 4;
uVar5 = 0xffff; iVar2 = iVar3 * 8 + 4; ppiVar4 = (int * * )FUN_3143_0d9e(0x3444, iVar2, iVar2 >> 0xf,1, 0xa8dc); FUN_3444_1f84(0x3143, ppiVar4, (ppiVar4 + 2), uVar5, iVar1); * * ppiVar4 = iVar3; ( *ppiVar4 + 2) = 0; return ppiVar4;
}



bool FUN_30b9_0094(param_1_00: u16,param_1: u16,param_2: u16,int * * param_3)

{
let piVar1: * mut u16; let iVar2: i16; let uVar3: u16; let unaff_DS: u16; let lVar4: i32;

FUN_3444_02c6(0x39d9); lVar4 = FUN_30b9_0203(0x3444, param_1,param_2, param_3._0_2_, param_3._2_2_); if (lVar4 != 0) {
( * param_3 + 0xa8e8 * 4 + 4) = 0xffff; piVar1 = * param_3; uVar3 = (undefined2)(piVar1 >> 0x10);
iVar2 = ( * piVar1 + 0xa8e8) * 4; (iVar2 + piVar1 + 6) = 0; (iVar2 + piVar1 + 4) = 0; piVar1 = ( * param_3 + 2);
* piVar1 = * piVar1 + - 1;
}
return lVar4 != 0;
}



fn fun_30b9_00fb(param_1_00: u16, int * * param_1)

{
    let pi_var1: *mut u16;
    let pi_var2: *mut u16;
    let i_var3: i16;
    let i_var4: i16;
    let u_var5: u16;
    let u_var6: u16;
    let u_var7: u16;
    let u_var8: u16;
    let i_var9: i16;
    let i_var10: i16;

    fun_3444_02c6(0x39d9);
    pi_var1 = *param_1;
    u_var5 = (undefined2)(pi_var1 >> 0x10);
    pi_var2 = pi_var1;
    i_var9 = *pi_var1;
    i_var10 = 0;
    u_var8 = 0x3444;
    while (true) {
        pi_var2 = pi_var2 + 2;
        if (i_var9 <= i_var10)
        break;
        u_var7 = u_var8;
        if (*pi_var2 != -1) {
            i_var4 = (i_var10 + i_var9) * 4;
            u_var6 = (undefined2)(*param_1 >> 0x10);
            i_var3 = *param_1;
            u_var5 = (i_var3 + i_var4 + 6);
            u_var7 = 0x3143;
            fun_3143_0c84(u_var8, (i_var3 + i_var4 + 4));
        }
        i_var10 = i_var10 + 1;
        u_var8 = u_var7;
    }
    fun_3143_0c84(u_var8, param_1._0_2_, param_1._2_2_);
    return;
}


// WARNING: Could not reconcile some variable overlaps

undefined2
FUN_30b9_016b(param_1_00: u16,param_1: i16,param_2: i16,int * * param_3,int *param_4,int *param_5)

{
let piVar1: * mut u16; let piVar2: * mut u16; let piVar3: * mut u16; let uVar4: u16; let local_12: u32; let local_8: i16;

FUN_3444_02c6(0x39d9); piVar1 = * param_3; uVar4 = (undefined2)(piVar1 >> 0x10); local_12 = (piVar1 & 0xffff0000 | ZEXT24(piVar1 + *piVar1 * 2 + 2)); local_8 = 0; piVar3 = piVar1; while ( true ) {
piVar2 = piVar3 + 2; if ( * piVar1 < = local_8) {
return 0;
}
if ((( * piVar2 != - 1) & & ( * local_12 == param_1)) && ((local_12 + 2) == param_2)) break; local_8 = local_8 + 1; local_12 = (local_12 & 0xffff0000 | (local_12 + 4)); piVar3 = piVar2;
}
* param_4 = * piVar2; * param_5 = piVar3[3]; return 1;
}



undefined4 FUN_30b9_0203(param_1_00: u16,param_1: i16,param_2: i16,int * * param_3)

{
let puVar1: * mut u16; let uVar2: u16; let piVar3: * mut u16; let iVar4: i16; let iVar5: i16; let iVar6: i16; let iVar7: i16; let    uVar8: u16; let unaff_DS: u16; let local_e: u16; let piVar9: * mut u16;

FUN_3444_02c6(0x39d9); local_e = 0;
piVar9 = * param_3; uVar8 = (undefined2)(piVar9 >> 0x10); iVar6 = *piVar9; iVar5 = piVar9 + 4; iVar4 = (param_2 * 7 + param_1._1_1_ + param_1) % iVar6; piVar9 = (piVar9 & 0xffff0000 | (iVar5 + iVar4 * 4));
for (iVar7 = iVar4; - 1 < iVar7; iVar7 = iVar7 + - 1) {
if (( * piVar9 == param_1) & & ((piVar9 + 2) == param_2)) goto LAB_30b9_02be; if ( * piVar9 == - 1) goto LAB_30b9_031e; piVar9 = (piVar9 & 0xffff0000 | (piVar9 - 4)); local_e = local_e + 1;
}
iVar7 = iVar6 + - 1; piVar3 = (iVar7 * 4 + iVar5); for (; iVar4 < = iVar7; iVar7 = iVar7 + -1) {
if (( * piVar3 == param_1) & & (piVar3[1] == param_2)) goto LAB_30b9_02be; if ( * piVar3 == - 1) break; local_e = local_e + 1; piVar3 = piVar3 + - 2;
}
// LAB_30b9_031e:
0xa8e8 = iVar7; puVar1 = 0xa8f6; uVar2 = * puVar1; * puVar1 = * puVar1 + local_e; piVar9 = 0xa8f8; * piVar9 = * piVar9 + (local_e >> 0xf) + CARRY2(uVar2, local_e); puVar1 = 0xa8ee; uVar2 = * puVar1; * puVar1 = * puVar1 + 1; piVar9 = 0xa8f0; * piVar9 = *piVar9 + (0xfffe < uVar2); piVar3 = 0x0; uVar8 = 0;
// LAB_30b9_033b: return CONCAT22(uVar8, piVar3);
// LAB_30b9_02be:
puVar1 = 0xa8f2; uVar2 = * puVar1; * puVar1 = * puVar1 + local_e; piVar9 = 0xa8f4; * piVar9 = * piVar9 + (local_e >> 0xf) + CARRY2(uVar2, local_e); puVar1 = 0xa8ea; uVar2 = * puVar1; * puVar1 = * puVar1 + 1; piVar9 = 0xa8ec; * piVar9 = *piVar9 + (0xfffe < uVar2); 0xa8e8 = iVar7; iVar6 = (iVar6 + iVar7) * 4; uVar8 = (undefined2)( * param_3 >> 0x10); iVar5 = * param_3;
piVar3 = * (int * * )(iVar5 + iVar6 + 4); uVar8 = (iVar5 + iVar6 + 6); if ( * piVar3 == 0) {
FUN_3143_103e(0x3444, piVar3, uVar8); goto LAB_30b9_033b;
}
local_e = 0xe99; FUN_30b9_046a(0x3444, param_3._0_2_, (param_3 >> 0x10));
goto LAB_30b9_031e;
}



undefined2
FUN_30b9_0341(param_1_00: u16,param_1: u16,param_2: u16,int * * param_3,
param_4: u16,param_5: u16,param_6: u16)

{
let piVar1: * mut u16; let iVar2: i16; let iVar3: i16; let uVar4: u16; let unaff_DS: u16; let lVar5: i32;

FUN_3444_02c6(0x39d9); piVar1 = *param_3; iVar3 = * piVar1; if ((((piVar1 + 2) == iVar3) && (iVar2 = FUN_30b9_046a(0x3444, param_3,param_4), iVar2 == iVar3)) & &
(iVar2 = FUN_30b9_050e(0x3444, param_3, param_4), iVar2 == iVar3)) {
return 0;
}
lVar5 = FUN_30b9_0203(0x3444, param_1, param_2,param_3, param_4); if (lVar5 == 0) {
piVar1 = * param_3; (0xa8e8 * 4 + piVar1 + 4) = param_1; piVar1 = *param_3; (0xa8e8 * 4 + piVar1 + 6) = param_2; iVar3 = (0xa8e8 + iVar3) * 4; piVar1 = * param_3; uVar4 = (undefined2)(piVar1 >> 0x10); iVar2 = piVar1; (iVar3 + iVar2 + 4) = param_5; (iVar3 + iVar2 + 6) = param_6; piVar1 = * param_3;
piVar1 = (piVar1 + 2); * piVar1 = * piVar1 + 1; return 1;
}
// WARNING: Subroutine does not return
FUN_2a60_08cb(0x3444, 0xa8fa);
}



bool FUN_30b9_0401(param_1_00: u16,param_1: u16,param_2: u16,int * * param_3)

{
let piVar1: * mut u16; let iVar2: i16; let uVar3: u16; let unaff_DS: u16; let lVar4: i32;

FUN_3444_02c6(0x39d9); lVar4 = FUN_30b9_0203(0x3444, param_1,param_2, param_3._0_2_, param_3._2_2_); if (lVar4 != 0) {
(0xa8e8 * 4 + * param_3 + 4) = 0xffff; piVar1 = * param_3; uVar3 = (undefined2)(piVar1 >> 0x10);
iVar2 = ( * piVar1 + 0xa8e8) * 4; (iVar2 + piVar1 + 6) = 0; (iVar2 + piVar1 + 4) = 0; piVar1 = ( * param_3 + 2);
* piVar1 = * piVar1 + - 1;
}
return lVar4 != 0;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_30b9_046a(param_1_00: u16, int * * param_1) -> u16

{
    let u_var1: u16;
    let u_var2: u16;
    let i_var3: i16;
    let pi_var4: *mut u16;
    let u_var5: u16;
    let u_var6: u16;
    let local_18: *mut u16;
    let local_14: *mut u16;
    let local_10: *mut u16;
    let local_c: i16;

    fun_3444_02c6(0x39d9);
    FUN_3440_0040(0xa92b);
    pi_var4 = *param_1;
    local_c = *pi_var4;
    local_10 = (pi_var4 & 0xffff0000 | (pi_var4 + local_c * 4 + 4));
    local_14 = (pi_var4 & 0xffff0000 | (pi_var4 + 4));
    u_var6 = 0x3444;
    while (i_var3 = local_c + -1, local_c != 0) {
        u_var5 = u_var6;
        local_c = i_var3;
        if (*local_14 != -1) {
            u_var1 = *local_10;
            u_var2 = (local_10 + 2);
            local_18 = CONCAT22(u_var2, u_var1);
            if (((u_var2 | u_var1) != 0) && (*local_18 != 0)) {
                u_var5 = 0x3143;
                local_c = 0x1069;
                fun_3143_0c84(u_var6, u_var1, u_var2);
                *local_14 = -1;
                pi_var4 = (*param_1 + 2);
                *pi_var4 = *pi_var4 + -1;
            }
        }
        local_14 = (local_14 & 0xffff0000 | (local_14 + 4));
        local_10 = (local_10 & 0xffff0000 | (local_10 + 4));
        u_var6 = u_var5;
    }
    return (*param_1 + 2);
}


fn fun_30b9_050e(param_1_00: u16, int * * param_1) -> u16

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let i_var3: i16;
    let pi_var4: *mut u16;
    let pi_var5: *mut u16;
    let u_var6: u16;
    let i_var7: i16;
    let local_24: *mut u16;
    let local_20: *mut u16;
    let local_1c: *mut u16;
    let i_var8: i16;
    let i_var9: i16;

    i_var7 = 0x3444;
    fun_3444_02c6(0x39d9);
    i_var9 = -1;
    pi_var1 = *param_1;
    u_var6 = (undefined2)(pi_var1 >> 0x10);
    i_var3 = pi_var1;
    i_var8 = *pi_var1;
    pi_var4 = (i_var3 + i_var8 * 4);
    local_1c = (pi_var1 & 0xffff0000 | (i_var3 + 4));
    if ((i_var3 + 2) != 0) {
        while (true) {
            pi_var5 = pi_var4 + 2;
            if (i_var8 == 0)
            break;
            i_var3 = i_var7;
            i_var8 = i_var8 + -1;
            if (*local_1c != -1) {
                i_var9 = *pi_var5;
                i_var3 = 0x3143;
                i_var2 = fun_3143_16b6(i_var7, i_var9, pi_var4[3]);
                i_var8 = i_var7;
                if (i_var9 < i_var2) {
                    i_var9 = *pi_var5;
                    i_var8 = 0x3143;
                    i_var3 = 0x3143;
                    i_var7 = fun_3143_1634(0x3143, i_var9, pi_var4[3]);
                    if (i_var7 == 3) {
                        local_20 = (pi_var1 & 0xffff0000 | ZEXT24(pi_var5));
                        local_24 = local_1c;
                        i_var9 = i_var2;
                    }
                }
            }
            local_1c = (local_1c & 0xffff0000 | (local_1c + 4));
            i_var7 = i_var3;
            pi_var4 = pi_var5;
        }
        if (i_var9 == -1) {
            // WARNING: Subroutine does not return
            fun_2a60_08cb(i_var7, 0xa937);
        }
        u_var6 = (undefined2)(local_20 >> 0x10);
        fun_3143_0c84(i_var7, *local_20, (local_20 + 2));
        *local_24 = -1;
        (local_20 + 2) = 0;
        *local_20 = 0;
        pi_var1 = (*param_1 + 2);
        *pi_var1 = *pi_var1 + -1;
    }
    return (*param_1 + 2);
}



fn FUN_30b9_0611(param_1_00: u16,param_1: i16) -> i16

{
let uVar1: u16; let iVar2: i16;
let iVar3: i16; let uVar4: u32;
let iVar5: i16; let iVar6: i16;
let iVar7: i16;

FUN_3444_02c6(0x39d9);
iVar3 = 0; iVar6 = 0x3444; iVar5 = 0x11c3; uVar4 = FUN_3143_1720(0x3444, 800); uVar1 = (undefined2)(uVar4 >> 0x10); iVar7 = uVar4; loop {
if ((param_1 < = iVar6) || (399 < iVar3)) {
FUN_3143_1850(0x3143, uVar4); return iVar7;
}
for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {
if (iVar5 % (iVar2 * 2 + iVar7) == 0) goto LAB_30b9_0671;
}
(iVar7 + iVar3 * 2) = iVar5;
iVar3 = iVar3 + 1; iVar6 = iVar5;
// LAB_30b9_0671:
iVar5 = iVar5 + 1;
} while ( true );
}



fn fun_3122_0002(param_1_00: u16, param_1: u16, param_2: u16, param_3: i16)

{
    undefined * puVar1;
    let u_var2: u32;
    let i_var3: i16;
    undefined * puVar4;
    let unaff_ds: u16;

    u_var2 = 
    0xa952;
    puVar4 = ff
    u_var2;
    for (iVar3 = 0xfee; iVar3 != 0; iVar3 = iVar3 + -1) {
        puVar1 = puVar4;
        puVar4 = puVar4 + 1;
        *puVar1 = 0x20;
    }
    0xa95c = 0xfee;
    0xa95e = 0;
    0xa966 = 0;
    0xa956 = param_1;
    0xa958 = param_2;
    if (param_3 < 0) {
        param_3 = 0x7fff;
    }
    0xa95a = param_3;
    return;
}



fn FUN_3122_0040(param_1_00: u16,undefined4 param_1,param_2: i16) -> i16

{
let piVar1: * mut u16; let pbVar2: * mut u8; let bVar3: u8; let uVar4: u32; let uVar5: u16; let uVar6: u16; let pbVar7: * mut u8; let pbVar8: * mut u8; let pbVar9: * mut u8; let pbVar10: * mut u8; let uVar11: u16; let uVar12: u16; let unaff_SS: u16; let unaff_DS: u16; let uVar13: u16; let local_4: i16;

local_4 = 0; pbVar7 = * (byte * * )0xa95c; uVar6 = 0xa960;
pbVar8 = * (byte * * )0xa962;
uVar11 = 0xa954; uVar5 = 0xa95e; uVar12 = (undefined2)(param_1 >> 0x10);
pbVar10 = param_1; uVar4 = * (undefined4 *)0xa956; uVar13 = (undefined2)(uVar4 >> 0x10); pbVar9 = uVar4; if (0xa966 == 0) goto LAB_3122_00a0; piVar1 = 0xa966; * piVar1 = * piVar1 + - 1; if ( * piVar1 == 0) goto LAB_3122_00a7; piVar1 = 0xa966; * piVar1 = * piVar1 + - 1; if ( * piVar1 == 0) goto LAB_3122_00b5; piVar1 = 0xa966; * piVar1 = * piVar1 + - 1; if ( *piVar1 == 0) goto LAB_3122_00de; piVar1 = 0xa966; * piVar1 = * piVar1 + - 1;
if ( * piVar1 == 0) goto LAB_3122_00e8;
loop {
piVar1 = 0xa964; * piVar1 = * piVar1 + - 1; if ( * piVar1 < 0) {
uVar13 = 0xa958;
// LAB_3122_00a0: while ( true ) {
uVar5 = uVar5 >> 1; if ((uVar5 & 0x100) == 0) {
// LAB_3122_00a7:
piVar1 = 0xa95a; * piVar1 = * piVar1 + - 1; if ( * piVar1 < 0) {
uVar11 = 1; goto LAB_3122_014f;
}
pbVar2 = pbVar9; pbVar9 = pbVar9 + 1;
uVar5 = CONCAT11(0xff, * pbVar2);
}
if ((uVar5 & 1) == 0) break;
// LAB_3122_00b5:
piVar1 = 0xa95a; * piVar1 = *piVar1 + - 1; if ( * piVar1 < 0) {
uVar11 = 2; goto LAB_3122_014f;
}
bVar3 = * pbVar9; uVar6 = uVar6 & 0xff00 | bVar3; pbVar9 = pbVar9 + 1; *pbVar10 = bVar3; pbVar10 = pbVar10 + 1;
* pbVar7 = bVar3; uVar13 = 0xa958; pbVar7 = ((pbVar7 + 1) & 0xfff); local_4 = local_4 + 1; param_2 = param_2 + - 1; if (param_2 == 0) {
uVar11 = 0; goto LAB_3122_014f;
}
}
// LAB_3122_00de:
piVar1 = 0xa95a; * piVar1 = * piVar1 + - 1; if ( * piVar1 < 0) {
uVar11 = 3; goto LAB_3122_014f;
}
pbVar8 = (pbVar8 & 0xff00 | * pbVar9); pbVar9 = pbVar9 + 1;
// LAB_3122_00e8:
piVar1 = 0xa95a; * piVar1 = * piVar1 + - 1;
if ( * piVar1 < 0) {
uVar11 = 4; goto LAB_3122_014f;
}
bVar3 = * pbVar9; pbVar9 = pbVar9 + 1; pbVar8 = (pbVar8 & 0xff | ((((((((bVar3 << 8) >> 9) << 8) >> 9) << 8) >> 9) << 8) >> 9) << 8); uVar6 = ((bVar3 & 0xf) + 2); 0xa964 = uVar6;
}
bVar3 = * pbVar8; uVar6 = uVar6 & 0xff00 | bVar3; pbVar8 = ((pbVar8 + 1) & 0xfff); * pbVar10 = bVar3;
pbVar10 = pbVar10 + 1; * pbVar7 = bVar3; pbVar7 = ((pbVar7 + 1) & 0xfff); local_4 = local_4 + 1; param_2 = param_2 + - 1; if (param_2 == 0) {
uVar11 = 5;
// LAB_3122_014f:
0xa966 = uVar11; 0xa95e = uVar5; * (byte * * )0xa95c = pbVar7; * (byte * * )0xa956 = pbVar9; 0xa960 = uVar6; * (byte ** )0xa962 = pbVar8; return local_4;
}
} while ( true );
}



bool FUN_3122_0170(param_1_00: u16,undefined4 param_1)

{
let iVar1: i16; let unaff_DS: u16;

iVar1 = FUN_3444_109a(0x39d9, param_1, (param_1 >> 0x10), 0x8000); 0xad56 = iVar1; if (0 < iVar1) {
FUN_3122_0002(0x3444, 0xad52, 0xad54, 0);
}
return 0 < iVar1;
}



fn FUN_3122_01a9(param_1_00: u16,param_1: i16,param_2: u16,param_3: i16) -> i16

{
let uVar1: u16; let uVar2: u32;
let iVar3: i16; let uVar4: u16;
let uVar5: u16; let uVar6: u16;
let uVar7: u16; let unaff_DS: u16;
let local_4: i16;

uVar7 = 0x39d9; local_4 = 0; uVar6 = uVar7; if (0 < 0xa95a) goto LAB_3122_01df; loop {
uVar1 = 0xad50; uVar2 = * (undefined4 *)0xad52; uVar5 = (undefined2)(uVar2 >> 0x10); uVar4 = (undefined2)uVar2; 0xa956 = uVar4; 0xa958 = uVar5;
uVar6 = 0x3444; iVar3 = FUN_3444_124c(uVar7,0xad56, uVar4, uVar5, uVar1); if (iVar3 < 1) {
return local_4;
}
0xa95a = iVar3;
// LAB_3122_01df:
uVar7 = 0x3122; iVar3 = FUN_3122_0040(uVar6, param_1 + local_4, param_2,param_3 - local_4); local_4 = local_4 + iVar3;
} while (local_4 != param_3); return param_3;
}



fn fun_3143_0008(param_1_00: u16, param_1: u16)

{
    fun_3444_02c6(0x39d9);
    FUN_3444_1e00(0x3444, 8, param_1, 0xad5e);
    return;
}


fn fun_3143_0040()

{
    let unaff_ds: u16;
    let local_10: u16;
    let pu_stack_y14: *mut u16;

    fun_3444_02c6(0x39d9);
    if (0xad5a != 0) {
        pu_stack_y14 = &local_10;
        local_10 = 0x3444;
        FUN_3444_1cd0();
        0xad5a = 0;
    }
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_3143_007e()

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    ulong
    uVar3;
    let i_var4: i16;
    let unaff_ds: u16;
    let local_18: *mut u16;
    let local_10: i16;
    let local_e: i16;
    let u_stack_y12: u16;
    let pi_stack_y10: *mut u16;

    fun_3444_02c6(0x39d9);
    if (0xad5a == 0) {
        local_10 = 0x4800;
        pi_stack_y10 = &local_10;
        u_stack_y12 = 0x3444;
        local_e = 0x14d9;
        fun_3444_1c7e();
        local_10 = 0x4800;
        pi_stack_y10 = &local_10;
        u_stack_y12 = 0x3444;
        local_e = 0x14f0;
        fun_3444_1c7e();
        0x63a2 = local_10;
        0x63a4 = local_10 + local_e + -1;
        0x63a8 = local_e + -1;
        0x63a6 = local_e + -1;
        0x63ae = local_10 + local_e + -0x1001;
        0x63b0 = 0;
        0x63b4 = 0;
        0x63b2 = 0;
        pi_stack_y10 = 0x3444;
        u_stack_y12 = 0x1550;
        fun_3143_0008();
        0x0 = 0xfe;
        0x6 = 0;
        0x4 = 0;
        0x2 = 0x63a6;
        u_var2 = 0x63a2;
        0x63ac = u_var2;
        0x63aa = u_var2;
        pi_stack_y10 = 0x15a6;
        FUN_3444_201c();
        0xad5a = 1;
        local_18 = CONCAT22(0x63ae, 0x63b0);
        while (0x63b4 < 0x100) {
            if (((local_18 & 0xf) == 0) && (i_var4 = fun_3143_0ad2(), i_var4 == 0)) {
                pi_stack_y10 = 0x15ec;
                fun_3143_1130();
                // WARNING: Subroutine does not return
                pi_stack_y10 = 0x15f9;
                fun_2a60_08cb();
            }
            pi_var1 = 0x63b0;
            *pi_var1 = *pi_var1 + -4;
            uVar3 = local_18 & 0xffff0000;
            local_18 = (uVar3 | local_18 - 4);
            *local_18 = 1;
            (local_18 + -2) = 0;
            pi_var1 = 0x63b4;
            *pi_var1 = *pi_var1 + 1;
        }
    }
    return;
}


// WARNING: Removing unreachable block (ram,0x0003171e)
// WARNING: Could not reconcile some variable overlaps

void FUN_3143_01fc(param_1_00: u16,param_1: i16,param_2: i16,param_3: i16,param_4: u16,
param_5: u16)

{
let piVar1: * mut u16; let iVar2: i16; let uVar3: u16; let uVar4: u16; let unaff_DS: u16; let local_e: * mut u16; let uVar5: u16; let iVar6: i16;

FUN_3444_02c6(0x39d9); piVar1 = 0x63a6; * piVar1 = * piVar1 - param_2; if (param_3 != 3) {
piVar1 = 0x63a8; * piVar1 = * piVar1 - param_2;
}
local_e._0_2_ = 0; iVar2 = local_e;
local_e._0_2_ = 0; uVar3 = 0x4;
uVar5 = 0x6; uVar4 = 0; if (0x2 == param_2) {
if (uVar3 == 0) {
if (uVar5 != 0) {
0x4 = 0; 0x63ac = uVar5; goto LAB_3143_0313;
}
uVar3 = 0; 0x63ac = 0;
}
else {
if (uVar5 != 0) {
0x6 = uVar5; local_e._0_2_ = iVar2;
goto LAB_3143_026f;
}
0x6 = 0;
}
}
else {
uVar4 = param_2 + param_1; iVar6 = 0;
uVar5 = 0; local_e._0_2_ = 0x3444;
iVar2 = local_e; local_e._0_2_ = 0x3444;
uVar3 = uVar4; FUN_3444_1e00(); piVar1 = (iVar6 + 2); * piVar1 = *piVar1 - param_2;
// WARNING: Read-only address (ram,0x00016fc6) is written
uRam00016fc6 = uVar3; if ((uVar5 | uVar4) != 0) {
// LAB_3143_026f:
(uVar4 + 4) = uVar3; goto LAB_3143_0313;
}
}
local_e._0_2_ = iVar2; 0x63aa = uVar3;
// LAB_3143_0313:
local_e = CONCAT22(0x1750, local_e); FUN_3143_0008(0x3444, param_1, param_4, param_5);
(local_e + 2) = param_2; * local_e = param_3; return;
}



fn fun_3143_0334(param_1_00: u16, uparam_1: i16, param_2: i16)

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let u_var3: u16;
    let u_var4: u16;
    let unaff_ds: u16;
    let local_e: u16;
    let local_c: u16;
    let local_8: u16;

    fun_3444_02c6(0x39d9);
    i_var2 = 0x2;
    pi_var1 = 0x63a6;
    *pi_var1 = *pi_var1 + i_var2;
    if (0x0 != 3) {
        pi_var1 = 0x63a8;
        *pi_var1 = *pi_var1 + i_var2;
    }
    local_c = 0x63aa;
    local_8 = local_c;
    if (local_c == 0) {
        0x63ac = param_1;
// LAB_3143_040d:
        0x63aa = param_1;
    } else {
        loop {
            if (param_1 <= local_c)
            break;
            local_8 = local_c;
            local_c = 0x4;
        }
        while (local_c != 0);
        if (local_c == 0) {
            0x63ac = param_1;
        } else {
            local_8 = 0x6;
            0x6 = param_1;
            if (local_8 == 0)
            goto
            LAB_3143_040d;
        }
        0x4 = param_1;
    }
    local_c = 0x3444;
    local_e = 0x1850;
    fun_3143_0008();
    (param_1 << 0x10) = 0xfe;
    0x2 = i_var2;
    0x6 = 0;
    0x4 = 0x3444;
    if (0x3444 - param_1 == i_var2) {
        u_var3 = 0xc8f8;
        if (0x63ac == 0x3444) {
            0x63ac = param_1;
        }
        pi_var1 = 0x2;
        *pi_var1 = *pi_var1 + -0xf75;
        local_c = 0x71e;
        0x4 = 0x71e;
        local_e = 0;
        uRam000071e6 = param_1;
    }
    if (((param_2 != 0) && (param_1 != 0)) && (u_var4 = (param_1 + 2), u_var4 == param_1)) {
        u_var3 = 0xc8f8;
        if (0x63ac == u_var4) {
            0x63ac = 0;
        }
        pi_var1 = (param_1 + 2);
        *pi_var1 = *pi_var1 + 0x2;
        (param_1 + 4) = 0x4;
        if ((local_c | local_e) != 0) {
            (local_e + 6) = 0;
        }
    }
    return;
}


fn fun_3143_04f2(param_1_00: u16, param_1: i16, param_2: i16, uparam_3: i16)

{
    let u_var1: u16;

    fun_3444_02c6(0x39d9);
    for (; param_3 != 0; param_3 = param_3 - uVar1) {
        u_var1 = 0xfff0;
        if (param_3 < 0xfff) {
            u_var1 = param_3 << 4;
        }
        FUN_3444_1e00(0x3444, 0, param_1, 0, param_2, u_var1);
        u_var1 = u_var1 >> 4;
        param_1 = param_1 + u_var1;
        param_2 = param_2 + u_var1;
    }
    return;
}


fn fun_3143_0542(param_1_00: u16, uparam_1: i16)

{
    let pu_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u16;
    let pu_var4: *mut u16;
    let u_var5: u16;
    let u_var6: u16;
    let u_var7: u16;
    let u_var8: u16;
    let unaff_ds: u16;
    let u_var9: u16;
    let i_var10: i16;
    let i_var11: i16;

    fun_3444_02c6(0x39d9);
    u_var2 = 0xc8f2;
    if (0x63b0 == 0) {
        u_var5 = 0x63ae;
        u_var5 = u_var5 & 0xff | ((u_var5 >> 8) + 0x10) << 8;
    } else {
        u_var5 = (0x63b0 >> 4) + 0x63ae;
    }
    u_var9 = 0x2;
    while (true) {
        u_var7 = 0;
        u_var8 = 0;
        for (uVar6 = param_1; uVar6 != uVar5; uVar6 = 0x2 + uVar6) {
            if ((((*(u_var6 << 0x10) & 1) != 0) && (pu_var1 = 0x2, u_var8 <= *pu_var1 && *pu_var1 != u_var8)) && (0x2 < u_var9)) {
                u_var8 = 0x2;
                u_var7 = u_var6;
            }
        }
        if (u_var7 == 0)
        break;
        i_var11 = 0;
        i_var10 = 0x3444;
        u_var9 = param_1;
        FUN_3143_01fc(0x3444, param_1, 0x2, 0x0);
        u_var3 = 0x2;
        u_var5 = 0x1a46;
        fun_3143_04f2(0x3444, param_1);
        u_var2 = 0x63ae;
        pu_var4 = *(undefined2 * *)(u_var7 + 6);
        *pu_var4 = 0;
        pu_var4[1] = param_1 + 1;
        fun_3143_0334(0x3444);
        i_var11 = (i_var11 + 2);
        param_1 = param_1 + i_var11;
        u_var9 = i_var10 - i_var11;
        if (u_var9 == 0) {
            return;
        }
    }
    return;
}


// WARNING: Removing unreachable block (ram,0x00031cc8)

fn fun_3143_0668()

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let pu_var3: *mut u16;
    let u_var4: u16;
    let u_var5: u16;
    let i_var6: i16;
    let unaff_ds: u16;
    let local_12: *mut u16;
    let local_e: u16;
    let local_c: u16;
    let i_var7: i16;
    let pi_var8: *mut u16;
    let i_var9: i16;
    let i_var10: i16;

    fun_3444_02c6(0x39d9);
    fun_3143_007e();
    if (0x63b0 != 0) {
        if (0x63a6 == 0) {
            if (0x63ac != 0) {
                // WARNING: Subroutine does not return
                fun_2a60_08cb();
            }
        } else {
            if (0x63ac == 0) {
                // WARNING: Subroutine does not return
                fun_2a60_08cb();
            }
            u_var2 = 0xc8f2;
            if (0x63b0 == 0) {
                u_var5 = 0x63ae + 0x1000;
            } else {
                u_var5 = (0x63b0 >> 4) + 0x63ae;
            }
            pi_var8 = (0x63aa << 0x10);
            while (true) {
                i_var6 = (pi_var8 >> 0x10);
                u_var4 = (pi_var8 + 2) + i_var6;
                local_12 = (u_var4 << 0x10);
                if (u_var4 == u_var5)
                break;
                if (*local_12 == 0) {
                    i_var6 = 0x2;
                    fun_3143_0542();
                    for (uVar4 = iVar6 + uVar4;
                        (piVar8 = (u_var4 << 0x10), uVar4 != uVar5 &&(* piVar8 != 0xfe)); uVar4 = 0x2 + uVar4) {}
                    if (u_var4 == u_var5) {
                        return;
                    }
                } else {
                    i_var6 = (pi_var8 + 2);
                    i_var10 = 0x2;
                    FUN_3444_1e00();
                    i_var7 = pi_var8;
                    i_var9 = (pi_var8 >> 0x10);
                    local_c = (i_var7 + 2) + i_var9;
                    pi_var8 = (local_c << 0x10);
                    u_var2 = 0x63ae;
                    pu_var3 = *(undefined2 * *)(i_var7 + 6);
                    *pu_var3 = 0;
                    pu_var3[1] = i_var9 + 1;
                    *pi_var8 = 0xfe;
                    0x2 = i_var6;
                    0x4 = 0;
                    0x6 = i_var10 << 4;
                    local_e = 0x3444;
                    fun_3143_0008();
                    i_var10 = (pi_var8 >> 0x10);
                    u_var4 = i_var10 + i_var6;
                    if (u_var4 == local_c) {
                        u_var2 = 0xc8f8;
                        if (0x63ac == u_var4) {
                            0x63ac = i_var10;
                        }
                        i_var6 = pi_var8;
                        pi_var1 = (i_var6 + 2);
                        *pi_var1 = *pi_var1 + 0x3446;
                        (i_var6 + 4) = 0x3448;
                        local_c = (i_var6 + 4);
                        local_e = 0;
                    }
                    if ((local_c | local_e) == 0) {
                        0x63ac = i_var10;
                    } else {
                        (local_e + 6) = i_var10;
                    }
                    0x63aa = i_var10;
                }
            }
        }
    }
    return;
}



fn FUN_3143_08c2(param_1_00: u16,uparam_1: i16,param_2: i16) -> i16

{
let uVar1: u16; let iVar2: i16;
let unaff_DS: u16;

FUN_3444_02c6(0x39d9);
uVar1 = 0xc8fa; if (0x63aa != 0) {
if (param_2 == 3) {
for (iVar2 = 0x63ac; iVar2 != 0; iVar2 = 0x6) {
if (param_1 < = 0x2) {
return iVar2;
}
}
}
else {
for (iVar2 = 0x63aa; iVar2 != 0; iVar2 = 0x4) {
if (param_1 < = 0x2) {
return iVar2;
}
}
}
}
return 0;
}



int * FUN_3143_093a(param_1_00: u16,param_1: i16,param_2: u16,param_3: u16,
param_4: u16,param_5: u16)

{
let puVar1: * mut u16; let piVar2: * mut u16; let unaff_DS: u16; let uVar3: u16; let piVar4: * mut u16;

FUN_3444_02c6(0x39d9); FUN_3143_01fc(0x3444,param_1, param_2, param_3, param_4, param_5); if (0x63b4 != 0) {
for (piVar4 = CONCAT22(0x63ae, 0xfffc); (uVar3 = piVar4, puVar1 = 0x63b0, * puVar1 < uVar3 || * puVar1 == uVar3 & & ( * piVar4 != 1)); piVar4 = (piVar4 & 0xffff0000 | (uVar3 - 4))) {}
* piVar4 = 0; (uVar3 + 2) = param_1 + 1; 0x0 = param_3; 0x2 = param_2; 0x4 = 0; 0x6 = uVar3; piVar2 = 0x63b4; * piVar2 = * piVar2 + - 1; piVar2 = 0x63b2; * piVar2 = * piVar2 + 1; return piVar4;
}
FUN_3143_1130(0x3444, 0xae06);
// WARNING: Subroutine does not return
FUN_2a60_08cb(0x3444, 0xae0f);
}



fn fun_3143_0a0e()

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let u_var3: u16;
    let u_var4: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    u_var3 = 0xc8f2;
    if (0x63b0 == 0) {
        u_var4 = 0x63ae;
        u_var4 = u_var4 & 0xff | ((u_var4 >> 8) + 0x10) << 8;
    } else {
        u_var4 = (0x63b0 >> 4) + 0x63ae;
    }
    i_var2 = 0x63ac;
    if (0x2 + i_var2 == u_var4) {
        pi_var1 = 0x2;
        *pi_var1 = *pi_var1 + 1;
    } else {
        fun_3143_0008(0x3444);
        uRam00000004 = u_var4;
        0x0 = 0xfe;
        0x2 = 1;
        0x4 = 0;
        0x6 = 0x63ac;
        0x63ac = u_var4;
    }
    pi_var1 = 0x63a6;
    *pi_var1 = *pi_var1 + 1;
    pi_var1 = 0x63a8;
    *pi_var1 = *pi_var1 + 1;
    return;
}


fn fun_3143_0ad2() -> u16

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let i_var3: i16;
    let u_var4: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    u_var4 = 0xc8f2;
    if (0x63b0 == 0) {
        u_var2 = 0x63ae;
        u_var2 = u_var2 & 0xff | ((u_var2 >> 8) + 0x10) << 8;
    } else {
        u_var2 = (0x63b0 >> 4) + 0x63ae;
    }
    if (0x63a8 == 0) {
        fun_3143_1130(0x3444, 0xae32, unaff_ds);
        u_var4 = 0xae3d;
    } else {
        loop {
            i_var3 = 0x63ac;
            if ((i_var3 != 0) && (0x2 + i_var3 == u_var2)) {
// LAB_3143_0b3f:
                piVar1 = 0x2;
                *pi_var1 = *pi_var1 + -1;
                if (0x2 == 0) {
                    i_var3 = 0x6;
                    if (i_var3 == 0) {
                        0x63ac = 0;
                        0x63aa = 0;
                    } else {
                        0x4 = 0;
                        0x63ac = i_var3;
                    }
                }
                pi_var1 = 0x63a6;
                *pi_var1 = *pi_var1 + -1;
                pi_var1 = 0x63a8;
                *pi_var1 = *pi_var1 + -1;
                return 1;
            }
            fun_3143_0668();
            i_var3 = 0x63ac;
            if ((i_var3 != 0) && (i_var3 + 0x2 == u_var2))
            goto
            LAB_3143_0b3f;
            i_var3 = fun_3143_0cea();
        }
        while (i_var3 != 0);
        fun_3143_1130(0x3444, 0xae1c, unaff_ds);
        u_var4 = 0xae27;
    }
    // WARNING: Subroutine does not return
    fun_2a60_08cb(0x3444, u_var4, unaff_ds);
}


fn fun_3143_0c00()

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let unaff_ds: u16;
    let u_var3: u16;
    let u_var4: u16;

    fun_3444_02c6(0x39d9);
    u_var4 = 0x63ae;
    u_var3 = 0x63b0;
    if (0x63b4 == 0) {
        if ((u_var3 & 0xf) == 0) {
            u_var4 = 0x3444;
            u_var3 = 0x2069;
            i_var2 = fun_3143_0ad2();
            if (i_var2 == 0) {
                fun_3143_1130(0x3444, 0xae48, unaff_ds);
                // WARNING: Subroutine does not return
                fun_2a60_08cb(0x3444, 0xae64, unaff_ds);
            }
        }
        pi_var1 = 0x63b0;
        *pi_var1 = *pi_var1 + -4;
        CONCAT22(u_var4, u_var3 - 4) = 1;
        (u_var3 - 2) = 0;
        pi_var1 = 0x63b4;
        *pi_var1 = *pi_var1 + 1;
    }
    return;
}


fn fun_3143_0c84(param_1_00: u16, int *param_1)

{
    let pu_var1: *mut u16;
    let pi_var2: *mut u16;
    let u_var3: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_3143_007e(0x3444);
    u_var3 = param_1;
    if (((*param_1 != 1) && (param_1._2_2_ == 0x63ae)) && (pu_var1 = 0x63b0, *pu_var1 < u_var3 || *pu_var1 == u_var3)) {
        if (*param_1 == 0) {
            fun_3143_0334(0x3444, (u_var3 + 2) + -1, 1);
        }
        *param_1 = 1;
        pi_var2 = 0x63b2;
        *pi_var2 = *pi_var2 + -1;
        pi_var2 = 0x63b4;
        *pi_var2 = *pi_var2 + 1;
    }
    return;
}


fn fun_3143_0cea() -> u16

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let unaff_ds: u16;
    let local_10: i16;
    let i_var3: i16;
    let pi_var4: *mut u16;
    let local_6: u16;
    let u_var5: u16;

    fun_3444_02c6(0x39d9);
    local_10 = -1;
    _local_6 = 0x3444;
    fun_3143_007e();
    for (piVar4 = CONCAT22(0x63ae, 0x63b0); iVar3 = piVar4,
        iVar3 != 0; piVar4 = (piVar4 &0xffff0000 | (iVar3 + 4))) {
        if (*pi_var4 == 0) {
            i_var2 = (i_var3 + 2) + -1;
            if ((0x0 == 3) && (pi_var1 = 0x4, *pi_var1 != local_10 && local_10 <= *pi_var1)) {
                local_10 = 0x4;
                _local_6 = pi_var4;
            }
        }
    }
    u_var5 = (_local_6 >> 0x10);
    if ((u_var5 | local_6) != 0) {
        _local_6 = (_local_6 & 0xffff0000 | u_var5);
        fun_3143_0c84(0x3444, u_var5);
        *_local_6 = 3;
        pi_var4 = 0x63b4;
        *pi_var4 = *pi_var4 + -1;
        pi_var4 = 0x63b2;
        *pi_var4 = *pi_var4 + 1;
        return 1;
    }
    return 0;
}


fn fun_3143_0d9e(param_1_00: u16, param_1: i16, param_2: i16)

{
    let pu_var1: *mut u16;
    let u_var2: u16;
    let i_var3: i16;
    let u_var4: u16;
    let unaff_ds: u16;
    undefined
    local_6c[82];
    let u_stack_y26: u16;
    let u_stack_y24: u16;
    undefined * puStackY22;

    fun_3444_02c6(0x39d9);
    fun_3143_007e();
    if ((param_2 < 1) && ((param_2 < 0 || (param_1 == 0)))) {
        fun_3143_1130();
    } else {
        fun_3143_0c00();
        if (0x63b4 == 0) {
            fun_3143_1130();
        } else {
            u_var2 = param_1 - 1 | 0xf;
            u_var4 = (param_2 - (param_1 == 0)) + (0xfffe < u_var2);
            u_var2 = ((((u_var2 + 1 >> 1 | ((u_var4 & 1) != 0) << 0xf) >> 1 | ((u_var4 >> 1 & 1) != 0) << 0xf) >> 1 | ((u_var4 >> 2 & 1) != 0) << 0xf) >> 1 | ((u_var4 >> 3 & 1) != 0) << 0xf) + 1;
            pu_var1 = 0x63a8;
            if (u_var2 < *pu_var1 || u_var2 == *pu_var1) {
                while (true) {
                    i_var3 = FUN_3143_08c2();
                    if (i_var3 != 0)
                    break;
                    fun_3143_0668();
                    i_var3 = FUN_3143_08c2();
                    if (i_var3 != 0)
                    break;
                    i_var3 = fun_3143_0cea();
                    if (i_var3 == 0) {
                        puStackY22 = local_6c;
                        u_stack_y24 = 0x3444;
                        u_stack_y26 = 0x22f3;
                        fun_3444_1aca();
                        fun_3143_1130();
                        // WARNING: Subroutine does not return
                        fun_2a60_08cb();
                    }
                }
                FUN_3143_093a();
                return;
            }
            fun_3143_1130();
        }
    }
    // WARNING: Subroutine does not return
    fun_2a60_08cb();
}


// WARNING: Removing unreachable block (ram,0x000323d8)

undefined2 *
FUN_3143_0ee2(param_1_00: u16,undefined2 *param_1,param_2: i16,param_3: i16,param_4: i16)

{
let piVar1: * mut u16; let uVar2: u16; let uVar3: u16; let iVar4: i16; let uVar5: u16; let uVar6: u16; let iVar7: i16; let uVar8: u16; let unaff_DS: u16; let puVar9: * mut u16; let lVar10: i32; let iVar11: i16;

FUN_3444_02c6(0x39d9); FUN_3143_007e(0x3444); if ((param_3 < 1) & & ((param_3 < 0 || (param_2 == 0)))) {
FUN_3143_1130();
// WARNING: Subroutine does not return
FUN_2a60_08cb();
}
uVar8 = (undefined2)(param_1 >> 0x10); iVar7 = param_1; uVar2 = (iVar7 + 2) - 1; uVar3 = param_2 - 1 | 0xf; uVar5 = (param_3 - (param_2 == 0)) + (0xfffe < uVar3); if (((((uVar3 + 1 >> 1 | ((uVar5 & 1) != 0) << 0xf) >> 1 | ((uVar5 >> 1 & 1) != 0) << 0xf) >> 1 | ((uVar5 >> 2 & 1) != 0) << 0xf) >> 1 | ((uVar5 >> 3 & 1) != 0) << 0xf
) + 1 != 0x2) {
iVar11 = 0x3444; iVar4 = iVar7; FUN_3143_15ce(0x3444, iVar7, uVar8, 1); puVar9 = FUN_3143_0d9e(0x3444, param_2, param_3, param_4, iVar11 + 0x10, iVar4); uVar6 = (undefined2)(puVar9 >> 0x10);
lVar10 = FUN_3143_1656(); iVar4 = lVar10;
if (CONCAT22(param_3, param_2) < lVar10) {
iVar4 = param_2;
}
FUN_3444_1e00(0x3444, * puVar9, (puVar9 + 2), * param_1,
(iVar7 + 2), iVar4); FUN_3143_0c84(); uVar2 = (puVar9 + 2) - 1; param_1 = puVar9;
}
if ((uVar2 << 0x10) == 3) {
if (param_4 != 3) {
piVar1 = 0x63a8; * piVar1 = * piVar1 - 0x2;
}
}
else {
if (param_4 == 3) {
piVar1 = 0x63a8; * piVar1 = * piVar1 + 0x2;
}
}
(uVar2 << 0x10) = param_4; return param_1;
}



fn fun_3143_103e(param_1_00: u16, undefined4 param_1)

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let i_var3: i16;
    let i_var4: i16;
    let i_var5: i16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_3143_007e();
    i_var4 = 0x63a2;
    u_var2 = 0xc8f2;
    if (0x63b0 == 0) {
        i_var5 = 0x63ae + 0x1000;
    } else {
        i_var5 = (0x63b0 >> 4) + 0x63ae;
    }
    i_var3 = (param_1 + 2);
    for (; iVar5 != iVar4; iVar4 = iVar4 + 0x2) {
        if (0x0 == 3) {
            if (i_var3 + -1 == i_var4) {
                0x4 = 0;
            } else {
                if (0x4 < 0x7fff) {
                    pi_var1 = 0x4;
                    *pi_var1 = *pi_var1 + 1;
                }
            }
        }
    }
    return;
}


fn fun_3143_10d8()

{
    undefined
    local_98[122];
    let u_stack_y30: u16;
    let u_stack_y28: u16;
    undefined * puStackY26;

    fun_3444_02c6(0x39d9);
    puStackY26 = local_98;
    u_stack_y28 = 0x3444;
    u_stack_y30 = 0x253c;
    fun_3444_1aca();
    FUN_3444_178e();
    FUN_3444_134a();
    return;
}


// WARNING: Removing unreachable block (ram,0x00032906)

fn fun_3143_1130()

{
    let pu_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u16;
    char
    cVar4;
    let unaff_ds: u16;
    let local_28: *mut u16;
    let local_e: i16;
    let i_var5: i16;
    let u_var6: u16;

    fun_3444_02c6(0x39d9);
    FUN_3444_109a();
    fun_3143_10d8();
    fun_3143_10d8();
    fun_3143_10d8();
    cVar4 = '\x04';
    loop {
    cVar4 = cVar4 + -1;
}
    while (cVar4 != '\0');
    fun_3143_10d8();
    fun_3143_10d8();
    fun_3143_10d8();
    fun_3143_10d8();
    fun_3143_10d8();
    fun_3143_10d8();
    fun_3143_10d8();
    fun_3143_10d8();
    fun_3143_10d8();
    u_var3 = 0x63a2;
    loop {
    local_28 = (u_var3 << 0x10);
    if (0x63ac < u_var3) {
        fun_3143_10d8();
        u_var3 = 0x63aa;
        while (((u_var3 != 0 && (pu_var1 = 0x63a4, u_var3 <= *pu_var1 && *pu_var1 != u_var3)) && (pu_var1 = 0x63a2, *pu_var1 < u_var3 || *pu_var1 == u_var3))) {
            u_var6 = 0x4;
            i_var5 = (u_var3 << 0x10);
            fun_3143_10d8();
            u_var3 = (i_var5 + 4);
        }
        FUN_3444_0fe6();
        return;
    }
    local_e = 0x63b0;
    while ((local_e != 0 && ((local_e + 2) - 1 != u_var3))) {
        local_e = local_e + 4;
    }
    fun_3143_10d8();
    u_var2 = *local_28;
    local_e = 0x3444;
    if (u_var2 == 0xfe) {
// LAB_3143_14c0:
        FUN_3143_10d8();
    } else {
        if (u_var2 < 0xff) {
            cVar4 = u_var2;
            if ((cVar4 == '\0') || (cVar4 == '\x01')) {
                local_e = 0x3444;
                fun_3143_10d8();
                goto
                LAB_3143_1424;
            }
            if (cVar4 == '\x03')
            goto
            LAB_3143_14c0;
        }
        local_e = 0x2830;
        fun_3143_10d8();
    }
// LAB_3143_1424:
    if (local_e == 0) {
        fun_3143_10d8();
    } else {
        fun_3143_10d8();
        FUN_3444_17a6();
        fun_3143_10d8();
    }
    fun_3143_10d8();
    u_var3 = 0x2 + u_var3;
}
    while (true);
}


fn fun_3143_15ce(param_1_00: u16, int *param_1, param_2: i16)

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    fun_3143_007e();
    if (*param_1 == 0) {
        u_var2 = (param_1 + 2) - 1;
        if (0x0 == 3) {
            if (param_2 != 3) {
                pi_var1 = 0x63a8;
                *pi_var1 = *pi_var1 - 0x2;
            }
        } else {
            if (param_2 == 3) {
                pi_var1 = 0x63a8;
                *pi_var1 = *pi_var1 + 0x2;
            }
        }
        (u_var2 << 0x10) = param_2;
    }
    return;
}


fn fun_3143_1634(param_1_00: u16, undefined4 param_1) -> u16

{
    fun_3444_02c6(0x39d9);
    fun_3143_007e(0x3444);
    return 0x0;
}



undefined4 FUN_3143_1656(param_1_00: u16,undefined4 param_1)

{
let iVar1: i16; let iVar2: i16;

FUN_3444_02c6(0x39d9); FUN_3143_007e(0x3444);
iVar1 = 0x2; iVar2 = iVar1 + - 1; return CONCAT22(((((iVar1 == 0) * - 2 | (iVar2 < 0)) << 1 | (iVar2 * 2 < 0)) << 1 | (iVar2 * 4 < 0)) << 1 | (iVar2 * 8 < 0), iVar2 * 0x10);
}



undefined4 FUN_3143_1690()

{
let iVar1: i16; let unaff_DS: u16;

FUN_3444_02c6(0x39d9); FUN_3143_007e(0x3444);
iVar1 = 0x63a8; return CONCAT22((((iVar1 < 0) << 1 | (iVar1 << 1 < 0)) << 1 | (iVar1 << 2 < 0))
<< 1 | (iVar1 << 3 < 0), iVar1 << 4);
}



fn fun_3143_16b6(param_1_00: u16, undefined4 param_1) -> u16

{
    fun_3444_02c6(0x39d9);
    fun_3143_007e(0x3444);
    return 0x4;
}



undefined4 FUN_3143_16da(param_1_00: u16,param_1: u16)

{
let puVar1: * mut u16; undefined local_16 [6]; let uStackY16: u16; let uStackY14: u16; undefined * puStackY12;

FUN_3444_02c6(0x39d9); FUN_3143_007e(); puStackY12 = local_16;
uStackY14 = 0x3444; uStackY16 = 0x2b2b; FUN_3444_1aca(); puStackY12 = (undefined * )param_1;
uStackY14 = 0x3444; uStackY16 = 0x2b41; puVar1 = FUN_3143_0d9e(); return CONCAT22((puVar1 + 2), * puVar1);
}



fn fun_3143_1720(param_1_00: u16, param_1: u16)

{
    fun_3444_02c6(0x39d9);
    FUN_3143_16da(0x3444, param_1);
    return;
}



undefined4 FUN_3143_1736(param_1_00: u16,uparam_1: i16,uparam_2: i16,param_3: u16)

{
let uVar1: u16; let unaff_DS: u16;
let uVar2: u32; let puVar3: * mut u16; let iVar4: i16; let puVar5: * mut u16;

FUN_3444_02c6(0x39d9); FUN_3143_007e(); if ((param_2 | param_1) == 0) {
uVar2 = FUN_3143_16da(0x3444, param_3);
}
else {
for (puVar5 = CONCAT22(0x63ae, 0x63b0); iVar4 = puVar5, iVar4 != 0; puVar5 = (puVar5 & 0xffff0000 | (iVar4 + 4))) {
uVar1 = (undefined2)(puVar5 >> 0x10); if (( * puVar5 == param_1) & & ((iVar4 + 2) == param_2)) {
puVar5 = 0x0; puVar3 = FUN_3143_0ee2(0x3444,iVar4, uVar1, param_3); param_1 = *puVar3; param_2 = (puVar3 + 2);
break;
}
}
uVar2 = CONCAT22(param_2, param_1); if (puVar5 == 0) {
// WARNING: Subroutine does not return
FUN_2a60_08cb(0x3444, 0xb194, unaff_DS);
}
}
return uVar2;
}



fn fun_3143_17da(param_1_00: u16, param_1: u16, param_2: u16, param_3: u16)

{
    fun_3444_02c6(0x39d9);
    FUN_3143_1736(0x3444, param_1, param_2, param_3);
    return;
}


fn fun_3143_17f6(param_1_00: u16, param_1: i16, param_2: i16)

{
    let u_var1: u16;
    let unaff_ds: u16;
    let i_var2: i16;
    let pi_var3: *mut u16;

    fun_3444_02c6(0x39d9);
    fun_3143_007e();
    pi_var3 = CONCAT22(0x63ae, 0x63b0);
    while (true) {
        i_var2 = pi_var3;
        if (i_var2 == 0) {
            return;
        }
        u_var1 = (undefined2)(pi_var3 >> 0x10);
        if ((*pi_var3 == param_1) && ((i_var2 + 2) == param_2))
        break;
        pi_var3 = (pi_var3 & 0xffff0000 | (i_var2 + 4));
    }
    fun_3143_0c84(0x3444, i_var2, u_var1);
    return;
}


fn fun_3143_1850(param_1_00: u16, param_1: u16, param_2: u16)

{
    fun_3444_02c6(0x39d9);
    fun_3143_17f6(0x3444, param_1, param_2);
    return;
}


// WARNING: Removing unreachable block (ram,0x0003305f)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn fun_32c9_0385()

{
    let b_var1: u8;

    // WARNING: Read-only address (ram,0x00030384) is written
    uRam00030384 = 0x8a;
    _DAT_0000_0022 = (undefined2)(_DAT_2fad_053a >> 0x10);
    _DAT_0000_0020 = (undefined2)
    _DAT_2fad_053a;
    b_var1 = in (0x61);
    out(0x61, b_var1 & 0xfc);
    out(0x43, 0x36);
    out(0x40, 0);
    out(0x40, 0);
    if (DAT_2fad_0538 == 0) {
        out(0x43, 0xb6);
        out(0x42, 0);
        out(0x42, 1);
    } else {
        if (DAT_2fad_0538 == 1) {
            fun_3391_03b6();
            fun_3391_03b6();
            fun_3391_03b6();
        } else {
            if (DAT_2fad_0538 == 2) {
                FUN_394e_0285();
                FUN_394e_0285();
                FUN_394e_0285();
            }
            if (DAT_2fad_0538 == 3) {
                out(0xc0, 0x83);
                out(0xc0, 0xa3);
                out(0xc0, 0xc3);
            }
        }
    }
    // WARNING: Read-only address (ram,0x00030025) is written
    uRam00030025 = 0;
    uRam00030384 = 0x88;
    // WARNING: Read-only address (ram,0x00030384) is written
    // WARNING: Read-only address (ram,0x00030025) is written
    return;
}


// WARNING: Removing unreachable block (ram,0x0003365e)
// WARNING: Removing unreachable block (ram,0x00033669)
// WARNING: Removing unreachable block (ram,0x00033689)
// WARNING: Removing unreachable block (ram,0x00033691)
// WARNING: Removing unreachable block (ram,0x000336e6)
// WARNING: Removing unreachable block (ram,0x00033671)
// WARNING: Removing unreachable block (ram,0x00033682)
// WARNING: Removing unreachable block (ram,0x00033685)
// WARNING: Removing unreachable block (ram,0x00033666)
// WARNING: Removing unreachable block (ram,0x000336ee)
// WARNING: Removing unreachable block (ram,0x000336f6)
// WARNING: Removing unreachable block (ram,0x00033710)
// WARNING: Removing unreachable block (ram,0x0003372f)
// WARNING: Removing unreachable block (ram,0x00033732)
// WARNING: Removing unreachable block (ram,0x0003373a)
// WARNING: Removing unreachable block (ram,0x0003373d)
// WARNING: Removing unreachable block (ram,0x00033745)
// WARNING: Removing unreachable block (ram,0x00033748)
// WARNING: Globals starting with '_' overlap smaller symbols at the same address

fn fun_32c9_09c0()

{
    uRam00030016 = 0x88;
    uRam00030017 = 0x46;
    uRam00030018 = 0xec;
    uRam00030019 = 0x8a;
    uRam00030025 = 0x89;
    // WARNING: Read-only address (ram,0x00030016) is written
    // WARNING: Read-only address (ram,0x00030017) is written
    // WARNING: Read-only address (ram,0x00030018) is written
    // WARNING: Read-only address (ram,0x00030019) is written
    // WARNING: Read-only address (ram,0x00030025) is written
    return;
}


fn fun_32c9_0af0(param_1_00: u16, undefined2 *param_1, param_2: i16)

{
    let unaff_ds: u16;

    if (DAT_2fad_0538 == -1) {
        uRam0003001a = 0xc46;
        uRam0003001c = 0x4688;
        uRam0003001e = 0x8bed;
        uRam00030020 = 0xe46;
        uRam00030022 = 0x568b;
        cRam00030024 = 0x10;
        return;
    }
    fun_32c9_0385(0x3000);
    if (param_2 != 0) {
        // WARNING: Read-only address (ram,0x00030024) is written
        cRam00030024 = (param_2 + -1) * '\x04';
        uRam0003001c = (undefined2)(param_1 >> 0x10);
        uRam0003001a = SUB42(param_1, 0);
        // WARNING: Read-only address (ram,0x0003001a) is written
        // WARNING: Read-only address (ram,0x0003001e) is written
        // WARNING: Read-only address (ram,0x0003001c) is written
        // WARNING: Read-only address (ram,0x00030020) is written
        uRam00030020 = 0xffff;
        uRam00030022 = *param_1;
        // WARNING: Read-only address (ram,0x00030022) is written
        uRam0003001e = uRam0003001a;
        if (0xb276 == 0) {
            fun_32c9_09c0(0x3000);
        }
    }
    return;
}


fn fun_337d_0000()

{
    let u_var1: u16;
    let unaff_ds: u16;
    let u_var2: u32;

    fun_3444_02c6(0x39d9);
    if (0x8 != -1) {
        u_var2 = fun_3143_0d9e(0x3444, 0x898, 0, 0, 0xb278);
        u_var1 = 0xc8fe;
        0xffe7 = u_var2;
        0xffe9 = (u_var2 >> 0x10);
    }
    return;
}


fn fun_337d_0038()

{
    let u_var1: u16;
    let unaff_ds: u16;

    fun_3444_02c6(0x39d9);
    if (0x8 != -1) {
        fun_32c9_0385(0x3444);
        u_var1 = 0xc8fe;
        fun_3143_0c84(0x32c9, 0xffe7, 0xffe9);
    }
    return;
}


fn fun_337d_0068(param_1_00: u16, param_1: i16)

{
    let pu_var1: *mut u16;
    let unaff_ds: u16;
    let l_var2: i32;
    let pu_var3: *mut u16;

    fun_3444_02c6(0x39d9);
    if (((0x1394 != 0) && (0x8 != -1)) && (param_1 != 0)) {
        l_var2 = FUN_3074_00d3(0x3444);
        if (l_var2 == 0) {
            FUN_3440_0040(0xb29c);
            return;
        }
        pu_var3 = FUN_3143_1656(0x3074);
        pu_var1 = 
        0xffe7;
        FUN_3444_1e00(0x3143, *pu_var1, (pu_var1 + 2), *pu_var3,
                      (pu_var3 + 2));
        fun_3074_01d4(0x3444, param_1, 5);
        pu_var1 = 
        0xffe7;
        fun_32c9_0af0(0x3074, *pu_var1, (pu_var1 + 2), 5);
    }
    return;
}


fn fun_3391_000a(param_1_00: u16, param_1: u16) -> u16

{
    let u_var1: u16;
    let unaff_ds: u16;

    0xd038 = param_1;
    u_var1 = fun_3391_0962(0x39d9);
    fun_3391_002c(0x39d9);
    return u_var1;
}


fn fun_3391_002c()

{
    let u_var1: u16;
    let unaff_ds: u16;
    let local_4: i16;

    u_var1 = 0x39d9;
    for (local_4 = 1; local_4 < 0xf6; local_4 = local_4 + 1) {
        FUN_3440_0004(u_var1, local_4, 0);
        u_var1 = 0x3440;
    }
    FUN_3440_0004(u_var1, 4, 6);
    for (local_4 = 0; local_4 < 9; local_4 = local_4 + 1) {
        (local_4 * 2 + -0x316e) = 0x2000;
        (local_4 + -0x315a) = 0;
        (local_4 + -0x3274) = 0;
    }
    for (local_4 = 0; local_4 < 0xb; local_4 = local_4 + 1) {
        (local_4 + -0x3280) = 0x7f;
    }
    fun_3391_00da(0x3440, 0);
    fun_3391_01a4(0x3440, 0, 0, 0);
    fun_3391_0182(0x3440, 1);
    fun_3391_0134(0x3440, 1);
    return;
}


fn fun_3391_00da(param_1_00: u16, param_1: i16)

{
    let unaff_ds: u16;

    if (param_1 != 0) {
        
        0xcd94 = 0x18;
        0xcea2 = 0x2000;
        fun_3391_0936(0x39d9, 8);
        
        0xcd93 = 0x1f;
        0xcea0 = 0x2000;
        fun_3391_0936(0x39d9, 7);
    }
    
    0xcd79 = 
    param_1;
    0xcea4 = (-(param_1 == 0) & 0xfffe) + 0xb;
    
    0xcd7f = 0;
    fun_3391_0412(0x39d9);
    fun_3391_08ac(0x39d9);
    return;
}


fn fun_3391_0134(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let unaff_ds: u16;
    let local_4: i16;

    0xcd7c = -(param_1 != 0) & 0x20;
    u_var1 = 0x39d9;
    for (local_4 = 0; local_4 < 0x12; local_4 = local_4 + 1) {
        FUN_3440_0004(u_var1, (local_4 + -0x4cb2) + 0xe0, 0);
        u_var1 = 0x3440;
    }
    FUN_3440_0004(u_var1, 1, 0xcd7c);
    return;
}


fn fun_3391_0182(param_1_00: u16, uparam_1: i16)

{
    let unaff_ds: u16;

    if (0xc < param_1) {
        param_1 = 0xc;
    }
    if (param_1 == 0) {
        param_1 = 1;
    }
    0xd03a = param_1;
    return;
}


fn fun_3391_01a4(param_1_00: u16, undefined param_1, undefined param_2, undefined param_3)

{
    let unaff_ds: u16;

    
    0xcd78 = param_1;
    
    0xcd7e = param_2;
    
    0xcd7a = param_3;
    fun_3391_08ac(0x39d9);
    fun_3391_0758(0x39d9);
    return;
}


fn fun_3391_01c6(param_1_00: u16, uparam_1: i16, undefined4 param_2)

{
    let pu_var1: *mut u16;
    let i_var2: i16;
    let i_var3: i16;
    let i_var4: i16;
    let u_var5: u16;
    let u_var6: u16;
    let unaff_ds: u16;
    undefined * puVar7;
    let u_var8: u16;
    let u_var9: u16;

    if (0xcea4 <= param_1) {
        return;
    }
    u_var5 = (undefined2)(param_2 >> 0x10);
    i_var4 = param_2;
    u_var6 = (i_var4 + 0x34);
    pu_var1 = (i_var4 + 0x36);
    u_var8 = *pu_var1;
    i_var2 = i_var4 + 0x1a;
    if (0xcd79 == '\0') {
        i_var3 = param_1 * 2 + -0x4cda;
    } else {
        i_var3 = param_1 * 2 + -0x4cc8;
    }
    puVar7 = ff
    CONCAT22(unaff_ds, i_var3);
    u_var9 = u_var5;
    fun_3391_0500(0x39d9, *puVar7, i_var4, u_var5, u_var6, pu_var1, u_var5, puVar7, u_var8, u_var6, i_var2, u_var5);
    u_var6 = (undefined2)(puVar7 >> 0x10);
    if ((puVar7 + 1) != -1) {
        fun_3391_0500(0x39d9, (puVar7 + 1), i_var2, u_var9, u_var8, pu_var1, u_var5);
    }
    return;
}


fn fun_3391_0262(param_1_00: u16, uparam_1: i16, uparam_2: i16)

{
    let i_var1: i16;
    let unaff_ds: u16;

    if (0xcea4 <= param_1) {
        return;
    }
    if (0x7f < param_2) {
        param_2 = 0x7f;
    }
    (param_1 + 0xcd80) = param_2;
    if (0xcd79 == '\0') {
        i_var1 = param_1 * 2 + -0x4cda;
    } else {
        i_var1 = param_1 * 2 + -0x4cc8;
    }
    fun_3391_068a(0x39d9, CONCAT22(unaff_ds, i_var1));
    if ((i_var1 + 1) != -1) {
        fun_3391_068a(0x39d9, (i_var1 + 1));
    }
    return;
}


fn fun_3391_02d6(param_1_00: u16, uparam_1: i16, uparam_2: i16)

{
    let unaff_ds: u16;

    if (((0xcd79 == '\0') && (param_1 < 9)) || (param_1 < 7)) {
        if (0x3fff < param_2) {
            param_2 = 0x3fff;
        }
        (param_1 * 2 + -0x316e) = param_2;
        fun_3391_0936(0x39d9, param_1);
    }
    return;
}


fn fun_3391_0310(param_1_00: u16, uparam_1: i16, param_2: i16)

{
    let pb_var1: *mut u8;
    let unaff_ds: u16;

    param_2 = param_2 + -0xc;
    if (param_2 < 0) {
        param_2 = 0;
    }
    if (((0xcd79 != '\0') || (8 < param_1)) && (5 < param_1)) {
        if ((0xcd79 != '\0') && (param_1 < 0xb)) {
            if (param_1 == 6) {
                0xcd92 = param_2;
                fun_3391_0936(0x39d9, 6);
            } else {
                if ((param_1 == 8) && (0xcd94 != param_2)) {
                    0xcd94 = param_2;
                    0xcd93 = param_2 + '\a';
                    fun_3391_0936(0x39d9, 8);
                    fun_3391_0936(0x39d9, 7);
                }
            }
            pb_var1 = 0xcd7f;
            *pb_var1 = *pb_var1 | *(param_1 + 0xb2aa);
            fun_3391_08ac(0x39d9);
        }
        return;
    }
    (param_1 + 0xcd8c) = param_2;
    (param_1 + 0xcea6) = 0x20;
    fun_3391_0936(0x39d9, param_1);
    return;
}


fn fun_3391_03b6(param_1_00: u16, uparam_1: i16)

{
    let pb_var1: *mut u8;
    let unaff_ds: u16;

    if (((0xcd79 != '\0') || (8 < param_1)) && (5 < param_1)) {
        if ((0xcd79 != '\0') && (param_1 < 0xb)) {
            pb_var1 = 0xcd7f;
            *pb_var1 = *pb_var1 & ~*(param_1 + 0xb2aa);
            fun_3391_08ac(0x39d9);
        }
        return;
    }
    (param_1 + 0xcea6) = 0;
    pb_var1 = (param_1 + 0xceb0);
    *pb_var1 = *pb_var1 & 0xdf;
    FUN_3440_0004(0x39d9, param_1 + 0xb0, (param_1 + 0xceb0));
    return;
}


fn fun_3391_0412()

{
    let unaff_ds: u16;
    let local_4: i16;

    for (local_4 = 0; local_4 < 0x12; local_4 = local_4 + 1) {
        if ((local_4 + -0x4ca0) == '\0') {
            fun_3391_055c(0x39d9, local_4, 0xb2b6);
        } else {
            fun_3391_055c(0x39d9, local_4, 0xb2c4);
        }
    }
    if (0xcd79 != '\0') {
        fun_3391_055c(0x39d9, 0xc, 0xb2d2);
        fun_3391_055c(0x39d9, 0xf, 0xb2e0);
        fun_3391_055c(0x39d9, 0x10, 0xb2ee);
        fun_3391_055c(0x39d9, 0xe, 0xb2fc);
        fun_3391_055c(0x39d9, 0x11, 0xb30a);
        fun_3391_055c(0x39d9, 0xd, 0xb318);
    }
    return;
}


fn fun_3391_04d2(param_1_00: u16, param_1: i16, param_2: i16, undefined param_3)

{
    let unaff_ds: u16;

    (param_2 + param_1 * 0xe + -0x326a) = param_3;
    FUN_3391_05a0(0x39d9, param_1, param_2);
    return;
}


fn fun_3391_0500(param_1_00: u16, param_1: i16, byte *param_2, byte param_3)

{
    let pb_var1: *mut u8;
    let pb_var2: *mut u8;
    let unaff_ds: u16;
    let local_8: i16;
    let local_6: i16;

    _local_6 = CONCAT22(unaff_ds, param_1 * 0xe + -0x326a);
    for (local_8 = 0; pbVar2 = _local_6, pbVar1 = param_2, local_8 < 0xd; local_8 = local_8 + 1) {
        param_2 = (param_2 & 0xffff0000 | (param_2 + 2));
        _local_6 = (_local_6 & 0xffff0000 | (local_6 + 1));
        *pb_var2 = *pb_var1;
    }
    param_3 = param_3 & 3;
    *_local_6 = param_3;
    fun_3391_0642(0x39d9, param_1);
    return;
}


fn fun_3391_055c(param_1_00: u16, param_1: u16, byte *param_2)

{
    let pb_var1: *mut u8;
    let unaff_ss: u16;
    let local_20: i16;
    uint
    local_1e[14];

    for (local_20 = 0; pbVar1 = param_2, local_20 < 0xd; local_20 = local_20 + 1) {
        param_2 = (param_2 & 0xffff0000 | (param_2 + 1));
        local_1e[local_20] = *pb_var1;
    }
    fun_3391_0500(0x39d9, param_1, local_1e);
    return;
}


/*
Unable to decompile 'FUN_3391_05a0'
Cause: Exception while decompiling 3391:05a0: process: timeout

*/


fn fun_3391_0642(param_1_00: u16, param_1: u16)

{
    fun_3391_08ac(0x39d9);
    fun_3391_0758(0x39d9);
    fun_3391_068a(0x39d9, param_1);
    fun_3391_0772(0x39d9, param_1);
    fun_3391_07be(0x39d9, param_1);
    fun_3391_0800(0x39d9, param_1);
    fun_3391_0842(0x39d9, param_1);
    fun_3391_08f0(0x39d9, param_1);
    return;
}


fn fun_3391_068a(param_1_00: u16, param_1: i16)

{
    char
    cVar1;
    bool
    bVar2;
    let unaff_ds: u16;
    let local_8: u16;
    let local_6: u16;

    if (0xcd79 == '\0') {
        cVar1 = (param_1 + -0x4c8e);
    } else {
        cVar1 = (param_1 + -0x4c7c);
    }
    local_8 = SEXT12(cVar1);
    local_6 = -((*(param_1 * 0xe + -0x3262) & 0x3f) - 0x3f);
    if ((0xcd79 == '\0') || (local_8 < 7)) {
        bVar2 = false;
    } else {
        bVar2 = true;
    }
    if ((((param_1 + -0x4ca0) != '\0') || ((param_1 * 0xe + -0x325e) == '\0')) || (bVar2)) {
        local_6 = (local_8 + 0xcd80) * local_6 + 0x40 >> 7;
    }
    FUN_3440_0004(0x39d9, (param_1 + -0x4cb2) + 0x40,
                  0x3f - local_6 | (param_1 * 0xe + -0x326a) << 6);
    return;
}


fn fun_3391_0758()

{
    let unaff_ds: u16;

    FUN_3440_0004(0x39d9, 8, -(0xcd7a != '\0') & 0x40);
    return;
}


fn fun_3391_0772(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let unaff_ds: u16;

    if ((param_1 + -0x4ca0) != '\0') {
        return;
    }
    u_var1 = ((param_1 * 0xe + -0x325e) == '\0') | (param_1 * 0xe + -0x3268) << 1;
    FUN_3440_0004(0x39d9, (param_1 + -0x4c8e) + 0xc0, u_var1, u_var1);
    return;
}


fn fun_3391_07be(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let unaff_ds: u16;

    u_var1 = (param_1 * 0xe + -0x3267) << 4 | *(param_1 * 0xe + -0x3264) & 0xf;
    FUN_3440_0004(0x39d9, (param_1 + -0x4cb2) + 0x60, u_var1, u_var1);
    return;
}


fn fun_3391_0800(param_1_00: u16, param_1: i16)

{
    let u_var1: u16;
    let unaff_ds: u16;

    u_var1 = (param_1 * 0xe + -0x3266) << 4 | *(param_1 * 0xe + -0x3263) & 0xf;
    FUN_3440_0004(0x39d9, (param_1 + -0x4cb2) + 0x80, u_var1, u_var1);
    return;
}


fn fun_3391_0842(param_1_00: u16, param_1: i16)

{
    let i_var1: i16;
    let unaff_ds: u16;

    i_var1 = param_1 * 0xe;
    i_var1 = (-((i_var1 + -0x3265) != '\0') & 0x20) + (-((i_var1 + -0x3260) != '\0') & 0x40) + (-((i_var1 + -0x3261) != '\0') & 0x80) + (-((i_var1 + -0x325f) != '\0') & 0x10) + (*(i_var1 + -0x3269) & 0xf);
    FUN_3440_0004(0x39d9, (param_1 + -0x4cb2) + 0x20, i_var1, i_var1);
    return;
}


fn fun_3391_08ac()

{
    let u_var1: u16;
    let unaff_ds: u16;

    u_var1 = -(0xcd79 != '\0') & 0x20 | -(0xcd7e != '\0') & 0x40 | -(0xcd78 != '\0') & 0x80 | 0xcd7f;
    FUN_3440_0004(0x39d9, 0xbd, u_var1, u_var1);
    return;
}


fn fun_3391_08f0(param_1_00: u16, param_1: i16)

{
    let b_var1: u8;
    let unaff_ds: u16;

    if (0xcd7c == 0) {
        b_var1 = 0;
    } else {
        b_var1 = *(param_1 * 0xe + -0x325d) & 3;
    }
    FUN_3440_0004(0x39d9, (param_1 + -0x4cb2) + 0xe0, b_var1);
    return;
}


fn fun_3391_0936(param_1_00: u16, param_1: i16)

{
    undefined
    uVar1;
    let unaff_ds: u16;

    uVar1 = FUN_3433_0004(0x39d9, param_1, (param_1 + -0x3274),
                          (param_1 * 2 + -0x316e), (param_1 + -0x315a));
    (param_1 + -0x3150) = uVar1;
    return;
}


fn fun_3391_0962() -> u16

{
    let b_var1: u8;
    let u_var2: u16;
    let u_var3: u16;
    let unaff_ds: u16;
    let u_stack8: u16;

    FUN_3440_0004(0x39d9, 4, 0x60);
    FUN_3440_0004(0x3440, 4, 0x80);
    u_var2 = FUN_3444_1d32(0x3440, 0xd038);
    FUN_3440_0004(0x3444, 2, 0xff);
    FUN_3440_0004(0x3440, 4, 0x21);
    u_var3 = 0x3440;
    for (uStack8 = 0; u_stack8 < 200; uStack8 = uStack8 + 1) {
        FUN_3444_1d32(u_var3, 0xd038);
        u_var3 = 0x3444;
    }
    b_var1 = FUN_3444_1d32(u_var3, 0xd038);
    FUN_3440_0004(0x3444, 4, 0x60);
    FUN_3440_0004(0x3440, 4, 0x80);
    if (((u_var2 & 0xe0) == 0) && ((b_var1 & 0xe0) == 0xc0)) {
        u_var3 = 1;
    } else {
        u_var3 = 0;
    }
    return u_var3;
}


fn fun_3391_099e() -> u16

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let unaff_bp: i16;
    let unaff_ss: u16;

    FUN_3440_0004(0x39d9);
    FUN_3440_0004(0x3440, 4);
    (unaff_bp + -6) = 0;
    u_var2 = 0x3440;
    while ((unaff_bp + -6) < 200) {
        FUN_3444_1d32(u_var2);
        pi_var1 = (unaff_bp + -6);
        *pi_var1 = *pi_var1 + 1;
        u_var2 = 0x3444;
    }
    u_var2 = FUN_3444_1d32(u_var2);
    (unaff_bp + -4) = u_var2;
    FUN_3440_0004(0x3444, 4);
    FUN_3440_0004(0x3440, 4);
    if (((*(unaff_bp + -2) & 0xe0) == 0) && ((*(unaff_bp + -4) & 0xe0) == 0xc0)) {
        u_var2 = 1;
    } else {
        u_var2 = 0;
    }
    return u_var2;
}



uint FUN_3433_0004(param_1_00: u16,param_1: i16,byte param_2,param_3: i16,char param_4)

{
char cVar1; let uVar2: u16; let uVar3: u16; char cVar4; let unaff_DS: u16;

if (param_3 != 0x2000) {
// WARNING: Could not recover jumptable at 0x00034357. Too many branches
// WARNING: Treating indirect jump as call
uVar2 = ( * (0xd03a * - 2 + 0x42))(); return uVar2;
}
uVar2 = (param_2 * 0x100 + 8) >> 4; if (uVar2 < 0) {
uVar2 = 0;
}
else {
if (0x5fe < uVar2) {
uVar2 = 0x5ff;
}
}
uVar3 = ( * ((uVar2 >> 4) + 0xb576) * 0x20 + (uVar2 & 0xf) * 2 + - 0x4c6a); cVar1 = ((uVar2 >> 4) + 0xb516); cVar4 = cVar1 + - 1; if (uVar3 < 0) {
cVar4 = cVar1;
}
if (cVar4 < '\0') {
cVar4 = cVar4 + '\x01'; uVar3 = uVar3 >> 1;
}
FUN_3440_0004(0x39d9, param_1 + - 0x60, uVar3 & 0xff); uVar2 = (((uVar3 >> 8) & 3) + cVar4 * '\x04' + param_4); FUN_3440_0004(0x3440, param_1 + 0xb0, uVar2); return uVar2;
}



uint FUN_3440_0004(param_1_00: u16,undefined param_1,uparam_2: i16)

{
let iVar1: i16; let bVar2: u8;
let unaff_DS: u16;

iVar1 = 0xd038; out(iVar1, param_1); in (iVar1); in (iVar1); in (iVar1); in (iVar1); in (iVar1); in (iVar1); out(iVar1 + 1, param_2); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); in (iVar1);
in (iVar1); bVar2 = in (iVar1); return param_2 & 0xff00 | bVar2;
}



void __cdecl16far FUN_3440_0040()

{
return;
}



void __cdecl16far FUN_3440_0041()

{
return;
}



void __cdecl16far FUN_3440_0042()

{
return;
}



void __cdecl16far FUN_3440_0043()

{
return;
}


// WARNING: Instruction at (ram,0x00034558) overlaps instruction at (ram,0x00034556)
//

fn fun_3444_0116()

{
    let pb_var1: *mut u8;
    let pb_var2: *mut u8;
    let b_var3: u8;
    let b_var4: u8;
    let pb_var5: *mut u8;
    let i_var6: i16;
    code * *ppcVar7;
    let pcVar8: *mut Code;
    let i_var10: i16;
    let extraout_dx: u16;
    let in_bx: u16;
    u16
    iVar9;
    let pb_var11: *mut u8;
    let pb_var12: *mut u8;
    let unaff_es: u16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    bool
    bVar13;

    pcVar8 = swi(0x21);
    (*pcVar8)();
    while (true) {
        0xb602 = in_bx;
        0xb604 = unaff_es;
        pcVar8 = swi(0x21);
        (*pcVar8)();
        if (0xc0ec == 0)
        break;
        unaff_es = 0xb616;
        bVar13 = false;
        in_bx = 0;
        ppcVar7 = (code * *)
        0xc0ea;
        (**ppcVar7)();
        if (!bVar13) {
            ppcVar7 = (code * *)
            0xc0ea;
            (**ppcVar7)();
            break;
        }
        fun_3444_029e();
        fun_3444_0587();
        if (0xc0da == -0x292a) {
            (**(code * *)
            0xc0de)();
        }
        (**(code * *)
        0xb5d8)();
        unaff_ds = unaff_ss;
    }
    i_var6 = 0x2c;
    if (i_var6 != 0) {
        pb_var12 = 0x0;
        loop {
            bVar13 = *pb_var12 == 0;
            if (bVar13)
            break;
            i_var10 = 0xd;
            pb_var11 = 0xb5f4;
            loop {
                if (i_var10 == 0)
                break;
                i_var10 = i_var10 + -1;
                pb_var5 = pb_var12;
                pb_var12 = pb_var12 + 1;
                pb_var1 = pb_var11;
                pb_var11 = pb_var11 + 1;
                bVar13 = *pb_var1 == *pb_var5;
            }
            while (bVar13);
            if (bVar13) {
                pb_var11 = 0xb61f;
                goto
                LAB_3444_0198;
            }
            i_var10 = 0x7fff;
            bVar13 = true;
            loop {
                if (i_var10 == 0)
                break;
                i_var10 = i_var10 + -1;
                pb_var1 = pb_var12;
                pb_var12 = pb_var12 + 1;
                bVar13 = *pb_var1 == 0;
            }
            while (!bVar13);
        }
        while (bVar13);
    }
// LAB_3444_01ac:
    iVar9 = 4;
    loop {
    pb_var1 = (iVar9 + 0xb61f);
    bVar13 = false;
    *pb_var1 = *pb_var1 & 0xbf;
    pcVar8 = swi(0x21);
    (*pcVar8)();
    if ((!bVar13) && ((extraout_dx & 0x80) != 0)) {
        pb_var1 = (iVar9 + 0xb61f);
        *pb_var1 = *pb_var1 | 0x40;
    }
    iVar9 = iVar9 - 1;
}
    while (-1 < iVar9);
    FUN_3444_028b();
    FUN_3444_028b();
    return;
// LAB_3444_0198:
    pbVar2 = pb_var12 + 1;
    b_var3 = *pb_var12;
    if (b_var3 < 0x41)
    goto
    LAB_3444_01ac;
    pb_var12 = pb_var12 + 2;
    b_var4 = *pb_var2;
    if (b_var4 < 0x41)
    goto
    LAB_3444_01ac;
    pb_var1 = pb_var11;
    pb_var11 = pb_var11 + 1;
    *pb_var1 = b_var4 + 0xbf | (b_var3 + 0xbf) * '\x10';
    goto
    LAB_3444_0198;
}


fn fun_3444_01db()

{
    let pcVar1: *mut Code;
    let u_var2: u16;
    let unaff_ds: u16;

    u_var2 = 0x39d9;
    FUN_3444_028b();
    FUN_3444_028b();
    if (0xc0da == -0x292a) {
        u_var2 = 0x3000;
        (**(code * *)
        0xc0e0)();
    }
    FUN_3444_028b();
    FUN_3444_028b();
    FUN_3444_02ea(u_var2);
    FUN_3444_025e();
    pcVar1 = swi(0x21);
    (*pcVar1)();
    return;
}



void  FUN_3444_025e(param_1: u16)

{
code * * ppcVar1; code * pcVar2; let    unaff_DS: u16;

if (0xc0ec != 0) {
ppcVar1 = (code * * )0xc0ea; (* * ppcVar1)(0x39d9);
}
pcVar2 = swi(0x21); ( * pcVar2)(); if (0xb644 != '\0') {
pcVar2 = swi(0x21); ( * pcVar2)();
}
return;
}



void  FUN_3444_028b()

{
code * * ppcVar1; code * * ppcVar2;
code * * unaff_SI; code * * unaff_DI;
code * * ppcVar3; let unaff_DS: u16;

loop {
if (unaff_DI < = unaff_SI) {
return;
}
ppcVar3 = unaff_DI + - 2; ppcVar1 = unaff_DI + - 1; unaff_DI = ppcVar3;
} while (( * ppcVar3 | * ppcVar1) == 0); ppcVar2 = ppcVar3; ( * *ppcVar2)(0x39d9); FUN_3444_028b();
return;
}



fn fun_3444_029e()

{
    code * *ppcVar1;
    let unaff_ds: u16;

    fun_3444_0587(0x39d9, 0xfc);
    if (0xb64c != 0) {
        ppcVar1 = (code * *)
        0xb64a;
        (**ppcVar1)(0x39d9);
    }
    fun_3444_0587(0x39d9, 0xff);
    return;
}


// WARNING (jumptable): Unable to track spacebase fully for stack
// WARNING: Unable to track spacebase fully for stack

fn fun_3444_02c6(param_1: u16)

{
    let pb_var1: *mut u8;
    let b_var2: u8;
    let b_var3: u8;
    let pb_var4: *mut u8;
    code * *ppcVar5;
    let pcVar6: *mut Code;
    u16
    in_AX;
    u16
    uVar8;
    let i_var7: i16;
    let extraout_dx: u16;
    undefined * puVar8;
    let i_var9: i16;
    let pb_var10: *mut u8;
    let pb_var11: *mut u8;
    u16
    pbVar12;
    u16
    unaff_ES;
    u16
    uVar13;
    u16
    uVar14;
    u16
    unaff_SS;
    u16
    unaff_DS;
    bool
    bVar12;
    let in_stack_00000000: u16;
    u16
    in_stack_00000000_00;
    u16
    iVar10;

    uVar14 = 0x39d9;
    i_var9 = -in_AX;
    puVar8 = &stack0x0004 + i_var9;
    if ((in_AX <= &stack0x0004) && (ff
    0xb652 <= puVar8)) {
* (u16 * )( & param_1 + iVar9) = param_1; ( & stack0x0000 + iVar9) = in_stack_00000000; return;
}
    if (0xb64e != -1) {
        // WARNING: Could not recover jumptable at 0x00034726. Too many branches
        // WARNING: Treating indirect jump as call
        (*0xb64e)();
        return;
    }
    uVar8 = 0;
    while (true) {
        fun_3444_029e(uVar14, uVar8);
        fun_3444_0587(uVar14);
        uVar13 = uVar14;
        if (0xc0da == -0x292a) {
            uVar13 = 0x3000;
            (**(code * *)
            0xc0de)(uVar8);
        }
        uVar14 = 0x3000;
        (**(code * *)
        0xb5d8)(uVar13, 0xff);
        0xb602 = puVar8;
        *(u16 *)
        0xb604 = unaff_ES;
        pcVar6 = swi(0x21);
        (*pcVar6)();
        if (0xc0ec == 0)
        goto
        LAB_3444_0163;
        unaff_ES = *(u16 *)
        0xb616;
        bVar12 = false;
        puVar8 = ff
        0x0;
        ppcVar5 = (code * *)
        0xc0ea;
        (**ppcVar5)(0x3000);
        if (!bVar12)
        break;
        uVar8 = 2;
        unaff_DS = unaff_SS;
    }
    ppcVar5 = (code * *)
    0xc0ea;
    (**ppcVar5)(0x3000);
// LAB_3444_0163:
    iVar9 = 0x2c;
    if (i_var9 != 0) {
        pb_var11 = 0x0;
        loop {
            bVar12 = *pb_var11 == 0;
            if (bVar12)
            break;
            i_var7 = 0xd;
            pb_var10 = 0xb5f4;
            loop {
                if (i_var7 == 0)
                break;
                i_var7 = i_var7 + -1;
                pb_var4 = pb_var11;
                pb_var11 = pb_var11 + 1;
                pb_var1 = pb_var10;
                pb_var10 = pb_var10 + 1;
                bVar12 = *pb_var1 == *pb_var4;
            }
            while (bVar12);
            if (bVar12) {
                pbVar12 = 0xb61f;
                goto
                LAB_3444_0198;
            }
            i_var7 = 0x7fff;
            bVar12 = true;
            loop {
                if (i_var7 == 0)
                break;
                i_var7 = i_var7 + -1;
                pb_var1 = pb_var11;
                pb_var11 = pb_var11 + 1;
                bVar12 = *pb_var1 == 0;
            }
            while (!bVar12);
        }
        while (bVar12);
    }
// LAB_3444_01ac:
    iVar9 = 4;
    loop {
    pb_var1 = (i_var9 + -0x49e1);
    bVar12 = false;
    *pb_var1 = *pb_var1 & 0xbf;
    pcVar6 = swi(0x21);
    (*pcVar6)();
    if ((!bVar12) && ((extraout_dx & 0x80) != 0)) {
        pb_var1 = (i_var9 + -0x49e1);
        *pb_var1 = *pb_var1 | 0x40;
    }
    i_var9 = i_var9 + -1;
}
    while (-1 < i_var9);
    FUN_3444_028b();
    FUN_3444_028b();
    return;
// LAB_3444_0198:
    pbVar10 = pb_var11 + 1;
    b_var2 = *pb_var11;
    if (b_var2 < 0x41)
    goto
    LAB_3444_01ac;
    pb_var11 = pb_var11 + 2;
    b_var3 = *pb_var10;
    if (b_var3 < 0x41)
    goto
    LAB_3444_01ac;
    pb_var1 = pbVar12;
    pbVar12 = pbVar12 + 1;
    *pb_var1 = b_var3 + 0xbf | (b_var2 + 0xbf) * '\x10';
    goto
    LAB_3444_0198;
}



uint FUN_3444_02ea()

{
let pbVar1: * mut u8; let bVar2: u8; let bVar4: u8; let uVar3: u16; let iVar5: i16; let pbVar6: * mut u8; let unaff_DS: u16;

pbVar6 = 0x0; iVar5 = 0x42; uVar3 = 0; loop {
pbVar1 = pbVar6; pbVar6 = pbVar6 + 1;
bVar2 = * pbVar1; bVar4 = (uVar3 >> 8) ^ bVar2; uVar3 = CONCAT11(bVar4, bVar2); iVar5 = iVar5 + -1;
} while (iVar5 != 0); uVar3 = uVar3 ^ 0x5500; if (bVar4 != 0x55) {
FUN_3444_029e(0x39d9); FUN_3444_0587(0x39d9, 1); uVar3 = 1;
}
return uVar3;
}


// WARNING (jumptable): Unable to track spacebase fully for stack
// WARNING: Unable to track spacebase fully for stack

fn fun_3444_030e(param_1: u16, param_2: u16, param_3: u16)

{
    char
    cVar1;
    let pc_var2: String;
    let u_var3: u16;
    let pcVar4: *mut Code;
    let u_var5: u32;
    let u_var6: u16;
    let i_var7: i16;
    let u_var8: u16;
    let u_var9: u16;
    char * *ppcVar10;
    let pc_var11: String;
    let pc_var12: String;
    let pc_var13: String;
    let i_var14: i16;
    let unaff_ss: String;
    let unaff_ds: u16;
    let in_stack_00000000: u16;

    0xb654 = in_stack_00000000;
    0xb656 = param_1;
    pcVar4 = swi(0x21);
    u_var6 = (*pcVar4)();
    0xb618 = u_var6;
    u_var9 = 1;
    if (u_var6 != '\x02') {
        u_var6 = 0x2c;
        0xb63f = u_var6;
        i_var7 = -0x8000;
        pc_var12 = 
        0x0;
// LAB_3444_0339:
        loop {
            pc_var13 = pc_var12;
            if (i_var7 != 0) {
                i_var7 = i_var7 + -1;
                pc_var2 = pc_var12;
                pc_var12 = pc_var12 + 1;
                pc_var13 = pc_var12;
                if (*pc_var2 != '\0')
                goto
                LAB_3444_0339;
            }
            pc_var12 = pc_var13 + 1;
        }
        while (*pc_var13 != '\0');
        pc_var13 = pc_var13 + 3;
        *(char * *)
        0xb63d = pc_var13;
        u_var9 = 0xffff;
        loop {
            if (u_var9 == 0)
            break;
            u_var9 = u_var9 - 1;
            pc_var2 = pc_var13;
            pc_var13 = pc_var13 + 1;
        }
        while (*pc_var2 != '\0');
        u_var9 = ~u_var9;
    }
    i_var7 = 1;
    pc_var12 = 
    0x81;
    u_var6 = 0xb616;
// LAB_3444_0357:
    loop {
    loop {
        pc_var2 = pc_var12;
        pc_var12 = pc_var12 + 1;
        cVar1 = *pc_var2;
    }
    while (cVar1 == ' ');
}
    while (cVar1 == '\t');
    if ((cVar1 != '\r') && (cVar1 != '\0')) {
        i_var7 = i_var7 + 1;
        loop {
            pc_var12 = pc_var12 + -1;
// LAB_3444_036a:
            pcVar2 = pc_var12;
            pc_var12 = pc_var12 + 1;
            cVar1 = *pc_var2;
            if ((cVar1 == ' ') || (cVar1 == '\t'))
            goto
            LAB_3444_0357;
            if ((cVar1 == '\r') || (cVar1 == '\0'))
            break;
            if (cVar1 == '\"') {
// LAB_3444_03a3:
                loop {
                    while (true) {
                        while (true) {
                            pc_var2 = pc_var12;
                            pc_var12 = pc_var12 + 1;
                            cVar1 = *pc_var2;
                            if ((cVar1 == '\r') || (cVar1 == '\0'))
                            goto
                            LAB_3444_03d3;
                            if (cVar1 == '\"')
                            goto
                            LAB_3444_036a;
                            if (cVar1 == '\\')
                            break;
                            u_var9 = u_var9 + 1;
                        }
                        u_var8 = 0;
                        loop {
                            pc_var13 = pc_var12;
                            u_var8 = u_var8 + 1;
                            pc_var12 = pc_var13 + 1;
                            cVar1 = *pc_var13;
                        }
                        while (cVar1 == '\\');
                        if (cVar1 == '\"')
                        break;
                        u_var9 = u_var9 + u_var8;
                        pc_var12 = pc_var13;
                    }
                    u_var9 = u_var9 + (u_var8 >> 1) + ((u_var8 & 1) != 0);
                }
                while ((u_var8 & 1) != 0);
                goto
                LAB_3444_036a;
            }
            if (cVar1 != '\\') {
                u_var9 = u_var9 + 1;
                goto
                LAB_3444_036a;
            }
            u_var8 = 0;
            loop {
                u_var8 = u_var8 + 1;
                pc_var2 = pc_var12;
                pc_var12 = pc_var12 + 1;
                cVar1 = *pc_var2;
            }
            while (cVar1 == '\\');
            if (cVar1 == '\"') {
                u_var9 = u_var9 + (u_var8 >> 1) + ((u_var8 & 1) != 0);
                if ((u_var8 & 1) == 0)
                goto
                LAB_3444_03a3;
                goto
                LAB_3444_036a;
            }
            u_var9 = u_var9 + u_var8;
        }
        while (true);
    }
// LAB_3444_03d3:
    0xb633 = i_var7;
    i_var14 = (i_var7 + 1) * 4;
    i_var7 = -(u_var9 + i_var7 + i_var14 + 1 & 0xfffe);
    *(undefined * *)
    0xb635 = &stack0x0008 + i_var7;
    *(char * *)
    0xb637 = unaff_ss;
    pc_var13 = &stack0x0008 + i_var14 + i_var7;
    *(char * *)(&stack0x0006 + i_var7) = unaff_ss;
    u_var6 = (&stack0x0006 + i_var7);
    *(char * *)(&stack0x0008 + i_var7) = pc_var13;
    *(char * *)(&stack0x000a + i_var7) = unaff_ss;
    ppcVar10 = (char * *)(&stack0x000c + i_var7);
    u_var5 = 
    0xb63d;
    pc_var12 = 
    u_var5;
    loop {
    pc_var2 = pc_var12;
    pc_var12 = pc_var12 + 1;
    cVar1 = *pc_var2;
    pc_var2 = pc_var13;
    pc_var13 = pc_var13 + 1;
    *pc_var2 = cVar1;
}
    while (cVar1 != '\0');
    u_var3 = 0xb616;
    pc_var12 = 
    0x81;
// LAB_3444_0418:
    loop {
    loop {
        pc_var2 = pc_var12;
        pc_var12 = pc_var12 + 1;
        cVar1 = *pc_var2;
    }
    while (cVar1 == ' ');
}
    while (cVar1 == '\t');
    if ((cVar1 == '\r') || (cVar1 == '\0')) {
// LAB_3444_04ac:
        *(char * *)(&stack0x0006 + i_var7) = unaff_ss;
        u_var6 = (&stack0x0006 + i_var7);
        *ppcVar10 = 
        0x0;
        ppcVar10[1] = 
        0x0;
        // WARNING: Could not recover jumptable at 0x000348f7. Too many branches
        // WARNING: Treating indirect jump as call
        (*0xb654)();
        return;
    }
    *ppcVar10 = pc_var13;
    ppcVar10[1] = unaff_ss;
    ppcVar10 = ppcVar10 + 2;
    loop {
    pc_var12 = pc_var12 + -1;
// LAB_3444_043a:
    pcVar2 = pc_var12;
    pc_var12 = pc_var12 + 1;
    cVar1 = *pc_var2;
    if ((cVar1 == ' ') || (cVar1 == '\t')) {
        pc_var2 = pc_var13;
        pc_var13 = pc_var13 + 1;
        *pc_var2 = '\0';
        goto
        LAB_3444_0418;
    }
    if ((cVar1 == '\r') || (cVar1 == '\0')) {
// LAB_3444_04a9:
        *pcVar13 = '\0';
        goto
        LAB_3444_04ac;
    }
    pc_var11 = pc_var12;
    if (cVar1 == '\"') {
// LAB_3444_0476:
        while (true) {
            pc_var12 = pc_var11 + 1;
            cVar1 = *pc_var11;
            if ((cVar1 == '\r') || (cVar1 == '\0'))
            goto
            LAB_3444_04a9;
            if (cVar1 == '\"')
            break;
            if (cVar1 == '\\') {
                u_var9 = 0;
                loop {
                    pc_var11 = pc_var12;
                    u_var9 = u_var9 + 1;
                    pc_var12 = pc_var11 + 1;
                    cVar1 = *pc_var11;
                }
                while (cVar1 == '\\');
                if (cVar1 == '\"') {
                    for (uVar8 = uVar9 >> 1; uVar8 != 0; uVar8 = uVar8 -1) {
                        pc_var2 = pc_var13;
                        pc_var13 = pc_var13 + 1;
                        *pc_var2 = '\\';
                    }
                    if ((u_var9 & 1) == 0)
                    break;
                    pc_var2 = pc_var13;
                    pc_var13 = pc_var13 + 1;
                    *pc_var2 = '\"';
                    pc_var11 = pc_var12;
                } else {
                    for (; uVar9 != 0; uVar9 = uVar9 -1) {
                        pc_var2 = pc_var13;
                        pc_var13 = pc_var13 + 1;
                        *pc_var2 = '\\';
                    }
                }
            } else {
                pc_var2 = pc_var13;
                pc_var13 = pc_var13 + 1;
                *pc_var2 = cVar1;
                pc_var11 = pc_var12;
            }
        }
        goto
        LAB_3444_043a;
    }
    if (cVar1 != '\\') {
        pc_var2 = pc_var13;
        pc_var13 = pc_var13 + 1;
        *pc_var2 = cVar1;
        goto
        LAB_3444_043a;
    }
    u_var9 = 0;
    loop {
        u_var9 = u_var9 + 1;
        pc_var2 = pc_var12;
        pc_var12 = pc_var12 + 1;
        cVar1 = *pc_var2;
    }
    while (cVar1 == '\\');
    if (cVar1 == '\"') {
        for (uVar8 = uVar9 >> 1; uVar8 != 0; uVar8 = uVar8 -1) {
            pc_var2 = pc_var13;
            pc_var13 = pc_var13 + 1;
            *pc_var2 = '\\';
        }
        pc_var11 = pc_var12;
        if ((u_var9 & 1) == 0)
        goto
        LAB_3444_0476;
        pc_var2 = pc_var13;
        pc_var13 = pc_var13 + 1;
        *pc_var2 = '\"';
        goto
        LAB_3444_043a;
    }
    for (; uVar9 != 0; uVar9 = uVar9 -1) {
        pc_var2 = pc_var13;
        pc_var13 = pc_var13 + 1;
        *pc_var2 = '\\';
    }
}
    while (true);
}


fn fun_3444_04bc()

{
    let pi_var1: *mut u16;
    let pc_var2: String;
    let pi_var3: *mut u16;
    char
    cVar4;
    let i_var5: i16;
    let i_var6: i16;
    let pc_var7: String;
    let u_var8: u16;
    char * *ppcVar9;
    let i_var10: i16;
    let pi_var11: *mut u16;
    let pi_var12: *mut u16;
    let pc_var13: String;
    let pi_var14: *mut u16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    bool
    bVar15;
    let u_var16: u32;

    i_var5 = 0x2c;
    i_var10 = 0;
    pc_var13 = 
    0x0;
    i_var6 = -1;
    if (i_var5 != 0) {
        cVar4 = 0x0;
        while (cVar4 != '\0') {
            loop {
                if (i_var6 == 0)
                break;
                i_var6 = i_var6 + -1;
                pc_var2 = pc_var13;
                pc_var13 = pc_var13 + 1;
            }
            while (*pc_var2 != '\0');
            i_var10 = i_var10 + 1;
            pc_var2 = pc_var13;
            pc_var13 = pc_var13 + 1;
            cVar4 = *pc_var2;
        }
    }
    u_var16 = FUN_3444_05be();
    pc_var7 = (u_var16 >> 0x10);
    pc_var13 = 
    u_var16;
    u_var16 = FUN_3444_05be();
    u_var8 = (undefined2)(u_var16 >> 0x10);
    ppcVar9 = (char * *)
    u_var16;
    *(char * **)
    0xb639 = ppcVar9;
    0xb63b = u_var8;
    pi_var11 = 0x0;
    loop {
    if (i_var10 == 0) {
        *ppcVar9 = 
        0x0;
        ppcVar9[1] = 
        0x0;
        return;
    }
    bVar15 = *pi_var11 == 0xb5f4;
    if (bVar15) {
        pi_var14 = 0xb5f4;
        i_var6 = 6;
        pi_var12 = pi_var11;
        loop {
            if (i_var6 == 0)
            break;
            i_var6 = i_var6 + -1;
            pi_var3 = pi_var14;
            pi_var14 = pi_var14 + 1;
            pi_var1 = pi_var12;
            pi_var12 = pi_var12 + 1;
            bVar15 = *pi_var1 == *pi_var3;
        }
        while (bVar15);
        if (!bVar15)
        goto
        LAB_3444_0539;
    } else {
// LAB_3444_0539:
        *ppcVar9 = pc_var13;
        ppcVar9[1] = pc_var7;
        ppcVar9 = ppcVar9 + 2;
    }
    loop {
        pi_var1 = pi_var11;
        pi_var11 = (pi_var11 + 1);
        cVar4 = pi_var1;
        pc_var2 = pc_var13;
        pc_var13 = pc_var13 + 1;
        *pc_var2 = cVar4;
    }
    while (cVar4 != '\0');
    i_var10 = i_var10 + -1;
}
    while (true);
}



int * FUN_3444_055c(param_1_00: u16,param_1: i16)

{
let piVar1: * mut u16; let piVar2: * mut u16; let iVar3: i16; let piVar4: * mut u16; let unaff_DS: u16;

piVar4 = 0xc914; loop {
piVar1 = piVar4; piVar4 = piVar4 + 1;
iVar3 = * piVar1; piVar2 = piVar4; if ((iVar3 == param_1) || (piVar2 = (iVar3 + 1), piVar2 == 0x0)) {
return piVar2;
}
iVar3 = - 1; loop {
if (iVar3 == 0) break; iVar3 = iVar3 + - 1; piVar1 = piVar4; piVar4 = (piVar4 + 1);
} while (piVar1 != '\0');
} while ( true );
}



fn fun_3444_0587(param_1_00: u16, param_1: u16)

{
    let pc_var1: String;
    let pcVar2: *mut Code;
    let pc_var3: String;
    let i_var4: i16;
    let unaff_es: u16;
    let unaff_ds: u16;

    pc_var3 = 
    FUN_3444_055c(0x39d9, param_1);
    if (pc_var3 != 
    0x0) {
    i_var4 = -1;
    loop {
        if (i_var4 == 0)
        break;
        i_var4 = i_var4 + -1;
        pc_var1 = pc_var3;
        pc_var3 = pc_var3 + 1;
    }
    while (*pc_var1 != '\0');
    if (0xc0da == -0x292a) {
        (**(code * *)
        0xc0dc)();
    }
    pcVar2 = swi(0x21);
    (*pcVar2)();
}
    return;
}



void  FUN_3444_05be()

{
let puVar1: * mut u16; let pbVar2: * mut u8; let pbVar3: * mut u8; let bVar4: u8; let bVar5: u8; let pbVar6: * mut u8; code ** ppcVar7; code * pcVar8; let iVar9: i16; let in_CX: u16; let extraout_DX: u16; let iVar10: i16; let uVar11: u16; let pbVar12: * mut u8; let pbVar13: * mut u8; let unaff_ES: u16; let uVar14: u16; let uVar15: u16; let unaff_SS: u16; let unaff_DS: u16; bool bVar16; let lVar17: i32;

puVar1 = 0xad5c; uVar14 = * puVar1; * puVar1 = 0x400; uVar15 = 0x3143; lVar17 = FUN_3143_1720(0x39d9); 0xad5c = uVar14; uVar11 = (lVar17 >> 0x10) | lVar17; if (lVar17 != 0) {
return;
}
while ( true ) {
FUN_3444_029e(uVar15, in_CX); FUN_3444_0587(uVar15); uVar14 = uVar15; if (0xc0da == - 0x292a) {
uVar14 = 0x3000; ( * * (code ** )0xc0de)(in_CX);
}
uVar15 = 0x3000; ( * * (code ** )0xb5d8)(uVar14, 0xff);
0xb602 = uVar11; 0xb604 = unaff_ES; pcVar8 = swi(0x21); ( * pcVar8)(); if (0xc0ec == 0) goto LAB_3444_0163; unaff_ES = 0xb616; bVar16 = false; uVar11 = 0; ppcVar7 = (code * * )0xc0ea; ( * * ppcVar7)(0x3000); if ( ! bVar16) break; in_CX = 2; unaff_DS = unaff_SS;
}
ppcVar7 = (code * * )0xc0ea; (* * ppcVar7)(0x3000);
// LAB_3444_0163:
iVar10 = 0x2c; if (iVar10 != 0) {
pbVar13 = 0x0; loop {
bVar16 = * pbVar13 == 0; if (bVar16) break; iVar9 = 0xd; pbVar12 = 0xb5f4; loop {
if (iVar9 == 0) break; iVar9 = iVar9 + - 1; pbVar6 = pbVar13; pbVar13 = pbVar13 + 1; pbVar2 = pbVar12; pbVar12 = pbVar12 + 1; bVar16 = * pbVar2 == * pbVar6;
} while (bVar16); if (bVar16) {
pbVar12 = 0xb61f; goto LAB_3444_0198;
}
iVar9 = 0x7fff; bVar16 = true; loop {
if (iVar9 == 0) break; iVar9 = iVar9 + - 1; pbVar2 = pbVar13; pbVar13 = pbVar13 + 1; bVar16 = * pbVar2 == 0;
} while ( ! bVar16);
} while (bVar16);
}
// LAB_3444_01ac:
iVar10 = 4; loop {
pbVar2 = (iVar10 + - 0x49e1); bVar16 = false; * pbVar2 = * pbVar2 & 0xbf; pcVar8 = swi(0x21); ( *pcVar8)(); if (( ! bVar16) & & ((extraout_DX & 0x80) != 0)) {
pbVar2 = (iVar10 + - 0x49e1); *pbVar2 = * pbVar2 | 0x40;
}
iVar10 = iVar10 + - 1;
} while ( - 1 < iVar10); FUN_3444_028b(); FUN_3444_028b(); return;
// LAB_3444_0198:
pbVar3 = pbVar13 + 1; bVar4 = * pbVar13; if (bVar4 < 0x41) goto LAB_3444_01ac; pbVar13 = pbVar13 + 2; bVar5 = * pbVar3; if (bVar5 < 0x41) goto LAB_3444_01ac; pbVar2 = pbVar12; pbVar12 = pbVar12 + 1; * pbVar2 = bVar5 + 0xbf | (bVar4 + 0xbf) * '\x10'; goto LAB_3444_0198;
}



fn fun_3444_0606()

{
    FUN_3444_060c();
    return;
}



void  FUN_3444_060c()

{
let bVar1: u8; char cVar2; let in_AX: u16; let unaff_DS: u16;

bVar1 = in_AX; * 0xb61b = bVar1; cVar2 = (in_AX >> 8); if (cVar2 != '\0') goto LAB_3444_0630; if ( * 0xb618 < 3) {
// LAB_3444_0626: if (0x13 < bVar1) {
// LAB_3444_062a:
in_AX = 0x13;
}
}
else {
if (0x21 < bVar1) goto LAB_3444_062a; if (bVar1 < 0x20) goto LAB_3444_0626; in_AX = 5;
}
cVar2 = ((in_AX & 0xff) + 0xb658);
// LAB_3444_0630:
0xb610 = cVar2; return;
}



uint FUN_3444_063a(param_1_00: u16,uparam_1: i16,param_3_00: u16,uparam_2: i16,
uparam_3: i16)

{
let uVar1: u16; let uVar2: u16;
let uVar3: u16; let uVar4: u16;
let uVar5: u16; let uVar6: u16;
let uVar7: u16;

uVar6 = (param_2 * param_3 >> 0x10); uVar1 = (param_2 * param_3); uVar5 = uVar1; uVar7 = uVar6; if ((uVar1 | uVar6) != 0) {
while (((uVar7 != 0 || (uVar5 == 0xffff)) || (CARRY2(param_1, uVar5)))) {
if (param_1 < 2) {
uVar2 = 0x8000;
}
else {
uVar2 = - param_1;
}
uVar4 = FUN_3444_06db(); uVar3 = uVar5 - uVar4; uVar7 = uVar7 - (uVar5 < uVar4); if ((uVar4 < uVar2) || (param_1 = param_1 + uVar4, uVar5 = uVar3, (uVar3 | uVar7) == 0))
goto LAB_3444_06b9;
}
uVar2 = FUN_3444_06db(0, param_1); uVar3 = uVar5 - uVar2; uVar7 = uVar7 - (uVar5 < uVar2);
// LAB_3444_06b9:
uVar5 = param_3; if ((uVar3 | uVar7) != 0) {
uVar5 = (CONCAT22((uVar6 - uVar7) - (uVar1 < uVar3), uVar1 - uVar3) / param_2);
}
}
return uVar5;
}



int  FUN_3444_06db()

{
let piVar1: * mut u16; let uVar2: u16; let iVar3: i16; let iVar4: i16; let in_CX: u16; let uVar5: u16; undefined * in_BX; let unaff_SI: *mut u16; let piVar6: * mut u16;
let unaff_ES: u16; let unaff_DS: u16;
let local_6: u16;

piVar6 = unaff_SI + 0x78; uVar5 = in_CX; if ((( *(unaff_SI + 5) & 0xc) == 0) & & (( * piVar6 & 1) == 0)) {
local_6 = 0x200;
}
else {
local_6 = unaff_SI[0x79];
}
loop {
if (((( * (unaff_SI + 5) & 8) == 0) & & (( * piVar6 & 1) == 0)) || (uVar2 = unaff_SI[2], uVar2 == 0)) {
if (uVar5 < local_6) {
iVar3 = FUN_3444_0816(0x39d9, * in_BX);
if (iVar3 == - 1) goto LAB_3444_07c8;
in_BX = in_BX + 1; uVar5 = uVar5 - 1; local_6 = unaff_SI[0x79]; if (local_6 == 0) {
local_6 = 1;
}
}
else {
if (((( * (unaff_SI + 5) & 8) != 0) || (( * piVar6 & 1) != 0)) & & (iVar3 = FUN_3444_0a18(0x39d9), iVar3 != 0)) goto LAB_3444_07c8; iVar3 = uVar5 - uVar5 % local_6; iVar4 = FUN_3444_134a(0x39d9, * (undefined * )(unaff_SI + 0xb), in_BX, unaff_ES, iVar3);
if ((iVar4 == - 1) || (uVar5 = uVar5 - iVar4, iVar4 != iVar3)) {
piVar1 = unaff_SI + 5; * piVar1 = *piVar1 | 0x20; goto LAB_3444_07c8;
}
in_BX = in_BX + iVar4;
}
}
else {
if (uVar5 < uVar2) {
uVar2 = uVar5;
}
FUN_3444_1f26(0x39d9, * unaff_SI, unaff_SI[1], in_BX, unaff_ES, uVar2); uVar5 = uVar5 - uVar2; piVar1 = unaff_SI + 2; * piVar1 = * piVar1 - uVar2; in_BX = in_BX + uVar2; piVar1 = unaff_SI; *piVar1 = * piVar1 + uVar2;
}
if (uVar5 == 0) {
// LAB_3444_07c8: return in_CX - uVar5;
}
} while ( true );
}



fn fun_3444_07d2() -> u16

{
    let u_var1: u16;
    let u_var2: u16;

    u_var1 = FUN_3444_094e(0xb67a);
    u_var2 = fun_3444_0afc(0x39d9, 0xb67a);
    FUN_3444_09cf(u_var1, 0xb67a);
    return u_var2;
}



uint FUN_3444_0816(param_1_00: u16,uparam_1: i16,int *param_2)

{
let piVar1: * mut u16; let piVar2: * mut u16; let bVar3: u8; let iVar4: i16; let iVar5: i16; let uVar6: u16; let unaff_DS: u16;

piVar2 = param_2; bVar3 = * (param_2 + 5); if (((bVar3 & 0x82) != 0) & & ((bVar3 & 0x40) == 0)) {
param_2[2] = 0; if ((bVar3 & 1) != 0) {
if ((bVar3 & 0x10) == 0) goto LAB_3444_088f; * param_2 = param_2[3]; bVar3 = bVar3 & 0xfe;
}
* (param_2 + 5) = bVar3 & 0xef | 2; uVar6 = * (param_2 + 0xb); if (((bVar3 & 8) == 0) & & (((bVar3 & 4) != 0 || ((( *(param_2 + 0x78) & 1) == 0 & & (((((param_2 == 0xb67a || (param_2 == 0xb686)) || (param_2 == 0xb69e)) & & ((* (uVar6 + 0xb61f) & 0x40) != 0)) || (FUN_3444_0902(param_2), ( * (piVar2 + 5) & 8) == 0)))))))) {
iVar4 = FUN_3444_134a(0x39d9, uVar6, & param_1); iVar5 = 1;
}
else {
iVar4 = piVar2[3]; iVar5 = *piVar2 - iVar4; * piVar2 = iVar4 + 1; piVar2[2] = piVar2[0x79] + - 1; if (iVar5 == 0) {
iVar4 = 0; if (( * (uVar6 + 0xb61f) & 0x20) != 0) {
FUN_3444_1006(0x39d9, uVar6, 0, 0,2); iVar4 = 0; iVar5 = iVar4;
}
}
else {
iVar4 = FUN_3444_134a(0x39d9, uVar6, piVar2[3], piVar2[4], iVar5);
}
* * (undefined * * )(piVar2 + 3) = param_1;
}
if (iVar4 == iVar5) {
return param_1 & 0xff;
}
}
// LAB_3444_088f:
piVar1 = piVar2 + 5; * piVar1 = *piVar1 | 0x20; return 0xffff;
}



void  FUN_3444_0902(int *param_1)

{
let piVar1: * mut u16; let iVar2: i16; let iVar3: i16; let unaff_DS: i16; let uVar4: u32;

uVar4 = FUN_3143_1720(0x39d9, 0x200); iVar3 = (uVar4 >> 0x10); iVar2 = uVar4; if (iVar3 == 0) {
piVar1 = param_1 + 5; * piVar1 = *piVar1 | 4; param_1[0x79] = 1; iVar2 = param_1 + 0xf1; iVar3 = unaff_DS;
}
else {
piVar1 = param_1 + 5; * piVar1 = *piVar1 | 8; param_1[0x79] = 0x200;
}
param_1[1] = iVar3; * param_1 = iVar2; param_1[4] = iVar3; param_1[3] = iVar2; param_1[2] = 0; return;
}



undefined2  FUN_3444_094e(undefined2 *param_1)

{
let puVar1: * mut u16; let uVar2: u16; let uVar3: u16; let uVar4: u16; let puVar5: * mut u16; let    unaff_DS: u16; let uVar6: u32;

puVar5 = 0xb852; if ((((param_1 == 0xb67a) || (puVar5 = 0xb856, param_1 == 0xb686)) || (puVar5 = 0xb85a, param_1 == 0xb69e)) & & ((( * (param_1 + 5) & 0xc) == 0 & & (( * (param_1 + 0x78) & 1) == 0)))) {
uVar4 = * puVar5; uVar2 = puVar5[1]; uVar6 = CONCAT22(uVar2, uVar4); if ((uVar4 | uVar2) == 0) {
uVar6 = FUN_3143_1720(0x39d9, 0x200); uVar4 = (uVar6 >> 0x10); if (uVar4 == 0) goto LAB_3444_09c9; * puVar5 = uVar6; puVar5[1] = uVar4;
}
uVar3 = (undefined2)(uVar6 >> 0x10); param_1[3] = uVar6; param_1[4] = uVar3; * param_1 = uVar6; param_1[1] = uVar3; param_1[2] = 0x200; param_1[0x79] = 0x200; puVar1 = param_1 + 5; * puVar1 = * puVar1 | 2; * (param_1 + 0x78) = 0x11; uVar3 = 1;
}
else {
// LAB_3444_09c9:
uVar3 = 0;
}
return uVar3;
}



void  FUN_3444_09cf(param_1: i16,undefined2 *param_2)

{
let unaff_DS: u16;

if ((( *(param_2 + 0x78) & 0x10) != 0) & & (( * ( * (param_2 + 0xb) + 0xb61f) & 0x40) != 0)) {
FUN_3444_0a18(0x39d9, param_2); if (param_1 != 0) {
* (undefined * )(param_2 + 0x78) = 0; param_2[0x79] = 0;
* param_2 = 0; param_2[1] = 0; param_2[3] = 0; param_2[4] = 0;
}
}
return;
}



fn fun_3444_0a18(param_1_00: u16, int *param_1, uparam_2: i16) -> u16

{
    let pi_var1: *mut u16;
    let b_var2: u8;
    let i_var3: i16;
    let i_var4: i16;
    let u_var5: u16;
    let unaff_ds: u16;

    u_var5 = 0;
    if ((param_2 | param_1) == 0) {
        u_var5 = FUN_3444_0aa0(0);
    } else {
        b_var2 = *(param_1 + 5);
        if (((b_var2 & 3) == 2) && (((b_var2 & 8) != 0 || ((*(param_1 + 0x78) & 1) != 0)))) {
            i_var3 = *param_1 - param_1[3];
            if (0 < i_var3) {
                i_var4 = FUN_3444_134a(0x39d9, (param_1 + 0xb), param_1[3], param_1[4], i_var3);
                if (i_var3 != i_var4) {
                    pi_var1 = param_1 + 5;
                    *pi_var1 = *pi_var1 | 0x20;
                    u_var5 = 0xffff;
                }
            }
        }
        i_var3 = param_1[4];
        *param_1 = param_1[3];
        param_1[1] = i_var3;
        param_1[2] = 0;
    }
    return u_var5;
}



fn FUN_3444_0aa0(param_1: i16) -> i16

{
let iVar1: i16; let uVar2: u16;
let iVar3: i16; let uVar4: u16;
let uVar5: u16; let unaff_DS: u16;
let local_4: i16;

iVar3 = 0; local_4 = 0; uVar4 = 0x39d9; for (uVar2 = 0xb66e; uVar2 < = 0xb84e; uVar2 = uVar2 + 0xc) {
uVar5 = uVar4; if (( * (uVar2 + 10) & 0x83) != 0) {
uVar5 = 0x3444; iVar1 = FUN_3444_0a18(uVar4,uVar2); if (iVar1 == - 1) {
local_4 = - 1;
}
else {
iVar3 = iVar3 + 1;
}
}
uVar4 = uVar5;
}
if (param_1 == 1) {
local_4 = iVar3;
}
return local_4;
}



fn fun_3444_0afc() -> u16

{
    let b_var1: u8;
    let b_var2: u8;
    let u_var3: u16;
    let unaff_si: u16;
    let in_stack_00000008: *mut u8;

    fun_3444_02c6(0x39d9);
    b_var1 = *in_stack_00000008;
    if (b_var1 == 0) {
        return 0;
    }
    if ((b_var1 - 0x20) < 0x59) {
        b_var2 = *((b_var1 - 0x20) + 0xb85e) & 0xf;
    } else {
        b_var2 = 0;
    }
    // WARNING: Could not emulate address calculation at 0x00034f82
    // WARNING: Treating indirect jump as call
    u_var3 = (**(code * *)((*((b_var2 * '\b') + 0xb85e) >> 4) * 2 + 0xaec))(unaff_si & 0xff00 | b_var1);
    return u_var3;
}



long FUN_3444_0fe6(param_1_00: u16,uparam_1: i16)

{
code * pcVar1; let in_DX: u16; let extraout_DX: u16; let unaff_DS: u16; bool bVar2;

bVar2 = param_1 < 0xb61d; if (bVar2) {
pcVar1 = swi(0x21); ( * pcVar1)(); in_DX = extraout_DX; if (! bVar2) {
* (undefined * )(param_1 + 0xb61f) = 0;
}
}
else {
bVar2 = true;
}
if ( ! bVar2) {
return in_DX << 0x10;
}
FUN_3444_060c(); return - 1;
}



uint FUN_3444_1006(param_1_00: u16,uparam_1: i16,uparam_2: i16,uparam_3: i16,uparam_4: i16)

{
let pbVar1: * mut u8; code * pcVar2; let uVar3: u16; let uVar4: u16; let uVar5: u16; let unaff_DS: u16; bool bVar6; let uVar7: u32;

if (param_1 < 0xb61d) {
bVar6 = false; if ((param_3 & 0x8000) == 0) goto LAB_3444_1069; if (param_4 == 0) goto LAB_3444_1041; bVar6 = false;
pcVar2 = swi(0x21); uVar7 = (* pcVar2)(); uVar4 = (uVar7 >> 0x10); uVar3 = uVar7; if (bVar6) goto LAB_3444_107d; if ((param_4 & 2) == 0) {
bVar6 = CARRY2(uVar4, param_3) || CARRY2(uVar4 + param_3, CARRY2(uVar3,param_2)); if ( - 1 < (uVar4 + param_3 + CARRY2(uVar3, param_2))) {
// LAB_3444_1069:
pcVar2 = swi(0x21); uVar3 = (* pcVar2)(); if ( ! bVar6) {
pbVar1 = (param_1 + 0xb61f); bVar6 = false; * pbVar1 = * pbVar1 & 0xfd;
}
goto LAB_3444_107d;
}
}
else {
pcVar2 = swi(0x21); uVar7 = (* pcVar2)(uVar4); uVar5 = (uVar7 >> 0x10); uVar3 = CARRY2(uVar7, param_2); uVar4 = uVar5 + param_3; bVar6 = CARRY2(uVar5, param_3) || CARRY2(uVar4, uVar3); if (- 1 < (uVar4 + uVar3)) goto LAB_3444_1069; pcVar2 = swi(0x21); (* pcVar2)();
}
// LAB_3444_1041:
uVar3 = 0x1600;
}
else {
uVar3 = 0x900;
}
bVar6 = true;
// LAB_3444_107d: if (bVar6) {
FUN_3444_060c(); uVar3 = 0xffff;
}
return uVar3;
}


// WARNING: Removing unreachable block (ram,0x000355d8)
// WARNING: Could not reconcile some variable overlaps

uint FUN_3444_109a(param_1_00: u16,uparam_1: i16,param_3_00: u16,uparam_2: i16,
uparam_3: i16)

{
code * pcVar1; let uVar2: u16; let uVar3: u16; let iVar4: i16; let bVar5: u8; let uVar6: u16; let extraout_DX: u16; let uVar7: u16; let    unaff_DS: u16; bool bVar8; undefined uVar9;
let local_6: u8; let local_4: u16;

uVar2 = local_4; local_4 = local_4 & 0xff00;
local_6 = 0; if (((param_2 & 0x8000) == 0) & & (((param_2 & 0x4000) != 0 || ((* 0xb8c1 & 0x80) == 0)))) {
local_6 = 0x80;
}
bVar8 = false; pcVar1 = swi(0x21); uVar6 = param_2; uVar3 = ( * pcVar1)(); if (bVar8) {
if ((uVar3 == 2) & & ((uVar6 & 0x100) != 0)) {
bVar8 = false; FUN_3444_123b(); uVar9 = 0; uVar6 = 0;
// LAB_3444_11a2:
pcVar1 = swi(0x21); uVar3 = ( * pcVar1)(); if ((bool)uVar9) goto LAB_3444_05f9; uVar7 = uVar3; if ((param_2 & 2) == 0) {
pcVar1 = swi(0x21); ( * pcVar1)(); uVar9 = false; pcVar1 = swi(0x21); uVar3 = ( * pcVar1)(); if ((bool)uVar9) goto LAB_3444_05f9; uVar7 = uVar3; if (( ! bVar8) & & ((param_3 & 1) != 0)) {
uVar9 = false; uVar6 = (uVar6 | 1); pcVar1 = swi(0x21); uVar3 = ( * pcVar1)(); if ((bool)uVar9) goto LAB_3444_05f9;
}
}
// LAB_3444_11f2: if ((local_6 & 0x40) == 0) {
pcVar1 = swi(0x21); ( * pcVar1)(); bVar5 = 0; if ((uVar6 & 1) != 0) {
bVar5 = 0x10;
}
if ((param_2 & 8) != 0) {
bVar5 = bVar5 | 0x20;
}
}
else {
bVar5 = 0;
}
if (uVar7 < 0xb61d) {
* (uVar7 + 0xb61f) = bVar5 | local_6 | 1; return uVar7;
}
pcVar1 = swi(0x21); ( * pcVar1)(); uVar3 = 0x1800;
}
}
else {
if ((uVar6 & 0x500) != 0x500) {
bVar8 = true; pcVar1 = swi(0x21); ( * pcVar1)(); if ((extraout_DX & 0x80) != 0) {
local_6 = local_6 | 0x40;
}
uVar7 = uVar3; if ((local_6 & 0x40) == 0) {
if ((param_2 & 0x200) == 0) {
if (((local_6 & 0x80) != 0) & & ((param_2 & 2) != 0)) {
pcVar1 = swi(0x21); ( * pcVar1)(); pcVar1 = swi(0x21); iVar4 = ( * pcVar1)();
if ((iVar4 != 0) & & (local_4._1_1_ = SUB21(uVar2, 1), local_4._1_1_ == '\x1a')) {
pcVar1 = swi(0x21); ( * pcVar1)(); pcVar1 = swi(0x21); ( * pcVar1)();
}
uVar6 = 0; pcVar1 = swi(0x21); ( * pcVar1)(); uVar7 = uVar3; local_4 = param_1;
}
}
else {
uVar9 = 0; if ((param_2 & 3) == 0) {
pcVar1 = swi(0x21); ( * pcVar1)(); pcVar1 = swi(0x21); ( * pcVar1)(); goto LAB_3444_11a2;
}
uVar6 = 0; pcVar1 = swi(0x21); ( * pcVar1)(); uVar7 = uVar3;
}
}
goto LAB_3444_11f2;
}
pcVar1 = swi(0x21); ( * pcVar1)(); uVar3 = 0x1100;
}
uVar9 = true;
// LAB_3444_05f9: if ((bool)uVar9) {
FUN_3444_060c(); uVar3 = 0xffff;
}
return uVar3;
}



void  FUN_3444_123b()

{
return;
}


// WARNING: Removing unreachable block (ram,0x00035788)
// WARNING: Removing unreachable block (ram,0x0003577d)

fn FUN_3444_124c(param_1_00: u16,uparam_1: i16,undefined4 param_2,param_3: i16) -> i16

{
let puVar1: * mut u16; let pbVar2: * mut u8; let bVar3: u8; code * pcVar4; let iVar5: i16; let uVar6: u16; let uVar7: u16; let iVar8: i16; let pbVar9: * mut u8;
let pbVar10: * mut u8; let pbVar11: * mut u8; let unaff_DS: u16; undefined uVar12; ulong uVar13;

if (0xb61d < = param_1) {
uVar12 = true; iVar5 = 0x900; goto LAB_3444_12d4;
}
uVar12 = false; iVar5 = 0; if ((param_3 == 0) || (uVar12 = false, ( * (param_1 + 0xb61f) & 2) != 0))
goto LAB_3444_12d4; puVar1 = 0xc0da; uVar12 = * puVar1 < 0xd6d6;
if ( * puVar1 == 0xd6d6) {
( * * (code * * )0xc0dc)();
}
pcVar4 = swi(0x21); uVar13 = (* pcVar4)(); pbVar10 = (uVar13 >> 0x10); iVar5 = uVar13; if ((bool)uVar12) {
iVar5 = CONCAT11(9, uVar13); goto LAB_3444_12d4;
}
uVar12 = false; if (( * (param_1 + 0xb61f) & 0x80) == 0) goto LAB_3444_12d4; pbVar2 = (param_1 + 0xb61f);
uVar12 = false; * pbVar2 = * pbVar2 & 0xfb; if (iVar5 == 0) goto LAB_3444_12d4; uVar6 = 0xd00; pbVar11 = pbVar10; if ( * pbVar10 == 10) {
pbVar2 = (param_1 + 0xb61f); * pbVar2 = * pbVar2 | 4;
}
// LAB_3444_12b6:
pbVar9 = (uVar13 >> 0x10); iVar8 = uVar13; pbVar2 = pbVar10; pbVar10 = pbVar10 + 1; bVar3 = * pbVar2; uVar7 = uVar6 & 0xff00; uVar6 = uVar7 | bVar3;
if (bVar3 == (uVar7 >> 8)) {
if (iVar8 != 1) {
if ( * pbVar10 != 10) goto LAB_3444_12c7;
goto LAB_3444_12ca;
}
uVar12 = false; if (( * (param_1 + 0xb61f) & 0x40) == 0) {
pcVar4 = swi(0x21); iVar5 = (* pcVar4)(); if ( ! (bool)uVar12) {
if (iVar5 != 0) {
pcVar4 = swi(0x21); iVar5 = (* pcVar4)(); iVar8 = 1;
}
uVar13 = CONCAT22(param_2, iVar8); uVar6 = CONCAT11((iVar5 >> 8),0xd); goto LAB_3444_12c7;
}
goto LAB_3444_12d4;
}
pcVar4 = swi(0x21); uVar13 = (* pcVar4)(); iVar5 = uVar13;
uVar12 = false; if ((uVar13 & 0x200000) == 0) {
pcVar4 = swi(0x21); iVar5 = (* pcVar4)(); if ((bool)uVar12) goto LAB_3444_12d4;
}
uVar13 = CONCAT22(param_2, iVar8); uVar6 = CONCAT11((iVar5 >> 8),10);
}
else {
if (bVar3 == 0x1a) {
pbVar2 = (param_1 + 0xb61f); * pbVar2 = * pbVar2 | 2; goto LAB_3444_12cc;
}
}
// LAB_3444_12c7: * pbVar11 = uVar6; pbVar11 = pbVar11 + 1;
// LAB_3444_12ca:
pbVar9 = (uVar13 >> 0x10);
uVar7 = uVar13 - 1; uVar13 = uVar13 & 0xffff0000 | uVar7; if (uVar7 == 0) goto LAB_3444_12cc; goto LAB_3444_12b6;
// LAB_3444_12cc:
uVar12 = pbVar11 < pbVar9; iVar5 = pbVar11 - pbVar9;
// LAB_3444_12d4: if ((bool)uVar12) {
FUN_3444_060c(); iVar5 = - 1;
}
return iVar5;
}


// WARNING: Unable to track spacebase fully for stack

uint FUN_3444_134a(param_1_00: u16,uparam_1: i16,char *param_2,uparam_3: i16)

{
let pcVar1: String; code * pcVar2; let    uVar3: u16; char cVar4; let uVar5: u16; let uVar6: u16; let pcVar7: String; let iVar8: i16; let uVar9: u16; let puVar10: * mut u16; let pcVar11: String; let uVar12: u16; let    unaff_SS: u16; let unaff_DS: u16; bool bVar13; let bVar14: u8; char in_AF;
char cVar15; char cVar16; let uVar17: u32; let uStack16: u16; let local_6: u16; let local_4: u16;

if (0xb61d <= param_1) {
bVar13 = true; uVar5 = 0x900; goto LAB_3444_05f9;
}
uVar9 = param_1; if (0xc0da == - 0x292a) {
( * * (code * * )0xc0dc)();
}
if (( * (uVar9 + 0xb61f) & 0x20) != 0) {
bVar13 = false; pcVar2 = swi(0x21); uVar5 = ( * pcVar2)();
if (bVar13) goto LAB_3444_05f9;
}
if (( * (uVar9 + 0xb61f) & 0x80) == 0) {
// LAB_3444_1470:
bVar13 = false; uVar5 = param_3; if (param_3 != 0) {
pcVar2 = swi(0x21); uVar17 = (* pcVar2)(); uVar5 = uVar17;
if (bVar13) {
uVar5 = CONCAT11(9, uVar17);
}
else {
bVar13 = false; if (uVar5 == 0) {
if ((( * (uVar9 + 0xb61f) & 0x40) == 0) || ((uVar17 >> 0x10) != '\x1a')) {
bVar13 = true; uVar5 = 0x1c00;
}
else {
bVar13 = false;
}
}
}
}
}
else {
pcVar7 = (char * )param_2; bVar13 = true; local_4 = 0; local_6 = 0;
uVar5 = param_3; pcVar11 = pcVar7; if (param_3 != 0) {
loop {
if (uVar5 == 0) break; pcVar1 = pcVar11; pcVar11 = pcVar11 + 1; bVar13 = * pcVar1 == '\n'; uVar5 = uVar5 - 1;
} while ( ! bVar13); if ( ! bVar13) goto LAB_3444_1470; puVar10 = & uStack16; uStack16 = param_2._2_2_; uVar5 = FUN_3444_14aa(); uVar3 = uStack16; if (uVar5 < 0xa9) {
uVar17 = FUN_3444_02c6(0x3444); pcVar7 = (char * )(uVar17 >> 0x10);
uVar9 = uVar17; bVar14 = pcVar11 < pcVar7;
uVar5 = pcVar11 - pcVar7; cVar16 = uVar5 < 0; cVar15 = uVar5 == 0; cVar4 = (POPCOUNT(uVar5 & 0xff) & 1) == 0; if (uVar5 == 0) {
return uVar9;
}
pcVar2 = swi(0x21); uVar6 = (* pcVar2)(); if ( ! (bool)bVar14) {
bVar14 = uVar5 < uVar6; uVar5 = uVar5 - uVar6; cVar16 = uVar5 < 0; cVar15 = uVar5 == 0; cVar4 = (POPCOUNT(uVar5 & 0xff) & 1) == 0; local_4 = uVar6; if ((bool)bVar14 || (bool)cVar15) {
return uVar9;
}
}
uVar9 = (cVar16 << 7 | cVar15 << 6 | in_AF << 4 | cVar4 << 2 | 2 | bVar14) << 8
; uVar5 = uVar6 & 0xff | uVar9; if (local_4 == 0) {
bVar13 = (uVar9 & 0x100) != 0;
if (bVar13) {
uVar5 = CONCAT11(9, (uVar6 & 0xff));
}
else {
if ((( * (param_1 + 0xb61f) & 0x40) == 0) || ( *param_2 != '\x1a')) {
bVar13 = true; uVar5 = 0x1c00;
}
else {
bVar13 = false;
}
}
goto LAB_3444_05f9;
}
}
else {
iVar8 = 0x200; if (uVar5 < 0x228) {
iVar8 = 0x80;
}
iVar8 = - iVar8; pcVar11 = ( & uStack16 + iVar8); ( &stack0xffee + iVar8) = unaff_SS; uVar12 = (& stack0xffee + iVar8); loop {
pcVar1 = pcVar7; pcVar7 = pcVar7 + 1;
cVar4 = * pcVar1; if (cVar4 == '\n') {
cVar4 = '\r'; if (pcVar11 == puVar10) {
( & stack0xffee + iVar8) = 0x582f; cVar4 = FUN_3444_140a();
}
pcVar1 = pcVar11; pcVar11 = pcVar11 + 1;
* pcVar1 = cVar4; cVar4 = '\n'; local_6 = local_6 + 1;
}
if (pcVar11 == puVar10) {
( & stack0xffee + iVar8) = 0x583a; cVar4 = FUN_3444_140a();
}
pcVar1 = pcVar11; pcVar11 = pcVar11 + 1;
* pcVar1 = cVar4; param_3 = param_3 - 1;
} while (param_3 != 0); ( & stack0xffee + iVar8) = 0x5824; FUN_3444_140a();
}
}
bVar13 = local_4 < local_6; uVar5 = local_4 - local_6;
}
// LAB_3444_05f9: if (bVar13) {
FUN_3444_060c(); uVar5 = 0xffff;
}
return uVar5;
}


// WARNING: Unable to track spacebase fully for stack

uint  FUN_3444_140a()

{
let piVar1: * mut u16; let puVar2: * mut u16; code * pcVar3; let uVar4: u16; let in_AX: u16; let uVar5: u16; let uVar6: u16; let in_DX: u16; let iVar7: i16; let unaff_BP: i16; let unaff_DI: u16; let unaff_SS: u16; let bVar8: u8; bool bVar9; char cVar10; char in_AF; char cVar11;
char cVar12;

bVar8 = unaff_DI < in_DX; uVar6 = unaff_DI - in_DX; cVar12 = uVar6 < 0; cVar11 = uVar6 == 0; cVar10 = (POPCOUNT(uVar6 & 0xff) & 1) == 0; if (uVar6 == 0) {
return in_AX;
}
iVar7 = (unaff_BP + 6); pcVar3 = swi(0x21); uVar5 = ( * pcVar3)(); if ( ! (bool)bVar8) {
piVar1 = (unaff_BP + - 2); *piVar1 = * piVar1 + uVar5; bVar8 = uVar6 < uVar5; uVar6 = uVar6 - uVar5; cVar12 = uVar6 < 0; cVar11 = uVar6 == 0; cVar10 = (POPCOUNT(uVar6 & 0xff) & 1) == 0; if ((bool)bVar8 || (bool)cVar11) {
return in_AX;
}
}
uVar4 = (cVar12 << 7 | cVar11 << 6 | in_AF << 4 | cVar10 << 2 | 2 | bVar8) << 8; uVar6 = uVar5 & 0xff | uVar4; if ((unaff_BP + - 2) == 0) {
bVar9 = (uVar4 & 0x100) != 0;
if (bVar9) {
uVar6 = CONCAT11(9, (uVar5 & 0xff));
}
else {
if ((( * (iVar7 + - 0x49e1) & 0x40) == 0) || (* * (char * * )(unaff_BP + 8) != '\x1a')) {
bVar9 = true; uVar6 = 0x1c00;
}
else {
bVar9 = false;
}
}
}
else {
uVar6 = (unaff_BP + - 2); puVar2 = (unaff_BP + - 4); bVar9 = uVar6 < * puVar2; uVar6 = uVar6 - *puVar2;
}
if (bVar9) {
((unaff_BP + - 8) + 2) = 0x4a3e; FUN_3444_060c(); uVar6 = 0xffff;
}
return uVar6;
}



fn FUN_3444_14aa() -> i16

{
undefined * puVar1; let iVar2: i16; let    unaff_DS: u16;

puVar1 = (undefined * )0xb652; if (puVar1 < & stack0x0004) {
iVar2 = - (puVar1 - & stack0x0004);
}
else {
iVar2 = 0;
}
return iVar2;
}



undefined4 FUN_3444_16e8(param_1_00: u16,undefined4 param_1,undefined4 param_2)

{
let puVar1: * mut u16; let pcVar2: String; let puVar3: * mut u16; let iVar4: i16; let uVar5: u16; let uVar6: u16; let puVar7: * mut u16; let pcVar8: String; let puVar9: *mut u16; let puVar10: * mut u16;
let uVar11: u16; let uVar12: u16;

uVar11 = (undefined2)(param_1 >> 0x10); puVar7 = param_1; iVar4 = - 1; loop {
if (iVar4 == 0) break; iVar4 = iVar4 + - 1; puVar1 = puVar7; puVar7 = (puVar7 + 1);
} while (puVar1 != '\0'); uVar12 = (undefined2)(param_2 >> 0x10); pcVar8 = (char * )param_2; uVar5 = 0xffff; loop {
if (uVar5 == 0) break; uVar5 = uVar5 - 1; pcVar2 = pcVar8; pcVar8 = pcVar8 + 1;
} while ( * pcVar2 != '\0'); uVar5 = ~uVar5; puVar9 = (pcVar8 + - uVar5); puVar10 = (puVar7 + - 1); if ((puVar9 & 1) != 0) {
puVar1 = puVar9; puVar9 = (puVar9 + 1); * (undefined * )(puVar7 + - 1) = * (undefined * )puVar1; uVar5 = uVar5 - 1; puVar10 = puVar7;
}
for (uVar6 = uVar5 >> 1; uVar6 != 0; uVar6 = uVar6 - 1) {
puVar3 = puVar10; puVar10 = puVar10 + 1;
puVar1 = puVar9; puVar9 = puVar9 + 1;
* puVar3 = * puVar1;
}
for (uVar5 = ((uVar5 & 1) != 0); uVar5 != 0; uVar5 = uVar5 - 1) {
puVar3 = puVar10; puVar10 = (puVar10 + 1); puVar1 = puVar9; puVar9 = (puVar9 + 1); * (undefined * )puVar3 = * (undefined * )puVar1;
}
return param_1;
}



fn fun_3444_172e(param_1_00: u16, undefined *param_1, undefined *param_2)

{
    let pu_var1: *mut u16;
    let pu_var2: *mut u16;
    let u_var3: u16;
    let u_var4: u16;
    let pu_var5: *mut u16;
    let pu_var6: *mut u16;
    let u_var7: u16;
    let u_var8: u16;

    u_var8 = (undefined2)(param_2 >> 0x10);
    pu_var5 = param_2;
    u_var3 = 0xffff;
    pu_var6 = pu_var5;
    loop {
    if (u_var3 == 0)
    break;
    u_var3 = u_var3 - 1;
    pu_var1 = pu_var6;
    pu_var6 = (pu_var6 + 1);
}
    while (pu_var1 != '\0');
    u_var3 = ~u_var3;
    u_var7 = (undefined2)(param_1 >> 0x10);
    pu_var6 = param_1;
    if ((param_1 & 1) != 0) {
        pu_var6 = (pu_var6 + 1);
        pu_var5 = (pu_var5 + 1);
        *param_1 = *param_2;
        u_var3 = u_var3 - 1;
    }
    for (uVar4 = uVar3 >> 1; uVar4 != 0; uVar4 = uVar4 -1) {
        pu_var2 = pu_var6;
        pu_var6 = pu_var6 + 1;
        pu_var1 = pu_var5;
        pu_var5 = pu_var5 + 1;
        *pu_var2 = *pu_var1;
    }
    for (uVar3 = ((uVar3 &1) != 0); uVar3 != 0; uVar3 = uVar3 -1) {
        pu_var2 = pu_var6;
        pu_var6 = (pu_var6 + 1);
        pu_var1 = pu_var5;
        pu_var5 = (pu_var5 + 1);
        
        pu_var2 = 
        pu_var1;
    }
    return;
}



fn FUN_3444_1764(param_1_00: u16,undefined4 param_1,undefined4 param_2) -> i16

{
let pbVar1: * mut u8; let pcVar2: String; let pbVar3: * mut u8; let iVar4: i16; let uVar5: u16; let pcVar6: String; let pbVar7: * mut u8; let pcVar8: String; let pbVar9: *mut u8; let uVar10: u16; bool bVar11; bool bVar12;

pbVar7 = param_1; uVar10 = (undefined2)(param_2 >> 0x10);
pcVar8 = (char * )param_2; iVar4 = 0; uVar5 = 0xffff; loop {
if (uVar5 == 0) break; uVar5 = uVar5 - 1; pcVar2 = pcVar8; pcVar8 = pcVar8 + 1;
} while ( * pcVar2 != '\0'); pcVar6 = (char * )~uVar5; bVar11 = pcVar8 < pcVar6; pbVar9 = (pcVar8 + - pcVar6); bVar12 = pbVar9 == 0x0; loop {
if (pcVar6 == (char * )0x0) break; pcVar6 = pcVar6 + - 1; pbVar3 = pbVar9; pbVar9 = pbVar9 + 1; pbVar1 = pbVar7; pbVar7 = pbVar7 + 1; bVar11 = * pbVar1 < * pbVar3; bVar12 = *pbVar1 == * pbVar3;
} while (bVar12); if ( ! bVar12) {
iVar4 = (1 - bVar11) - (bVar11 != 0);
}
return iVar4;
}



fn FUN_3444_178e(param_1_00: u16,undefined4 param_1) -> i16

{
let pcVar1: String; let uVar2: u16;
let pcVar3: String;

pcVar3 = param_1; uVar2 = 0xffff; loop {
if (uVar2 == 0) break; uVar2 = uVar2 - 1; pcVar1 = pcVar3; pcVar3 = pcVar3 + 1;
} while ( * pcVar1 != '\0'); return ~uVar2 - 1;
}



undefined4 FUN_3444_17a6(param_1_00: u16,undefined4 param_1,undefined4 param_2,param_3: i16)

{
let pcVar1: String; char cVar2; let pcVar3: String; let pcVar4: String; let uVar5: u16;

uVar5 = (undefined2)(param_1 >> 0x10); pcVar4 = param_1; pcVar3 = (char * )param_2; if (param_3 != 0) {
loop {
pcVar1 = pcVar3; pcVar3 = pcVar3 + 1;
cVar2 = * pcVar1; if (cVar2 == '\0') break; pcVar1 = pcVar4; pcVar4 = pcVar4 + 1; * pcVar1 = cVar2; param_3 = param_3 + - 1;
} while (param_3 != 0); for (; param_3 != 0; param_3 = param_3 + - 1) {
pcVar1 = pcVar4; pcVar4 = pcVar4 + 1;
* pcVar1 = '\0';
}
}
return param_1;
}



uint FUN_3444_17d0(param_1_00: u16,undefined4 param_1,undefined4 param_2,uparam_3: i16)

{
let pbVar1: * mut u8; let pcVar2: String; let pcVar3: String; let bVar4: u8; let uVar5: u16; let iVar6: i16; let pcVar7: String; let pcVar8: String; let uVar9: u16; let uVar10: u16; bool bVar11;

if (param_3 != 0) {
uVar9 = (undefined2)(param_1 >> 0x10); pcVar8 = (char * )param_1;
uVar5 = param_3; pcVar7 = pcVar8; loop {
if (uVar5 == 0) break; uVar5 = uVar5 - 1; pcVar2 = pcVar7; pcVar7 = pcVar7 + 1;
} while ( * pcVar2 != '\0'); iVar6 = param_3 - uVar5; uVar10 = (undefined2)(param_2 >> 0x10); pcVar7 = (char * )param_2; loop {
if (iVar6 == 0) break; iVar6 = iVar6 + - 1; pcVar3 = pcVar8; pcVar8 = pcVar8 + 1; pcVar2 = pcVar7; pcVar7 = pcVar7 + 1;
} while ( * pcVar2 == * pcVar3); bVar4 = pcVar7[ - 1]; param_3 = 0; pbVar1 = (pcVar8 + - 1);
bVar11 = bVar4 == * pbVar1; if (bVar4 < * pbVar1 || bVar11) {
if (bVar11) {
return 0;
}
param_3 = 0xfffe;
}
param_3 = ~param_3;
}
return param_3;
}



undefined4 thunk_FUN_3444_1868(param_1_00: u16,undefined4 param_1)

{
let pbVar1: * mut u8; let bVar2: u8; let uVar3: u16; let bVar4: u8; let iVar5: i16; let uVar6: u16; let iVar7: i16; let uVar8: u16; let uVar9: u16; let pbVar10: * mut u8; let uVar11: u16; bool bVar12;

uVar11 = (undefined2)(param_1 >> 0x10); pbVar10 = param_1; iVar5 = 0; iVar7 = 0; loop {
loop {
pbVar1 = pbVar10; pbVar10 = pbVar10 + 1;
bVar2 = * pbVar1;
} while (bVar2 == 0x20);
} while (bVar2 == 9); if ((bVar2 != 0x2d) & & (bVar4 = bVar2, bVar2 != 0x2b)) goto LAB_3444_1889; while( true ) {
pbVar1 = pbVar10; pbVar10 = pbVar10 + 1;
bVar4 = * pbVar1;
// LAB_3444_1889: if ((0x39 < bVar4) || (bVar4 < 0x30)) break; uVar8 = iVar7 * 2; uVar6 = iVar5 << 1 | (iVar7 < 0); iVar5 = iVar7 << 2; uVar9 = iVar7 * 8; uVar3 = iVar7 * 10;
iVar7 = uVar3 + (bVar4 - 0x30);
iVar5 = ((uVar6 << 1 | (uVar8 < 0)) << 1 | (iVar5 < 0)) + uVar6 + CARRY2(uVar9, uVar8) + CARRY2(uVar3, (bVar4 - 0x30));
}
if (bVar2 == 0x2d) {
bVar12 = iVar7 != 0; iVar7 = - iVar7; iVar5 = - (iVar5 + bVar12);
}
return CONCAT22(iVar5, iVar7);
}



undefined4 FUN_3444_1810(param_1_00: u16,char *param_1)

{
let uVar1: u16; let iVar2: i16;
let uVar3: u16; let unaff_DS: u16;
let uVar4: u32;

while (uVar3 = (undefined2)(param_1 >> 0x10), (* ( * param_1 + - 0x470f) & 8) != 0) {
param_1 = (char * )(param_1 & 0xffff0000 | (param_1 + 1));
}
uVar1 = FUN_3444_178e(0x39d9, param_1, uVar3,0, 0); uVar4 = FUN_3444_4669(0x3444, param_1, uVar3, uVar1); uVar3 = (undefined2)(uVar4 >> 0x10);
iVar2 = uVar4; 0xceba = (iVar2 + 8); 0xcebc = (iVar2 + 10);
0xcebe = (iVar2 + 0xc); 0xcec0 = (iVar2 + 0xe); return CONCAT22(unaff_DS, 0xceba);
}



undefined4 FUN_3444_1868(param_1_00: u16,undefined4 param_1)

{
let pbVar1: * mut u8; let bVar2: u8; let uVar3: u16; let bVar4: u8; let iVar5: i16; let uVar6: u16; let iVar7: i16; let uVar8: u16; let uVar9: u16; let pbVar10: * mut u8; let uVar11: u16; bool bVar12;

uVar11 = (undefined2)(param_1 >> 0x10); pbVar10 = param_1; iVar5 = 0; iVar7 = 0; loop {
loop {
pbVar1 = pbVar10; pbVar10 = pbVar10 + 1;
bVar2 = * pbVar1;
} while (bVar2 == 0x20);
} while (bVar2 == 9); if ((bVar2 != 0x2d) & & (bVar4 = bVar2, bVar2 != 0x2b)) goto LAB_3444_1889; while( true ) {
pbVar1 = pbVar10; pbVar10 = pbVar10 + 1;
bVar4 = * pbVar1;
// LAB_3444_1889: if ((0x39 < bVar4) || (bVar4 < 0x30)) break; uVar8 = iVar7 * 2; uVar6 = iVar5 << 1 | (iVar7 < 0); iVar5 = iVar7 << 2; uVar9 = iVar7 * 8; uVar3 = iVar7 * 10;
iVar7 = uVar3 + (bVar4 - 0x30);
iVar5 = ((uVar6 << 1 | (uVar8 < 0)) << 1 | (iVar5 < 0)) + uVar6 + CARRY2(uVar9, uVar8) + CARRY2(uVar3, (bVar4 - 0x30));
}
if (bVar2 == 0x2d) {
bVar12 = iVar7 != 0; iVar7 = - iVar7; iVar5 = - (iVar5 + bVar12);
}
return CONCAT22(iVar5, iVar7);
}


// WARNING: Could not reconcile some variable overlaps

fn fun_3444_18be(param_1_00: u16, char *param_1, param_2: i16, undefined4 param_3)

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let i_var3: i16;
    let u_var4: u16;
    let u_var5: u16;
    let local_a: String;
    let local_6: String;

    u_var4 = (undefined2)(param_3 >> 0x10);
    i_var2 = param_3;
    local_a = 
    CONCAT22((i_var2 + 8), (i_var2 + 6));
    u_var5 = (undefined2)(param_1 >> 0x10);
    i_var3 = param_1;
    *param_1 = '0';
    local_6 = (param_1 & 0xffff0000 | (i_var3 + 1));
    for (; 0 < param_2; param_2 = param_2 + -1) {
        if (*local_a == '\0') {
            *local_6 = '0';
        } else {
            *local_6 = *local_a;
            local_a = (local_a & 0xffff0000 | (local_a + 1));
        }
        local_6 = (local_6 & 0xffff0000 | (local_6 + 1));
    } * local_6 = '\0';
    if ((-1 < param_2) && ('4' < *local_a)) {
        while (true) {
            local_6 = (local_6 & 0xffff0000 | (local_6 - 1));
            if (*local_6 != '9')
            break;
            *local_6 = '0';
        }
        *local_6 = *local_6 + '\x01';
    }
    if (*param_1 == '1') {
        pi_var1 = (i_var2 + 2);
        *pi_var1 = *pi_var1 + 1;
    } else {
        fun_3444_172e(0x39d9, i_var3, u_var5, i_var3 + 1, u_var5);
    }
    return;
}



fn FUN_3444_1964(param_1_00: u16,param_1: i16) -> i16

{
return param_1 + - 0x20;
}



fn FUN_3444_1970(param_1_00: u16,param_1: i16) -> i16

{
let unaff_DS: u16;

if (( * (param_1 + - 0x470f) & 2) != 0) {
param_1 = param_1 + - 0x20;
}
return param_1;
}



undefined4 FUN_3444_1986(param_1_00: u16,uparam_1: i16,uparam_2: i16)

{
let uVar1: u16; let uVar2: u16;
let iVar3: i16; let iVar4: i16;
let iVar5: i16; let uVar6: u16;
let uVar7: u16; let unaff_DS: u16;
undefined4 * local_6;

uVar1 = 0xb639; uVar2 = 0xb63b; local_6 = ffCONCAT22(uVar2, uVar1); if (((uVar2 | uVar1) != 0) & & ((param_2 | param_1) != 0)) {
iVar3 = FUN_3444_178e(0x39d9, param_1, param_2); while ( true ) {
uVar6 = (undefined2)(local_6 >> 0x10); iVar5 = local_6; if (((iVar5 + 2) | local_6) == 0) break; iVar4 = FUN_3444_178e(0x3444, local_6,(iVar5 + 2)); if (iVar3 < iVar4) {
uVar7 = (undefined2)( * local_6 >> 0x10); iVar4 = * local_6; if ((iVar4 + iVar3) == '=') {
iVar4 = FUN_3444_17d0(0x3444, iVar4, uVar7,param_1, param_2, iVar3); if (iVar4 == 0) {
uVar6 = (iVar5 + 2); iVar3 = local_6 + iVar3 + 1; goto LAB_3444_1a0f;
}
}
}
local_6 = ff(local_6 & 0xffff0000 | (iVar5 + 4));
}
}
iVar3 = 0; uVar6 = 0;
// LAB_3444_1a0f: return CONCAT22(uVar6, iVar3);
}



undefined4 FUN_3444_1a14(param_1_00: u16,uparam_1: i16,uparam_2: i16,uparam_3: i16,uparam_4: i16)

{
let uVar1: u16; let uVar2: u16;

uVar1 = param_2 - param_4; uVar2 = uVar1 * 0x10 + param_1; return CONCAT22((((((param_2 < param_4) * - 2 + CARRY2(uVar1, uVar1)) * 2 +
CARRY2(uVar1 * 2, uVar1 * 2)) * 2 + CARRY2(uVar1 * 4,uVar1 * 4)) * 2 + CARRY2(uVar1 * 8, uVar1 * 8) + CARRY2(uVar1 * 0x10, param_1)) - (uVar2 < param_3), uVar2 - param_3);
}



fn fun_3444_1a40(param_1_00: u16, param_1: u16, param_2: u16) -> u16

{
    let pi_var1: *mut u16;
    undefined * puVar2;
    let i_var3: i16;
    let u_var4: u16;
    let i_var5: i16;
    let unaff_ds: u16;
    let local_8: u16;

    i_var3 = FUN_3444_178e(0x39d9, param_1, param_2);
    u_var4 = FUN_3444_094e(0xb67a);
    i_var5 = FUN_3444_063a(0x3444, param_1, param_2, 1, i_var3, 0xb67a);
    if (i_var5 == i_var3) {
        pi_var1 = 0xb67e;
        *pi_var1 = *pi_var1 + -1;
        if (*pi_var1 < 0) {
            FUN_3444_0816(0x3444, 10, 0xb67a);
        } else {
            puVar2 = ff * (undefined4 *)
            0xb67a;
            pi_var1 = 0xb67a;
            *pi_var1 = *pi_var1 + 1;
            *puVar2 = 10;
        }
        local_8 = 0;
    } else {
        local_8 = 0xffff;
    }
    FUN_3444_09cf(u_var4, 0xb67a);
    return local_8;
}


fn fun_3444_1aca(param_1_00: u16, param_1: u16, param_2: u16) -> u16

{
    let pi_var1: *mut u16;
    undefined * puVar2;
    let u_var3: u16;
    let unaff_ds: u16;

    
    0xcecc = 0x42;
    0xcec8 = param_1;
    0xceca = param_2;
    0xcec2 = param_1;
    0xcec4 = param_2;
    0xcec6 = 0x7fff;
    u_var3 = fun_3444_0afc(0x39d9, 0xcec2);
    pi_var1 = 0xcec6;
    *pi_var1 = *pi_var1 + -1;
    if (*pi_var1 < 0) {
        FUN_3444_0816(0x3444, 0, 0xcec2);
    } else {
        puVar2 = ff * (undefined4 *)
        0xcec2;
        pi_var1 = 0xcec2;
        *pi_var1 = *pi_var1 + 1;
        *puVar2 = 0;
    }
    return u_var3;
}


fn fun_3444_1b36() -> u16

{
    let u_var1: u16;
    let u_var2: u16;

    u_var1 = FUN_3444_094e(0xb67a);
    u_var2 = fun_3444_0afc(0x39d9, 0xb67a);
    FUN_3444_09cf(u_var1, 0xb67a);
    return u_var2;
}


fn fun_3444_1b7a(param_1_00: u16, param_1: u16, param_2: u16) -> u16

{
    let pi_var1: *mut u16;
    undefined * puVar2;
    let u_var3: u16;
    let unaff_ds: u16;

    
    0xced8 = 0x42;
    0xced4 = param_1;
    0xced6 = param_2;
    0xcece = param_1;
    0xced0 = param_2;
    0xced2 = 0x7fff;
    u_var3 = fun_3444_0afc(0x39d9, 0xcece);
    pi_var1 = 0xced2;
    *pi_var1 = *pi_var1 + -1;
    if (*pi_var1 < 0) {
        FUN_3444_0816(0x3444, 0, 0xcece);
    } else {
        puVar2 = ff * (undefined4 *)
        0xcece;
        pi_var1 = 0xcece;
        *pi_var1 = *pi_var1 + 1;
        *puVar2 = 0;
    }
    return u_var3;
}


// WARNING: Restarted to delay deadcode elimination for space: stack

undefined2
FUN_3444_1be4(param_1_00: u16,byte param_1,undefined4 param_2,undefined2 *param_4,
undefined2 *param_3)

{
let uVar1: u16; let uVar2: u16;
let uVar3: u16; let uVar4: u16;
let uVar5: u16; let iVar6: i16;
let uVar7: u16; let uVar8: u16;
let uVar9: u16; bool bVar10; let uVar11: u32; undefined local_e; let local_d: u8; undefined local_c; undefined local_b; undefined local_a;

local_e = (code)0xcd; local_d = param_1; bVar10 = param_1 < 0x25; if ((param_1 == 0x25) || (bVar10 = param_1 < 0x26, param_1 == 0x26)) {
local_a = 0xcb; local_b = 0x44; local_c = 0x44;
}
else {
local_c = 0xcb;
}
uVar7 = (undefined2)(param_2 >> 0x10); iVar6 = param_2; uVar5 = (iVar6 + 2); uVar4 = (iVar6 + 4); uVar1 = (iVar6 + 8);
uVar7 = (iVar6 + 10); uVar8 = (undefined2)(param_3 >> 0x10);
uVar9 = * param_3; uVar2 = (param_3 + 6); uVar11 = ( * & local_e)(0x39d9); uVar3 = (undefined2)uVar11; * param_3 = uVar9; (param_3 + 6) = uVar2; uVar9 = (undefined2)(param_4 >> 0x10); iVar6 = param_4;
* param_4 = uVar3; (iVar6 + 2) = uVar5; (iVar6 + 4) = uVar4; (iVar6 + 6) = (uVar11 >> 0x10); (iVar6 + 8) = uVar1; (iVar6 + 10) = uVar7;
if (bVar10) {
FUN_3444_0606(0x39d9); uVar3 = * param_4;
}
(iVar6 + 0xc) = bVar10; return uVar3;
}



fn fun_3444_1c7e(param_1_00: u16, undefined4 param_1, undefined2 *param_2) -> u16

{
    let u_var1: u16;
    let pcVar2: *mut Code;
    let u_var3: u16;
    let u_var4: u16;
    let u_var5: u16;
    let i_var6: i16;
    let u_var7: u16;
    let u_var8: u16;
    undefined
    in_CF;
    let u_var9: u32;

    u_var7 = (undefined2)(param_1 >> 0x10);
    i_var6 = param_1;
    u_var5 = (i_var6 + 2);
    u_var4 = (i_var6 + 4);
    u_var1 = (i_var6 + 8);
    u_var7 = (i_var6 + 10);
    pcVar2 = swi(0x21);
    u_var9 = (*pcVar2)();
    u_var3 = (undefined2)
    u_var9;
    u_var8 = (undefined2)(param_2 >> 0x10);
    i_var6 = param_2;
    *param_2 = u_var3;
    (i_var6 + 2) = u_var5;
    (i_var6 + 4) = u_var4;
    (i_var6 + 6) = (u_var9 >> 0x10);
    (i_var6 + 8) = u_var1;
    (i_var6 + 10) = u_var7;
    if ((bool)
    in_CF) {
    fun_3444_0606(0x39d9);
    u_var3 = *param_2;
}
    (i_var6 + 0xc) = in_CF;
    return u_var3;
}



undefined2
FUN_3444_1cd0(param_1_00: u16,undefined4 param_1,undefined2 *param_2,undefined2 *param_3)

{
let uVar1: u16; let uVar2: u16;
code * pcVar3; let uVar4: u16; let    uVar5: u16; let uVar6: u16; let    unaff_SI: u16; let iVar7: i16; let    uVar8: u16; let uVar9: u16; let    uVar10: u16; undefined in_CF; let uVar11: u32;

uVar8 = (undefined2)(param_1 >> 0x10); iVar7 = param_1; uVar6 = (iVar7 + 2); uVar5 = (iVar7 + 4); uVar1 = (iVar7 + 8); uVar8 = (iVar7 + 10);
uVar9 = (undefined2)(param_3 >> 0x10); uVar10 = * param_3; uVar2 = (param_3 + 6); pcVar3 = swi(0x21); uVar11 = ( * pcVar3)(); uVar4 = (undefined2)uVar11; * param_3 = uVar10; (param_3 + 6) = uVar2; uVar10 = (undefined2)(param_2 >> 0x10); iVar7 = param_2; * param_2 = uVar4; (iVar7 + 2) = uVar6;
(iVar7 + 4) = uVar5; (iVar7 + 6) = (uVar11 >> 0x10); (iVar7 + 8) = uVar1; (iVar7 + 10) = uVar8; if ((bool)in_CF) {
FUN_3444_0606(0x39d9, unaff_SI); uVar4 = *param_2;
}
(iVar7 + 0xc) = in_CF; return uVar4;
}



undefined FUN_3444_1d32(param_1_00: u16,param_1: u16)

{
undefined uVar1;

uVar1 = in (param_1);
return uVar1;
}



undefined4 FUN_3444_1d5e(param_1_00: u16,undefined4 param_1,char param_2)

{
let pcVar1: String; let iVar2: i16;
let pcVar3: String; let pcVar4: String;
let uVar5: u16;

uVar5 = (undefined2)(param_1 >> 0x10); pcVar3 = (char * )param_1; iVar2 = - 1;
pcVar4 = pcVar3; loop {
if (iVar2 == 0) break; iVar2 = iVar2 + - 1; pcVar1 = pcVar4; pcVar4 = pcVar4 + 1;
} while ( * pcVar1 != '\0'); iVar2 = - (iVar2 + 1); loop {
if (iVar2 == 0) break; iVar2 = iVar2 + - 1; pcVar1 = pcVar3; pcVar3 = pcVar3 + 1;
} while (param_2 != * pcVar1); pcVar3 = pcVar3 + - 1; if ( * pcVar3 != param_2) {
pcVar3 = (char * )0x0; uVar5 = 0;
}
return CONCAT22(uVar5, pcVar3);
}



fn FUN_3444_1d8c(param_1_00: u16,undefined4 param_1,undefined4 param_2) -> i16

{
let pbVar1: * mut u8; let bVar2: u8; let bVar3: u8; let bVar4: u8; let pbVar5: * mut u8; let pbVar6: * mut u8;

pbVar6 = param_2;
pbVar5 = param_1; bVar4 = 0xff; loop {
loop {
if (bVar4 == 0) goto LAB_3444_1dcb; pbVar1 = pbVar6; pbVar6 = pbVar6 + 1; bVar4 = * pbVar1; bVar3 = * pbVar5; pbVar5 = pbVar5 + 1;
} while (bVar3 == bVar4); bVar2 = bVar4 + 0xbf + ( - ((bVar4 + 0xbf) < 0x1a) & 0x20) + 0x41;
bVar3 = bVar3 + 0xbf; bVar4 = bVar3 + ( - (bVar3 < 0x1a) & 0x20) + 0x41;
} while (bVar4 == bVar2); bVar4 = (bVar4 < bVar2) * - 2 + 1;
// LAB_3444_1dcb: return bVar4;
}



undefined4 FUN_3444_1e00(param_1_00: u16,undefined4 param_1,undefined4 param_2,uparam_3: i16)

{
undefined * puVar1; let puVar2: * mut u16; undefined * puVar3; let puVar4: * mut u16; let iVar5: i16; undefined * puVar6; let uVar7: u16; let uVar8: u16; let puVar9: * mut u16; undefined *puVar10; undefined * puVar11; let puVar12: *mut u16; let iVar13: i16; let lVar14: i32;

puVar12 = param_1; iVar5 = (param_1 >> 0x10); if (param_3 != 0) {
iVar13 = (param_2 >> 0x10); puVar9 = param_2; lVar14 = FUN_3444_1a14(0x39d9, puVar12, iVar5, puVar9, iVar13); if ((lVar14 < 0) || ((lVar14 < param_3) < = (lVar14 >> 0x10))) {
while ( true ) {
uVar7 = ~puVar12; uVar7 = ((param_3 - 1) - uVar7 & - (param_3 - 1 < uVar7)) + uVar7; uVar8 = ~puVar9; uVar7 = (uVar7 - uVar8 & - (uVar7 < uVar8)) + uVar8 + 1; param_3 = param_3 - uVar7; for (uVar8 = uVar7 >> 1; uVar8 != 0; uVar8 = uVar8 - 1) {
puVar4 = puVar12; puVar12 = puVar12 + 1;
puVar2 = puVar9; puVar9 = puVar9 + 1;
* puVar4 = * puVar2;
}
for (uVar7 = ((uVar7 & 1) != 0); uVar7 != 0; uVar7 = uVar7 - 1) {
puVar4 = puVar12; puVar12 = (puVar12 + 1); puVar2 = puVar9; puVar9 = (puVar9 + 1); * (undefined * )puVar4 = * (undefined * )puVar2;
}
if (param_3 == 0) break; if (puVar9 == 0x0) {
iVar13 = iVar13 + 0x1000;
}
if (puVar12 == 0x0) {
iVar5 = iVar5 + 0x1000;
}
}
}
else {
uVar7 = param_3 - 1; puVar10 = (undefined * )(puVar9 + uVar7); if (CARRY2(puVar9, uVar7)) {
iVar13 = iVar13 + 0x1000;
}
puVar11 = (undefined * )(puVar12 + uVar7); if (CARRY2(puVar12, uVar7)) {
iVar5 = iVar5 + 0x1000;
}
while ( true ) {
puVar6 = puVar10 + ((puVar11 + ((undefined * )(param_3 - 1) - puVar11 & - ((undefined * )(param_3 - 1) < puVar11))) - puVar10 &
- (puVar11 + ((undefined * )(param_3 - 1) - puVar11 & - ((undefined * )(param_3 - 1) < puVar11)) < puVar10)) + 1; param_3 = param_3 - puVar6; for (; puVar6 != (undefined * )0x0; puVar6 = puVar6 + - 1) {
puVar3 = puVar11; puVar11 = puVar11 + - 1; puVar1 = puVar10; puVar10 = puVar10 + -1; * puVar3 = * puVar1;
}
if (param_3 == 0) break; if (puVar10 == (undefined * )0xffff) {
iVar13 = iVar13 + - 0x1000;
}
if (puVar11 == (undefined * )0xffff) {
iVar5 = iVar5 + - 0x1000;
}
}
}
}
return param_1;
}



uint FUN_3444_1eca(param_1_00: u16,undefined4 param_1,undefined4 param_2,uparam_3: i16)

{
let pbVar1: * mut u8; let pbVar2: * mut u8; let uVar3: u16; let uVar4: u16; let pbVar5: * mut u8; let pbVar6: * mut u8; let iVar7: i16; let iVar8: i16; bool bVar9; bool bVar10;

if (param_3 == 0) {
return 0;
}
iVar8 = (param_1 >> 0x10); pbVar5 = param_1; iVar7 = (param_2 >> 0x10); pbVar6 = param_2; loop {
uVar3 = ~pbVar6; uVar3 = ((param_3 - 1) - uVar3 & - (param_3 - 1 < uVar3)) + uVar3; uVar4 = ~pbVar5; uVar3 = (uVar3 - uVar4 & - (uVar3 < uVar4)) + uVar4 + 1; bVar9 = param_3 < uVar3; param_3 = param_3 - uVar3; bVar10 = param_3 == 0;
loop {
if (uVar3 == 0) break; uVar3 = uVar3 - 1; pbVar2 = pbVar6; pbVar6 = pbVar6 + 1; pbVar1 = pbVar5; pbVar5 = pbVar5 + 1; bVar9 = * pbVar1 < *pbVar2; bVar10 = * pbVar1 == * pbVar2;
} while (bVar10); if ( ! bVar10) {
return (1 - bVar9) - (bVar9 != 0);
}
if (param_3 == 0) {
return uVar3;
}
if (pbVar5 == 0x0) {
iVar8 = iVar8 + 0x1000;
}
if (pbVar6 == 0x0) {
iVar7 = iVar7 + 0x1000;
}
} while ( true );
}



undefined4 FUN_3444_1f26(param_1_00: u16,undefined4 param_1,undefined4 param_2,param_3: i16)

{
let puVar1: * mut u16; let puVar2: * mut u16; let uVar3: u16; let uVar4: u16; let puVar5: * mut u16; let iVar6: i16;

if (param_3 != 0) {
iVar6 = (param_2 >> 0x10); puVar5 = param_2; while ( true ) {
uVar3 = ~param_1; uVar3 = ((param_3 - 1) - uVar3 & - (param_3 - 1 < uVar3)) + uVar3; uVar4 = ~puVar5; uVar3 = (uVar3 - uVar4 & - (uVar3 < uVar4)) + uVar4 + 1; param_3 = param_3 - uVar3; for (uVar4 = uVar3 >> 1; uVar4 != 0; uVar4 = uVar4 - 1) {
puVar2 = param_1; param_1._0_2_ = param_1 + 1; puVar1 = puVar5; puVar5 = puVar5 + 1; * puVar2 = * puVar1;
}
for (uVar3 = ((uVar3 & 1) != 0); uVar3 != 0; uVar3 = uVar3 - 1) {
puVar2 = param_1; param_1._0_2_ = (param_1 + 1); puVar1 = puVar5; puVar5 = (puVar5 + 1); * ffpuVar2 = * (undefined * )puVar1;
}
if (param_3 == 0) break; if (puVar5 == 0x0) {
iVar6 = iVar6 + 0x1000;
}
if (param_1 == 0x0) {
param_1._2_2_ = param_1._2_2_ + 0x1000;
}
}
}
return param_1;
}



undefined4 FUN_3444_1f84(param_1_00: u16,undefined4 param_1,uparam_2: i16,uparam_3: i16)

{
let puVar1: * mut u16; undefined uVar2;
let uVar3: u16; let uVar4: u16;
let uVar5: u16; let uVar6: u16;

if (param_3 != 0) {
uVar5 = - param_1; uVar6 = param_3; if (uVar5 != 0) {
uVar6 = (uVar5 - param_3 & - (uVar5 < param_3)) + param_3; uVar5 = param_3 - uVar6;
}
uVar3 = param_2 & 0xff | param_2 << 8; for (uVar4 = uVar6 >> 1; uVar4 != 0; uVar4 = uVar4 - 1) {
puVar1 = param_1; param_1._0_2_ = param_1 + 1; * puVar1 = uVar3;
}
for (uVar6 = ((uVar6 & 1) != 0); uVar2 = (param_2 & 0xff), uVar6 != 0; uVar6 = uVar6 - 1) {
puVar1 = param_1; param_1._0_2_ = (param_1 + 1); * (undefined * )puVar1 = uVar2;
}
if (uVar5 != 0) {
for (uVar6 = uVar5 >> 1; uVar6 != 0; uVar6 = uVar6 - 1) {
puVar1 = param_1; param_1._0_2_ = param_1 + 1; * puVar1 = uVar3;
}
for (uVar6 = ((uVar5 & 1) != 0); uVar6 != 0; uVar6 = uVar6 - 1) {
puVar1 = param_1; param_1._0_2_ = (param_1 + 1); * (undefined * )puVar1 = uVar2;
}
}
}
return param_1;
}



byte FUN_3444_1fe5(param_1_00: u16,param_1: i16)

{
let unaff_DS: u16;

return * (param_1 + - 0x470f) & 8;
}



byte FUN_3444_1fef(param_1: u16,param_2: i16)

{
let unaff_DS: u16;

return * (param_2 + - 0x470f) & 7;
}



fn FUN_3444_200e(param_1_00: u16,uparam_1: i16) -> i16

{
return (param_1 ^ param_1 >> 0xf) - (param_1 >> 0xf);
}



undefined4 FUN_3444_201c(param_1_00: u16,param_1: u16,param_2: u16)

{
let piVar1: * mut u16; let puVar2: * mut u16; let uVar3: u16; let    uVar4: u16; let unaff_DS: u16;

uVar3 = 0xffff; puVar2 = 0xb9f2; uVar4 = 0xffff; if (puVar2 != 0xcf5e) {
piVar1 = 0xb9f2; * piVar1 = * piVar1 + 4; puVar2[1] = param_2; *puVar2 = param_1; uVar3 = 0; uVar4 = param_2;
}
return CONCAT22(uVar4, uVar3);
}



fn fun_3444_204e(param_1_00: u16, param_1: u16)

{
    let unaff_ds: u16;

    0xb9f4 = param_1;
    0xb9f6 = 0;
    return;
}


fn fun_3444_2088()

{
    let pcVar1: *mut Code;
    let unaff_ds: u16;

    if (0xc0da == -0x292a) {
        (**(code * *)
        0xc0dc)();
    }
    pcVar1 = swi(0x21);
    (*pcVar1)();
    return;
}



fn FUN_3444_20e4() -> i16

{
code * pcVar1; let bVar2: u8;

pcVar1 = swi(0x21); bVar2 = ( *pcVar1)(); return bVar2 + 1;
}



fn fun_3444_2108(param_1_00: u16, param_1: u16, param_2: u16, param_3: u16)

{
    fun_3444_2120(0x39d9, 0, param_1, param_2, param_3);
    return;
}


fn fun_3444_2120(param_1_00: u16, param_1: i16, uparam_2: i16, uparam_3: i16, param_4: i16)

{
    ulong
    uVar1;
    let u_var2: u16;
    let unaff_ss: u16;
    let unaff_ds: u16;
    let l_var3: i32;
    undefined
    local_130[260];
    let local_2c: i16;
    let local_2a: u16;
    let local_1e: i16;
    undefined
    local_1c;
    undefined
    local_1b;
    char
    local_16;
    let local_14: u16;
    let local_e: u16;
    let local_8: u16;
    let local_6: u16;

    u_var2 = 0x39d9;
    _local_6 = 
    CONCAT22(unaff_ss, local_130);
    if (param_1 == 0) {
        u_var2 = 0x3444;
        param_1 = FUN_3444_20e4(0x39d9);
    }
    *_local_6 = param_1 + '@';
    uVar1 = _local_6 & 0xffff0000;
    _local_6 = (uVar1 | local_6 + 1);
    *_local_6 = 0x3a;
    _local_6 = (uVar1 | local_6 + 2);
    *_local_6 = 0x5c;
    local_14 = local_6 + 3;
    _local_6 = (uVar1 | local_14);
    local_1b = 0x47;
    local_16 = param_1;
    local_e = (undefined2)(uVar1 >> 0x10);
    local_8 = local_e;
    FUN_3444_1cd0(u_var2, &local_1c);
    if (local_1e == 0) {
        u_var2 = 0x3444;
        local_2c = FUN_3444_178e(0x3444, local_130);
        local_2c = local_2c + 1;
        local_6 = param_2;
        if ((param_3 | param_2) == 0) {
            if (param_4 < local_2c) {
                param_4 = local_2c;
            }
            u_var2 = 0x3143;
            l_var3 = fun_3143_1720(0x3444, param_4);
            param_3 = (l_var3 >> 0x10);
            local_6 = l_var3;
            if (l_var3 == 0) {
                0xb610 = 0xc;
                return;
            }
        }
        if (param_4 < local_2c) {
            0xb610 = 0x22;
        } else {
            fun_3444_172e(u_var2, local_6, param_3, local_130);
        }
    } else {
        0xb610 = 0xd;
        0xb61b = local_2a;
    }
    return;
}


fn fun_3444_2226() -> u16

{
    let pcVar1: *mut Code;
    undefined
    in_CF;

    pcVar1 = swi(0x21);
    (*pcVar1)();
    if (!(bool)
    in_CF) {
    return 0;
}
    FUN_3444_060c();
    return 0xffff;
}


fn fun_3444_2278(param_1_00: u16, undefined4 param_1) -> u16

{
    let pcVar1: *mut Code;
    let unaff_ds: u16;

    0xbbc8 = (param_1 >> 0x10);
    0xbbc6 = param_1;
    pcVar1 = swi(0x21);
    (*pcVar1)();
    return 0;
}


fn fun_3444_2322(param_1_00: u16, undefined2 *param_1, param_2: u16, param_3: u16)

{
    let pu_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u32;

    u_var2 = (undefined2)(param_1 >> 0x10);
    pu_var1 = param_1;
    u_var3 = FUN_3444_2364(0x39d9, *param_1, pu_var1[1], param_2, param_3);
    pu_var1[1] = (u_var3 >> 0x10);
    *pu_var1 = u_var3;
    return;
}


fn fun_3444_2344(param_1_00: u16, undefined4 param_1)

{
    let pu_var1: *mut u16;
    let u_var2: u16;
    let u_var3: u32;

    u_var2 = (undefined2)(param_1 >> 0x10);
    pu_var1 = param_1;
    u_var3 = fun_3444_24dc(0x39d9);
    *pu_var1 = u_var3;
    pu_var1[1] = (u_var3 >> 0x10);
    return;
}



undefined4 FUN_3444_2364(param_1_00: u16,uparam_1: i16,uparam_2: i16,uparam_3: i16,uparam_4: i16)

{
ulong uVar1; let lVar2: i32; let uVar3: u16; let iVar4: i16; let uVar5: u16; let uVar6: u16; let uVar7: u16; let uVar8: u16; bool bVar10; char cVar11; let uVar9: u16;

cVar11 = param_2 < 0; if ((bool)cVar11) {
bVar10 = param_1 != 0; param_1 = - param_1; param_2 = - bVar10 - param_2;
}
if (param_4 < 0) {
cVar11 = cVar11 + '\x01'; bVar10 = param_3 != 0; param_3 = - param_3; param_4 = -bVar10 - param_4;
}
uVar3 = param_1; uVar5 = param_3; uVar6 = param_2; uVar9 = param_4; if (param_4 == 0) {
uVar3 = param_2 / param_3; iVar4 = ((param_2 % param_3 << 0x10 | param_1) / param_3);
}
else {
loop {
uVar8 = uVar9 >> 1; uVar5 = uVar5 >> 1 | ((uVar9 & 1) != 0) << 0xf; uVar7 = uVar6 >> 1; uVar3 = uVar3 >> 1 | ((uVar6 & 1) != 0) << 0xf; uVar6 = uVar7; uVar9 = uVar8;
} while (uVar8 != 0); uVar1 = CONCAT22(uVar7, uVar3) / uVar5; iVar4 = uVar1; lVar2 = param_3 * (uVar1 & 0xffff); uVar3 = (lVar2 >> 0x10); uVar5 = uVar3 + iVar4 * param_4; if (((CARRY2(uVar3, iVar4 * param_4)) || (param_2 < uVar5)) || ((param_2 < = uVar5 & & (param_1 < lVar2)))) {
iVar4 = iVar4 + - 1;
}
uVar3 = 0;
}
if (cVar11 == '\x01') {
bVar10 = iVar4 != 0; iVar4 = - iVar4; uVar3 = - bVar10 - uVar3;
}
return CONCAT22(uVar3, iVar4);
}



ulong FUN_3444_23fe(param_1_00: u16,uparam_1: i16,uparam_2: i16,uparam_3: i16,uparam_4: i16)

{
if ((param_4 | param_2) == 0) {
return param_1 * param_3;
}
return param_1 * param_3 & 0xffff | ((param_1 * param_3 >> 0x10) + param_2 * param_3 + param_1 * param_4) << 0x10;
}



undefined4 FUN_3444_2430(param_1_00: u16,uparam_1: i16,uparam_2: i16,uparam_3: i16,uparam_4: i16)

{
ulong uVar1; let lVar2: i32; let uVar3: u16; let uVar4: u16; let iVar5: i16; let iVar6: i16; let uVar7: u16; let uVar8: u16; let uVar9: u16; let uVar10: u16; let uVar11: u16; bool bVar12; bool bVar13;

bVar13 = param_2 < 0; if (bVar13) {
bVar12 = param_1 != 0; param_1 = - param_1; param_2 = - bVar12 - param_2;
}
uVar11 = bVar13; if (param_4 < 0) {
bVar13 = param_3 != 0; param_3 = - param_3; param_4 = - bVar13 - param_4;
}
uVar3 = param_1; uVar4 = param_3; uVar8 = param_2; uVar9 = param_4; if (param_4 == 0) {
iVar5 = ((param_2 % param_3 << 0x10 | param_1) % param_3); iVar6 = 0; if ((uVar11 - 1) < 0) goto LAB_3444_24ca;
}
else {
loop {
uVar10 = uVar9 >> 1; uVar4 = uVar4 >> 1 | ((uVar9 & 1) != 0) << 0xf; uVar7 = uVar8 >> 1; uVar3 = uVar3 >> 1 | ((uVar8 & 1) != 0) << 0xf; uVar8 = uVar7; uVar9 = uVar10;
} while (uVar10 != 0); uVar1 = CONCAT22(uVar7, uVar3) / uVar4; uVar3 = uVar1 * param_4; lVar2 = (uVar1 & 0xffff) * param_3; uVar8 = (lVar2 >> 0x10); uVar4 = lVar2; uVar9 = uVar8 + uVar3; if (((CARRY2(uVar8, uVar3)) || (param_2 < uVar9)) || ((param_2 < = uVar9 & & (param_1 < uVar4)))) {
bVar13 = uVar4 < param_3; uVar4 = uVar4 - param_3; uVar9 = (uVar9 - param_4) - bVar13;
}
iVar5 = uVar4 - param_1; iVar6 = (uVar9 - param_2) - (uVar4 < param_1);
if ( - 1 < (uVar11 - 1)) goto LAB_3444_24ca;
}
bVar13 = iVar5 != 0; iVar5 = - iVar5; iVar6 = - bVar13 - iVar6;
// LAB_3444_24ca: return CONCAT22(iVar6, iVar5);
}



fn fun_3444_24d0()

{
    let in_cx: u16;
    let u_var1: u16;

    for (uVar1 = in_CX &0xff; uVar1 != 0; uVar1 = uVar1 -1) {}
    return;
}


fn fun_3444_24dc()

{
    let in_cx: u16;
    let u_var1: u16;

    for (uVar1 = in_CX &0xff; uVar1 != 0; uVar1 = uVar1 -1) {}
    return;
}



void  FUN_3444_2555()

{
let in_BX: * mut u16; let unaff_ES: u16; let unaff_DS: u16;

0xbbd8 = *in_BX; 0xbbda = in_BX[1]; 0xbbdc = in_BX[2]; 0xbbde = in_BX[3]; return;
}



fn fun_3444_256d()

{
    let unaff_di: i16;
    let unaff_ds: u16;

    (unaff_di + -4) = unaff_di;
    (unaff_di + -2) = 7;
    FUN_3444_257c();
    return;
}



void  FUN_3444_257c()

{
let uVar1: u16; let uVar2: u16;
let uVar3: u16; let unaff_SI: * mut u16; let unaff_DI: * mut u16; let    unaff_DS: u16;

uVar1 = * unaff_SI; uVar2 = unaff_SI[1]; if ((uVar2 & 0x7f80) != 0) {
* unaff_DI = 0; uVar3 = uVar1 >> 1; unaff_DI[1] = ((((uVar1 & 1) != 0) << 0xf) >> 1 | ((uVar3 & 1) != 0) << 0xf) >> 1 | ((uVar3 & 2) != 0) << 0xf; unaff_DI[2] = ((uVar3 | ((uVar2 & 1) != 0) << 0xf) >> 1 | ((uVar2 >> 1 & 1) != 0) << 0xf) >> 1 | ((uVar2 >> 2 & 1) != 0) << 0xf; unaff_DI[3] = (uVar2 >> 3 & 0xff | ((uVar2 >> 0xb) & 0x8f) << 8) + 0x3800; return;
}
* unaff_DI = 0; unaff_DI[1] = 0; unaff_DI[2] = 0; unaff_DI[3] = 0; return;
}



void  FUN_3444_25fc()

{
let uVar1: u16; let uVar2: u16;
let uVar3: u16; let uVar4: u16;
let puVar5: * mut u16; bool bVar6;
code * * ppcVar7; char cVar8; let uVar9: u16; let iVar10: i16; let uVar11: u16; let bVar12: u8; let uVar13: u16; let unaff_SI: * mut u16;
let unaff_DS: u16;

puVar5 = * (undefined2 * * )0xbd56; uVar1 = * unaff_SI;
uVar2 = unaff_SI[1]; uVar3 = unaff_SI[2]; cVar8 = uVar3; iVar10 = CONCAT11(cVar8, (uVar2 >> 8)); uVar4 = unaff_SI[3]; uVar9 = CONCAT11(uVar4, (uVar3 >> 8)) << 1; uVar11 = iVar10 << 3; if ((uVar1 | uVar2 | (uVar1 >> 8)) != 0) {
uVar11 = uVar11 | 1;
}
uVar13 = (uVar9 & 0x3fc0) << 2 | ((((uVar9 | cVar8 < '\0') << 1 | (iVar10 << 1 < 0)) << 1) | iVar10 << 2 < 0) | 0x8000; uVar9 = uVar4 & 0x7ff0; if (uVar9 < 0x47e1) {
if (0x37ff < uVar9) {
iVar10 = (uVar9 + 0xc800) * 8;
bVar12 = (uVar11 >> 8); if ((0x80 < uVar11) || ((0x7f < uVar11 & & ((uVar11 & 0x100) != 0)))) {
uVar11 = (bVar12 + 1) << 8; uVar9 = (0xfe < bVar12); bVar6 = CARRY2(uVar13, uVar9); uVar13 = uVar13 + uVar9; if ((bVar6) && (iVar10 = iVar10 + 0x80, iVar10 == 0x7f80)) goto LAB_3444_45d6;
}
if (iVar10 != 0) {
puVar5[1] = CONCAT11((iVar10 >> 8) | (uVar4 >> 8) & 0x80,
iVar10 | (uVar13 >> 8) & 0x7f); * puVar5 = CONCAT11(uVar13, (uVar11 >> 8));
return;
}
}
* puVar5 = 0; puVar5[1] = 0; return;
}
// LAB_3444_45d6:
0xbfc6 = 0x3430; bVar12 = 0x84; if (0xbbd6 != 0) {
ppcVar7 = (code * * )0xbbd4; bVar12 = 0; ( * * ppcVar7)(0x39d9);
}
if (bVar12 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar12; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}



void  FUN_3444_2b22()

{
char cVar1; let puVar2: * mut u16;
let uVar3: u16; code * * ppcVar4;
let in_AX: u16; let bVar5: u8;
let in_DX: u16; let uVar7: u16;
let in_BX: u16; let unaff_DS: u16;
bool bVar8; bool bVar9; let uVar10: u16; let bVar6: u8;

uVar7 = in_DX;
if ((in_BX == 0) & & ((bVar6 = (in_AX >> 8), bVar5 = bVar6 - 0x10, in_AX = in_AX & 0xff | bVar5 << 8,
bVar6 < 0x10 || bVar5 == 0 || (uVar7 = in_BX, in_BX = in_DX, in_DX == 0)))) {
// LAB_3444_2b95: if (0xbd60 == '\0') {
puVar2 = * (undefined2 * * )0xbd56;
puVar2[1] = 0; * puVar2 = 0; return;
}
in_AX = 0; in_BX = 0; uVar7 = 0; * (undefined * )0xbd60 = 0;
}
else {
if ((in_BX >> 8) == '\0') {
bVar6 = (in_AX >> 8); bVar5 = bVar6 - 8; in_AX = in_AX & 0xff | bVar5 << 8; if (bVar6 < 8 || bVar5 == 0) goto LAB_3444_2b95;
uVar3 = uVar7 >> 8; uVar7 = uVar7 << 8; in_BX = CONCAT11(in_BX,uVar3);
}
if ( - 1 < in_BX) {
loop {
bVar5 = (in_AX >> 8) - 1; in_AX = in_AX & 0xff | bVar5 << 8; if (bVar5 == 0) goto LAB_3444_2b95; bVar8 = uVar7 < 0; uVar7 = uVar7 << 1; bVar9 = in_BX < 0;
in_BX = in_BX << 1 | bVar8;
} while (bVar9 == in_BX < 0);
}
bVar5 = (in_AX >> 8); if (0xbd60 == '\0') {
bVar6 = (uVar7 >> 8); if ((0x80 < uVar7) || ((0x7f < uVar7 & & ((uVar7 & 0x100) != 0)))) {
uVar7 = (bVar6 + 1) << 8; uVar3 = (0xfe < bVar6); bVar8 = CARRY2(in_BX, uVar3); in_BX = in_BX + uVar3; if ((bVar8) && (in_AX = in_AX & 0xff | (bVar5 + 1) << 8, (bVar5 + 1) == 0xff)) {
0xbfc6 = 0x3430; bVar5 = 0x84; if (0xbbd6 != 0) {
ppcVar4 = (code * * )0xbbd4; bVar5 = 0; ( * * ppcVar4)(0x39d9);
}
if (bVar5 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar5; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}
}
uVar3 = (in_AX & 0xff00) >> 1; if (uVar3 != 0) {
puVar2 = 0xbd56; puVar2[1] = uVar3 & 0xff00 | (in_AX < '\0') << 0xf | (uVar3 | (in_BX >> 8) & 0x7f); * puVar2 = CONCAT11(in_BX, (uVar7 >> 8));
return;
}
goto LAB_3444_2b95;
}
* (undefined * )0xbd60 = 0; cVar1 = 0xbd62; if (((cVar1 == '\0') || ((cVar1 - 0xeU) <= bVar5)) & & (bVar5 != 0)) {
uVar10 = 0xbd56; 0xbd56 = 0xbd63; FUN_3444_2b50(uVar7, in_BX, in_AX); 0xbd56 = 0xbd67; FUN_3444_2b22(uVar7, in_BX, in_AX);
goto LAB_3444_2d13;
}
}
uVar10 = 0xbd56; 0xbd56 = 0xbd67; FUN_3444_2b50(uVar7, in_BX, in_AX); 0xbd63 = 0; 0xbd65 = 0;
// LAB_3444_2d13:
0xbd56 = uVar10; FUN_3444_2b50(); return;
}



void  FUN_3444_2b50()

{
char cVar1; let puVar2: * mut u16;
let uVar3: u16; bool bVar4; code ** ppcVar5; let in_AX: u16; let bVar6: u8; let in_DX: u16; let bVar7: u8; let in_BX: u16; let unaff_DS: u16; let uVar8: u16;

bVar6 = (in_AX >> 8); if (0xbd60 == '\0') {
bVar7 = (in_DX >> 8); if ((0x80 < in_DX) || ((0x7f < in_DX & & ((in_DX & 0x100) != 0)))) {
in_DX = (bVar7 + 1) << 8; uVar3 = (0xfe < bVar7); bVar4 = CARRY2(in_BX, uVar3); in_BX = in_BX + uVar3; if ((bVar4) && (in_AX = in_AX & 0xff | (bVar6 + 1) << 8, (bVar6 + 1) == 0xff)) {
0xbfc6 = 0x3430; bVar6 = 0x84; if (0xbbd6 != 0) {
ppcVar5 = (code * * )0xbbd4; bVar6 = 0; ( * * ppcVar5)(0x39d9);
}
if (bVar6 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar6; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}
}
uVar3 = (in_AX & 0xff00) >> 1; if (uVar3 != 0) {
puVar2 = 0xbd56; puVar2[1] = uVar3 & 0xff00 | (in_AX < '\0') << 0xf | (uVar3 | (in_BX >> 8) & 0x7f); * puVar2 = CONCAT11(in_BX, (in_DX >> 8));
return;
}
if (0xbd60 == '\0') {
puVar2 = * (undefined2 * * )0xbd56;
puVar2[1] = 0; * puVar2 = 0; return;
}
in_AX = 0; in_BX = 0; in_DX = 0; * (undefined * )0xbd60 = 0;
}
else {
* (undefined * )0xbd60 = 0; cVar1 = 0xbd62; if (((cVar1 == '\0') || ((cVar1 - 0xeU) <= bVar6)) & & (bVar6 != 0)) {
uVar8 = 0xbd56; 0xbd56 = 0xbd63; FUN_3444_2b50(); 0xbd56 = 0xbd67; FUN_3444_2b22(in_DX,in_BX, in_AX); goto LAB_3444_2d13;
}
}
uVar8 = 0xbd56; 0xbd56 = 0xbd67; FUN_3444_2b50(in_DX, in_BX, in_AX); 0xbd63 = 0; 0xbd65 = 0;
// LAB_3444_2d13:
0xbd56 = uVar8; FUN_3444_2b50(); return;
}



void  FUN_3444_2e98()

{
undefined * puVar1; let puVar2: * mut u16; code * * ppcVar3; let in_AX: u16; let in_CX: u16; let in_DX: u16; let bVar4: u8; let in_BX: u16; let uVar5: u16; let unaff_BP: u16; let uVar6: u16; let iVar7: i16; let unaff_DI: u16; let unaff_ES: u16; let unaff_DS: u16; bool bVar8; bool bVar9; let uVar10: u16;

iVar7 = 4; while ((uVar5 = in_BX, in_BX = in_CX, unaff_DI == 0 & & ((uVar5 & 0xe000) == 0))) {
bVar8 = unaff_BP < 0x200; unaff_BP = unaff_BP - 0x200; if ((bVar8 || unaff_BP == 0) || (iVar7 = iVar7 + -1, iVar7 == 0)) goto LAB_3444_2f51;
in_CX = in_DX; in_DX = 0; unaff_DI = uVar5;
}
if ((unaff_DI & 0x1fe0) == 0) {
bVar8 = 0xff < unaff_BP; unaff_BP = unaff_BP - 0x100; if (bVar8 & & unaff_BP != 0) {
unaff_DI = CONCAT11(unaff_DI, (uVar5 >> 8)); uVar5 = CONCAT11(uVar5,(in_BX >> 8)); in_BX = CONCAT11(in_BX, (in_DX >> 8)); in_DX = in_DX << 8; goto LAB_3444_2ed6;
}
// LAB_3444_2f51: if (0xbd78 == '\0') {
puVar2 = * (undefined2 * * )0xbd56;
* puVar2 = 0; puVar2[1] = 0; puVar2[2] = 0; puVar2[3] = 0; return;
}
in_AX = 0; in_BX = 0; in_DX = 0; uVar5 = 0; unaff_BP = 0;
unaff_DI = 0; * (undefined * )0xbd78 = 0;
}
else {
// LAB_3444_2ed6: for (; (unaff_DI & 0x1000) == 0; unaff_DI = unaff_DI << 1 | bVar8) {
unaff_BP = unaff_BP - 0x20; if (unaff_BP == 0) goto LAB_3444_2f51; bVar8 = in_DX < 0; in_DX = in_DX << 1; bVar9 = in_BX < 0; in_BX = in_BX << 1 | bVar8; bVar8 = uVar5 < 0; uVar5 = uVar5 << 1 | bVar9;
}
if (0xbd78 == '\0') {
bVar4 = (in_DX >> 8); if ((0x80 < in_DX) || ((0x7f < in_DX & & ((in_DX & 0x100) != 0)))) {
in_DX = (bVar4 + 1) << 8; uVar6 = (0xfe < bVar4); bVar8 = CARRY2(in_BX, uVar6); in_BX = in_BX + uVar6; uVar6 = bVar8; bVar8 = CARRY2(uVar5, uVar6); uVar5 = uVar5 + uVar6; unaff_DI = unaff_DI + bVar8; if (((unaff_DI & 0x2000) != 0) & & (unaff_BP = unaff_BP + 0x20, unaff_BP == 0xffe0)) {
0xbfc6 = 0x3430; bVar4 = 0x84; if (0xbbd6 != 0) {
ppcVar3 = (code * * )0xbbd4; bVar4 = 0; ( * * ppcVar3)(0x39d9);
}
if (bVar4 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar4; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}
}
puVar1 = (undefined * )0xbd56; uVar6 = unaff_BP >> 1; if (uVar6 != 0) {
(puVar1 + 6) = (in_AX & 0x80) << 8 | uVar6 & 0xff00 | (uVar6 | ((unaff_DI & 0xfff) >> 8)); puVar1[5] = (unaff_DI & 0xfff); * puVar1 = (in_DX >> 8); (puVar1 + 1) = in_BX; (puVar1 + 3) = uVar5; return;
}
goto LAB_3444_2f51;
}
* (undefined * )0xbd78 = 0; iVar7 = 0xbd79; if (((iVar7 == 0) || (iVar7 - 0x4c0 < = unaff_BP)) & & (unaff_BP != 0)) {
uVar10 = 0xbd56; 0xbd56 = 0xbd7b; FUN_3444_2eed(unaff_DI, unaff_BP, uVar5, in_DX, in_BX); 0xbd56 = 0xbd83; FUN_3444_2e98(unaff_DI, unaff_BP, uVar5, in_DX, in_BX, in_AX);
goto LAB_3444_32c6;
}
}
uVar10 = 0xbd56; 0xbd56 = 0xbd83; FUN_3444_2eed(unaff_DI, unaff_BP, uVar5, in_DX, in_BX,in_AX); 0xbd7b = 0; 0xbd7d = 0; 0xbd7f = 0; 0xbd81 = 0;
// LAB_3444_32c6:
0xbd56 = uVar10; FUN_3444_2eed(); return;
}



void  FUN_3444_2eed()

{
undefined * puVar1; let puVar2: * mut u16; let iVar3: i16; bool bVar4; code * * ppcVar5; let in_AX: u16; let in_CX: u16; let in_DX: u16; let bVar6: u8; let in_BX: u16; let unaff_BP: u16; let uVar7: u16; let unaff_DI: u16; let unaff_ES: u16; let    unaff_DS: u16; let uVar8: u16;

if (0xbd78 == '\0') {
bVar6 = (in_DX >> 8); if ((0x80 < in_DX) || ((0x7f < in_DX & & ((in_DX & 0x100) != 0)))) {
in_DX = (bVar6 + 1) << 8; uVar7 = (0xfe < bVar6); bVar4 = CARRY2(in_CX, uVar7); in_CX = in_CX + uVar7; uVar7 = bVar4; bVar4 = CARRY2(in_BX, uVar7); in_BX = in_BX + uVar7; unaff_DI = unaff_DI + bVar4; if (((unaff_DI & 0x2000) != 0) & & (unaff_BP = unaff_BP + 0x20, unaff_BP == 0xffe0)) {
0xbfc6 = 0x3430; bVar6 = 0x84; if (0xbbd6 != 0) {
ppcVar5 = (code * * )0xbbd4; bVar6 = 0; ( * * ppcVar5)(0x39d9);
}
if (bVar6 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar6; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}
}
puVar1 = (undefined * )0xbd56; uVar7 = unaff_BP >> 1; if (uVar7 != 0) {
(puVar1 + 6) = (in_AX & 0x80) << 8 | uVar7 & 0xff00 | (uVar7 | ((unaff_DI & 0xfff) >> 8)); puVar1[5] = (unaff_DI & 0xfff); * puVar1 = (in_DX >> 8); (puVar1 + 1) = in_CX; (puVar1 + 3) = in_BX; return;
}
if (0xbd78 == '\0') {
puVar2 = * (undefined2 * * )0xbd56;
* puVar2 = 0; puVar2[1] = 0; puVar2[2] = 0; puVar2[3] = 0; return;
}
in_AX = 0; in_CX = 0; in_DX = 0; in_BX = 0; unaff_BP = 0;
unaff_DI = 0; * (undefined * )0xbd78 = 0;
}
else {
* (undefined * )0xbd78 = 0; iVar3 = 0xbd79; if (((iVar3 == 0) || (iVar3 - 0x4c0 < = unaff_BP)) & & (unaff_BP != 0)) {
uVar8 = 0xbd56; 0xbd56 = 0xbd7b; FUN_3444_2eed(); 0xbd56 = 0xbd83; FUN_3444_2e98(unaff_DI,unaff_BP, in_BX, in_DX, in_CX, in_AX); goto LAB_3444_32c6;
}
}
uVar8 = 0xbd56; 0xbd56 = 0xbd83; FUN_3444_2eed(unaff_DI, unaff_BP, in_BX, in_DX, in_CX,in_AX); 0xbd7b = 0; 0xbd7d = 0; 0xbd7f = 0; 0xbd81 = 0;
// LAB_3444_32c6:
0xbd56 = uVar8; FUN_3444_2eed(); return;
}



uint  FUN_3444_334c()

{
let pbVar1: * mut u8; let iVar2: i16; let lVar3: i32; undefined uVar4;
let uVar5: u16; let uVar6: u16;
let uVar7: u16; let in_AX: u16;
let uVar8: u16; let in_CX: i16;
let uVar9: u16; let uVar10: u16;
let in_DX: u16; let in_BX: i16;
let iVar11: i16; let unaff_SI: u16;
let uVar12: u16; let unaff_DI: u16;
let unaff_DS: u16; let bVar13: u8;
char cVar14; char in_AF; bool bVar15; char cVar16; char cVar17;

0xbd90 = unaff_DI; 0xbd92 = in_CX + unaff_SI; 0xbd9c = in_AX; 0xbd9e = in_DX; bVar15 = true; 0xbd96 = 0; 0xbd94 = 0; 0xbd98 = 0; uVar9 = 0; FUN_3444_353f(); if (bVar15) {
uVar9 = uVar9 | 0x8000;
}
uVar12 = unaff_SI; if (in_BX == 0) {
0xbd9a = 10; FUN_3444_3466(); iVar11 = 0; bVar15 = true; uVar8 = FUN_3444_35a0(); if ( ! bVar15) {
uVar12 = unaff_SI - 1; cVar14 = uVar8;
if (cVar14 == 'D') {
uVar9 = uVar9 | 0xe;
}
else {
if (cVar14 != 'E') {
if ((0xbd8d == '\0') || (((cVar14 != '+' & & (cVar14 != '-')) & & (cVar14 != '-')))
) goto LAB_3444_33c7; uVar12 = unaff_SI - 2;
}
uVar9 = uVar9 | 0x402;
}
bVar13 = 0; 0xbd9c = 0; uVar12 = uVar12 + 1; cVar17 = uVar12 < 0;
cVar16 = uVar12 == 0; cVar14 = (POPCOUNT(uVar12 & 0xff) & 1) == 0; uVar4 = FUN_3444_353f(); uVar8 = CONCAT11(cVar17 << 7 | cVar16 << 6 | in_AF << 4 | cVar14 << 2 | 2 | bVar13, uVar4); FUN_3444_3444(); if ((uVar9 & 0x200) == 0) {
uVar9 = uVar9 | 0x40;
}
if ((uVar8 & 0x4000) != 0) {
iVar11 = - iVar11;
}
}
}
else {
0xbd9a = in_BX; uVar4 = 0; iVar11 = 0; uVar8 = FUN_3444_354f(); while (! (bool)uVar4) {
uVar5 = FUN_3444_354f(); if ((bool)uVar4) goto LAB_3444_3307; lVar3 = uVar8 * 0xbd9a; uVar10 = (lVar3 >> 0x10); uVar6 = lVar3; lVar3 = (long)iVar11 * (long)0xbd9a; uVar8 = lVar3; if (((lVar3 >> 0x10) != 0) || (uVar7 = uVar8 + uVar10, CARRY2(uVar8, uVar10)))
break; uVar8 = uVar6 + uVar5; uVar5 = CARRY2(uVar6, uVar5); iVar11 = uVar7 + uVar5; uVar4 = CARRY2(uVar7, uVar5);
}
uVar9 = uVar9 & 0xff00 | uVar9 & 0xff | 0x30 | 0x40;
// LAB_3444_3307:
uVar8 = FUN_3444_349b();
iVar11 = 0;
}
// LAB_3444_33c7:
iVar2 = 0xbd9c; if ((iVar2 != 0) || ((uVar9 & 0x1842) != 0)) {
uVar9 = uVar9 | 0x30;
}
iVar11 = iVar2 + iVar11 + 0xbd98; if ((uVar9 & 0x1000) == 0) {
iVar11 = iVar11 - 0xbd9e;
}
uVar4 = iVar11 == 400; if (iVar11 < 0x191) {
FUN_3444_392d(uVar9, uVar12); iVar11 = 0xbd90; * (undefined * )0xbdae = 0;
uVar8 = FUN_3444_35cc(); if ((bool)uVar4) {
uVar12 = 0xbda0; if (((uVar9 & 0x8000) != 0) & & (uVar12 = - uVar12, ((iVar11 + 6) & 0x7ff0) != 0)) {
pbVar1 = (iVar11 + 7); * pbVar1 = * pbVar1 | 0x80;
}
return uVar12;
}
}
return uVar8;
}



void  FUN_3444_3444()

{
let iVar1: i16; let uVar2: u16;
let in_BX: u16; let unaff_DS: u16;
undefined in_CF;

while ( true ) {
* (undefined * )0xbd9a = 10; iVar1 = FUN_3444_354f(); if ((bool)in_CF) {
return;
}
in_CF = in_BX < 0xccc; if ((in_BX < 0xccd) & & (uVar2 = iVar1 + in_BX * 2, in_CF = CARRY2(in_BX * 8, uVar2), - 1 < (in_BX * 8 + uVar2))) break; in_BX = 0x3fff;
}
FUN_3444_3444(); return;
}



fn fun_3444_3466()

{
    let pi_var1: *mut u16;
    let u_var2: u16;
    let in_ch: u8;
    let extraout_dx: u16;
    let extraout_dx_00: u16;
    let u_var3: u16;
    let extraout_dx_01: u16;
    let u_var4: u16;
    let u_var5: u16;
    let u_var6: u16;
    let unaff_es: u16;
    let unaff_ds: u16;
    bool
    bVar7;
    let u_var8: u32;

    bVar7 = false;
    u_var6 = 0;
    u_var5 = 0;
    u_var4 = 0;
    loop {
    u_var8 = fun_3444_3566();
    u_var3 = (u_var8 >> 0x10);
    u_var2 = u_var8;
    if (bVar7)
    goto
    FUN_3444_349b;
    FUN_3444_3520();
    bVar7 = CARRY2(u_var4, CARRY2(extraout_dx, u_var2));
    u_var4 = u_var4 + CARRY2(extraout_dx, u_var2);
    u_var3 = bVar7;
    bVar7 = CARRY2(u_var5, u_var3);
    u_var5 = u_var5 + u_var3;
    u_var6 = u_var6 + bVar7;
    bVar7 = u_var6 < 0x1999;
}
    while (bVar7);
    while (fun_3444_3566(), u_var3 = extraout_dx_00, !bVar7) {
        bVar7 = false;
        pi_var1 = 0xbd98;
        *pi_var1 = *pi_var1 + 1;
    }
    FUN_3444_349b: if (((((u_var6 | u_var5 | 0xbd98) == 0) && ((in_ch & 0x80) == 0)) && (u_var4 < 0)) && (0xbd9a != 10)) {
    bVar7 = u_var3 != 0;
    u_var3 = -u_var3;
    u_var4 = -bVar7 - u_var4;
}
    0xbda0 = u_var3;
    0xbda2 = u_var4;
    u_var2 = u_var6 | u_var5 | u_var4 | u_var3;
    u_var8 = CONCAT22(u_var3, u_var2);
    if (u_var2 != 0) {
        while (u_var6 < 0x1999) {
            FUN_3444_3520();
            pi_var1 = 0xbd98;
            *pi_var1 = *pi_var1 + -1;
            u_var3 = extraout_dx_01;
        }
        u_var8 = CONCAT22(u_var3, 0x40);
        while (-1 < u_var6) {
            u_var8 = FUN_3444_3536();
        }
    }
    0xbda4 = (u_var8 >> 0x10);
    0xbda6 = u_var4;
    0xbda8 = u_var5;
    0xbdaa = u_var6;
    0xbdac = u_var8;
    return;
}



void  FUN_3444_349b()

{
let piVar1: * mut u16; let uVar2: u16; let in_CH: u8; let in_DX: u16; let extraout_DX: u16; let in_BX: u16; let unaff_BP: u16; let unaff_DI: u16; let unaff_ES: u16; let unaff_DS: u16; bool bVar3; let uVar4: u32;

if (((((unaff_DI | unaff_BP | 0xbd98) == 0) & & ((in_CH & 0x80) == 0)) & & (in_BX < 0)
) & & (0xbd9a != 10)) {
bVar3 = in_DX != 0; in_DX = - in_DX; in_BX = - bVar3 - in_BX;
}
0xbda0 = in_DX; 0xbda2 = in_BX; uVar2 = unaff_DI | unaff_BP | in_BX | in_DX; uVar4 = CONCAT22(in_DX, uVar2); if (uVar2 != 0) {
while (unaff_DI < 0x1999) {
FUN_3444_3520(); piVar1 = 0xbd98; * piVar1 = * piVar1 + - 1; in_DX = extraout_DX;
}
uVar4 = CONCAT22(in_DX, 0x40); while ( - 1 < unaff_DI) {
uVar4 = FUN_3444_3536();
}
}
0xbda4 = (uVar4 >> 0x10); 0xbda6 = in_BX; 0xbda8 = unaff_BP; 0xbdaa = unaff_DI; 0xbdac = uVar4; return;
}



undefined4 FUN_3444_3520()

{
let unaff_DI: u16; let uVar1: u32;

FUN_3444_3536(); uVar1 = FUN_3444_3536();
return CONCAT22(((uVar1 >> 0x10) + uVar1) * 2, unaff_DI);
}



void  FUN_3444_3536()

{
return;
}



void  FUN_3444_353f()

{
FUN_3444_35a0(); return;
}



void  FUN_3444_354f()

{
let piVar1: * mut u16; let bVar2: u8; char cVar3; let unaff_DS: u16;
undefined in_ZF;

bVar2 = FUN_3444_35a0(); if (( ! (bool)in_ZF) & & (cVar3 = bVar2 - 0x30, 0x2f < bVar2)) {
if ('\t' < cVar3) {
cVar3 = bVar2 - 0x37;
}
if (cVar3 < 0xbd9a) {
piVar1 = 0xbd96; * piVar1 = * piVar1 + 1; return;
}
}
return;
}



fn fun_3444_3566()

{
    let pi_var1: *mut u16;
    let b_var2: u8;
    let in_ch: u8;
    let unaff_ds: u16;
    undefined
    in_ZF;

    b_var2 = FUN_3444_35a0();
    if (!(bool)
    in_ZF) {
    if (b_var2 == 0x2e) {
        if ((in_ch & 0x10) == 0) {
            pi_var1 = 0xbd94;
            *pi_var1 = *pi_var1 + 1;
            fun_3444_3566();
            return;
        }
    } else {
        if ((0x2f < b_var2) && ((b_var2 - 0x30) < 10)) {
            if ((in_ch & 0x10) != 0) {
                pi_var1 = 0xbd98;
                *pi_var1 = *pi_var1 + -1;
            }
            pi_var1 = 0xbd96;
            *pi_var1 = *pi_var1 + 1;
            return;
        }
    }
}
    return;
}



byte  FUN_3444_35a0()

{
let pbVar1: * mut u8; let bVar2: u8; let unaff_SI: * mut u8; let    unaff_DS: u16;

loop {
if ( * (byte * * )0xbd92 <= unaff_SI) {
return 0;
}
pbVar1 = unaff_SI; unaff_SI = unaff_SI + 1;
bVar2 = * pbVar1;
} while ((0xbd8c != '\0') & & ((((bVar2 == 0x20 || (bVar2 == 9)) || (bVar2 == 10)) || (bVar2 == 0xd)))); if ((0x60 < bVar2) & & (bVar2 < 0x7b)) {
bVar2 = bVar2 & 0x5f;
}
return bVar2;
}



void  FUN_3444_35cc()

{
let pbVar1: * mut u8; let uVar2: u16; let uVar3: u16; let uVar4: u16; let iVar5: i16; let uVar6: u16; let bVar7: u8; let bVar8: u8; let uVar9: u16; let iVar10: i16; let unaff_SI: * mut u16; let unaff_DI: * mut u16; let uVar11: u16; let iVar12: i16; let unaff_DS: u16; bool bVar13; bool bVar14;

uVar6 = *unaff_SI; uVar4 = unaff_SI[1]; uVar9 = unaff_SI[2]; uVar11 = unaff_SI[3]; if ((uVar11 | uVar9 | uVar4 | uVar6) != 0) {
uVar2 = unaff_SI[4] + 0x3fe; if (uVar2 < 0) {
pbVar1 = 0xbdae; * pbVar1 = * pbVar1 | 1;
}
else {
uVar3 = uVar2 >> 1; uVar11 = uVar11 & 0x7fff | ((uVar2 & 1) != 0) << 0xf; bVar8 = 5;
loop {
bVar7 = bVar8; bVar13 = uVar6 < 0;
uVar6 = uVar6 << 1; bVar14 = uVar4 < 0; uVar4 = uVar4 << 1 | bVar13; bVar13 = uVar9 < 0; uVar9 = uVar9 << 1 | bVar14; bVar14 = uVar11 < 0; uVar11 = uVar11 << 1 | bVar13; uVar3 = uVar3 << 1 | bVar14; bVar8 = bVar7 - 1;
} while (bVar8 != 0); uVar6 = (0x8000 < (uVar6 & 0xff00 | (uVar6 | bVar7 & uVar4))); iVar5 = uVar4 + uVar6; uVar6 = CARRY2(uVar4, uVar6); iVar10 = uVar9 + uVar6; uVar6 = CARRY2(uVar9, uVar6); iVar12 = uVar11 + uVar6; uVar3 = uVar3 + CARRY2(uVar11, uVar6); if ((uVar3 & 0xfff0) != 0) goto LAB_3444_3631;
}
}
uVar3 = 0; iVar5 = 0; iVar10 = 0; iVar12 = 0;
// LAB_3444_3631: * unaff_DI = iVar5; unaff_DI[1] = iVar10; unaff_DI[2] = iVar12; unaff_DI[3] = uVar3; return;
}



void  FUN_3444_3642()

{
let uVar1: u16; let iVar2: i16;
let in_BX: i16; let piVar3: * mut u16; let unaff_SI: i16; let piVar4: * mut u16; let unaff_DS: u16;

uVar1 = CONCAT11( * (undefined * )(unaff_SI + 9), * (undefined * )(in_BX + 9)) & 0x8080; if (uVar1 == (uVar1 >> 8)) {
piVar4 = (unaff_SI + 10); piVar3 = (in_BX + 10); iVar2 = 5;
loop {
piVar4 = piVar4 + - 1; piVar3 = piVar3 + - 1; iVar2 = iVar2 + - 1;
} while (iVar2 != 0 & & * piVar4 == * piVar3);
}
return;
}



void  FUN_3444_366b()

{
let uVar1: u16; let uVar2: u16;
let uVar3: u16; let iVar4: i16;
let uVar5: u16; let uVar6: u16;
let uVar7: u16; let unaff_SI: * mut u16; let uVar8: u16; let unaff_DS: u16; bool bVar9;

uVar7 = * unaff_SI;
uVar5 = unaff_SI[1]; uVar8 = 0; iVar4 = 5; uVar3 = unaff_SI[3]; uVar1 = unaff_SI[2]; loop {
uVar6 = uVar1; uVar2 = uVar3; bVar9 = (uVar2 & 1) != 0; uVar3 = uVar5 & 1; uVar5 = uVar5 >> 1 | ((uVar6 & 1) != 0) << 0xf; uVar1 = uVar7 & 1;
uVar7 = uVar7 >> 1 | (uVar3 != 0) << 0xf; uVar8 = uVar8 >> 1 | (uVar1 != 0) << 0xf; iVar4 = iVar4 + - 1; uVar3 = uVar2 >> 1; uVar1 = uVar6 >> 1 | bVar9 << 0xf;
} while (iVar4 != 0); uVar3 = uVar2 & 0xfffe | bVar9; * unaff_SI = uVar8;
unaff_SI[1] = uVar7; unaff_SI[2] = uVar5; unaff_SI[3] = uVar6 >> 1 | (uVar3 != 0) << 0xf; unaff_SI[4] = uVar3 - 0x3fe; return;
}



undefined4  FUN_3444_36c7()

{
let pbVar1: * mut u8; let puVar2: * mut u16; let pcVar3: String; let puVar4: * mut u16; let lVar5: i32; char cVar6; let pcVar7: String; let uVar8: u16; let uVar9: u16; let uVar10: u16; let bVar11: u8; let bVar12: u8; let iVar13: i16; let uVar14: u16; let iVar15: i16; let iVar16: i16; let uVar17: u16; let    uVar18: u16; let uVar19: u16; let iVar20: i16; let uVar21: u16; let uVar22: u16; let iVar23: i16; let unaff_SI: * mut u16; let uVar24: u16; let uVar25: u16; let uVar26: u16; let iVar27: i16; let puVar28: *mut u16; let pcVar29: String; let unaff_DS: u16; undefined uVar30; bool bVar31; bool bVar32;

puVar28 = 0xbdb0; for (iVar13 = 4; iVar13 != 0; iVar13 = iVar13 + - 1) {
puVar4 = puVar28; puVar28 = puVar28 + 1;
puVar2 = unaff_SI; unaff_SI = unaff_SI + 1;
* puVar4 = * puVar2;
}
uVar8 = 0xbdb6; pbVar1 = 0xbdb7; * pbVar1 = * pbVar1 & 0x7f; uVar18 = 0x20;
if (((uVar8 & 0x7ff0) != 0) & & (uVar8 < 0)) {
uVar18 = 0x2d;
}
FUN_3444_366b(uVar18); bVar11 = * 0xbdb7;
if ((bVar11 & 0x80) == 0) {
* (undefined * )0xbdbc = 1; *(undefined * )0xbdbd = 0x30; return 1;
}
uVar8 = 0xbdb8 + 0x3ffe; lVar5 = uVar8 * 0x4d10; uVar9 = lVar5; uVar8 = (uVar8 >> 8) * 0x4d; uVar14 = uVar9 + uVar8; uVar10 = bVar11 * 0x9a; iVar13 = ((lVar5 >> 0x10) + CARRY2(uVar9, uVar8) + CARRY2(uVar14,uVar10) + - 0x1343) - (uVar14 + uVar10 < 0x12f4); uVar30 = iVar13 != 0; FUN_3444_392d(); FUN_3444_3642(); if ( ! (bool)uVar30) {
iVar13 = iVar13 + 1; FUN_3444_37c7();
}
uVar8 = 0xbdb0; uVar9 = 0xbdb2; uVar10 = 0xbdb4; uVar14 = 0xbdb6; bVar11 = 0;
for (iVar15 = - 0xbdb8; iVar15 != 0; iVar15 = iVar15 + - 1) {
uVar24 = uVar14 & 1; uVar14 = uVar14 >> 1; uVar21 = uVar10 & 1; uVar10 = uVar10 >> 1 | (uVar24 != 0) << 0xf; uVar24 = uVar9 & 1; uVar9 = uVar9 >> 1 | (uVar21 != 0) << 0xf; uVar21 = uVar8 & 1; uVar8 = uVar8 >> 1 | (uVar24 != 0) << 0xf; bVar11 = bVar11 >> 1 | (uVar21 != 0) << 7;
}
bVar12 = bVar11 + 0x56; uVar24 = uVar8 + 0x39a + (0xa9 < bVar11); uVar8 = (0xfc65 < uVar8 || CARRY2(uVar8 + 0x39a, (0xa9 < bVar11)));
uVar21 = uVar9 + uVar8; uVar8 = CARRY2(uVar9, uVar8); uVar9 = uVar10 + uVar8; uVar14 = uVar14 + CARRY2(uVar10, uVar8); iVar15 = 0x10; pcVar7 = (char * )0xbdbd; loop {
pcVar29 = pcVar7; iVar16 = iVar15; uVar25 = uVar24 << 1 | ((bVar12 << 8) < 0); uVar10 = uVar21 << 1 | (uVar24 < 0); uVar8 = uVar9 << 1 | (uVar21 < 0); bVar31 = uVar14 < 0; uVar19 = uVar14 << 1 | (uVar9 < 0); uVar26 = uVar25 << 1 | ((bVar12 * '\x02') < '\0'); uVar22 = uVar10 << 1 | (uVar25 < 0); uVar17 = uVar8 << 1 | (uVar10 < 0); uVar25 = uVar19 << 1 | (uVar8 < 0); cVar6 = bVar12 * '\x05'; uVar8 = CARRY1(bVar12 * '\x04', bVar12); uVar10 = uVar26 + uVar24;
iVar27 = uVar10 + uVar8; uVar8 = (CARRY2(uVar26, uVar24) || CARRY2(uVar10, uVar8)); uVar10 = uVar22 + uVar21; iVar23 = uVar10 + uVar8; uVar8 = (CARRY2(uVar22, uVar21) || CARRY2(uVar10, uVar8)); uVar10 = uVar17 + uVar9; iVar15 = uVar10 + uVar8; uVar8 = (CARRY2(uVar17, uVar9) || CARRY2(uVar10, uVar8)); bVar32 = CARRY2(uVar25, uVar14); uVar25 = uVar25 + uVar14; iVar20 = uVar25 + uVar8; bVar12 = bVar12 * '\n'; uVar24 = iVar27 * 2 | (cVar6 < '\0'); uVar21 = iVar23 * 2 | (iVar27 < 0); uVar9 = iVar15 * 2 | (iVar23 < 0);
uVar14 = iVar20 * 2 | (iVar15 < 0); * pcVar29 = (((bVar31 << 1 | uVar19 < 0) + (bVar32 || CARRY2(uVar25, uVar8))) * '\x02' | iVar20 < 0) + 0x30;
iVar15 = iVar16 + - 1; pcVar7 = pcVar29 + 1;
} while (iVar15 != 0); iVar16 = iVar16 + - 2; loop {
if (iVar16 == 0) break; iVar16 = iVar16 + - 1; pcVar3 = pcVar29; pcVar29 = pcVar29 + - 1;
} while ( * pcVar3 == '0'); 0xbdbc = iVar16 + '\x12'; return CONCAT22(iVar13, 1);
}



void  FUN_3444_37c7()

{
let piVar1: * mut u16; let puVar2: * mut u16; let puVar3: * mut u16; let uVar4: u16; let uVar5: u16; let uVar6: u16; let lVar7: i32; let uVar8: u16; let bVar9: u8; let iVar10: i16; let uVar11: u16; let iVar12: i16; let uVar13: u16; let uVar14: u16; let in_BX: i16; let puVar15: * mut u16; let uVar16: u16; let puVar17: * mut u16;
let unaff_SI: * mut u16; let puVar18: * mut u16; let puVar19: * mut u16; let uVar20: u16; let unaff_ES: u16; let unaff_DS: u16; bool bVar21; bool bVar22;

puVar19 = 0xbdce; for (iVar12 = 8; iVar12 != 0; iVar12 = iVar12 + - 1) {
puVar3 = puVar19; puVar19 = puVar19 + 1;
* puVar3 = 0;
}
piVar1 = unaff_SI + 4; * piVar1 = *piVar1 + (in_BX + 8); iVar12 = 7; puVar15 = 0xbdce; loop {
puVar17 = puVar15; bVar9 = (4 - iVar12); iVar10 = (((((4 - iVar12) >> 8) & bVar9) * '\x02' - bVar9) + '\x04'); puVar15 = (((in_BX - iVar10) - iVar12) + 8); puVar18 = (unaff_SI + (iVar10 - iVar12) + 6); loop {
lVar7 = * puVar18 * * puVar15; uVar13 = (lVar7 >> 0x10); uVar11 = lVar7; puVar2 = puVar17; uVar20 = * puVar2;
* puVar2 = * puVar2 + uVar11; puVar2 = puVar17 + 1; uVar11 = CARRY2(uVar20,uVar11); uVar20 = * puVar2; uVar16 = * puVar2 + uVar13; * puVar2 = uVar16 + uVar11; puVar2 = puVar17 + 2; * puVar2 = * puVar2 + (CARRY2(uVar20, uVar13) || CARRY2(uVar16, uVar11)); puVar18 = puVar18 + - 1; puVar15 = puVar15 + 1; iVar10 = iVar10 + - 1;
} while (iVar10 != 0); iVar12 = iVar12 + - 1; puVar15 = puVar17 + 1;
} while (iVar12 != 0); uVar11 = puVar17[ - 6] | puVar17[ - 5] | puVar17[ - 4]; uVar20 = puVar17[ - 3]; uVar14 = uVar20 & 0xff00 | (uVar20 | uVar11 | (uVar11 >> 8)); uVar20 = puVar17[ - 2]; uVar11 = puVar17[ - 1];
uVar16 = * puVar17; uVar13 = puVar17[1]; if ( - 1 < uVar13) {
piVar1 = unaff_SI + 4; * piVar1 = *piVar1 + - 1; bVar21 = uVar14 < 0; uVar14 = uVar14 << 1; bVar22 = uVar20 < 0; uVar20 = uVar20 << 1 | bVar21; bVar21 = uVar11 < 0; uVar11 = uVar11 << 1 | bVar22; bVar22 = uVar16 < 0; uVar16 = uVar16 << 1 | bVar21; uVar13 = uVar13 << 1 | bVar22;
}
uVar14 = (0x8000 < (uVar14 | uVar20 & 1)); uVar4 = CARRY2(uVar20,uVar14); uVar5 = CARRY2(uVar11, uVar4); uVar6 = CARRY2(uVar16, uVar5); uVar8 = CARRY2(uVar13, uVar6);
piVar1 = unaff_SI + 4; * piVar1 = *piVar1 + uVar8; * unaff_SI = uVar20 + uVar14; unaff_SI[1] = uVar11 + uVar4;
unaff_SI[2] = uVar16 + uVar5; unaff_SI[3] = uVar13 + uVar6 | (uVar8 != 0) << 0xf; return;
}



void  FUN_3444_392d()

{
let uVar1: u16; let iVar2: i16;
let unaff_DI: u16;

iVar2 = 0x3879; if (unaff_DI < 0) {
iVar2 = 0x38d3; unaff_DI = - unaff_DI;
}
iVar2 = iVar2 + - 10; while (iVar2 = iVar2 + 10, unaff_DI != 0) {
uVar1 = unaff_DI & 1; unaff_DI = unaff_DI >> 1; if (uVar1 != 0) {
FUN_3444_37c7(unaff_DI, iVar2);
}
}
return;
}



void  FUN_3444_402c()

{
let iVar1: i16; code * * ppcVar2;
let bVar3: u8; let in_BX: * mut u16; let puVar4: * mut u16; let    unaff_DS: u16;

iVar1 = 0xbd56; puVar4 = (iVar1 + 0xc); * puVar4 = *in_BX; (iVar1 + 0xe) = in_BX[1]; if (puVar4 != 0xbd42) {
* (undefined2 * * )0xbd56 = puVar4;
* (undefined2 * * )(iVar1 + 8) = puVar4; * (undefined * )(iVar1 + 10) = 3; return;
}
if (puVar4 != 0xbd42) {
0xbd56 = 0xbd42; * (undefined * )(iVar1 + 10) = 7; (iVar1 + 8) = 0xbd42; return;
}
0xbfc6 = 0x3031; bVar3 = 0x8a; if (0xbbd6 != 0) {
ppcVar2 = (code * * )0xbbd4; bVar3 = 0; ( * * ppcVar2)(0x39d9);
}
if (bVar3 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar3; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}



void  FUN_3444_405a()

{
let iVar1: i16; code * * ppcVar2;
let bVar3: u8; let in_BX: * mut u16; let puVar4: * mut u16; let    unaff_ES: u16; let unaff_DS: u16;

iVar1 = 0xbd56; puVar4 = (iVar1 + 0xc); * puVar4 = * in_BX; (iVar1 + 0xe) = in_BX[1]; (iVar1 + 0x10) = in_BX[2]; (iVar1 + 0x12) = in_BX[3];
if (puVar4 != 0xbd42) {
* (undefined2 * * )0xbd56 = puVar4;
* (undefined * )(iVar1 + 10) = 7; * (undefined2 * * )(iVar1 + 8) = puVar4; return;
}
0xbfc6 = 0x3031; bVar3 = 0x8a; if (0xbbd6 != 0) {
ppcVar2 = (code * * )0xbbd4; bVar3 = 0; ( * * ppcVar2)(0x39d9);
}
if (bVar3 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar3; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}



void  FUN_3444_407a()

{
let iVar1: i16; code * * ppcVar2;
let bVar3: u8; let in_BX: * mut u16; let puVar4: * mut u16; let    unaff_DS: u16;

iVar1 = 0xbd56; puVar4 = (iVar1 + 0xc); * puVar4 = *in_BX; (iVar1 + 0xe) = in_BX[1]; (iVar1 + 0x10) = in_BX[2]; (iVar1 + 0x12) = in_BX[3]; if (puVar4 != 0xbd42) {
* (undefined2 * * )0xbd56 = puVar4;
* (undefined * )(iVar1 + 10) = 7; * (undefined2 * * )(iVar1 + 8) = puVar4; return;
}
0xbfc6 = 0x3031; bVar3 = 0x8a; if (0xbbd6 != 0) {
ppcVar2 = (code * * )0xbbd4; bVar3 = 0; ( * * ppcVar2)(0x39d9);
}
if (bVar3 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar3; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}



void  FUN_3444_40e7()

{
let iVar1: i16; code * * ppcVar2;
let bVar3: u8; let in_BX: * mut u16; let iVar4: i16; let iVar5: i16; let unaff_ES: u16; let unaff_DS: u16;

iVar4 = in_BX[1]; if (iVar4 < 0) {
iVar4 = - ( * in_BX != 0) - iVar4;
}
iVar1 = 0xbd56; iVar5 = iVar1 + 0xc;
if (iVar5 != - 0x42be) {
0xbd56 = iVar5; (iVar1 + 8) = iVar5; if ((iVar4 >> 8) == '\0') {
* (undefined * )(iVar1 + 10) = 3; FUN_3444_2b22(); return;
}
* (undefined * )(iVar1 + 10) = 7; FUN_3444_2e98(); return;
}
0xbfc6 = 0x3031; bVar3 = 0x8a; if (0xbbd6 != 0) {
ppcVar2 = (code * * )0xbbd4; bVar3 = 0; ( * * ppcVar2)(0x39d9);
}
if (bVar3 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar3; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}



void  FUN_3444_40fa()

{
let iVar1: i16; code * * ppcVar2;
let bVar3: u8; let in_BX: * mut u16; let iVar4: i16; let iVar5: i16; let unaff_DS: u16;

iVar4 = in_BX[1]; if (iVar4 < 0) {
iVar4 = - ( * in_BX != 0) - iVar4;
}
iVar1 = 0xbd56; iVar5 = iVar1 + 0xc;
if (iVar5 != - 0x42be) {
0xbd56 = iVar5; (iVar1 + 8) = iVar5; if ((iVar4 >> 8) == '\0') {
* (undefined * )(iVar1 + 10) = 3; FUN_3444_2b22(); return;
}
* (undefined * )(iVar1 + 10) = 7; FUN_3444_2e98(); return;
}
0xbfc6 = 0x3031; bVar3 = 0x8a; if (0xbbd6 != 0) {
ppcVar2 = (code * * )0xbbd4; bVar3 = 0; ( * * ppcVar2)(0x39d9);
}
if (bVar3 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar3; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}



void  FUN_3444_4101()

{
let iVar1: i16; code * * ppcVar2;
let bVar3: u8; let iVar4: i16;
let in_BX: * mut u16; let iVar5: i16; let unaff_DS: u16;

iVar1 = *in_BX; iVar4 = iVar1 >> 0xf; if ((iVar1 >> 0x17) < '\0') {
iVar4 = - (iVar1 != 0) - iVar4;
}
iVar1 = 0xbd56; iVar5 = iVar1 + 0xc;
if (iVar5 != - 0x42be) {
0xbd56 = iVar5; (iVar1 + 8) = iVar5; if ((iVar4 >> 8) == '\0') {
* (undefined * )(iVar1 + 10) = 3; FUN_3444_2b22(); return;
}
* (undefined * )(iVar1 + 10) = 7; FUN_3444_2e98(); return;
}
0xbfc6 = 0x3031; bVar3 = 0x8a; if (0xbbd6 != 0) {
ppcVar2 = (code * * )0xbbd4; bVar3 = 0; ( * * ppcVar2)(0x39d9);
}
if (bVar3 == 0x8c) {
0xbfc6 = 0x3231;
}
0xbfc8 = bVar3; FUN_3444_029e(0x39d9); FUN_3444_2088(0x3444); FUN_3444_0587(0x3444, 0xfd); FUN_3444_0587(0x3444, 0xbfc8 + - 0x1c); FUN_3444_01db(0x3444, 0xbfc8); return;
}



fn fun_3444_41c9()

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let in_bx: *mut u16;
    let pu_var3: *mut u16;
    let unaff_ds: u16;

    i_var2 = 0xbd56;
    if ((i_var2 + -2) == '\x03') {
        pu_var3 = *(undefined2 * *)(i_var2 + -4);
    } else {
        *(undefined * *)
        0xbfca = &stack0xfffa;
        pu_var3 = *(undefined2 * *)(i_var2 + -4);
        FUN_3444_25fc();
    }
    *in_bx = *pu_var3;
    in_bx[1] = pu_var3[1];
    pi_var1 = 0xbd56;
    *pi_var1 = *pi_var1 + -0xc;
    return;
}


fn fun_3444_41cd()

{
    let pi_var1: *mut u16;
    let i_var2: i16;
    let in_bx: *mut u16;
    let pu_var3: *mut u16;
    let unaff_es: u16;
    let unaff_ds: u16;

    i_var2 = 0xbd56;
    if ((i_var2 + -2) == '\x03') {
        pu_var3 = *(undefined2 * *)(i_var2 + -4);
    } else {
        *(undefined * *)
        0xbfca = &stack0xfffa;
        pu_var3 = *(undefined2 * *)(i_var2 + -4);
        FUN_3444_25fc();
    }
    *in_bx = *pu_var3;
    in_bx[1] = pu_var3[1];
    pi_var1 = 0xbd56;
    *pi_var1 = *pi_var1 + -0xc;
    return;
}


fn fun_3444_41ff()

{
    let pi_var1: *mut u16;
    let in_bx: *mut u16;
    let pu_var2: *mut u16;
    let unaff_ds: u16;

    pu_var2 = *(undefined2 * *)
    0xbd56;
    pi_var1 = 0xbd56;
    *pi_var1 = *pi_var1 + 0xc;
    if ((pu_var2 + -1) == '\a') {
        pu_var2 = pu_var2[-2];
    } else {
        fun_3444_256d();
    }
    *in_bx = *pu_var2;
    in_bx[1] = pu_var2[1];
    in_bx[2] = pu_var2[2];
    in_bx[3] = pu_var2[3];
    pi_var1 = 0xbd56;
    *pi_var1 = *pi_var1 + -0xc;
    return;
}


unsafe fn fun_3444_4213()

{
    let pi_var1: *mut u16;
    let in_bx: *mut u16;
    let pu_var2: *mut u16;
    let unaff_ss: u16;
    let unaff_ds: u16;

    pu_var2 = *(undefined2 * *)
    0xbd56;
    if ((pu_var2 + -1) == '\a') {
        pu_var2 = pu_var2[-2];
    } else {
        fun_3444_256d();
    }
    *in_bx = *pu_var2;
    in_bx[1] = pu_var2[1];
    in_bx[2] = pu_var2[2];
    in_bx[3] = pu_var2[3];
    pi_var1 = 0xbd56;
    *pi_var1 = *pi_var1 + -0xc;
    return;
}


unsafe fn fun_3444_4217()

{
    let pi_var1: *mut u16;
    let in_bx: *mut u16;
    let pu_var2: *mut u16;
    let unaff_ds: u16;

    pu_var2 = *(undefined2 * *)
    0xbd56;
    if ((pu_var2 + -1) == '\a') {
        pu_var2 = pu_var2[-2];
    } else {
        fun_3444_256d();
    }
    *in_bx = *pu_var2;
    in_bx[1] = pu_var2[1];
    in_bx[2] = pu_var2[2];
    in_bx[3] = pu_var2[3];
    pi_var1 = 0xbd56;
    *pi_var1 = *pi_var1 + -0xc;
    return;
}


fn fun_3444_42c7(unaff_ds: u16) -> u32

{
    let i_var1: i16;
    let in_cx: u16;
    let in_bx: u16;
    // let unaff_ds: u16;
    let in_cf: u8;
    let in_pf: u8;
    let in_af: u8;
    let in_zf: u8;
    let un_sf: u8;

    fun_3444_4300();
    *0xbfc0 = in_SF << 7 | in_zf << 6 | in_af << 4 | in_pf << 2 | 2 | in_cf;
    0xbfca = &stack0xfffa;
    i_var1 = 0xbd56;
    0xbd56 = i_var1 + -0xc;
    if (i_var1 + -2) == '\x03' {
        fun_3391_099e();
    } else {
        (*0x342b3)(in_cx, in_bx);
    }
    return;
}


fn fun_3444_4300()

{
    let b_var1: u8;
    let i_var2: i16;
    let u_var3: u16;
    let unaff_ds: u16;

    i_var2 = 0xbd56;
    b_var1 = *(i_var2 + -2);
    u_var3 = b_var1;
    if ((*(u_var3 + i_var2) & 0x7f) == 0) {
        if (b_var1 == 3) {
            b_var1 = *(u_var3 + i_var2 + -1) & 0x80;
        } else {
            b_var1 = *(u_var3 + i_var2 + -1) & 0xf0;
        }
        if (b_var1 == 0) {
            return;
        }
    }
    if ((*(u_var3 + i_var2) & 0x80) != 0) {
        return;
    }
    return;
}


fn fun_3444_43b3()

{
    let i_var1: i16;
    let i_var2: i16;
    let unaff_ds: u16;

    i_var1 = 0xc;
    i_var2 = 0xbd56;
    if ((i_var2 + -2) == '\a') {
        i_var1 = 0xe;
        FUN_3444_257c();
        i_var2 = 0xbd56;
    }
    (i_var2 + -4) = i_var2;
    *(undefined * *)
    0xbfca = &stack0xfffa;
    (**(code * *)(i_var1 + -0x405c))();
    return;
}


fn fun_3444_43cb()

{
    let i_var1: i16;
    let i_var2: i16;
    let unaff_ds: u16;

    i_var1 = 0x14;
    i_var2 = 0xbd56;
    if ((i_var2 + -2) == '\a') {
        i_var1 = 0x16;
        FUN_3444_257c();
        i_var2 = 0xbd56;
    }
    (i_var2 + -4) = i_var2;
    *(undefined * *)
    0xbfca = &stack0xfffa;
    (**(code * *)(i_var1 + -0x405c))();
    return;
}


fn fun_3444_443b()

{
    let i_var1: i16;
    let i_var2: i16;
    let unaff_ds: u16;

    FUN_3444_2555();
    i_var2 = 10;
    i_var1 = 0xbd56;
    if ((i_var1 + -2) != '\a') {
        fun_3444_256d();
    }
    (i_var1 + -4) = i_var1;
    *(undefined * *)
    0xbfca = &stack0xfffa;
    (**(code * *)(i_var2 + -0x405c))();
    return;
}


fn fun_3444_4442()

{
    let i_var1: i16;
    let i_var2: i16;
    let unaff_ds: u16;

    i_var2 = 10;
    i_var1 = 0xbd56;
    if ((i_var1 + -2) != '\a') {
        fun_3444_256d();
    }
    (i_var1 + -4) = i_var1;
    *(undefined * *)
    0xbfca = &stack0xfffa;
    (**(code * *)(i_var2 + -0x405c))();
    return;
}


fn fun_3444_4472(param_1: u16)

{
    let i_var1: i16;
    let i_var2: i16;
    // let unaff_ds: u16;

    i_var2 = 0xe;
    i_var1 = 0xbd56;
    if (i_var1 + -2) != '\a' {
        fun_3444_256d();
    }
    (i_var1 + -4) = i_var1;
    0xbfca = &stack0xfffa;
    // (**(code * *)(i_var2 + -0x405c))();
    let mut func_1 = Code {

    }
    return;
}


fn fun_3444_44ba(unaff_ds: u16)

{
    let i_var1: i16;
    let i_var2: i16;
    // let unaff_ds: u16;

    i_var2 = 2;
    i_var1 = 0xbd56;
    if ((i_var1 + -2) != '\a') {
        fun_3444_256d();
    }
    (i_var1 + -4) = i_var1;
    *(undefined * *)
    0xbfca = &stack0xfffa;
    (**(code * *)(i_var2 + -0x405c))();
    return;
}



uint FUN_3444_44d9()

{
let piVar1: * mut u16; let puVar2: * mut u16; let iVar3: i16; let uVar4: u16; let uVar5: u16; let    unaff_DS: u16; let bVar6: u8; char cVar7; char in_AF; char cVar8;

uVar5 = 4; iVar3 = 0xbd56; if ((iVar3 + - 2) == '\a') {
uVar5 = 6; if ((iVar3 + -0xe) != '\a') {
0xbd56 = iVar3 + - 0xc; FUN_3444_256d(); goto LAB_3444_4518;
}
}
else {
if ((iVar3 + - 0xe) == '\a') {
uVar5 = 6; FUN_3444_256d();
}
}
0xbd56 = iVar3 + - 0xc;
// LAB_3444_4518:
(iVar3 + - 0x10) = iVar3 + - 0xc; if (0x1b < uVar5) {
piVar1 = 0xbd56; * piVar1 = * piVar1 + - 0xc; * (undefined * * )0xbfca = & stack0xfffa; uVar5 = ( * * (code * * )(uVar5 + 0xbfa0))(); return uVar5;
}
if (uVar5 < 0x18) {
* (undefined * * )0xbfca = & stack0xfffa; uVar5 = ( * * (code * *)(uVar5 + 0xbfa4))();
return uVar5;
}
puVar2 = 0xbd56; bVar6 = * puVar2 < 0xc; * puVar2 = * puVar2 - 0xc; cVar8 = * puVar2 == 0; cVar7 = '\0';
* (undefined * * )0xbfca = & stack0xfffa; ( * * (code * * )(uVar5 + 0xbfa4))(); uVar5 = (cVar8 << 6 | in_AF << 4 | cVar7 << 2 | bVar6) & 0x41; uVar4 = (uVar5 << 8) >> 1 & 0xff; return uVar4 | (uVar5 & 0xfe | uVar4) << 8;
}



uint FUN_3444_44e3()

{
let piVar1: * mut u16; let puVar2: * mut u16; let iVar3: i16; let uVar4: u16; let uVar5: u16; let    unaff_DS: u16; let bVar6: u8; char cVar7; char in_AF; char cVar8;

uVar5 = 0xc; iVar3 = 0xbd56; if ((iVar3 + - 2) == '\a') {
uVar5 = 0xe; if ((iVar3 + -0xe) != '\a') {
0xbd56 = iVar3 + - 0xc; FUN_3444_256d(); goto LAB_3444_4518;
}
}
else {
if ((iVar3 + - 0xe) == '\a') {
uVar5 = 0xe; FUN_3444_256d();
}
}
0xbd56 = iVar3 + - 0xc;
// LAB_3444_4518:
(iVar3 + - 0x10) = iVar3 + - 0xc; if (0x1b < uVar5) {
piVar1 = 0xbd56; * piVar1 = * piVar1 + - 0xc; * (undefined * * )0xbfca = & stack0xfffa; uVar5 = ( * * (code * * )(uVar5 + 0xbfa0))(); return uVar5;
}
if (uVar5 < 0x18) {
* (undefined * * )0xbfca = & stack0xfffa; uVar5 = ( * * (code * *)(uVar5 + 0xbfa4))();
return uVar5;
}
puVar2 = 0xbd56; bVar6 = * puVar2 < 0xc; * puVar2 = * puVar2 - 0xc; cVar8 = * puVar2 == 0; cVar7 = '\0';
* (undefined * * )0xbfca = & stack0xfffa; ( * * (code * * )(uVar5 + 0xbfa4))(); uVar5 = (cVar8 << 6 | in_AF << 4 | cVar7 << 2 | bVar6) & 0x41; uVar4 = (uVar5 << 8) >> 1 & 0xff; return uVar4 | (uVar5 & 0xfe | uVar4) << 8;
}



uint FUN_3444_44e8()

{
let piVar1: * mut u16; let puVar2: * mut u16; let iVar3: i16; let uVar4: u16; let uVar5: u16; let    unaff_DS: u16; let bVar6: u8; char cVar7; char in_AF; char cVar8;

uVar5 = 0x10; iVar3 = 0xbd56; if ((iVar3 + - 2) == '\a') {
uVar5 = 0x12; if ((iVar3 + -0xe) != '\a') {
0xbd56 = iVar3 + - 0xc; FUN_3444_256d(); goto LAB_3444_4518;
}
}
else {
if ((iVar3 + - 0xe) == '\a') {
uVar5 = 0x12; FUN_3444_256d();
}
}
0xbd56 = iVar3 + - 0xc;
// LAB_3444_4518:
(iVar3 + - 0x10) = iVar3 + - 0xc; if (0x1b < uVar5) {
piVar1 = 0xbd56; * piVar1 = * piVar1 + - 0xc; * (undefined * * )0xbfca = & stack0xfffa; uVar5 = ( * * (code * * )(uVar5 + 0xbfa0))(); return uVar5;
}
if (uVar5 < 0x18) {
* (undefined * * )0xbfca = & stack0xfffa; uVar5 = ( * * (code * *)(uVar5 + 0xbfa4))();
return uVar5;
}
puVar2 = 0xbd56; bVar6 = * puVar2 < 0xc; * puVar2 = * puVar2 - 0xc; cVar8 = * puVar2 == 0; cVar7 = '\0';
* (undefined * * )0xbfca = & stack0xfffa; ( * * (code * * )(uVar5 + 0xbfa4))(); uVar5 = (cVar8 << 6 | in_AF << 4 | cVar7 << 2 | bVar6) & 0x41; uVar4 = (uVar5 << 8) >> 1 & 0xff; return uVar4 | (uVar5 & 0xfe | uVar4) << 8;
}



uint FUN_3444_44f2()

{
let piVar1: * mut u16; let puVar2: * mut u16; let iVar3: i16; let uVar4: u16; let uVar5: u16; let    unaff_DS: u16; let bVar6: u8; char cVar7; char in_AF; char cVar8;

uVar5 = 0; iVar3 = 0xbd56; if ((iVar3 + - 2) == '\a') {
uVar5 = 2; if ((iVar3 + -0xe) != '\a') {
0xbd56 = iVar3 + - 0xc; FUN_3444_256d(); goto LAB_3444_4518;
}
}
else {
if ((iVar3 + - 0xe) == '\a') {
uVar5 = 2; FUN_3444_256d();
}
}
0xbd56 = iVar3 + - 0xc;
// LAB_3444_4518:
(iVar3 + - 0x10) = iVar3 + - 0xc; if (0x1b < uVar5) {
piVar1 = 0xbd56; * piVar1 = * piVar1 + - 0xc; * (undefined * * )0xbfca = & stack0xfffa; uVar5 = ( * * (code * * )(uVar5 + 0xbfa0))(); return uVar5;
}
if (uVar5 < 0x18) {
* (undefined * * )0xbfca = & stack0xfffa; uVar5 = ( * * (code * *)(uVar5 + 0xbfa4))();
return uVar5;
}
puVar2 = 0xbd56; bVar6 = * puVar2 < 0xc; * puVar2 = * puVar2 - 0xc; cVar8 = * puVar2 == 0; cVar7 = '\0';
* (undefined * * )0xbfca = & stack0xfffa; ( * * (code * * )(uVar5 + 0xbfa4))(); uVar5 = (cVar8 << 6 | in_AF << 4 | cVar7 << 2 | bVar6) & 0x41; uVar4 = (uVar5 << 8) >> 1 & 0xff; return uVar4 | (uVar5 & 0xfe | uVar4) << 8;
}



uint FUN_3444_44f7()

{
let piVar1: * mut u16; let puVar2: * mut u16; let iVar3: i16; let uVar4: u16; let uVar5: u16; let    unaff_DS: u16; let bVar6: u8; char cVar7; char in_AF; char cVar8;

uVar5 = 0x1c; iVar3 = 0xbd56; if ((iVar3 + - 2) == '\a') {
uVar5 = 0x1e; if ((iVar3 + -0xe) != '\a') {
0xbd56 = iVar3 + - 0xc; FUN_3444_256d(); goto LAB_3444_4518;
}
}
else {
if ((iVar3 + - 0xe) == '\a') {
uVar5 = 0x1e; FUN_3444_256d();
}
}
0xbd56 = iVar3 + - 0xc;
// LAB_3444_4518:
(iVar3 + - 0x10) = iVar3 + - 0xc; if (0x1b < uVar5) {
piVar1 = 0xbd56; * piVar1 = * piVar1 + - 0xc; * (undefined * * )0xbfca = & stack0xfffa; uVar5 = ( * * (code * * )(uVar5 + 0xbfa0))(); return uVar5;
}
if (uVar5 < 0x18) {
* (undefined * * )0xbfca = & stack0xfffa; uVar5 = ( * * (code * *)(uVar5 + 0xbfa4))();
return uVar5;
}
puVar2 = 0xbd56; bVar6 = * puVar2 < 0xc; * puVar2 = * puVar2 - 0xc; cVar8 = * puVar2 == 0; cVar7 = '\0';
* (undefined * * )0xbfca = & stack0xfffa; ( * * (code * * )(uVar5 + 0xbfa4))(); uVar5 = (cVar8 << 6 | in_AF << 4 | cVar7 << 2 | bVar6) & 0x41; uVar4 = (uVar5 << 8) >> 1 & 0xff; return uVar4 | (uVar5 & 0xfe | uVar4) << 8;
}



fn fun_3444_45be()

{
    let unaff_ds: u16;

    if ((0xbd56 + -2) != '\a') {
        fun_3444_256d();
    }
    return;
}


fn fun_3444_4642()

{
    let in_cx: u16;
    let unaff_si: u16;
    let unaff_di: *mut u16;
    let unaff_ds: u16;
    let in_stack_00000008: u16;

    
    0xbd8d = 1;
    FUN_3444_467c();
    
    0xbd8d = 0;
    if (unaff_si < in_stack_00000008) {
        *unaff_di = in_cx | 0x40;
    }
    return;
}


fn fun_3444_4669()

{
    FUN_3444_467c();
    return;
}



undefined4  FUN_3444_467c()

{
let piVar1: * mut u16; undefined * puVar2; undefined * puVar3; let uVar4: u32;
let uVar5: u16; let iVar6: i16;
let uVar7: u16; let in_BX: u16;
let unaff_BP: i16; let iVar8: i16;
undefined * puVar9; undefined * puVar10; let unaff_SS: u16; let unaff_DS: u16;

uVar7 = (unaff_BP + 10); if (uVar7 < 0x65) {
uVar4 = * ff(unaff_BP + 6); puVar9 = (undefined * )uVar4; puVar10 = (undefined * )0xbfde; for (; uVar7 != 0; uVar7 = uVar7 - 1) {
puVar3 = puVar10; puVar10 = puVar10 + 1;
puVar2 = puVar9; puVar9 = puVar9 + 1;
* puVar3 = * puVar2;
}
iVar6 = (unaff_BP + 10); (unaff_BP + 6) = 0xbfde; piVar1 = (unaff_BP + 6); * piVar1 = * piVar1 + iVar6; uVar5 = FUN_3444_334c(); iVar8 = ( - 0x4022 - (unaff_BP + 6)) + (unaff_BP + 10);
}
else {
iVar6 = CONCAT11((uVar7 >> 8), 0x40); iVar8 = 0; uVar5 = unaff_DS;
}
0xbfcc = iVar6; 0xbfce = iVar8; 0xbfd0 = uVar5; 0xbfd2 = in_BX; return CONCAT22(unaff_DS, 0xbfcc);
}



undefined2
FUN_3444_46ca(param_1_00: u16,param_1: u16,param_3: u16,param_4: u16,
param_5: u16)

{
undefined * puVar1; undefined * puVar2; let iVar3: i16; let in_BX: u16; undefined *puVar4; undefined * puVar5; let unaff_DS: u16; let uVar6: u32;

0xc04c = param_1;
0xc04e = param_3; 0xc050 = param_4; 0xc052 = param_5; uVar6 = FUN_3444_36c7( & stack0xfffe);
puVar5 = (undefined * )0xc054; puVar4 = (undefined * )0xc04d; for (iVar3 = 0xc04c; iVar3 != 0; iVar3 = iVar3 + - 1) {
puVar2 = puVar5; puVar5 = puVar5 + 1;
puVar1 = puVar4; puVar4 = puVar4 + 1;
* puVar2 = * puVar1;
}
* puVar5 = 0; 0xc042 = in_BX & 0xff; 0xc044 = (uVar6 >> 0x10);
0xc046 = uVar6; 0xc048 = 0xc054; 0xc04a = unaff_DS; return 0xc042;
}



fn fun_3444_4715() -> u16

{
    return 0;
}



undefined2
FUN_3444_473c(param_1_00: u16,param_1: u16,param_3: u16,param_4: u16,
param_5: u16)

{
let pbVar1: * mut u8; char cVar2;
let uVar3: u16; let iVar4: i16;
let uVar5: u16; code * in_DX; let    unaff_DI: u16; let unaff_DS: u16; undefined in_CF; let uVar6: u16;

0xc078 = param_1; 0xc07a = param_3; 0xc07c = param_4; 0xc07e = param_5; uVar6 = 0xbd56; 0xbd56 = 0xc088; uVar3 = ( * in_DX)( & stack0xfffe); 0xbd56 = unaff_DI; if ( ! (bool)in_CF) {
return 0xc088;
}
uVar5 = uVar3 & 0xff; 0xc074 = uVar6;
0xc076 = unaff_DS; * (undefined * )0xc09f = 0; if (uVar3 == 0x302) {
* (undefined * )0xc09f = 1;
}
if ((uVar3 >> 8) != '\x03') {
if (uVar3 != '\a') {
if (uVar3 == '\x03') {
0xc088 = 0xc068; 0xc08a = 0xc06a; 0xc08c = 0xc06c; 0xc08e = 0xc06e;
}
else {
0xc088 = 0; 0xc08a = 0; 0xc08c = 0; 0xc08e = 0;
}
goto LAB_3444_47c3;
}
uVar5 = 3;
}
0xc088 = 0xc068; 0xc08a = 0xc06a; 0xc08c = 0xc06c; 0xc08e = 0xc06e; pbVar1 = 0xc08f;
* pbVar1 = * pbVar1 | 0x80;
// LAB_3444_47c3:
0xc072 = uVar5; iVar4 = FUN_3444_4715(0x3000, 0xc072); if (iVar4 == 0) {
cVar2 = '!'; if ((0xc09f != '\0') || (2 < 0xc072)) {
cVar2 = '\"';
}
0xb610 = cVar2; iVar4 = (uVar5 * 2 + - 0x3f72); if (iVar4 != 0) {
FUN_3444_2088(0x3444); FUN_3444_2088(0x3444);
FUN_3444_0587(0x3444, iVar4);
}
}
return 0xc088;
}



fn fun_3444_484e()

{
    fun_3444_4213(0x39d9);
    FUN_3444_473c(0x3444);
    FUN_3444_407a(0x3444);
    return;
}


fn fun_3444_487e()

{
    FUN_3444_473c();
    return;
}



undefined2
FUN_3444_4890(param_1_00: u16,param_2: u16,param_3: u16,param_4: u16,
param_5: u16,param_1: u16,param_7: u16,param_8: u16,
param_9: u16)

{
let pbVar1: * mut u8; char cVar2;
let uVar3: u16; let iVar4: i16;
let uVar5: u16; let unaff_DI: u16;
let unaff_DS: u16; undefined in_CF; let uVar6: u16;

0xc080 = param_1; 0xc082 = param_7; 0xc084 = param_8; 0xc086 = param_9; 0xc078 = param_2; 0xc07a = param_3; 0xc07c = param_4; 0xc07e = param_5; uVar6 = 0xbd56; 0xbd56 = 0xc088; uVar3 = ( * 0x33ceb)(& stack0xfffe, 0xc0a7); 0xbd56 = unaff_DI;
if ( ! (bool)in_CF) {
return 0xc088;
}
uVar5 = uVar3 & 0xff; 0xc074 = uVar6;
0xc076 = unaff_DS; * (undefined * )0xc09f = 0; if (uVar3 == 0x302) {
* (undefined * )0xc09f = 1;
}
if ((uVar3 >> 8) != '\x03') {
if (uVar3 != '\a') {
if (uVar3 == '\x03') {
0xc088 = 0xc068; 0xc08a = 0xc06a; 0xc08c = 0xc06c; 0xc08e = 0xc06e;
}
else {
0xc088 = 0; 0xc08a = 0; 0xc08c = 0; 0xc08e = 0;
}
goto LAB_3444_47c3;
}
uVar5 = 3;
}
0xc088 = 0xc068; 0xc08a = 0xc06a; 0xc08c = 0xc06c; 0xc08e = 0xc06e; pbVar1 = 0xc08f;
* pbVar1 = * pbVar1 | 0x80;
// LAB_3444_47c3:
0xc072 = uVar5; iVar4 = FUN_3444_4715(0x3000, 0xc072); if (iVar4 == 0) {
cVar2 = '!'; if ((0xc09f != '\0') || (2 < 0xc072)) {
cVar2 = '\"';
}
0xb610 = cVar2; iVar4 = (uVar5 * 2 + - 0x3f72); if (iVar4 != 0) {
FUN_3444_2088(0x3444); FUN_3444_2088(0x3444);
FUN_3444_0587(0x3444, iVar4);
}
}
return 0xc088;
}



fn fun_3444_48ea()

{
    FUN_3444_473c();
    return;
}


// WARNING: Could not reconcile some variable overlaps

fn fun_3444_497e(param_1_00: u16, char *param_1)

{
    char
    cVar1;
    let pc_var2: String;
    let u_var3: u16;
    let local_6: String;

    while (true) {
        pc_var2 = param_1;
        u_var3 = (undefined2)(param_1 >> 0x10);
        if ((*param_1 == '\0') || (*param_1 == '.'))
        break;
        param_1 = (param_1 & 0xffff0000 | (param_1 + 1));
    }
    param_1 = (param_1 & 0xffff0000 | (param_1 + 1));
    if (*pc_var2 != '\0') {
        for (; ((param_1 != '\0' &&(param_1 != 'e')) &&(param_1 != 'E')); param_1 = (param_1 &0xffff0000 | ZEXT24(param_1 + 1))) {}
        local_6 = (pc_var2 & 0xffff0000 | param_1 & 0xffff);
        for (param_1 = (param_1 &0xffff0000 | ZEXT24(param_1 + -1)); param_1 == '0';
            param_1 = (param_1 &0xffff0000 | ZEXT24(param_1 + -1))) {}
        if (param_1 == '.') {
            param_1 = (param_1 & 0xffff0000 | ZEXT24(param_1 + -1));
        }
        loop {
            pc_var2 = local_6;
            local_6 = (local_6 & 0xffff0000 | (local_6 + 1));
            cVar1 = *pc_var2;
            param_1 = (param_1 & 0xffff0000 | (param_1 + 1));
            *param_1 = cVar1;
        }
        while (cVar1 != '\0');
    }
    return;
}


fn fun_3444_49fc() -> u16

{
    undefined
    in_CF;

    FUN_3444_407a(0x39d9);
    FUN_3444_405a(0x3444);
    FUN_3444_44f7(0x3444);
    if (!(bool)
    in_CF) {
    return 1;
}
    return 0;
}



void FUN_3444_4a24(param_1_00: u16,param_1: i16,undefined2 *param_2,param_3: u16,
param_4: u16)

{
let iVar1: i16; let uVar2: u16;
let iVar3: i16; let uVar4: u16;
let puVar5: * mut u16;

if (param_1 != 0) {
puVar5 = FUN_3444_1810(0x39d9, param_3, param_4); uVar2 = (undefined2)(puVar5 >> 0x10); iVar1 = puVar5; uVar4 = (undefined2)(param_2 >> 0x10); iVar3 = param_2; * param_2 = * puVar5; (iVar3 + 2) = (iVar1 + 2); (iVar3 + 4) = (iVar1 + 4); (iVar3 + 6) = (iVar1 + 6); return;
}
FUN_3444_1810(0x39d9, param_3, param_4); FUN_3444_405a(0x3444); FUN_3444_41cd(0x3444); return;
}


// WARNING: Could not reconcile some variable overlaps

undefined4
FUN_3444_4a76(param_1_00: u16,undefined2 *param_1,undefined *param_2,param_3: u16,
param_4: i16,param_5: i16)

{
undefined * puVar1; let iVar2: i16; let iVar3: i16; let uVar4: u16; let    unaff_DS: u16; undefined * puVar5; let local_a: u32; let local_6: * mut u16;

uVar4 = 0x39d9; if (0xc0d2 == '\0') {
uVar4 = (undefined2)(param_1 >> 0x10); iVar2 = param_1; local_6 = FUN_3444_46ca(0x39d9, * param_1, (iVar2 + 2),
(iVar2 + 4), (iVar2 + 6)); uVar4 = 0x3444; FUN_3444_18be(0x3444, param_2 + ( * local_6 == 0x2d) + (0 < param_4), param_3,
param_4 + 1, local_6);
}
else {
local_6 = * (int * * )0xceda;
FUN_3444_4ee0(0 < param_4, param_2 + ( *local_6 == 0x2d), param_3);
}
puVar1 = param_2; if ( * local_6 == 0x2d) {
* param_2 = 0x2d; puVar1 = param_2 + 1;
}
local_a = (char * )CONCAT22(param_3,puVar1); if (0 < param_4) {
* local_a = puVar1[1]; local_a = (char * )CONCAT22(param_3, puVar1 + 1); puVar1[1] = 0x2e;
}
puVar5 = (undefined * )
FUN_3444_172e(uVar4,(0xc0d2 == '\0') + local_a + param_4,
local_a._2_2_, 0xc0cc); iVar2 = puVar5; if (param_5 != 0) {
* puVar5 = 0x45;
}
local_a = (char * )(puVar5 & 0xffff0000 | (iVar2 + 1)); uVar4 = (undefined2)(local_6 >> 0x10);
if ( * * (char * * )(local_6 + 6) != '0') {
iVar3 = (local_6 + 2) + - 1; if (iVar3 < 0) {
iVar3 = - iVar3; * local_a = 0x2d;
}
local_a = (char * )(puVar5 & 0xffff0000 | (iVar2 + 2)); if (99 < iVar3) {
* local_a = * local_a + (iVar3 / 100); iVar3 = iVar3 % 100;
}
local_a = (char * )(puVar5 & 0xffff0000 | (iVar2 + 3)); if (9 < iVar3) {
* local_a = * local_a + (iVar3 / 10); iVar3 = iVar3 % 10;
}
local_a = (char * )(puVar5 & 0xffff0000 | (iVar2 + 4)); * local_a = * local_a + iVar3;
}
return CONCAT22(param_3, param_2);
}



void FUN_3444_4bfe(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16,param_5: u16,param_6: u16)

{
let unaff_DS: u16;

* (undefined * )0xc0d2 = 1; FUN_3444_4a76(0x39d9, param_1,param_2, param_3, param_4, param_5, param_6); * (undefined * )0xc0d2 = 0;
return;
}



undefined4
FUN_3444_4c28(param_1_00: u16,undefined2 *param_1,undefined *param_2,param_3: u16,
param_4: i16)

{
undefined * puVar1; let iVar2: i16; let iVar3: i16; let uVar4: u16; let    uVar5: u16; let unaff_DS: u16; undefined * local_10; let local_6: * mut u16;

uVar4 = 0x39d9; if (0xc0d2 == '\0') {
uVar4 = (undefined2)(param_1 >> 0x10); iVar3 = param_1; local_6 = FUN_3444_46ca(0x39d9, * param_1, (iVar3 + 2),
(iVar3 + 4), (iVar3 + 6)); uVar4 = 0x3444; FUN_3444_18be(0x3444, param_2 + ( * local_6 == 0x2d), param_3, (local_6 + 2) + param_4,
local_6);
}
else {
local_6 = * (int * * )0xceda;
iVar3 = * local_6; if (0xc0d4 == param_4) {
iVar2 = 0xc0d4; (param_2 + (iVar3 == 0x2d))[iVar2] = 0x30; (param_2 + (iVar3 == 0x2d))[iVar2 + 1] = 0;
}
}
puVar1 = param_2; if ( * local_6 == 0x2d) {
* param_2 = 0x2d; puVar1 = param_2 + 1;
}
local_10 = (undefined * )CONCAT22(param_3,puVar1); uVar5 = (undefined2)(local_6 >> 0x10); iVar3 = local_6; if ((iVar3 + 2) < 1) {
FUN_3444_4ee0(1, puVar1, param_3); *local_10 = 0x30; puVar1 = puVar1 + 1;
}
else {
puVar1 = puVar1 + (iVar3 + 2);
}
local_10 = (undefined * )CONCAT22(param_3,puVar1); if (0 < param_4) {
FUN_3444_4ee0(1, puVar1, param_3); *local_10 = 0x2e; if ((iVar3 + 2) < 0) {
if (0xc0d2 == '\0') {
iVar3 = (iVar3 + 2); iVar2 = - iVar3; if ( - param_4 != iVar3 && param_4 < = iVar2) {
iVar2 = param_4;
}
}
else {
iVar2 = - (iVar3 + 2);
}
FUN_3444_4ee0(iVar2, puVar1 + 1, param_3); FUN_3444_1f84(uVar4, puVar1 + 1, param_3, 0x30, iVar2);
}
}
return CONCAT22(param_3, param_2);
}



void FUN_3444_4d80(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16,param_5: u16)

{
let unaff_DS: u16;

* (undefined * )0xc0d2 = 1; FUN_3444_4c28(0x39d9, param_1,param_2, param_3, param_4, param_5); *(undefined * )0xc0d2 = 0; return;
}


// WARNING: Could not reconcile some variable overlaps

void FUN_3444_4da8(param_1_00: u16,undefined2 *param_1,param_2: i16,param_3: u16,
param_4: i16,param_5: u16)

{
let piVar1: * mut u16; ulong uVar2;
let pcVar3: String; let iVar4: i16;
let iVar5: i16; let uVar6: u16;
let uVar7: u16; let unaff_DS: u16;
let uVar8: u32; let local_6: String;

uVar6 = (undefined2)(param_1 >> 0x10); iVar5 = param_1; uVar8 = FUN_3444_46ca(0x39d9, * param_1, (iVar5 + 2), (iVar5 + 4),
(iVar5 + 6)); 0xceda = uVar8; 0xcedc = (uVar8 >> 0x10); piVar1 = *(int * * )0xceda; uVar7 = (undefined2)(piVar1 >> 0x10); 0xc0d4 = (piVar1 + 2) + - 1;
iVar4 = ( * piVar1 == 0x2d) + param_2; local_6 = (char * )CONCAT22(param_3, iVar4); FUN_3444_18be(0x3444, iVar4,param_3, param_4, piVar1, uVar7); uVar8 = * ff0xceda; iVar4 = (uVar8 + 2) + - 1; *(bool * )0xc0d6 = 0xc0d4 < iVar4;
0xc0d4 = iVar4; if (( - 5 < iVar4) & & (iVar4 < param_4)) {
if (0xc0d6 != '\0') {
loop {
pcVar3 = local_6; uVar2 = local_6 >> 0x10; local_6 = (char * )(local_6 & 0xffff0000 | (local_6 + 1));
} while ( * pcVar3 != '\0'); * (undefined * )(local_6 + - 1) = 0;
}
FUN_3444_4d80(0x3444, iVar5, uVar6, param_2,param_3, param_4); return;
}
FUN_3444_4bfe(0x3444, iVar5, uVar6, param_2,param_3, param_4, param_5); return;
}



void FUN_3444_4e7e(param_1_00: u16,param_1: u16,param_2: u16,param_3: u16,
param_4: u16,param_5: i16,param_6: u16,param_7: u16)

{
if ((param_5 == 0x65) || (param_5 == 0x45)) {
FUN_3444_4a76(0x39d9, param_1, param_2, param_3,param_4, param_6, param_7);
}
else {
if (param_5 != 0x66) {
FUN_3444_4da8(0x39d9, param_1, param_2, param_3,param_4, param_6, param_7); return;
}
FUN_3444_4c28(0x39d9, param_1, param_2, param_3,param_4, param_6);
}
return;
}



fn fun_3444_4ee0(param_1: i16, param_2: i16, param_3: u16)

{
    let i_var1: i16;

    if (param_1 != 0) {
        i_var1 = FUN_3444_178e(0x39d9, param_2, param_3);
        FUN_3444_1e00(0x3444, param_2 + param_1, param_3, param_2, param_3, i_var1 + 1);
    }
    return;
}



bool FUN_393b_003d(param_1_00: u16,uparam_1: i16)

{
if (param_1 < 2) {
FUN_394e_03fd();
}
return param_1 > = 2;
}



fn fun_393b_006c(param_1_00: u16, uparam_1: i16) -> u16

{
    let u_var1: u16;
    bool
    bVar2;

    bVar2 = param_1 < 2;
    if ((bVar2) && (u_var1 = FUN_394e_031e(), !bVar2)) {
        bVar2 = false;
        if (param_1 != 0) {
            FUN_394e_03a0(u_var1);
            if (bVar2) {
                return 1;
            }
            FUN_394e_0327();
        }
        return 0;
    }
    return 1;
}



bool FUN_393b_009d(param_1_00: u16,uparam_1: i16)

{
if (param_1 < 2) {
FUN_394e_03fd();
}
return param_1 > = 2;
}



fn fun_393b_00cc(param_1_00: u16, uparam_1: i16, uparam_2: i16) -> u16

{
    bool
    bVar1;

    if ((param_1 <= DAT_4b2a_0010) && (param_2 <= DAT_4b2a_0010)) {
        bVar1 = false;
        FUN_394e_03c5();
        if (!bVar1) {
            return 0;
        }
    }
    return 1;
}


fn fun_393b_0104(param_1_00: u16, uparam_1: i16) -> u16

{
    bool
    bVar1;

    if (param_1 < 0x10) {
        DAT_4b2a_0010 = param_1;
        bVar1 = false;
        FUN_394e_03c5();
        if (!bVar1) {
            return 0;
        }
    }
    return 1;
}


fn fun_394e_0004(param_1_00: u16, uparam_1: i16, uparam_2: i16) -> u16

{
    let b_var1: u8;
    let u_var2: u16;
    bool
    bVar3;

    if (param_1 < 3) {
        u_var2 = 0xf;
        if (DAT_4b2a_0013 != '\0') {
            u_var2 = 0x1f;
        }
        if (param_2 <= u_var2) {
            b_var1 = 0x10;
            if (DAT_4b2a_0013 != '\0') {
                b_var1 = 0x20;
            }
            *(param_1 + 0x14) = *(param_1 + 0x14) & b_var1 | param_2;
            bVar3 = 0xf7 < param_1;
            FUN_394e_03c5();
            if (!bVar3) {
                return 0;
            }
        }
    }
    return 1;
}


fn fun_394e_0058(param_1_00: u16, uparam_1: i16, uparam_2: i16, uparam_3: i16) -> u16

{
    let b_var1: u8;
    let u_var2: u16;
    let b_var3: u8;
    sbyte
    sVar4;
    let extraout_dx: u16;
    bool
    bVar5;

    if (((param_1 < 3) && (param_2 < 4)) && (param_3 < 2)) {
        u_var2 = CONCAT11(param_2 | (param_3 << 7), (param_1 + 0x14));
        if (DAT_4b2a_0013 == '\0') {
            u_var2 = u_var2 & 0x80ef;
            sVar4 = 5;
        } else {
            u_var2 = u_var2 & 0x80df;
            sVar4 = 6;
        }
        b_var3 = (u_var2 >> 8);
        *(param_1 + 0x14) = u_var2 | b_var3 << sVar4 | b_var3 >> 8 - sVar4;
        b_var3 = param_1;
        bVar5 = 0xf7 < b_var3;
        FUN_394e_03c5();
        if (!bVar5) {
            b_var1 = *(extraout_dx & 0xff03);
            bVar5 = false;
            DAT_4b2a_0012 = (DAT_4b2a_0012 | '\t' << (b_var3 & 0x1f)) &
            ~(b_var1 << (b_var3 & 7) | b_var1 >> 8 - (b_var3 & 7)) | 0xc0;
            FUN_394e_03c5();
            if (!bVar5) {
                return 0;
            }
        }
    }
    return 1;
}


fn fun_394e_00e1(param_1_00: u16, uparam_1: i16, uparam_2: i16) -> u16

{
    let u_var1: u16;

    if ((param_1 < 3) && (param_2 < 9)) {
        FUN_394e_03ad();
        u_var1 = 0;
    } else {
        u_var1 = 1;
    }
    return u_var1;
}


fn fun_394e_0108(param_1_00: u16, uparam_1: i16, param_2: u16) -> u16

{
    bool
    bVar1;

    bVar1 = param_1 < 2;
    if (param_1 < 3) {
        (param_1 + 0x1a) = param_2;
        (param_1 + 0x1d) = (param_2 >> 8);
        FUN_394e_02b3();
        if (!bVar1) {
            return 0;
        }
    }
    return 1;
}


fn fun_394e_0136(param_1_00: u16, uparam_1: i16, uparam_2: i16) -> u16

{
    bool
    bVar1;

    if ((param_1 < 3) && (bVar1 = param_2 < 0xf, param_2 < 0x10)) {
        (param_1 + 0x17) = param_2;
        FUN_394e_02f0();
        if (!bVar1) {
            return 0;
        }
    }
    return 1;
}



undefined FUN_394e_0167()

{
undefined in_CF;

FUN_394e_03c5(); return in_CF;
}



fn fun_394e_018a(param_1_00: u16, uparam_1: i16) -> u16

{
    let u_var1: u16;
    bool
    bVar2;

    bVar2 = param_1 < 0xff;
    if ((((param_1 < 0x100) && (FUN_394e_03a0(CONCAT11(9, param_1)), !bVar2)) && (u_var1 = FUN_394e_03c5(), !bVar2)) && (FUN_394e_03a0(u_var1), !bVar2)) {
        return 0;
    }
    return 1;
}


fn fun_394e_01c2(param_1_00: u16, uparam_1: i16) -> u16

{
    let u_var1: u16;
    bool
    bVar2;

    bVar2 = param_1 < 0xff;
    if ((((param_1 < 0x100) && (FUN_394e_03a0(CONCAT11(10, param_1)), !bVar2)) && (u_var1 = FUN_394e_03c5(), !bVar2)) && (FUN_394e_03a0(u_var1), !bVar2)) {
        return 0;
    }
    return 1;
}


fn fun_394e_01fa(param_1_00: u16, uparam_1: i16) -> u16

{
    bool
    bVar1;

    bVar1 = param_1 < 0xff;
    if ((param_1 < 0x100) && (FUN_394e_03c5(), !bVar1)) {
        return 0;
    }
    return 1;
}


fn fun_394e_0220(param_1_00: u16, int *param_1, param_2: u16) -> u16

{
    let i_var1: i16;

    *param_1 = 0;
    i_var1 = FUN_394e_0406();
    if (i_var1 != 0) {
        *param_1 = i_var1;
        FUN_394e_0338();
    }
    return 0;
}


fn fun_394e_0251(param_1_00: u16, uparam_1: i16) -> u16

{
    let u_var1: u16;
    bool
    bVar2;

    if (param_1 < 2) {
        u_var1 = FUN_394e_0338();
        bVar2 = false;
        if (param_1 != 0) {
            FUN_394e_03a0(u_var1);
            if (bVar2) {
                return 1;
            }
            FUN_394e_0327();
        }
        u_var1 = 0;
    } else {
        u_var1 = 1;
    }
    return u_var1;
}



undefined FUN_394e_0285()

{
bool bVar1;

bVar1 = false; FUN_394e_03c5(); if ( ! bVar1) {
FUN_394e_03c5();
}
return bVar1;
}



undefined2  FUN_394e_02b3()

{
let uVar1: u16; let in_CX: i16;
undefined in_DL; bool bVar2;

bVar2 = false;
if (in_CX * 2 == 0) {
uVar1 = FUN_394e_03c5(); if ( ! bVar2) {
uVar1 = FUN_394e_03c5();
}
}
else {
bVar2 = false; uVar1 = CONCAT11((in_CX * 2) + - 2, in_DL);
FUN_394e_03a0(); if ( ! bVar2) {
uVar1 = FUN_394e_03c5(); if ( ! bVar2) {
uVar1 = FUN_394e_03c5();
}
}
}
FUN_394e_03a0(); return uVar1;
}



undefined2  FUN_394e_02f0()

{
let in_AL: u8; let uVar1: u16;
let in_CX: i16; let unaff_DS: u16;
bool bVar2;

if (in_CX == 0) {
uVar1 = FUN_394e_03c5();
}
else {
bVar2 = 0xfb < (in_CX - 1);
uVar1 = CONCAT11(in_CX + '\x03', in_AL | * 0x13); FUN_394e_03a0(); if (! bVar2) {
uVar1 = FUN_394e_03c5();
}
}
FUN_394e_03a0(); return uVar1;
}



void  FUN_394e_031e()

{
let unaff_DS: u16;

* (undefined * )& DAT_0000_0020 = 0xf0; FUN_394e_0338(); return;
}



void  FUN_394e_0327()

{
FUN_394e_03ad(); FUN_394e_03ad(); FUN_394e_03ad(); return;
}



uint  FUN_394e_0338()

{
let in_AX: u16; let uVar1: u16;
let uVar2: u16; let iVar3: i16;
undefined * puVar4; let unaff_DS: u16; undefined in_CF;

puVar4 = (undefined * )0x14;
iVar3 = 6; uVar2 = in_AX & 0xff00;
loop {
* puVar4 = 0; puVar4 = puVar4 + 1; iVar3 = iVar3 + - 1;
} while (iVar3 != 0); FUN_394e_03a0(); if ( ! (bool)in_CF) {
FUN_394e_03c5(); FUN_394e_03c5(); uVar1 = FUN_394e_0396(); FUN_394e_03a0(uVar1); FUN_394e_0396(); FUN_394e_03c5(); FUN_394e_03a0(); * (undefined * )0x12 = 0xf8;
FUN_394e_03c5(); uVar2 = FUN_394e_03c5();
}
return uVar2;
}



void  FUN_394e_0396()

{
let in_CX: i16; undefined in_CF;

loop {
FUN_394e_03c5(); if ((bool)in_CF) {
return;
}
in_CX = in_CX + - 1;
} while (in_CX != 0); return;
}



void  FUN_394e_03a0()

{
undefined in_AL; let unaff_DS: u16;

* (undefined * )0x13 = in_AL; FUN_394e_03c5(); return;
}



undefined2  FUN_394e_03ad()

{
let uVar1: u16; char in_CL; undefined in_DL;

FUN_394e_03a0(CONCAT11(in_CL + '\x06', in_DL)); uVar1 = FUN_394e_03c5(); FUN_394e_03a0(); return uVar1;
}



undefined4  FUN_394e_03c5()

{
let uVar1: u16; char cVar2; let in_AX: u16; let iVar3: i16; let in_DX: u16; let unaff_DS: u16;

iVar3 = 10; loop {
out(0x4, (in_AX >> 8)); uVar1 = 0x6; out(uVar1,in_AX); cVar2 = in (uVar1);
if (cVar2 == in_AX) break; iVar3 = iVar3 + - 1;
} while (iVar3 != 0); return CONCAT22(in_DX, in_AX);
}



void  FUN_394e_03fd()

{
undefined in_AL; let unaff_DS: u16;

* (undefined * ) & DAT_0000_0020 = in_AL; FUN_394e_03c5(); return;
}



undefined2  FUN_394e_0406()

{
let iVar1: i16; let uVar2: u16;
let iVar3: i16; let unaff_DS: u16;
bool bVar4;

iVar3 = 0; while ( true ) {
iVar1 = (iVar3 + 0x21); uVar2 = 0; loop {
(uVar2 + 4) = iVar1; iVar1 = iVar1 + 1; uVar2 = uVar2 + 2;
bVar4 = uVar2 < 0xc;
} while (uVar2 != 0xc); FUN_394e_031e(); if ( ! bVar4) break; iVar3 = iVar3 + 2; if (iVar3 == 8) {
return 0;
}
}
return (iVar3 + 0x21);
}



fn fun_394e_0436()

{
    return;
}


fn fun_3991_0008() -> u16

{
    char
    cVar1;
    let pc_var2: String;
    let i_var3: i16;
    let in_ax: u16;
    let i_var4: i16;
    let unaff_si: String;
    let pc_var5: String;
    let unaff_di: String;
    let pc_var6: String;
    let unaff_es: u16;
    let unaff_ds: u16;

    i_var3 = 0x2c;
    if (i_var3 != 0) {
        pc_var6 = 
        0x0;
// LAB_3991_001e:
        pcVar5 = unaff_si;
        if (*pc_var6 != '\0') {
            loop {
                cVar1 = *pc_var5;
                if (cVar1 == '\0') {
                    if (*pc_var6 == '=') {
                        loop {
                            pc_var6 = pc_var6 + 1;
                            cVar1 = *pc_var6;
                            pc_var2 = unaff_di;
                            unaff_di = unaff_di + 1;
                            *pc_var2 = cVar1;
                        }
                        while (cVar1 != '\0');
                        return in_ax;
                    }
                    break;
                }
                pc_var2 = pc_var6;
                pc_var6 = pc_var6 + 1;
                pc_var5 = pc_var5 + 1;
            }
            while (cVar1 == *pc_var2);
            i_var4 = -1;
            loop {
                if (i_var4 == 0)
                break;
                i_var4 = i_var4 + -1;
                pc_var2 = pc_var6;
                pc_var6 = pc_var6 + 1;
            }
            while (*pc_var2 != '\0');
            goto
            LAB_3991_001e;
        }
    }
    return in_ax;
}



uint  FUN_3991_0066()

{
let pbVar1: * mut u8; undefined * puVar2; let bVar3: u8; undefined * puVar4;
code * pcVar5; let uVar6: u16; let in_AX: u16; let uVar7: u16; let bVar8: u8; let in_CX: u16; let bVar9: u8; let iVar10: i16; let unaff_SI: * mut u8; let pbVar11: *mut u8; undefined * puVar12; let pbVar13: * mut u8; undefined * puVar14; let unaff_DS: u16; undefined uVar15; bool bVar16; let uVar17: u32; let uVar18: u16;

while( true ) {
pbVar1 = unaff_SI; unaff_SI = unaff_SI + 1;
bVar9 = * pbVar1; in_AX = in_AX & 0xff00; iVar10 = 0x9d; uVar18 = 0x9d; if (bVar9 == 0) {
return in_CX;
}
if (bVar9 == 0x43) {
FUN_3991_016c(); uVar7 = FUN_3991_020f();
return uVar7;
}
if (bVar9 == 0x45) break; if (bVar9 == 0x50) {
pcVar5 = swi(0x21); uVar7 = (* pcVar5)(); bVar16 = uVar7 < 3; if ( ! bVar16) {
uVar17 = FUN_3991_01aa(0x39d9); puVar12 = (undefined * )(uVar17 >> 0x10);
uVar7 = uVar17; if (( ! bVar16) & & (iVar10 != - 1)) {
puVar14 = (undefined * )0x0; for (iVar10 = iVar10 - puVar12; iVar10 != 0; iVar10 = iVar10 + - 1) {
puVar4 = puVar14; puVar14 = puVar14 + 1;
puVar2 = puVar12; puVar12 = puVar12 + 1;
* puVar4 = * puVar2;
}
uVar7 = FUN_3991_020f(); return uVar7;
}
}
return uVar7;
}
uVar15 = bVar9 < 0x41; if (bVar9 == 0x41) {
loop {
uVar7 = FUN_3991_023b(uVar18); if ((bool)uVar15) {
return uVar7;
}
uVar7 = FUN_3991_020f();
} while ((bool)uVar15); return uVar7;
}
}
loop {
pbVar13 = unaff_SI; bVar9 = * pbVar13; in_AX = in_AX & 0xff00 | bVar9; bVar16 = false; if (bVar9 == 0) break; bVar16 = bVar9 < 0x2c; unaff_SI = pbVar13 + 1;
} while (bVar9 != 0x2c); * pbVar13 = 0; FUN_3991_0008(0x39d9); * pbVar13 = bVar9; if (bVar16) {
return in_AX;
}
pbVar11 = 0x50; uVar7 = in_CX; loop {
bVar9 = pbVar13; pbVar13 = 0x0; while ( true ) {
pbVar1 = pbVar11; pbVar11 = pbVar11 + 1;
bVar3 = * pbVar1; uVar6 = uVar7 & 0xff00; uVar7 = uVar6 | bVar3; bVar8 = (uVar6 >> 8); if ((bVar3 == 0) || (bVar3 == 0x3b)) break; pbVar1 = pbVar13; pbVar13 = pbVar13 + 1; * pbVar1 = bVar3; uVar7 = bVar3 << 8;
}
if (pbVar13 != 0x0) {
bVar16 = bVar8 < 0x5c; if ((bVar8 != 0x5c) & & (bVar16 = bVar8 < 0x3a, bVar8 != 0x3a)) {
* pbVar13 = 0x5c;
}
bVar9 = bVar3; uVar7 = FUN_3991_020f();
if ( ! bVar16) {
return uVar7;
}
}
pbVar13 = bVar9; if (bVar9 == 0) {
return uVar7;
}
} while ( true );
}



undefined4  FUN_3991_016c(param_1: u16)

{
let pcVar1: String; code * pcVar2; char cVar3; let in_AX: u16; let iVar4: i16; let unaff_DI: String; let pcVar5: String; let pcVar6: String; let unaff_ES: u16;

cVar3 = in_AX; if (cVar3 == '\0') {
pcVar2 = swi(0x21); cVar3 = (* pcVar2)(); cVar3 = cVar3 + '\x01';
}
* unaff_DI = cVar3 + '@'; pcVar5 = unaff_DI + 3; (unaff_DI + 1) = 0x5c3a; pcVar2 = swi(0x21); ( *pcVar2)(); iVar4 = 0x40; loop {
if (iVar4 == 0) break; iVar4 = iVar4 + - 1; pcVar1 = pcVar5; pcVar5 = pcVar5 + 1;
} while ( * pcVar1 != '\0'); pcVar6 = pcVar5 + - 1; if (pcVar5[ -2] != '\\') {
pcVar5[ - 1] = '\\'; pcVar6 = pcVar5;
}
* pcVar6 = '\0'; return CONCAT22(in_AX,param_1);
}



undefined4 FUN_3991_01aa(param_1: u16)

{
let pcVar1: String; char cVar2; let iVar3: i16; code * pcVar4; let bVar5: u8; let in_AX: u16; let iVar6: i16; let in_BX: String; let pcVar7: String; let local_4: String;

pcVar4 = swi(0x21); bVar5 = ( * pcVar4)(); local_4 = in_BX; if ((2 < bVar5) & & (iVar3 = 0x2c, iVar3 != 0)) {
iVar6 = - 0x8000; pcVar7 = 0x0;
// LAB_3991_01d9: if ( * pcVar7 != '\0') {
loop {
if (iVar6 == 0) break; iVar6 = iVar6 + - 1; pcVar1 = pcVar7; pcVar7 = pcVar7 + 1;
} while ( * pcVar1 != '\0'); goto LAB_3991_01d9;
}
if ((pcVar7 + 1) == 1) {
pcVar7 = pcVar7 + 3; local_4 = (char * )0xffff; while ( true ) {
cVar2 = * pcVar7; pcVar7 = pcVar7 + 1; if (cVar2 == '\0') break; if (cVar2 == '\\') {
local_4 = pcVar7;
}
}
}
}
return CONCAT22(local_4, param_1);
}



void  FUN_3991_020f()

{
code * pcVar1; let extraout_DX: u16;

FUN_3991_0223(); pcVar1 = swi(0x21);
( * pcVar1)(extraout_DX); return;
}



undefined2  FUN_3991_0223()

{
let pcVar1: String; char cVar2; let uVar3: u16; let uVar4: u16; let in_AX: u16; let unaff_BP: * mut u16;
let pcVar5: String; let unaff_DI: String;
let unaff_SS: u16;

uVar3 = unaff_BP[6]; uVar4 = * unaff_BP; pcVar5 = (char * )unaff_BP[4]; loop {
pcVar1 = pcVar5; pcVar5 = pcVar5 + 1;
cVar2 = * pcVar1; pcVar1 = unaff_DI; unaff_DI = unaff_DI + 1; * pcVar1 = cVar2;
} while (cVar2 != '\0'); return in_AX;
}



undefined2  FUN_3991_023b()

{
undefined * puVar1; undefined * puVar2; let uVar3: u16; let uVar4: u16; code *pcVar5; char cVar6; let uVar7: u16;
let extraout_DX: u16; let unaff_BP: i16;
undefined * puVar8; undefined * puVar9; let unaff_SS: u16;

pcVar5 = swi(0x21);
( * pcVar5)(); pcVar5 = swi(0x21); ( * pcVar5)(); pcVar5 = swi(0x21); ( *pcVar5)(); pcVar5 = swi(0x21); ( * pcVar5)(); pcVar5 = swi(0x21); ( * pcVar5)(); FUN_3991_0223(); * (undefined * )0x0 = 0x24; pcVar5 = swi(0x21); ( * pcVar5)();
pcVar5 = swi(0x21); ( * pcVar5)(); uVar3 = (unaff_BP + 0xc); * (undefined * )0x50 = 0xfe; pcVar5 = swi(0x21); ( *pcVar5)(); uVar7 = * 0x51;
pcVar5 = swi(0x21); ( * pcVar5)(); uVar7 = uVar7 & 0xff;
if (uVar7 == 0) goto LAB_3991_02f4; uVar3 = (unaff_BP + 0xc); puVar8 = (undefined * )0x52; uVar4 = (unaff_BP + 0xc); puVar9 = (undefined * )0x0; if (0x53 == ':') {
if (0x54 != '\\') {
puVar8 = (undefined * )0x54; uVar7 = uVar7 - 2;
// LAB_3991_02df:
FUN_3991_016c();
}
}
else {
if (0x52 != '\\') goto LAB_3991_02df; pcVar5 = swi(0x21); cVar6 = ( *pcVar5)(); puVar9 = ff0x2; 0x0 = CONCAT11(0x3a, cVar6 + 'A');
}
for (; uVar7 != 0; uVar7 = uVar7 - 1) {
puVar2 = puVar9; puVar9 = puVar9 + 1;
puVar1 = puVar8; puVar8 = puVar8 + 1;
* puVar2 = * puVar1;
}
cVar6 = puVar9[ - 1]; if ((cVar6 != '\\') & & (cVar6 != ':')) {
* puVar9 = 0x5c;
}
// LAB_3991_02f4:
pcVar5 = swi(0x21); ( * pcVar5)(); pcVar5 = swi(0x21); ( * pcVar5)(); pcVar5 = swi(0x21); ( * pcVar5)(); pcVar5 = swi(0x21); (* pcVar5)(); return extraout_DX;
}



fn fun_3991_040f() -> u16

{
    let in_ax: u16;
    let in_dx: u16;
    let pu_var1: *mut u16;
    let unaff_ds: u16;

    for (puVar1 = 0x42c; (* puVar1 | puVar1[1]) != 0; puVar1 = puVar1 + 2) {} * pu_var1 = in_dx;
    pu_var1[1] = unaff_ds;
    return in_ax;
}


fn fun_3991_0450() -> u16

{
    let in_stack_00000000: u16;

    fun_3991_0462();
    return in_stack_00000000;
}


fn fun_3991_0462()

{
    let b_var1: u8;
    let b_var2: u8;
    let b_var3: u8;
    let b_var4: u8;
    let unaff_di: String;
    let unaff_es: u16;
    let in_af: u8;
    let in_stack_00000000: u8;

    fun_3991_0469();
    FUN_3991_0476();
    b_var3 = (in_stack_00000000 & 0xf) + 0x90;
    in_af = 9 < (b_var3 & 0xf) | in_af;
    b_var3 = b_var3 + in_af * '\x06';
    b_var2 = 0x90 < (b_var3 & 0xf0) | 0x6f < (in_stack_00000000 & 0xf) | in_af * (0xf9 < b_var3);
    b_var3 = b_var3 + b_var2 * '`';
    b_var1 = b_var3 + 0x40;
    b_var4 = b_var1 + b_var2;
    in_af = 9 < (b_var4 & 0xf) | in_af;
    b_var4 = b_var4 + in_af * '\x06';
    *unaff_di = b_var4 + (0x90 < (b_var4 & 0xf0) | (0xbf < b_var3 || CARRY1(b_var1, b_var2)) | in_af * (0xf9 < b_var4)) * '`';
    return;
}


fn fun_3991_0469()

{
    let b_var1: u8;
    let b_var2: u8;
    let in_al: u8;
    let b_var3: u8;
    let b_var4: u8;
    let unaff_di: String;
    let unaff_es: u16;
    let in_af: u8;

    FUN_3991_0476();
    b_var3 = (in_al & 0xf) + 0x90;
    in_af = 9 < (b_var3 & 0xf) | in_af;
    b_var3 = b_var3 + in_af * '\x06';
    b_var2 = 0x90 < (b_var3 & 0xf0) | 0x6f < (in_al & 0xf) | in_af * (0xf9 < b_var3);
    b_var3 = b_var3 + b_var2 * '`';
    b_var1 = b_var3 + 0x40;
    b_var4 = b_var1 + b_var2;
    in_af = 9 < (b_var4 & 0xf) | in_af;
    b_var4 = b_var4 + in_af * '\x06';
    *unaff_di = b_var4 + (0x90 < (b_var4 & 0xf0) | (0xbf < b_var3 || CARRY1(b_var1, b_var2)) | in_af * (0xf9 < b_var4)) * '`';
    return;
}



void  FUN_3991_0476()

{
let bVar1: u8; let bVar2: u8;
let in_AL: u8; let bVar4: u8;
let bVar5: u8; let unaff_DI: String;
let unaff_ES: u16; let in_AF: u8;
let bVar3: u8;

bVar4 = (in_AL & 0xf) + 0x90; bVar2 = 9 < (bVar4 & 0xf) | in_AF; bVar4 = bVar4 + bVar2 * '\x06'; bVar3 = 0x90 < (bVar4 & 0xf0) | 0x6f < (in_AL & 0xf) | bVar2 * (0xf9 < bVar4); bVar4 = bVar4 + bVar3 * '`'; bVar1 = bVar4 + 0x40; bVar5 = bVar1 + bVar3; bVar2 = 9 < (bVar5 & 0xf) | bVar2; bVar5 = bVar5 + bVar2 * '\x06'; * unaff_DI = bVar5 + (0x90 < (bVar5 & 0xf0) | (0xbf < bVar4 || CARRY1(bVar1, bVar3)) | bVar2 * (0xf9 < bVar5)) * '`';
return;
}



fn fun_3991_0480()

{
    return;
}



undefined4 FUN_39d9_0002()

{
let pbVar1: * mut u8; let in_AX: u16; let in_DX: u16; let unaff_SI: i16; let unaff_DS: u16;

if ((* (unaff_SI + 7) & 0x10) == 0) {
if ((0x70d != '\0') & & (( * (unaff_SI + 7) & 0xc) != 0)) {
FUN_394e_0436(0x39d9);
}
pbVar1 = (unaff_SI + 7); * pbVar1 = * pbVar1 & 0xfd; return CONCAT22(in_DX, in_AX);
}
return CONCAT22(in_DX, in_AX);
}


/*
Unable to decompile 'FUN_39d9_0035'
Cause: Exception while decompiling 39d9:0035: GHIDRA/decompiler alignment error

*/


undefined4  FUN_39d9_0238()

{
let pcVar1: String; char cVar2; let pbVar3: * mut u8; code * pcVar4; let    in_AX: u16; let uVar5: u16; let iVar6: i16; let in_DX: u16; let    uVar7: u16; let extraout_DX: String; let pcVar8: String; let in_BX: i16; let    uVar9: u16; let unaff_SI: * mut u8; let pbVar10: * mut u8; let pcVar11: String; let uVar12: u16; let uVar13: u16; let unaff_DS: u16; bool bVar14; ulong uVar15; let uVar16: u32;

uVar12 = 0x39d9; pbVar10 = unaff_SI + 1; if (0x714 != 0) {
in_BX = 0x716; if (pbVar10 == * (byte * * )0x714) goto LAB_39d9_0331; pcVar4 = swi(0x21); ( * pcVar4)();
}
* (byte * * )0x714 = pbVar10;
bVar14 = false; if (( * unaff_SI & 1) != 0) {
pcVar4 = swi(0x21); ( * pcVar4)(); if (bVar14) {
uVar9 = 0x667; uVar7 = 0x671; uVar13 = uVar12; goto LAB_39d9_05f6;
}
goto LAB_39d9_0331;
}
if ((0x892 & 0x80) == 0) {
iVar6 = 0x80; loop {
if (iVar6 == 0) break; iVar6 = iVar6 + - 1; pbVar3 = pbVar10; pbVar10 = pbVar10 + 1;
} while ( * pbVar3 != 0); if ((((pbVar10 + - 3) | 0x2020) != 0x6578) || (uVar5 = (pbVar10 + - 5) | 0x2000, bVar14 = uVar5 < 0x652e, uVar5 != 0x652e))
goto LAB_39d9_02d9; uVar12 = 0x3991; FUN_3991_01aa(0x39d9); if (bVar14) goto LAB_39d9_02d9; bVar14 = in_BX != - 1; pcVar8 = extraout_DX; pcVar11 = DAT_39d9_0714; if (in_BX == - 1) {
loop {
pcVar1 = pcVar8; pcVar8 = pcVar8 + 1;
cVar2 = * pcVar1; * pcVar11 = cVar2;
pcVar11 = pcVar11 + 1;
} while (cVar2 != '\0'); goto LAB_39d9_02d9;
}
uVar12 = 0x3000; pcVar4 = swi(0x21); uVar15 = ( * pcVar4)();
if (bVar14) goto LAB_39d9_02d9;
}
else {
// LAB_39d9_02d9:
bVar14 = false; unaff_DS = 0x3a4b; uVar13 = 0x3991; uVar5 = FUN_3991_0066(uVar12); if (bVar14) {
uVar9 = 0x642; uVar7 = 0x64c;
// LAB_39d9_05f6:
0x614 = uVar9; 0x616 = uVar7; 0x618 = 0x714;
// WARNING: Could not recover jumptable at 0x0003a3a1. Too many branches
// WARNING: Treating indirect jump as call
uVar16 = ( * * * (uint * *)0x61e)(); return uVar16;
}
uVar15 = uVar5;
}
pcVar11 = DAT_39d9_0714; pcVar8 = (char * )(uVar15 >> 0x10); DAT_39d9_0716 = (undefined2)uVar15; pbVar3 = (DAT_39d9_0714 + -1); * pbVar3 = * pbVar3 | 1; loop {
pcVar1 = pcVar8; pcVar8 = pcVar8 + 1;
cVar2 = * pcVar1; pcVar1 = pcVar11; pcVar11 = pcVar11 + 1; * pcVar1 = cVar2;
} while (cVar2 != '\0');
// LAB_39d9_0331: return CONCAT22(in_DX, in_AX);
}



undefined4  FUN_39d9_033a()

{
let in_AX: u16; let in_DX: u16;
let in_CF: u8; let in_PF: u8;
let in_AF: u8; let in_ZF: u8;
let in_SF: u8; let in_TF: u8;
let in_IF: u8; let in_OF: u8;
let in_NT: u8;

FUN_39d9_0035(0x39d9, (in_NT & 1) * 0x4000 | (in_OF & 1) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 | (in_SF & 1) * 0x80 | (in_ZF & 1) * 0x40 | (in_AF & 1) * 0x10 | (in_PF & 1) * 4 | (in_CF & 1));
return CONCAT22(in_DX, in_AX);
}


// WARNING: Stack frame is not setup normally: Input value of stackpointer is not used
// WARNING: This function may have set the stack pointer

void  entry()

{
undefined * puVar1; code * pcVar2; code *pcVar3; u16 uVar4; let bVar8: u8;
u16 uVar6; u16 uVar5; let iVar9: i16; u16 in_CX; u16 * puVar10; undefined *puVar11; u16 * puVar12; u16 * puVar13;
let puVar5: * mut u16; undefined * puVar6; undefined * puVar7; u16 * puVar8; u16 * puVar20; u16 * puVar16; u16 puVar17;
u16 uVar23; undefined * puVar21; u16 uVar19;
u16 uVar20; u16 iVar19; u16 uVar22; u32 uVar21;

DAT_5b2d_49fe = 0x39d9; puVar16 = (u16 * )0x13fc; DAT_5b2d_49fc = 0xa0fe; uVar21 = FUN_3991_040f(); uVar4 = DAT_39d9_0894; uVar21._2_2_ = (u16 * )(undefined * )(uVar21 >> 0x10); iVar19 = 0x5e8d; if (DAT_39d9_0894 != 0) {
in_CX = 0x5e8d; puVar17 = 0x200; uVar21._2_2_ = puVar16; puVar16 = (u16 * )puVar17; iVar19 = DAT_39d9_0894;
}
(puVar16 + - 2) = uVar21; *(u16 * )(puVar16 + - 4) = uVar4; * (u16 * )(puVar16 + - 6) = in_CX; (puVar16 + - 8) = uVar21._2_2_; DAT_39d9_0710 = uVar21; (puVar16 + - 10) = 0xa11b; FUN_39d9_03a2(); uVar5 = * (u16 * )(puVar16 + - 2); puVar21 = (undefined * )puVar16; if ((puVar16 + - 4) != 0) {
puVar21 = (undefined * )(puVar16 + -8); iVar19 = * (u16 * )(puVar16 + - 6);
}
uVar20 = 0x3444; pcVar3 = swi(0x21); bVar8 = ( * pcVar3)();
if (bVar8 < 2) {
* (u16 * )(puVar21 + - 2) = uVar5; (puVar21 + - 4) = 0; return;
}
uVar23 = 0x2 + 0x9e97; if (0xfff < uVar23) {
uVar23 = 0x1000;
}
puVar10 = (u16 * )(puVar21 + -0x2dc2); if ((undefined * )0x2dc1 < puVar21) {
(puVar21 + - 0x2dc4) = 0x6169; uVar5 = * (u16 * )(puVar21 + -0x2dc4); (puVar21 + - 0x2dc4) = 0x3444; puVar11 = puVar21 + - 0x2dc6; (puVar21 + - 0x2dc6) = 0x4485; FUN_3444_029e(); (puVar11 + - 2) = 0; (puVar11 + - 4) = 0x3444;
puVar10 = (u16 * )(puVar11 + -6); (puVar11 + - 6) = 0x448c; FUN_3444_0587(); pcVar3 = swi(0x21); ( * pcVar3)();
}
DAT_616d_b59a = uVar23 * 0x10 + - 1; DAT_616d_b59c = 0x6169; puVar12 = (u16 * )(puVar10 & 0xfffe); DAT_616d_b5a6 = puVar12 + -1; DAT_616d_b5a0 = puVar12; puVar12[ - 1] = 0xfffe; puVar13 = puVar12 + - 2; DAT_616d_b5a2 = puVar12 + - 2; DAT_616d_b5a4 = puVar12 + - 2; DAT_616d_b596 = puVar12 + -2; puVar12[ - 2] = 1;
0x2 = uVar23 + 0x6169; pcVar3 = swi(0x21); ( * pcVar3)();
DAT_616d_b5d6 = uVar5; (puVar13 + - 2) = 0x6169; uVar19 = * (u16 * )(puVar13 + - 2); puVar21 = (undefined * )0xcaba; for (iVar9 = 0x786; iVar9 != 0; iVar9 = iVar9 + -1) {
puVar1 = puVar21; puVar21 = puVar21 + 1;
* puVar1 = 0;
}
(puVar13 + - 2) = 0x6169; pcVar2 = * (code * * )0xc0d8; if (pcVar2 != 0x0) {
uVar20 = 0x3000; puVar5 = (puVar13 + -2); puVar13 = (u16 * )(puVar13 + - 2); * puVar5 = 0x44ef; ( * pcVar2)();
}
* (u16 * )(puVar13 + - 2) = uVar20; puVar6 = (undefined * )(puVar13 + - 4); (puVar13 + - 4) = 0x44f4; FUN_3444_04bc();
(puVar6 + - 2) = 0x3444; puVar7 = puVar6 + - 4; (puVar6 + -4) = 0x44f9; FUN_3444_030e(); puVar8 = (u16 * )(puVar7 + - 2); * puVar8 = 0x3444; puVar8 = (u16 * )(puVar7 + - 4);
puVar8 = (u16 * )(puVar7 + -4); * puVar8 = 0x4500; FUN_3444_0116(); puVar8[ - 1] = 0x6169;
uVar22 = puVar8[ - 1]; puVar8[- 1] = 0xb63b; puVar8[ - 2] = 0xb639; puVar8[ - 3] = 0xb637; puVar8[ - 4] = 0xb635;
puVar8[ - 5] = 0xb633; puVar8[- 6] = 0x3444; puVar20 = puVar8 + - 7; puVar8[ - 7] = 0x451b; uVar6 = FUN_1d85_0000(); * (u16 * )(puVar20 + - 2) = uVar6; (puVar20 + - 4) = 0x1d85;
(puVar20 + - 6) = 0x4520; FUN_3444_01db(); return;
}



void  FUN_39d9_03a2()

{
let puVar1: * mut u16; code * pcVar2; let bVar3: u8; let uVar4: u16; let uVar5: u16; let iVar6: i16; let uVar7: u16; let puVar8: *mut u16; let iVar9: i16; let puVar10: * mut u16; let unaff_DS: u16;
bool bVar11;

pcVar2 = swi(0x21);
bVar3 = ( * pcVar2)(); if (2 < bVar3) {
* (undefined * )0x70e = 0x20;
}
0x718 = 0x89e * 0x10 + 0x8a2; bVar11 = false; FUN_394e_0436(0x3000); if ((! bVar11) || (0x8a0 != 0)) {
* (undefined * )0x70d = 0xff;
}
if (((0x892 & 2) != 0) || ((0x896 | 0x898 | 0x89a | 0x89c) != 0)) {
iVar6 = 0x89e; puVar8 = 0x8a2; uVar4 = 0xffff; uVar7 = 0; loop {
uVar5 = * puVar8; if (uVar5 != 0) {
if (uVar5 < uVar4) {
uVar4 = uVar5;
}
uVar5 = uVar5 + puVar8[4]; if (uVar7 < uVar5) {
uVar7 = uVar5;
}
}
puVar8 = puVar8 + 8; iVar6 = iVar6 + - 1;
} while (iVar6 != 0); 0x87d = uVar4; 0x87f = uVar7; if ((0x892 & 2) != 0) {
uVar7 = uVar7 - uVar4; loop {
uVar5 = 0x1000; if (uVar7 < 0x1000) {
uVar5 = uVar7;
}
puVar10 = 0x0; for (iVar6 = uVar5 << 3; iVar6 != 0; iVar6 = iVar6 + - 1) {
puVar1 = puVar10; puVar10 = puVar10 + 1;
* puVar1 = 0;
}
uVar4 = uVar4 + uVar5; uVar7 = uVar7 - uVar5;
} while (uVar7 != 0);
}
}
iVar6 = 0x1075; puVar10 = 0x0; iVar9 = 0x8a2; loop {
if (((puVar10 == 0x0) & &
(puVar10 = (iVar9 + 2), puVar10 != 0x0)) & & (( * (iVar9 + 7) & 8) != 0)) {
puVar10 = * puVar10;
}
if (( * (iVar9 + 7) & 1) != 0) {
FUN_39d9_0035();
}
iVar9 = iVar9 + 0x10; iVar6 = iVar6 + - 1;
} while (iVar6 != 0); if ((0x714 == 0) & & (puVar10 != 0x0)) {
FUN_39d9_0238();
}
if ((0x896 | 0x898) != 0) {
* ff0x896 = 0x87d;
}
if ((0x89a | 0x89c) != 0) {
* ff0x89a = 0x87f;
}
return;
}


/*
Unable to decompile 'FUN_39d9_0cd4'
Cause: Exception while decompiling 39d9:0cd4: process: timeout

*/
fn FUN_39d9_0cd4(param_a: u16) {

}

/*
Unable to decompile 'FUN_39d9_0cf2'
Cause: Exception while decompiling 39d9:0cf2: process: timeout

*/
fn FUN_39d9_0cf2() {

}

/*
Unable to decompile 'FUN_39d9_0d06'
Cause: Exception while decompiling 39d9:0d06: process: timeout
*/
fn FUN_39d9_0d06() {

}

/*
Unable to decompile 'FUN_39d9_0d1a'
Cause: Exception while decompiling 39d9:0d1a: process: timeout
*/
fn FUN_39d9_0d1a() {

}

/*
Unable to decompile 'FUN_39d9_0d4c'
Cause: Exception while decompiling 39d9:0d4c: process: timeout
*/
fn FUN_39d9_0d4c() {

}

/*
Unable to decompile 'FUN_39d9_0d9c'
Cause: Exception while decompiling 39d9:0d9c: process: timeout
*/
fn FUN_39d9_0d9c() {

}

/*
Unable to decompile 'FUN_39d9_0dba'
Cause: Exception while decompiling 39d9:0dba: process: timeout
*/
fn FUN_39d9_0dba() {

}

/*
Unable to decompile 'FUN_39d9_0de2'
Cause: Exception while decompiling 39d9:0de2: process: timeout
*/
fn FUN_39d9_0de2() {

}

/*
Unable to decompile 'FUN_39d9_0dec'
Cause: Exception while decompiling 39d9:0dec: process: timeout
*/
fn FUN_39d9_0dec() {

}

/*
Unable to decompile 'FUN_39d9_0e00'
Cause: Exception while decompiling 39d9:0e00: process: timeout
*/
fn FUN_39d9_0e00() {

}

/*
Unable to decompile 'FUN_39d9_0e14'
Cause: Exception while decompiling 39d9:0e14: process: timeout
*/
fn FUN_39d9_0e14() {

}

/*
Unable to decompile 'FUN_39d9_0e1e'
Cause: Exception while decompiling 39d9:0e1e: process: timeout
*/
fn FUN_39d9_0e1e() {

}

/*
Unable to decompile 'FUN_39d9_0e28'
Cause: Exception while decompiling 39d9:0e28: process: timeout
*/
fn FUN_39d9_0e28() {

}

/*
Unable to decompile 'FUN_39d9_0e32'
Cause: Exception while decompiling 39d9:0e32: process: timeout
*/
fn FUN_39d9_0e32() {

}

/*
Unable to decompile 'FUN_39d9_0e3c'
Cause: Exception while decompiling 39d9:0e3c: process: timeout
*/
fn FUN_39d9_0e3c() {

}

/*
Unable to decompile 'FUN_39d9_0e46'
Cause: Exception while decompiling 39d9:0e46: process: timeout
*/
fn FUN_39d9_0e46() {

}

/*
Unable to decompile 'FUN_39d9_0e50'
Cause: Exception while decompiling 39d9:0e50: process: timeout
*/
fn FUN_39d9_0e50() {

}

/*
Unable to decompile 'FUN_39d9_0f86'
Cause: Exception while decompiling 39d9:0f86: process: timeout
*/
fn FUN_39d9_0f86() {

}

/*
Unable to decompile 'FUN_3f5d_07d7'
Cause: Exception while decompiling 3f5d:07d7: process: timeout
*/
fn FUN_3f5d_07d7() {

}
